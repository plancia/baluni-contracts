{"id":"ae850fcad390cbe4400c10738a8cc274","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/BaluniV1Pool.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport './interfaces/IBaluniV1Rebalancer.sol';\r\nimport './interfaces/IBaluniV1Router.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\r\n\r\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\r\n\r\ncontract BaluniV1Pool is ERC20, ReentrancyGuard {\r\n    AssetInfo[] public assetInfos;\r\n    uint256 public trigger;\r\n    uint256 public ONE;\r\n    address public periphery;\r\n    address public factory;\r\n    uint256 public constant SWAP_FEE_BPS = 30; // 0.3%\r\n    address public baseAsset;\r\n    address public rebalancer;\r\n\r\n    struct AssetInfo {\r\n        address asset;\r\n        uint256 weight;\r\n    }\r\n\r\n    event RebalancePerformed(address indexed by, address[] assets);\r\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\r\n    event Burn(address indexed user, uint256 sharesBurned);\r\n    event Mint(address indexed to, uint256 sharesMinted);\r\n    event Swap(\r\n        address indexed user,\r\n        address indexed fromToken,\r\n        address indexed toToken,\r\n        uint256 amountIn,\r\n        uint256 amountOut\r\n    );\r\n\r\n    /**\r\n     * @dev Initializes a new instance of the BaluniV1Pool contract.\r\n     * @param _rebalancer The address of the rebalancer contract.\r\n     * @param _assets An array of addresses representing the assets in the pool.\r\n     * @param _weights An array of weights corresponding to the assets in the pool.\r\n     * @param _trigger The trigger value for rebalancing the pool.\r\n     * @param _periphery The address of the periphery contract.\r\n     */\r\n    constructor(\r\n        address _rebalancer,\r\n        address[] memory _assets,\r\n        uint256[] memory _weights,\r\n        uint256 _trigger,\r\n        address _periphery\r\n    ) ERC20('Baluni LP', 'BALUNI-LP') {\r\n        periphery = _periphery;\r\n        factory = msg.sender;\r\n        rebalancer = _rebalancer;\r\n        ONE = 1e18;\r\n\r\n        initializeAssets(_assets, _weights);\r\n\r\n        trigger = _trigger;\r\n\r\n        baseAsset = IBaluniV1Rebalancer(_rebalancer).USDC();\r\n        //baseAsset = IBaluniV1Rebalancer(_rebalancer).WNATIVE();\r\n\r\n        // Ensure the sum of weights equals 10000\r\n        uint256 totalWeight = 0;\r\n        for (uint256 i = 0; i < _weights.length; i++) {\r\n            totalWeight += _weights[i];\r\n        }\r\n        require(totalWeight == 10000, 'Invalid weights');\r\n    }\r\n\r\n    modifier onlyPeriphery() {\r\n        require(msg.sender == periphery, 'Only Periphery');\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Initializes the assets and their weights for the pool.\r\n     * @param _assets The array of asset addresses.\r\n     * @param _weights The array of weights corresponding to each asset.\r\n     */\r\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal {\r\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\r\n\r\n        for (uint256 i = 0; i < _assets.length; i++) {\r\n            require(_assets[i] != address(0), 'Invalid asset address');\r\n            require(_weights[i] > 0, 'Invalid weight');\r\n\r\n            assetInfos.push(AssetInfo({asset: _assets[i], weight: _weights[i]}));\r\n\r\n            IERC20 asset = IERC20(_assets[i]);\r\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\r\n                asset.approve(address(rebalancer), type(uint256).max);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\r\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\r\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\r\n     * @param receiver The address to receive the minted liquidity tokens.\r\n     */\r\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\r\n        require(isRebalanceNeeded(), 'Rebalance not needed');\r\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation();\r\n\r\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations);\r\n\r\n        // Calculate total added liquidity before minting\r\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\r\n\r\n        uint baseDecimal = IERC20Metadata(baseAsset).decimals();\r\n\r\n        totalAddedLiquidity *= 10 ** 18 - baseDecimal;\r\n\r\n        uint256[] memory amounts = new uint256[](assetInfos.length);\r\n\r\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\r\n            if (amountsToAdd[i] > 0) {\r\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\r\n            }\r\n        }\r\n\r\n        _mint(receiver, totalAddedLiquidity);\r\n\r\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\r\n\r\n        return amounts;\r\n    }\r\n\r\n    /**\r\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\r\n     *\r\n     * Requirements:\r\n     * - `fromToken` and `toToken` must be different tokens.\r\n     * - `amount` must be greater than zero.\r\n     * - Sufficient liquidity of `toToken` must be available in the contract.\r\n     *\r\n     * Emits a `Swap` event with the details of the swap.\r\n     *\r\n     * Updates the reserves after the swap.\r\n     *\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of `fromToken` to swap.\r\n     * @param receiver The address to receive the swapped tokens.\r\n     * @return toSend The amount of `toToken` received after the swap.\r\n     */\r\n    function swap(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external nonReentrant returns (uint256 toSend) {\r\n        require(fromToken != toToken, 'Cannot swap the same token');\r\n        require(amount > 0, 'Amount must be greater than zero');\r\n\r\n        uint256 receivedAmount = getAmountOut(fromToken, toToken, amount);\r\n        require(getAssetReserve(toToken) >= receivedAmount, 'Insufficient Liquidity');\r\n\r\n        uint256 fee = (receivedAmount * SWAP_FEE_BPS) / 10000;\r\n        toSend = receivedAmount - fee;\r\n\r\n        require(toSend > 0, 'Amount to send must be greater than 0');\r\n\r\n        emit Swap(receiver, fromToken, toToken, amount, toSend);\r\n\r\n        return toSend;\r\n    }\r\n\r\n    /**\r\n     * @dev Mints new tokens and adds them to the specified address.\r\n     * @param to The address to which the new tokens will be minted.\r\n     * @return The amount of tokens minted.\r\n     */\r\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\r\n        uint256 totalSupply = totalSupply();\r\n        uint256 totalValue = 0;\r\n        uint256[] memory _reserves = getReserves();\r\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\r\n        require(assetInfos.length > 0, 'No assets');\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            address asset = assetInfos[i].asset;\r\n\r\n            uint256 valuation = _convertTokenToBase(asset, amounts[i]);\r\n            totalValue += valuation;\r\n        }\r\n\r\n        require(totalValue > 0, 'Total value must be greater than 0');\r\n\r\n        uint256 toMint;\r\n\r\n        if (totalSupply == 0) {\r\n            toMint = totalValue;\r\n        } else {\r\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\r\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\r\n            toMint = (((totalValue) * totalSupply) / totalLiquidity);\r\n        }\r\n        require(toMint != 0, 'Mint qty is 0');\r\n\r\n        _mint(to, toMint);\r\n        emit Mint(to, toMint);\r\n\r\n        return toMint;\r\n    }\r\n\r\n    /**\r\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\r\n     * @param to The address to transfer the underlying assets to.\r\n     * @notice This function can only be called by the periphery contract.\r\n     * @notice The pool tokens must have a balance greater than 0.\r\n     * @notice The total supply of pool tokens must be greater than 0.\r\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\r\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\r\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\r\n     * @notice If any transfer fails, the function reverts the entire operation.\r\n     * @notice After the transfers, the function updates the reserves of the pool.\r\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\r\n     */\r\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\r\n        uint256 share = balanceOf(address(this));\r\n        require(share > 0, 'Share must be greater than 0');\r\n\r\n        uint256 totalSupply = totalSupply();\r\n        require(totalSupply > 0, 'No liquidity');\r\n\r\n        uint256[] memory amounts = new uint256[](assetInfos.length);\r\n        uint256 fee = (share * SWAP_FEE_BPS) / 10000;\r\n        uint256 shareAfterFee = share - fee;\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\r\n                address(this),\r\n                assetInfos[i].asset\r\n            );\r\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\r\n        }\r\n\r\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient BALUNI liquidity');\r\n\r\n        bool feeTransferSuccess = IERC20(address(this)).transfer(IBaluniV1Rebalancer(rebalancer).treasury(), fee);\r\n        require(feeTransferSuccess, 'Fee transfer failed');\r\n\r\n        _burn(address(this), shareAfterFee);\r\n\r\n        emit Burn(to, shareAfterFee);\r\n\r\n        return amounts;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\r\n     * @param fromToken The address of the token being swapped from.\r\n     * @param toToken The address of the token being swapped to.\r\n     * @param amount The amount of `fromToken` being swapped.\r\n     * @return The amount of `toToken` that will be received.\r\n     */\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\r\n        return IBaluniV1Rebalancer(rebalancer).convert(fromToken, toToken, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Performs rebalance\r\n     */\r\n    function performRebalanceIfNeeded()\r\n        external\r\n        onlyPeriphery\r\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove)\r\n    {\r\n        require(isRebalanceNeeded(), 'Rebalance not needed');\r\n        return _performRebalanceIfNeeded();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\r\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\r\n     */\r\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\r\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\r\n        uint256 numAssets = assetInfos.length;\r\n\r\n        directions = new bool[](numAssets);\r\n        deviations = new uint256[](numAssets);\r\n\r\n        for (uint256 i = 0; i < numAssets; i++) {\r\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\r\n            uint256 targetWeight = assetInfos[i].weight;\r\n\r\n            if (currentWeight > targetWeight) {\r\n                deviations[i] = currentWeight - targetWeight;\r\n                directions[i] = true;\r\n            } else {\r\n                deviations[i] = targetWeight - currentWeight;\r\n                directions[i] = false;\r\n            }\r\n        }\r\n\r\n        return (directions, deviations);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the liquidity of a specific asset in the pool.\r\n     * @param assetIndex The index of the asset.\r\n     * @return The liquidity of the asset.\r\n     */\r\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\r\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\r\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\r\n        return usdValuations[assetIndex];\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\r\n     * @return totalVal The total valuation of the pool.\r\n     * @return valuations An array of individual valuations.\r\n     */\r\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\r\n        (totalVal, valuations) = _computeTotalValuation();\r\n        return (totalVal, valuations);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total liquidity of the pool.\r\n     * @return The total liquidity of the pool.\r\n     */\r\n    function liquidity() external view returns (uint256) {\r\n        (uint256 totalVal, ) = _computeTotalValuation();\r\n        return totalVal;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the unit price of the pool.\r\n     * @return The unit price of the pool.\r\n     */\r\n    function unitPrice() external view returns (uint256) {\r\n        (uint256 totalVal, ) = _computeTotalValuation();\r\n        uint256 totalSupply = totalSupply();\r\n        if (totalSupply == 0) {\r\n            return 0;\r\n        }\r\n        return (totalVal * ONE) / totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an array of reserves for each asset in the pool.\r\n     * @return An array of reserves.\r\n     */\r\n    function getReserves() public view returns (uint256[] memory) {\r\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the reserve amount of the specified asset.\r\n     * @param asset The address of the asset.\r\n     * @return The reserve amount of the asset.\r\n     */\r\n    function getAssetReserve(address asset) public view returns (uint256) {\r\n        return IBaluniV1PoolPeriphery(periphery).getAssetReserve(address(this), asset);\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the list of assets in the pool.\r\n     * @return An array of addresses representing the assets.\r\n     */\r\n    function getAssets() external view returns (address[] memory) {\r\n        address[] memory assets = new address[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            assets[i] = assetInfos[i].asset;\r\n        }\r\n        return assets;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the list of weights associated with the assets in the pool.\r\n     * @return An array of uint256 values representing the weights.\r\n     */\r\n    function getWeights() external view returns (uint256[] memory) {\r\n        uint256[] memory weights = new uint256[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            weights[i] = assetInfos[i].weight;\r\n        }\r\n        return weights;\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the total valuation of the assets in the pool.\r\n     * @return totalValuation The total valuation of the assets.\r\n     * @return valuations An array of valuations for each asset in the pool.\r\n     */\r\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\r\n        uint256 numAssets = assetInfos.length;\r\n        valuations = new uint256[](numAssets);\r\n        for (uint256 i = 0; i < numAssets; i++) {\r\n            address asset = assetInfos[i].asset;\r\n            uint256 assetReserve = getAssetReserve(address(asset));\r\n\r\n            if ((address(asset) == baseAsset)) {\r\n                valuations[i] = assetReserve;\r\n            } else {\r\n                uint256 valuation = _convertTokenToBase(address(asset), assetReserve);\r\n                valuations[i] = valuation;\r\n            }\r\n            totalValuation += valuations[i];\r\n        }\r\n        return (totalValuation, valuations);\r\n    }\r\n\r\n    /**\r\n     * @dev Performs rebalance if needed.\r\n     * This function retrieves the assets and weights from the `assetInfos` array,\r\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\r\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\r\n     * @notice This function should only be called internally.\r\n     */\r\n    function _performRebalanceIfNeeded() internal returns (uint256[] memory, uint256[] memory) {\r\n        address[] memory assets = new address[](assetInfos.length);\r\n        uint256[] memory weights = new uint256[](assetInfos.length);\r\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\r\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\r\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\r\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            assets[i] = assetInfos[i].asset;\r\n            weights[i] = assetInfos[i].weight;\r\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\r\n        }\r\n\r\n        uint256[] memory balances = getReserves();\r\n\r\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\r\n\r\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\r\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\r\n            } else {\r\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\r\n            }\r\n        }\r\n\r\n        emit RebalancePerformed(msg.sender, assets);\r\n\r\n        return (amountsToAdd, amountsToRemove);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the total added liquidity based on the amounts to add.\r\n     * @param amountsToAdd An array of amounts to add for each asset.\r\n     * @return totalAddedLiquidity The total added liquidity.\r\n     */\r\n    function _calculateTotalAddedLiquidity(\r\n        uint256[] memory amountsToAdd\r\n    ) internal view returns (uint256 totalAddedLiquidity) {\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            totalAddedLiquidity += amountsToAdd[i];\r\n        }\r\n        return totalAddedLiquidity;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\r\n     * @param totalValuation The total valuation of the pool.\r\n     * @param valuations An array of current valuations for each asset.\r\n     * @return amountsToAdd An array of amounts to add to each asset.\r\n     */\r\n    function _calculateAmountsToAdd(\r\n        uint256 totalValuation,\r\n        uint256[] memory valuations\r\n    ) internal view returns (uint256[] memory amountsToAdd) {\r\n        amountsToAdd = new uint256[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\r\n            if (valuations[i] < targetValuation) {\r\n                amountsToAdd[i] = targetValuation - valuations[i];\r\n            }\r\n        }\r\n\r\n        return amountsToAdd;\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\r\n     * @param index The index of the asset in the assetInfos array.\r\n     * @param amountToAdd The amount of native tokens to add as liquidity.\r\n     */\r\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\r\n        if (assetInfos[index].asset == baseAsset) return amountToAdd;\r\n\r\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\r\n        require(tokenAmount > 0, 'Invalid token amount to add');\r\n        return tokenAmount;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified amount of native token to the corresponding token amount.\r\n     * @param toToken The address of the native token to convert from.\r\n     * @param amount The amount of native token to convert.\r\n     * @return The corresponding token amount.\r\n     */\r\n    function _convertBaseToToken(address toToken, uint256 amount) internal view returns (uint256) {\r\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(baseAsset, toToken, amount);\r\n        return tokenAmount;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the maximum of two uint8 values.\r\n     * @param a The first uint8 value.\r\n     * @param b The second uint8 value.\r\n     * @return The maximum value between a and b.\r\n     */\r\n    function max(uint8 a, uint8 b) private pure returns (uint8) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the minimum of two uint8 values.\r\n     * @param a The first uint8 value.\r\n     * @param b The second uint8 value.\r\n     * @return The minimum value between a and b.\r\n     */\r\n    function min(uint8 a, uint8 b) private pure returns (uint8) {\r\n        return a <= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified token to the native token using the rebalancer contract.\r\n     * @param fromToken The address of the token to convert from.\r\n     * @param amount The amount of tokens to convert.\r\n     * @return scaledAmount The converted amount of tokens.\r\n     */\r\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 scaledAmount) {\r\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(fromToken, baseAsset, amount);\r\n        return tokenAmount;\r\n    }\r\n\r\n    // return true if one of the deviation overcome the trigger\r\n    /**\r\n     * @dev Checks if rebalancing is needed for the pool.\r\n     * @return A boolean value indicating whether rebalancing is needed or not.\r\n     */\r\n    function isRebalanceNeeded() public view returns (bool) {\r\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\r\n        for (uint256 i = 0; i < deviations.length; i++) {\r\n            if (directions[i] && deviations[i] > trigger) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function _getTargetWeight(address _token) internal view returns (uint256) {\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            if (assetInfos[i].asset == _token) {\r\n                return assetInfos[i].weight;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n"},"contracts/BaluniV1PoolFactory.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport './BaluniV1Pool.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\n\r\ncontract BaluniV1PoolFactory is Initializable, UUPSUpgradeable, OwnableUpgradeable {\r\n  address[] public allPools;\r\n  mapping(address => mapping(address => address)) public getPool;\r\n\r\n  address public rebalancer;\r\n  address public periphery;\r\n\r\n  event PoolCreated(address indexed pool, address[] assets, address rebalancer);\r\n\r\n  function initialize(address _rebalancer) public initializer {\r\n    __UUPSUpgradeable_init();\r\n    __Ownable_init(msg.sender);\r\n    rebalancer = _rebalancer;\r\n  }\r\n\r\n  function reinitialize(address _rebalancer, uint64 _version) public reinitializer(_version) {\r\n    rebalancer = _rebalancer;\r\n  }\r\n\r\n  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n  /**\r\n   * @dev Creates a new BaluniV1Pool contract and registers it in the factory.\r\n   * @param assets The array of asset addresses to be included in the pool.\r\n   * @param weights The array of weights corresponding to each asset in the pool.\r\n   * @param trigger The trigger value for rebalancing the pool.\r\n   * @return The address of the newly created pool.\r\n   */\r\n  function createPool(address[] memory assets, uint256[] memory weights, uint256 trigger) external returns (address) {\r\n    require(periphery != address(0), 'Periphery not set');\r\n    require(assets.length > 1, 'At least two assets are required');\r\n    require(assets.length == weights.length, 'Assets and weights length mismatch');\r\n\r\n    for (uint256 i = 0; i < assets.length; i++) {\r\n      for (uint256 j = i + 1; j < assets.length; j++) {\r\n        require(address(getPool[assets[i]][assets[j]]) == address(0), 'Pool already exists for this pair');\r\n      }\r\n    }\r\n\r\n    BaluniV1Pool newPool = new BaluniV1Pool(rebalancer, assets, weights, trigger, periphery);\r\n\r\n    address poolAddress = address(newPool);\r\n\r\n    allPools.push(poolAddress);\r\n    for (uint256 i = 0; i < assets.length; i++) {\r\n      for (uint256 j = i + 1; j < assets.length; j++) {\r\n        getPool[assets[i]][assets[j]] = poolAddress;\r\n        getPool[assets[j]][assets[i]] = poolAddress;\r\n      }\r\n    }\r\n\r\n    emit PoolCreated(poolAddress, assets, rebalancer);\r\n\r\n    return poolAddress;\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves all the pools created by the factory.\r\n   * @return An array of pool addresses.\r\n   */\r\n  function getAllPools() external view returns (address[] memory) {\r\n    return allPools;\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves the number of pools created by the factory.\r\n   * @return The count of pools.\r\n   */\r\n  function getPoolsCount() external view returns (uint256) {\r\n    return allPools.length;\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves the assets of a specific pool.\r\n   * @param poolAddress The address of the pool.\r\n   * @return An array of asset addresses.\r\n   */\r\n  function getPoolAssets(address poolAddress) external view returns (address[] memory) {\r\n    BaluniV1Pool pool = BaluniV1Pool(poolAddress);\r\n    return pool.getAssets();\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves the pool address based on the given assets.\r\n   * @param asset1 The address of the first asset.\r\n   * @param asset2 The address of the second asset.\r\n   * @return The address of the pool.\r\n   */\r\n  function getPoolByAssets(address asset1, address asset2) external view returns (address) {\r\n    return address(getPool[asset1][asset2]);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns an array of pool addresses that contain the specified token.\r\n   * @param token The address of the token to search for.\r\n   * @return An array of pool addresses.\r\n   */\r\n  function getPoolsByAsset(address token) external view returns (address[] memory) {\r\n    address[] memory pools = new address[](allPools.length);\r\n    uint256 count = 0;\r\n\r\n    for (uint256 i = 0; i < allPools.length; i++) {\r\n      BaluniV1Pool pool = BaluniV1Pool(allPools[i]);\r\n      address[] memory assets = pool.getAssets();\r\n\r\n      for (uint256 j = 0; j < assets.length; j++) {\r\n        if (assets[j] == token) {\r\n          pools[count] = address(pool);\r\n          count++;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (count == pools.length) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    address[] memory result = new address[](count);\r\n    for (uint256 i = 0; i < count; i++) {\r\n      result[i] = pools[i];\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @dev Changes the address of the periphery contract.\r\n   * @param _newPeriphery The new address of the periphery contract.\r\n   */\r\n  function changePeriphery(address _newPeriphery) external onlyOwner {\r\n    periphery = _newPeriphery;\r\n  }\r\n\r\n  function poolExist(address _pool) external view returns (bool) {\r\n    for (uint256 i = 0; i < allPools.length; i++) {\r\n      if (allPools[i] == _pool) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n"},"contracts/interfaces/I1inchSpotAgg.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\n\r\ninterface I1inchSpotAgg {\r\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\r\n\r\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Agent.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Agent {\r\n  struct Call {\r\n    address to;\r\n    uint256 value;\r\n    bytes data;\r\n  }\r\n\r\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\r\n}\r\n"},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\n/**\r\n * @title IBaluniV1PoolPeriphery\r\n * @dev Interface for the BaluniV1PoolPeriphery contract.\r\n */\r\ninterface IBaluniV1PoolPeriphery {\r\n    /**\r\n     * @dev Initializes the contract by setting the pool factory address.\r\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\r\n     */\r\n    function initialize(address _poolFactory) external;\r\n\r\n    /**\r\n     * @dev Reinitializes the contract by setting the pool factory address.\r\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\r\n     * @param version The version number.\r\n     */\r\n    function reinitialize(address _poolFactory, uint64 version) external;\r\n\r\n    /**\r\n     * @dev Swaps tokens in a BaluniV1Pool.\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of tokens to swap.\r\n     * @param receiver The address of the receiver.\r\n     * @return The amount of tokens received after the swap.\r\n     */\r\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\r\n\r\n    /**\r\n     * @dev Performs batch swaps between multiple token pairs.\r\n     * @param fromTokens An array of addresses representing the tokens to swap from.\r\n     * @param toTokens An array of addresses representing the tokens to swap to.\r\n     * @param amounts An array of amounts representing the amounts to swap.\r\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\r\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\r\n     */\r\n    function batchSwap(\r\n        address[] calldata fromTokens,\r\n        address[] calldata toTokens,\r\n        uint256[] calldata amounts,\r\n        address[] calldata receivers\r\n    ) external returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Rebalances weights in a pool.\r\n     * @param poolAddress The address of the pool.\r\n     * @param receiver The address of the receiver.\r\n     */\r\n    function rebalanceWeights(address poolAddress, address receiver) external;\r\n\r\n    /**\r\n     * @dev Adds liquidity to a BaluniV1Pool.\r\n     * @param amounts An array of amounts for each asset to add as liquidity.\r\n     * @param poolAddress The address of the pool.\r\n     * @param receiver The address of the receiver.\r\n     */\r\n    function addLiquidity(uint256[] calldata amounts, address poolAddress, address receiver) external;\r\n\r\n    /**\r\n     * @dev Removes liquidity from a BaluniV1Pool.\r\n     * @param share The amount of liquidity tokens to remove.\r\n     * @param poolAddress The address of the pool.\r\n     * @param receiver The address of the receiver.\r\n     */\r\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external;\r\n\r\n    /**\r\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of tokens to swap.\r\n     * @return The amount of tokens received after the swap.\r\n     */\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Performs rebalance if needed for the given tokens.\r\n     * @param poolAddress The address of the token pool to rebalance.\r\n     */\r\n    function performRebalanceIfNeeded(address poolAddress) external;\r\n\r\n    /**\r\n     * @dev Returns an array of pool addresses that contain the given token.\r\n     * @param token The address of the token to search for.\r\n     * @return An array of pool addresses.\r\n     */\r\n    function getPoolsContainingToken(address token) external view returns (address[] memory);\r\n\r\n    /**\r\n     * @dev Returns the version of the contract.\r\n     * @return The version string.\r\n     */\r\n    function getVersion() external view returns (uint64);\r\n\r\n    /**\r\n     * @dev Changes the address of the pool factory contract.\r\n     * Can only be called by the contract owner.\r\n     * @param _poolFactory The new address of the pool factory contract.\r\n     */\r\n    function changePoolFactory(address _poolFactory) external;\r\n\r\n    /**\r\n     * @dev Returns the reserves of the pool.\r\n     * @param pool The address of the pool.\r\n     * @return An array of reserves.\r\n     */\r\n    function getReserves(address pool) external view returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Returns the reserve of a specific asset in a pool.\r\n     * @param pool The address of the pool.\r\n     * @param asset The address of the asset.\r\n     * @return The reserve of the asset.\r\n     */\r\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Rebalancer {\r\n    struct RebalanceVars {\r\n        uint256 length;\r\n        uint256 totalValue;\r\n        uint256 finalUsdBalance;\r\n        uint256 overweightVaultsLength;\r\n        uint256 underweightVaultsLength;\r\n        uint256 totalActiveWeight;\r\n        uint256 amountOut;\r\n        uint256[] overweightVaults;\r\n        uint256[] overweightAmounts;\r\n        uint256[] underweightVaults;\r\n        uint256[] underweightAmounts;\r\n        uint256[] balances;\r\n    }\r\n\r\n    // Variables\r\n    function baluniRouter() external view returns (address);\r\n\r\n    function USDC() external view returns (address);\r\n\r\n    function WNATIVE() external view returns (address);\r\n\r\n    function _1InchSpotAgg() external view returns (address);\r\n\r\n    function treasury() external view returns (address);\r\n\r\n    // Functions\r\n    function rebalance(\r\n        uint256[] memory balances,\r\n        address[] calldata assets,\r\n        uint256[] calldata weights,\r\n        uint256 limit,\r\n        address sender,\r\n        address receiver,\r\n        address baseAsset\r\n    ) external;\r\n\r\n    function checkRebalance(\r\n        uint256[] memory balances,\r\n        address[] calldata assets,\r\n        uint256[] calldata weights,\r\n        uint256 limit,\r\n        address sender,\r\n        address baseAsset\r\n    ) external view returns (RebalanceVars memory);\r\n\r\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Router.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\r\nimport './I1inchSpotAgg.sol';\r\nimport './IBaluniV1Agent.sol';\r\n\r\ninterface IBaluniV1Router {\r\n    struct Call {\r\n        address to;\r\n        uint256 value;\r\n        bytes data;\r\n    }\r\n\r\n    // Variables\r\n    function _MAX_BPS_FEE() external view returns (uint256);\r\n\r\n    function _BPS_FEE() external view returns (uint256);\r\n\r\n    function _BPS_BASE() external view returns (uint256);\r\n\r\n    function getTokens() external view returns (address[] memory);\r\n\r\n    function USDC() external view returns (IERC20);\r\n\r\n    function WNATIVE() external view returns (address);\r\n\r\n    function oracle() external view returns (address);\r\n\r\n    function uniswapRouter() external view returns (address);\r\n\r\n    function uniswapFactory() external view returns (address);\r\n\r\n    function baluniFactory() external view returns (address);\r\n\r\n    function baluniPeriphery() external view returns (address);\r\n\r\n    function agentFactory() external view returns (address);\r\n\r\n    function marketOracle() external view returns (address);\r\n\r\n    function rebalancer() external view returns (address);\r\n\r\n    function treasury() external view returns (address);\r\n\r\n    // Functions\r\n    function initialize(\r\n        address _usdc,\r\n        address _wnative,\r\n        address _1inchSpotAgg,\r\n        address _uniRouter,\r\n        address _uniFactory,\r\n        address _rebalancer\r\n    ) external;\r\n\r\n    function reinitialize(\r\n        address _usdc,\r\n        address _wnative,\r\n        address _1inchSpotAgg,\r\n        address _uniRouter,\r\n        address _uniFactory,\r\n        address _rebalancer,\r\n        uint64 version\r\n    ) external;\r\n\r\n    function initializeMarketOracle(address _marketOracle) external;\r\n\r\n    function changeMarketOracle(address _marketOracle) external;\r\n\r\n    function changeBpsFee(uint256 _newFee) external;\r\n\r\n    function changeTreasury(address _newTreasury) external;\r\n\r\n    function changeRebalancer(address _newRebalancer) external;\r\n\r\n    function changeAgentFactory(address _agentFactory) external;\r\n\r\n    function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\r\n\r\n    function liquidate(address token) external;\r\n\r\n    function liquidateAll() external;\r\n\r\n    function burnERC20(uint256 burnAmount) external;\r\n\r\n    function burnUSDC(uint256 burnAmount) external;\r\n\r\n    function getAgentAddress(address _user) external view returns (address);\r\n\r\n    function mintWithUSDC(uint256 balAmountToMint) external;\r\n\r\n    function callRebalance(\r\n        address[] calldata assets,\r\n        uint256[] calldata weights,\r\n        address sender,\r\n        address receiver,\r\n        uint256 limit,\r\n        address baseAsset\r\n    ) external;\r\n\r\n    function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\r\n\r\n    function calculateTokenShare(\r\n        uint256 totalBaluni,\r\n        uint256 totalERC20Balance,\r\n        uint256 baluniAmount,\r\n        uint256 tokenDecimals\r\n    ) external pure returns (uint256);\r\n\r\n    function tokenValuation(uint256 amount, address token) external view returns (uint256);\r\n\r\n    function totalValuation() external view returns (uint256);\r\n\r\n    function getUSDCShareValue(uint256 amount) external view returns (uint256);\r\n\r\n    function fetchMarketPrices() external view returns (uint256, uint256);\r\n\r\n    function getVersion() external view returns (uint64);\r\n\r\n    function unitPrice() external view returns (uint256);\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":677,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":676,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,676,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1126],"IERC1822Proxiable":[686],"Initializable":[448],"UUPSUpgradeable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":687,"src":"141:88:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1127,"src":"230:84:2","symbolAliases":[{"foreign":{"id":453,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":449,"src":"315:50:2","symbolAliases":[{"foreign":{"id":455,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":458,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1023:13:2"},"id":459,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":460,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":686,"src":"1038:17:2"},"id":461,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":630,"linearizedBaseContracts":[630,686,448],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":468,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":630,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":472,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":630,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":475,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":480,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":480,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":487,"nodeType":"Block","src":"2643:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2653:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2653:13:2"},{"id":486,"nodeType":"PlaceholderStatement","src":"2676:1:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2124:493:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":488,"name":"onlyProxy","nameLocation":"2631:9:2","nodeType":"ModifierDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2640:2:2"},"src":"2622:62:2","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"2914:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":491,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2924:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2924:20:2"},{"id":494,"nodeType":"PlaceholderStatement","src":"2954:1:2"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"2690:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":496,"name":"notDelegated","nameLocation":"2899:12:2","nodeType":"ModifierDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2911:2:2"},"src":"2890:72:2","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"3028:7:2","statements":[]},"id":502,"implemented":true,"kind":"function","modifiers":[{"id":499,"kind":"modifierInvocation","modifierName":{"id":498,"name":"onlyInitializing","nameLocations":["3011:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3011:16:2"},"nodeType":"ModifierInvocation","src":"3011:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2977:22:2","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2999:2:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3028:0:2"},"scope":630,"src":"2968:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"3111:7:2","statements":[]},"id":508,"implemented":true,"kind":"function","modifiers":[{"id":505,"kind":"modifierInvocation","modifierName":{"id":504,"name":"onlyInitializing","nameLocations":["3094:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3094:16:2"},"nodeType":"ModifierInvocation","src":"3094:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3050:32:2","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3082:2:2"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"3111:0:2"},"scope":630,"src":"3041:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[685],"body":{"id":519,"nodeType":"Block","src":"3783:56:2","statements":[{"expression":{"expression":{"id":516,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3800:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3813:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":853,"src":"3800:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":515,"id":518,"nodeType":"Return","src":"3793:39:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"3123:577:2","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":520,"implemented":true,"kind":"function","modifiers":[{"id":512,"kind":"modifierInvocation","modifierName":{"id":511,"name":"notDelegated","nameLocations":["3752:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":496,"src":"3752:12:2"},"nodeType":"ModifierInvocation","src":"3752:12:2"}],"name":"proxiableUUID","nameLocation":"3714:13:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"3727:2:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"3774:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3773:9:2"},"scope":630,"src":"3705:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":539,"nodeType":"Block","src":"4263:109:2","statements":[{"expression":{"arguments":[{"id":531,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4291:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4273:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"4273:36:2"},{"expression":{"arguments":[{"id":535,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4341:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4319:46:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"3845:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":540,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"onlyProxy","nameLocations":["4253:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":488,"src":"4253:9:2"},"nodeType":"ModifierInvocation","src":"4253:9:2"}],"name":"upgradeToAndCall","nameLocation":"4167:16:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"newImplementation","nameLocation":"4192:17:2","nodeType":"VariableDeclaration","scope":540,"src":"4184:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"4224:4:2","nodeType":"VariableDeclaration","scope":540,"src":"4211:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4183:46:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"4263:0:2"},"scope":630,"src":"4158:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"4644:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4679:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":548,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4688:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4671:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"4749:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":884,"src":"4749:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":553,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4785:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4671:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"4654:251:2","trueBody":{"id":559,"nodeType":"Block","src":"4844:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4865:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"RevertStatement","src":"4858:36:2"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4378:216:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4608:11:2","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"4619:2:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4644:0:2"},"scope":630,"src":"4599:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"5080:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":568,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5102:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":570,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5111:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"IfStatement","src":"5090:145:2","trueBody":{"id":575,"nodeType":"Block","src":"5119:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5195:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"RevertStatement","src":"5188:36:2"}]}}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4917:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5037:18:2","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"5055:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"5080:0:2"},"scope":630,"src":"5028:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"5247:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":584,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5633:17:2","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"newImplementation","nameLocation":"5659:17:2","nodeType":"VariableDeclaration","scope":584,"src":"5651:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:27:2"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"5694:0:2"},"scope":630,"src":"5624:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"6137:453:2","statements":[{"clauses":[{"block":{"id":617,"nodeType":"Block","src":"6227:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6245:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":601,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6253:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6266:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":853,"src":"6253:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6245:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"IfStatement","src":"6241:120:2","trueBody":{"id":608,"nodeType":"Block","src":"6287:74:2","statements":[{"errorCall":{"arguments":[{"id":605,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6341:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":604,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6312:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"RevertStatement","src":"6305:41:2"}]}},{"expression":{"arguments":[{"id":613,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6404:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6423:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":610,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6374:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":945,"src":"6374:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"6374:54:2"}]},"errorName":"","id":618,"nodeType":"TryCatchClause","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"slot","nameLocation":"6221:4:2","nodeType":"VariableDeclaration","scope":618,"src":"6213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6212:14:2"},"src":"6204:235:2"},{"block":{"id":625,"nodeType":"Block","src":"6446:138:2","statements":[{"errorCall":{"arguments":[{"id":622,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":619,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6513:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":858,"src":"6513:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"RevertStatement","src":"6506:67:2"}]},"errorName":"","id":626,"nodeType":"TryCatchClause","src":"6440:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":593,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6169:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"6151:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$686_$","typeString":"type(contract IERC1822Proxiable)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$686","typeString":"contract IERC1822Proxiable"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6188:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":685,"src":"6151:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":627,"nodeType":"TryStatement","src":"6147:437:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"5701:346:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6061:21:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"newImplementation","nameLocation":"6091:17:2","nodeType":"VariableDeclaration","scope":629,"src":"6083:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6083:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"6123:4:2","nodeType":"VariableDeclaration","scope":629,"src":"6110:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6082:46:2"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"6137:0:2"},"scope":630,"src":"6052:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":631,"src":"986:5606:2","usedErrors":[211,214,475,480,858,871,1768,1771],"usedEvents":[219,837]}],"src":"115:6478:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448]},"id":677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":449,"src":"126:63:3","symbolAliases":[{"foreign":{"id":633,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":636,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:3"},"id":637,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":676,"linearizedBaseContracts":[676,448],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":642,"nodeType":"Block","src":"800:7:3","statements":[]},"id":643,"implemented":true,"kind":"function","modifiers":[{"id":640,"kind":"modifierInvocation","modifierName":{"id":639,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":676,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":648,"nodeType":"Block","src":"875:7:3","statements":[]},"id":649,"implemented":true,"kind":"function","modifiers":[{"id":646,"kind":"modifierInvocation","modifierName":{"id":645,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":676,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":657,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":654,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":653,"id":656,"nodeType":"Return","src":"959:17:3"}]},"id":658,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":676,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":666,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":662,"id":665,"nodeType":"Return","src":"1066:15:3"}]},"id":667,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":676,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":671,"id":673,"nodeType":"Return","src":"1176:8:3"}]},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":676,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":677,"src":"688:505:3","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[686]},"id":687,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":678,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"139:203:4","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":686,"linearizedBaseContracts":[686],"name":"IERC1822Proxiable","nameLocation":"353:17:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"377:438:4","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":685,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:4","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"842:2:4"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"868:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:4"},"scope":686,"src":"820:57:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":687,"src":"343:536:4","usedErrors":[],"usedEvents":[]}],"src":"113:767:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[823],"IERC20Errors":[728],"IERC721Errors":[776]},"id":824,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":688,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"138:139:5","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":728,"linearizedBaseContracts":[728],"name":"IERC20Errors","nameLocation":"288:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"307:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":698,"name":"ERC20InsufficientBalance","nameLocation":"627:24:5","nodeType":"ErrorDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"sender","nameLocation":"660:6:5","nodeType":"VariableDeclaration","scope":698,"src":"652:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"balance","nameLocation":"676:7:5","nodeType":"VariableDeclaration","scope":698,"src":"668:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"needed","nameLocation":"693:6:5","nodeType":"VariableDeclaration","scope":698,"src":"685:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:5"},"src":"621:80:5"},{"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"707:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":703,"name":"ERC20InvalidSender","nameLocation":"870:18:5","nodeType":"ErrorDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"sender","nameLocation":"897:6:5","nodeType":"VariableDeclaration","scope":703,"src":"889:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:5"},"src":"864:41:5"},{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"911:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":708,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:5","nodeType":"ErrorDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:5","nodeType":"VariableDeclaration","scope":708,"src":"1102:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:5"},"src":"1075:45:5"},{"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"1126:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":717,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:5","nodeType":"ErrorDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"spender","nameLocation":"1517:7:5","nodeType":"VariableDeclaration","scope":717,"src":"1509:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:5","nodeType":"VariableDeclaration","scope":717,"src":"1526:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":715,"mutability":"mutable","name":"needed","nameLocation":"1553:6:5","nodeType":"VariableDeclaration","scope":717,"src":"1545:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:5"},"src":"1476:85:5"},{"documentation":{"id":718,"nodeType":"StructuredDocumentation","src":"1567:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":722,"name":"ERC20InvalidApprover","nameLocation":"1752:20:5","nodeType":"ErrorDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"approver","nameLocation":"1781:8:5","nodeType":"VariableDeclaration","scope":722,"src":"1773:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:5"},"src":"1746:45:5"},{"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"1797:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":727,"name":"ERC20InvalidSpender","nameLocation":"2003:19:5","nodeType":"ErrorDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"spender","nameLocation":"2031:7:5","nodeType":"VariableDeclaration","scope":727,"src":"2023:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:5"},"src":"1997:43:5"}],"scope":824,"src":"278:1764:5","usedErrors":[698,703,708,717,722,727],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"2044:141:5","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":776,"linearizedBaseContracts":[776],"name":"IERC721Errors","nameLocation":"2196:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"2216:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":734,"name":"ERC721InvalidOwner","nameLocation":"2446:18:5","nodeType":"ErrorDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"owner","nameLocation":"2473:5:5","nodeType":"VariableDeclaration","scope":734,"src":"2465:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:5"},"src":"2440:40:5"},{"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"2486:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":739,"name":"ERC721NonexistentToken","nameLocation":"2629:22:5","nodeType":"ErrorDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:5","nodeType":"VariableDeclaration","scope":739,"src":"2652:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:5"},"src":"2623:46:5"},{"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"2675:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":748,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:5","nodeType":"ErrorDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"sender","nameLocation":"3004:6:5","nodeType":"VariableDeclaration","scope":748,"src":"2996:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:5","nodeType":"VariableDeclaration","scope":748,"src":"3012:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"owner","nameLocation":"3037:5:5","nodeType":"VariableDeclaration","scope":748,"src":"3029:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:5"},"src":"2969:75:5"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"3050:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":753,"name":"ERC721InvalidSender","nameLocation":"3213:19:5","nodeType":"ErrorDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"sender","nameLocation":"3241:6:5","nodeType":"VariableDeclaration","scope":753,"src":"3233:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:5"},"src":"3207:42:5"},{"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"3255:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":758,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:5","nodeType":"ErrorDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:5","nodeType":"VariableDeclaration","scope":758,"src":"3447:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:5"},"src":"3419:46:5"},{"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"3471:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":765,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:5","nodeType":"ErrorDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"operator","nameLocation":"3764:8:5","nodeType":"VariableDeclaration","scope":765,"src":"3756:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:5","nodeType":"VariableDeclaration","scope":765,"src":"3774:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:5"},"src":"3723:68:5"},{"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"3797:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":770,"name":"ERC721InvalidApprover","nameLocation":"3982:21:5","nodeType":"ErrorDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"approver","nameLocation":"4012:8:5","nodeType":"VariableDeclaration","scope":770,"src":"4004:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:5"},"src":"3976:46:5"},{"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"4028:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":775,"name":"ERC721InvalidOperator","nameLocation":"4236:21:5","nodeType":"ErrorDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"operator","nameLocation":"4266:8:5","nodeType":"VariableDeclaration","scope":775,"src":"4258:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:5"},"src":"4230:46:5"}],"scope":824,"src":"2186:2092:5","usedErrors":[734,739,748,753,758,765,770,775],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"4280:143:5","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":823,"linearizedBaseContracts":[823],"name":"IERC1155Errors","nameLocation":"4434:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"4455:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":788,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:5","nodeType":"ErrorDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"sender","nameLocation":"4862:6:5","nodeType":"VariableDeclaration","scope":788,"src":"4854:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"balance","nameLocation":"4878:7:5","nodeType":"VariableDeclaration","scope":788,"src":"4870:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"needed","nameLocation":"4895:6:5","nodeType":"VariableDeclaration","scope":788,"src":"4887:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:5","nodeType":"VariableDeclaration","scope":788,"src":"4903:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:5"},"src":"4821:99:5"},{"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"4926:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":793,"name":"ERC1155InvalidSender","nameLocation":"5089:20:5","nodeType":"ErrorDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"sender","nameLocation":"5118:6:5","nodeType":"VariableDeclaration","scope":793,"src":"5110:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:5"},"src":"5083:43:5"},{"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"5132:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":798,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:5","nodeType":"ErrorDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:5","nodeType":"VariableDeclaration","scope":798,"src":"5325:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:5"},"src":"5296:47:5"},{"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"5349:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":805,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:5","nodeType":"ErrorDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"operator","nameLocation":"5653:8:5","nodeType":"VariableDeclaration","scope":805,"src":"5645:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"owner","nameLocation":"5671:5:5","nodeType":"VariableDeclaration","scope":805,"src":"5663:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:5"},"src":"5610:68:5"},{"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"5684:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":810,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:5","nodeType":"ErrorDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"approver","nameLocation":"5900:8:5","nodeType":"VariableDeclaration","scope":810,"src":"5892:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:5"},"src":"5863:47:5"},{"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"5916:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":815,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:5","nodeType":"ErrorDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"operator","nameLocation":"6155:8:5","nodeType":"VariableDeclaration","scope":815,"src":"6147:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:5"},"src":"6118:47:5"},{"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"6171:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":822,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:5","nodeType":"ErrorDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:5","nodeType":"VariableDeclaration","scope":822,"src":"6488:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:5","nodeType":"VariableDeclaration","scope":822,"src":"6507:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:5"},"src":"6456:73:5"}],"scope":824,"src":"4424:2107:5","usedErrors":[788,793,798,805,810,815,822],"usedEvents":[]}],"src":"112:6420:5"},"id":5},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2008],"ERC1967Utils":[1126],"IBeacon":[1136],"StorageSlot":[2217]},"id":1127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":825,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:6"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":1137,"src":"140:46:6","symbolAliases":[{"foreign":{"id":826,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"148:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":2009,"src":"187:48:6","symbolAliases":[{"foreign":{"id":828,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"195:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":2218,"src":"236:56:6","symbolAliases":[{"foreign":{"id":830,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"244:11:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"294:154:6","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":1126,"linearizedBaseContracts":[1126],"name":"ERC1967Utils","nameLocation":"457:12:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"660:68:6","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":837,"name":"Upgraded","nameLocation":"739:8:6","nodeType":"EventDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:6","nodeType":"VariableDeclaration","scope":837,"src":"748:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:6"},"src":"733:47:6"},{"anonymous":false,"documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"786:67:6","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":844,"name":"AdminChanged","nameLocation":"864:12:6","nodeType":"EventDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:6","nodeType":"VariableDeclaration","scope":844,"src":"877:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":842,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:6","nodeType":"VariableDeclaration","scope":844,"src":"900:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:6"},"src":"858:60:6"},{"anonymous":false,"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"924:59:6","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":849,"name":"BeaconUpgraded","nameLocation":"994:14:6","nodeType":"EventDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:6","nodeType":"VariableDeclaration","scope":849,"src":"1009:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:6"},"src":"988:45:6"},{"constant":true,"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"1039:170:6","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":853,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:6","nodeType":"VariableDeclaration","scope":1126,"src":"1279:114:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:6","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"1400:69:6","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":858,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:6","nodeType":"ErrorDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:6","nodeType":"VariableDeclaration","scope":858,"src":"1509:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:6"},"src":"1474:59:6"},{"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"1539:60:6","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":863,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:6","nodeType":"ErrorDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"admin","nameLocation":"1638:5:6","nodeType":"VariableDeclaration","scope":863,"src":"1630:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:6"},"src":"1604:41:6"},{"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"1651:61:6","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":868,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:6","nodeType":"ErrorDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:6","nodeType":"VariableDeclaration","scope":868,"src":"1744:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:6"},"src":"1717:43:6"},{"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"1766:82:6","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":871,"name":"ERC1967NonPayable","nameLocation":"1859:17:6","nodeType":"ErrorDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"1876:2:6"},"src":"1853:26:6"},{"body":{"id":883,"nodeType":"Block","src":"2018:77:6","statements":[{"expression":{"expression":{"arguments":[{"id":879,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2062:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":877,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2035:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"2035:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"2035:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":876,"id":882,"nodeType":"Return","src":"2028:60:6"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"1885:67:6","text":" @dev Returns the current implementation address."},"id":884,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:6","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[],"src":"1983:2:6"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":884,"src":"2009:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:6"},"scope":1126,"src":"1957:138:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"2249:218:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":890,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2263:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:6","memberName":"code","nodeType":"MemberAccess","src":"2263:22:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:6","memberName":"length","nodeType":"MemberAccess","src":"2263:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":900,"nodeType":"IfStatement","src":"2259:119:6","trueBody":{"id":899,"nodeType":"Block","src":"2299:79:6","statements":[{"errorCall":{"arguments":[{"id":896,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2349:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":895,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2320:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"RevertStatement","src":"2313:54:6"}]}},{"expression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":904,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2414:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":901,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2387:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"2387:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"2387:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":907,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2443:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":909,"nodeType":"ExpressionStatement","src":"2387:73:6"}]},"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"2101:80:6","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:6","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:6","nodeType":"VariableDeclaration","scope":911,"src":"2214:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:6"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"2249:0:6"},"scope":1126,"src":"2186:281:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":944,"nodeType":"Block","src":"2860:254:6","statements":[{"expression":{"arguments":[{"id":920,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2889:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":919,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"2870:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"ExpressionStatement","src":"2870:37:6"},{"eventCall":{"arguments":[{"id":924,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2931:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":923,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2922:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"EmitStatement","src":"2917:32:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":927,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"2964:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:6","memberName":"length","nodeType":"MemberAccess","src":"2964:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":942,"nodeType":"Block","src":"3065:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":939,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3079:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":941,"nodeType":"ExpressionStatement","src":"3079:18:6"}]},"id":943,"nodeType":"IfStatement","src":"2960:148:6","trueBody":{"id":938,"nodeType":"Block","src":"2981:78:6","statements":[{"expression":{"arguments":[{"id":934,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3024:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3043:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":931,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"2995:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"2995:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":937,"nodeType":"ExpressionStatement","src":"2995:53:6"}]}}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"2473:301:6","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":945,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:6","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:6","nodeType":"VariableDeclaration","scope":945,"src":"2805:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"data","nameLocation":"2845:4:6","nodeType":"VariableDeclaration","scope":945,"src":"2832:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":915,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:6"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"2860:0:6"},"scope":1126,"src":"2779:335:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"3120:145:6","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":949,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:6","nodeType":"VariableDeclaration","scope":1126,"src":"3335:105:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:6","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"3844:68:6","statements":[{"expression":{"expression":{"arguments":[{"id":957,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3888:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":955,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"3861:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"3861:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"3861:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":954,"id":960,"nodeType":"Return","src":"3854:51:6"}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"3447:340:6","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:6","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"3809:2:6"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"3835:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:6"},"scope":1126,"src":"3792:120:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":992,"nodeType":"Block","src":"4039:172:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":968,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4053:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:6","typeDescriptions":{}}},"id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":982,"nodeType":"IfStatement","src":"4049:91:6","trueBody":{"id":981,"nodeType":"Block","src":"4077:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:6","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":974,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"4098:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"RevertStatement","src":"4091:38:6"}]}},{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":986,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4176:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":983,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4149:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"4149:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"4149:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":989,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4196:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":991,"nodeType":"ExpressionStatement","src":"4149:55:6"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"3918:71:6","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":993,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:6","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:6","nodeType":"VariableDeclaration","scope":993,"src":"4013:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:6"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"4039:0:6"},"scope":1126,"src":"3994:217:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1009,"nodeType":"Block","src":"4379:85:6","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1000,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"4407:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1002,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4419:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":999,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"4394:12:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"EmitStatement","src":"4389:39:6"},{"expression":{"arguments":[{"id":1006,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4448:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1005,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4438:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"4438:19:6"}]},"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"4217:109:6","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:6","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:6","nodeType":"VariableDeclaration","scope":1010,"src":"4352:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:6"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"4379:0:6"},"scope":1126,"src":"4331:133:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"4470:201:6","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1014,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:6","nodeType":"VariableDeclaration","scope":1126,"src":"4741:106:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:6","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1026,"nodeType":"Block","src":"4963:69:6","statements":[{"expression":{"expression":{"arguments":[{"id":1022,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5007:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1020,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4980:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"4980:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"4980:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1019,"id":1025,"nodeType":"Return","src":"4973:52:6"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"4854:51:6","text":" @dev Returns the current beacon."},"id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:6","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"4928:2:6"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1027,"src":"4954:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:6"},"scope":1126,"src":"4910:122:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1072,"nodeType":"Block","src":"5161:390:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1033,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5175:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:6","memberName":"code","nodeType":"MemberAccess","src":"5175:14:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:6","memberName":"length","nodeType":"MemberAccess","src":"5175:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1043,"nodeType":"IfStatement","src":"5171:95:6","trueBody":{"id":1042,"nodeType":"Block","src":"5203:63:6","statements":[{"errorCall":{"arguments":[{"id":1039,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5245:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1038,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5224:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"RevertStatement","src":"5217:38:6"}]}},{"expression":{"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1047,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5303:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1044,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"5276:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"5276:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"5276:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1050,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5324:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1052,"nodeType":"ExpressionStatement","src":"5276:57:6"},{"assignments":[1054],"declarations":[{"constant":false,"id":1054,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:6","nodeType":"VariableDeclaration","scope":1072,"src":"5344:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1060,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1056,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5383:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1055,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"5375:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1136_$","typeString":"type(contract IBeacon)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1136","typeString":"contract IBeacon"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"5375:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1061,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5424:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:6","memberName":"code","nodeType":"MemberAccess","src":"5424:25:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:6","memberName":"length","nodeType":"MemberAccess","src":"5424:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1071,"nodeType":"IfStatement","src":"5420:125:6","trueBody":{"id":1070,"nodeType":"Block","src":"5463:82:6","statements":[{"errorCall":{"arguments":[{"id":1067,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5513:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1066,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"5484:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"RevertStatement","src":"5477:57:6"}]}}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"5038:71:6","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:6","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:6","nodeType":"VariableDeclaration","scope":1073,"src":"5134:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:6"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"5161:0:6"},"scope":1126,"src":"5114:437:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1110,"nodeType":"Block","src":"6155:254:6","statements":[{"expression":{"arguments":[{"id":1082,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6176:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1081,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"6165:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1084,"nodeType":"ExpressionStatement","src":"6165:21:6"},{"eventCall":{"arguments":[{"id":1086,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6216:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1085,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6201:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"EmitStatement","src":"6196:30:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1089,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6241:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:6","memberName":"length","nodeType":"MemberAccess","src":"6241:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1108,"nodeType":"Block","src":"6360:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1105,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6374:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1107,"nodeType":"ExpressionStatement","src":"6374:18:6"}]},"id":1109,"nodeType":"IfStatement","src":"6237:166:6","trueBody":{"id":1104,"nodeType":"Block","src":"6258:96:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1097,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6309:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1096,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"6301:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1136_$","typeString":"type(contract IBeacon)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1136","typeString":"contract IBeacon"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"6301:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1101,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6338:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1093,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"6272:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"6272:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1103,"nodeType":"ExpressionStatement","src":"6272:71:6"}]}}]},"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"5557:514:6","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1111,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:6","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:6","nodeType":"VariableDeclaration","scope":1111,"src":"6108:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"data","nameLocation":"6140:4:6","nodeType":"VariableDeclaration","scope":1111,"src":"6127:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1077,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"6155:0:6"},"scope":1126,"src":"6076:333:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"6634:86:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:6","memberName":"value","nodeType":"MemberAccess","src":"6648:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1123,"nodeType":"IfStatement","src":"6644:70:6","trueBody":{"id":1122,"nodeType":"Block","src":"6663:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1119,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"6684:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"RevertStatement","src":"6677:26:6"}]}}]},"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"6415:178:6","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:6","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"6623:2:6"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[],"src":"6634:0:6"},"scope":1126,"src":"6598:122:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1127,"src":"449:6273:6","usedErrors":[858,863,868,871],"usedEvents":[837,844,849]}],"src":"114:6609:6"},"id":6},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1136]},"id":1137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1128,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"134:79:7","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1136,"linearizedBaseContracts":[1136],"name":"IBeacon","nameLocation":"224:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"238:168:7","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1135,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:7","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"434:2:7"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1135,"src":"460:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:7"},"scope":1136,"src":"411:58:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1137,"src":"214:257:7","usedErrors":[],"usedEvents":[]}],"src":"108:364:7"},"id":7},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2038],"ERC20":[1651],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755]},"id":1652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":1730,"src":"131:36:8","symbolAliases":[{"foreign":{"id":1139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"139:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":1756,"src":"168:63:8","symbolAliases":[{"foreign":{"id":1141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"176:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":2039,"src":"232:48:8","symbolAliases":[{"foreign":{"id":1143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"240:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":824,"src":"281:65:8","symbolAliases":[{"foreign":{"id":1145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"289:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1148,"name":"Context","nameLocations":["1428:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2038,"src":"1428:7:8"},"id":1149,"nodeType":"InheritanceSpecifier","src":"1428:7:8"},{"baseName":{"id":1150,"name":"IERC20","nameLocations":["1437:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"1437:6:8"},"id":1151,"nodeType":"InheritanceSpecifier","src":"1437:6:8"},{"baseName":{"id":1152,"name":"IERC20Metadata","nameLocations":["1445:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1755,"src":"1445:14:8"},"id":1153,"nodeType":"InheritanceSpecifier","src":"1445:14:8"},{"baseName":{"id":1154,"name":"IERC20Errors","nameLocations":["1461:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":728,"src":"1461:12:8"},"id":1155,"nodeType":"InheritanceSpecifier","src":"1461:12:8"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"348:1052:8","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1651,"linearizedBaseContracts":[1651,728,1755,1729,2038],"name":"ERC20","nameLocation":"1419:5:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1159,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:8","nodeType":"VariableDeclaration","scope":1651,"src":"1480:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1158,"keyName":"account","keyNameLocation":"1496:7:8","keyType":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1165,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:8","nodeType":"VariableDeclaration","scope":1651,"src":"1540:83:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1164,"keyName":"account","keyNameLocation":"1556:7:8","keyType":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1163,"keyName":"spender","keyNameLocation":"1583:7:8","keyType":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:8","nodeType":"VariableDeclaration","scope":1651,"src":"1630:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1169,"mutability":"mutable","name":"_name","nameLocation":"1680:5:8","nodeType":"VariableDeclaration","scope":1651,"src":"1665:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1168,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1171,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:8","nodeType":"VariableDeclaration","scope":1651,"src":"1691:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1170,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1187,"nodeType":"Block","src":"1952:57:8","statements":[{"expression":{"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"1962:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"1970:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1182,"nodeType":"ExpressionStatement","src":"1962:13:8"},{"expression":{"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"1985:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"1995:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1186,"nodeType":"ExpressionStatement","src":"1985:17:8"}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"1720:171:8","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"name_","nameLocation":"1922:5:8","nodeType":"VariableDeclaration","scope":1188,"src":"1908:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1173,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:8","nodeType":"VariableDeclaration","scope":1188,"src":"1929:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1175,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:8"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[],"src":"1952:0:8"},"scope":1651,"src":"1896:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1742],"body":{"id":1196,"nodeType":"Block","src":"2134:29:8","statements":[{"expression":{"id":1194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2151:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1193,"id":1195,"nodeType":"Return","src":"2144:12:8"}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"2015:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:8","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[],"src":"2087:2:8"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"2119:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1191,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:8"},"scope":1651,"src":"2074:89:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1748],"body":{"id":1205,"nodeType":"Block","src":"2338:31:8","statements":[{"expression":{"id":1203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2355:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1202,"id":1204,"nodeType":"Return","src":"2348:14:8"}]},"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"2169:102:8","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:8","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[],"src":"2291:2:8"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"2323:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1200,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:8"},"scope":1651,"src":"2276:93:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1754],"body":{"id":1214,"nodeType":"Block","src":"3058:26:8","statements":[{"expression":{"hexValue":"3138","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1211,"id":1213,"nodeType":"Return","src":"3068:9:8"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"2375:622:8","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:8","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"3019:2:8"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"3051:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1209,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:8"},"scope":1651,"src":"3002:82:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1678],"body":{"id":1223,"nodeType":"Block","src":"3205:36:8","statements":[{"expression":{"id":1221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3222:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1220,"id":1222,"nodeType":"Return","src":"3215:19:8"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"3090:49:8","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:8","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[],"src":"3164:2:8"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1224,"src":"3196:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:8"},"scope":1651,"src":"3144:97:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1686],"body":{"id":1236,"nodeType":"Block","src":"3373:42:8","statements":[{"expression":{"baseExpression":{"id":1232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"3390:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1234,"indexExpression":{"id":1233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3400:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1231,"id":1235,"nodeType":"Return","src":"3383:25:8"}]},"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"3247:47:8","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:8","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"account","nameLocation":"3326:7:8","nodeType":"VariableDeclaration","scope":1237,"src":"3318:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:8"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"3364:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:8"},"scope":1651,"src":"3299:116:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1696],"body":{"id":1260,"nodeType":"Block","src":"3685:103:8","statements":[{"assignments":[1248],"declarations":[{"constant":false,"id":1248,"mutability":"mutable","name":"owner","nameLocation":"3703:5:8","nodeType":"VariableDeclaration","scope":1260,"src":"3695:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"3711:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:8"},{"expression":{"arguments":[{"id":1253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"3743:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3750:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"3754:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"3733:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"3733:27:8"},{"expression":{"hexValue":"74727565","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1246,"id":1259,"nodeType":"Return","src":"3770:11:8"}]},"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"3421:184:8","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:8","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"to","nameLocation":"3636:2:8","nodeType":"VariableDeclaration","scope":1261,"src":"3628:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"value","nameLocation":"3648:5:8","nodeType":"VariableDeclaration","scope":1261,"src":"3640:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:8"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1261,"src":"3679:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1244,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:8"},"scope":1651,"src":"3610:178:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1706],"body":{"id":1277,"nodeType":"Block","src":"3935:51:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3952:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1273,"indexExpression":{"id":1272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"3964:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1275,"indexExpression":{"id":1274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"3971:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1270,"id":1276,"nodeType":"Return","src":"3945:34:8"}]},"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"3794:47:8","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:8","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"owner","nameLocation":"3873:5:8","nodeType":"VariableDeclaration","scope":1278,"src":"3865:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"spender","nameLocation":"3888:7:8","nodeType":"VariableDeclaration","scope":1278,"src":"3880:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:8"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"3926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:8"},"scope":1651,"src":"3846:140:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1716],"body":{"id":1301,"nodeType":"Block","src":"4372:107:8","statements":[{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"owner","nameLocation":"4390:5:8","nodeType":"VariableDeclaration","scope":1301,"src":"4382:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"4398:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:8"},{"expression":{"arguments":[{"id":1294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"4429:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4436:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"4445:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1542,"src":"4420:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1298,"nodeType":"ExpressionStatement","src":"4420:31:8"},{"expression":{"hexValue":"74727565","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1287,"id":1300,"nodeType":"Return","src":"4461:11:8"}]},"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"3992:296:8","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:8","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"spender","nameLocation":"4318:7:8","nodeType":"VariableDeclaration","scope":1302,"src":"4310:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"value","nameLocation":"4335:5:8","nodeType":"VariableDeclaration","scope":1302,"src":"4327:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:8"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"4366:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1285,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:8"},"scope":1651,"src":"4293:186:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1728],"body":{"id":1333,"nodeType":"Block","src":"5132:151:8","statements":[{"assignments":[1315],"declarations":[{"constant":false,"id":1315,"mutability":"mutable","name":"spender","nameLocation":"5150:7:8","nodeType":"VariableDeclaration","scope":1333,"src":"5142:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"5160:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:8"},{"expression":{"arguments":[{"id":1320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5198:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"5204:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5213:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"5182:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1324,"nodeType":"ExpressionStatement","src":"5182:37:8"},{"expression":{"arguments":[{"id":1326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5239:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"5245:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5249:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"5229:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1330,"nodeType":"ExpressionStatement","src":"5229:26:8"},{"expression":{"hexValue":"74727565","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1313,"id":1332,"nodeType":"Return","src":"5265:11:8"}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"4485:549:8","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:8","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"from","nameLocation":"5069:4:8","nodeType":"VariableDeclaration","scope":1334,"src":"5061:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"to","nameLocation":"5083:2:8","nodeType":"VariableDeclaration","scope":1334,"src":"5075:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"value","nameLocation":"5095:5:8","nodeType":"VariableDeclaration","scope":1334,"src":"5087:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:8"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1334,"src":"5126:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1311,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:8"},"scope":1651,"src":"5039:244:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1380,"nodeType":"Block","src":"5725:231:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5739:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:8","typeDescriptions":{}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1358,"nodeType":"IfStatement","src":"5735:86:8","trueBody":{"id":1357,"nodeType":"Block","src":"5759:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:8","typeDescriptions":{}}},"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"5780:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"RevertStatement","src":"5773:37:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5834:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:8","typeDescriptions":{}}},"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1373,"nodeType":"IfStatement","src":"5830:86:8","trueBody":{"id":1372,"nodeType":"Block","src":"5852:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:8","typeDescriptions":{}}},"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"5873:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1371,"nodeType":"RevertStatement","src":"5866:39:8"}]}},{"expression":{"arguments":[{"id":1375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5933:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5939:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"5943:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"5925:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1379,"nodeType":"ExpressionStatement","src":"5925:24:8"}]},"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"5289:362:8","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:8","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"from","nameLocation":"5683:4:8","nodeType":"VariableDeclaration","scope":1381,"src":"5675:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"to","nameLocation":"5697:2:8","nodeType":"VariableDeclaration","scope":1381,"src":"5689:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"value","nameLocation":"5709:5:8","nodeType":"VariableDeclaration","scope":1381,"src":"5701:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:8"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[],"src":"5725:0:8"},"scope":1651,"src":"5656:300:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1457,"nodeType":"Block","src":"6346:1032:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6360:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:8","typeDescriptions":{}}},"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1428,"nodeType":"Block","src":"6534:362:8","statements":[{"assignments":[1403],"declarations":[{"constant":false,"id":1403,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:8","nodeType":"VariableDeclaration","scope":1428,"src":"6548:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1407,"initialValue":{"baseExpression":{"id":1404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6570:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1406,"indexExpression":{"id":1405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6580:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6603:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6617:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"6599:115:8","trueBody":{"id":1417,"nodeType":"Block","src":"6624:90:8","statements":[{"errorCall":{"arguments":[{"id":1412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6674:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6680:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6693:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"6649:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"RevertStatement","src":"6642:57:8"}]}},{"id":1427,"nodeType":"UncheckedBlock","src":"6727:159:8","statements":[{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6834:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1421,"indexExpression":{"id":1420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6844:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6852:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6866:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1426,"nodeType":"ExpressionStatement","src":"6834:37:8"}]}]},"id":1429,"nodeType":"IfStatement","src":"6356:540:8","trueBody":{"id":1401,"nodeType":"Block","src":"6380:148:8","statements":[{"expression":{"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6496:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6512:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1400,"nodeType":"ExpressionStatement","src":"6496:21:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"6910:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:8","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1449,"nodeType":"Block","src":"7125:206:8","statements":[{"id":1448,"nodeType":"UncheckedBlock","src":"7139:182:8","statements":[{"expression":{"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7284:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1444,"indexExpression":{"id":1443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7294:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7301:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"nodeType":"ExpressionStatement","src":"7284:22:8"}]}]},"id":1450,"nodeType":"IfStatement","src":"6906:425:8","trueBody":{"id":1441,"nodeType":"Block","src":"6928:191:8","statements":[{"id":1440,"nodeType":"UncheckedBlock","src":"6942:167:8","statements":[{"expression":{"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"7073:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7089:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"nodeType":"ExpressionStatement","src":"7073:21:8"}]}]}},{"eventCall":{"arguments":[{"id":1452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"7355:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7361:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7365:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"7346:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1456,"nodeType":"EmitStatement","src":"7341:30:8"}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"5962:304:8","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:8","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"from","nameLocation":"6296:4:8","nodeType":"VariableDeclaration","scope":1458,"src":"6288:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"to","nameLocation":"6310:2:8","nodeType":"VariableDeclaration","scope":1458,"src":"6302:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"value","nameLocation":"6322:5:8","nodeType":"VariableDeclaration","scope":1458,"src":"6314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:8"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"6346:0:8"},"scope":1651,"src":"6271:1107:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"7777:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"7791:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:8","typeDescriptions":{}}},"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1480,"nodeType":"IfStatement","src":"7787:91:8","trueBody":{"id":1479,"nodeType":"Block","src":"7814:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:8","typeDescriptions":{}}},"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"7835:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1478,"nodeType":"RevertStatement","src":"7828:39:8"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:8","typeDescriptions":{}}},"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"7907:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"7916:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"7887:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1489,"nodeType":"ExpressionStatement","src":"7887:35:8"}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"7384:332:8","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:8","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"account","nameLocation":"7744:7:8","nodeType":"VariableDeclaration","scope":1491,"src":"7736:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"value","nameLocation":"7761:5:8","nodeType":"VariableDeclaration","scope":1491,"src":"7753:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:8"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"7777:0:8"},"scope":1651,"src":"7721:208:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1523,"nodeType":"Block","src":"8303:150:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8317:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:8","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1513,"nodeType":"IfStatement","src":"8313:89:8","trueBody":{"id":1512,"nodeType":"Block","src":"8340:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:8","typeDescriptions":{}}},"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"8361:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1511,"nodeType":"RevertStatement","src":"8354:37:8"}]}},{"expression":{"arguments":[{"id":1515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8419:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:8","typeDescriptions":{}}},"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"8440:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"8411:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"ExpressionStatement","src":"8411:35:8"}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"7935:307:8","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:8","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"account","nameLocation":"8270:7:8","nodeType":"VariableDeclaration","scope":1524,"src":"8262:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"value","nameLocation":"8287:5:8","nodeType":"VariableDeclaration","scope":1524,"src":"8279:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:8"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[],"src":"8303:0:8"},"scope":1651,"src":"8247:206:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1541,"nodeType":"Block","src":"9063:54:8","statements":[{"expression":{"arguments":[{"id":1535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"9082:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"9089:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"9098:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1602,"src":"9073:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1540,"nodeType":"ExpressionStatement","src":"9073:37:8"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"8459:525:8","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:8","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"owner","nameLocation":"9015:5:8","nodeType":"VariableDeclaration","scope":1542,"src":"9007:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"spender","nameLocation":"9030:7:8","nodeType":"VariableDeclaration","scope":1542,"src":"9022:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"value","nameLocation":"9047:5:8","nodeType":"VariableDeclaration","scope":1542,"src":"9039:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:8"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[],"src":"9063:0:8"},"scope":1651,"src":"8989:128:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"10047:334:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:8","typeDescriptions":{}}},"id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1568,"nodeType":"IfStatement","src":"10057:89:8","trueBody":{"id":1567,"nodeType":"Block","src":"10082:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:8","typeDescriptions":{}}},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10103:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"RevertStatement","src":"10096:39:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10159:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1570,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:8","typeDescriptions":{}}},"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1583,"nodeType":"IfStatement","src":"10155:90:8","trueBody":{"id":1582,"nodeType":"Block","src":"10182:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:8","typeDescriptions":{}}},"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10203:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1581,"nodeType":"RevertStatement","src":"10196:38:8"}]}},{"expression":{"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"10254:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1587,"indexExpression":{"id":1585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10266:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1588,"indexExpression":{"id":1586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10273:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"10284:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1591,"nodeType":"ExpressionStatement","src":"10254:35:8"},{"condition":{"id":1592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"10303:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1600,"nodeType":"IfStatement","src":"10299:76:8","trueBody":{"id":1599,"nodeType":"Block","src":"10314:61:8","statements":[{"eventCall":{"arguments":[{"id":1594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10342:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10349:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"10358:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"10333:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"EmitStatement","src":"10328:36:8"}]}}]},"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"9123:821:8","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:8","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"owner","nameLocation":"9975:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9967:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"spender","nameLocation":"9990:7:8","nodeType":"VariableDeclaration","scope":1602,"src":"9982:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"value","nameLocation":"10007:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9999:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:8","nodeType":"VariableDeclaration","scope":1602,"src":"10014:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1550,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:8"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"10047:0:8"},"scope":1651,"src":"9949:432:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1649,"nodeType":"Block","src":"10752:388:8","statements":[{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:8","nodeType":"VariableDeclaration","scope":1649,"src":"10762:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1618,"initialValue":{"arguments":[{"id":1615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"10799:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10806:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"10789:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10828:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:8","memberName":"max","nodeType":"MemberAccess","src":"10848:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"10824:310:8","trueBody":{"id":1647,"nodeType":"Block","src":"10867:267:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10885:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10904:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1636,"nodeType":"IfStatement","src":"10881:130:8","trueBody":{"id":1635,"nodeType":"Block","src":"10911:100:8","statements":[{"errorCall":{"arguments":[{"id":1630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10963:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10972:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10990:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"10936:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1634,"nodeType":"RevertStatement","src":"10929:67:8"}]}},{"id":1646,"nodeType":"UncheckedBlock","src":"11024:100:8","statements":[{"expression":{"arguments":[{"id":1638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"11061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"11068:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"11077:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"11096:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1602,"src":"11052:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1645,"nodeType":"ExpressionStatement","src":"11052:57:8"}]}]}}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"10387:271:8","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:8","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"owner","nameLocation":"10696:5:8","nodeType":"VariableDeclaration","scope":1650,"src":"10688:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"spender","nameLocation":"10711:7:8","nodeType":"VariableDeclaration","scope":1650,"src":"10703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"value","nameLocation":"10728:5:8","nodeType":"VariableDeclaration","scope":1650,"src":"10720:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:8"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[],"src":"10752:0:8"},"scope":1651,"src":"10663:477:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1652,"src":"1401:9741:8","usedErrors":[698,703,708,717,722,727],"usedEvents":[1663,1672]}],"src":"105:11038:8"},"id":8},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1729]},"id":1730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"132:70:9","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1729,"linearizedBaseContracts":[1729],"name":"IERC20","nameLocation":"213:6:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"226:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1663,"name":"Transfer","nameLocation":"395:8:9","nodeType":"EventDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:9","nodeType":"VariableDeclaration","scope":1663,"src":"404:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:9","nodeType":"VariableDeclaration","scope":1663,"src":"426:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:9","nodeType":"VariableDeclaration","scope":1663,"src":"446:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:9"},"src":"389:72:9"},{"anonymous":false,"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"467:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1672,"name":"Approval","nameLocation":"626:8:9","nodeType":"EventDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:9","nodeType":"VariableDeclaration","scope":1672,"src":"635:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:9","nodeType":"VariableDeclaration","scope":1672,"src":"658:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:9","nodeType":"VariableDeclaration","scope":1672,"src":"683:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:9"},"src":"620:78:9"},{"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"704:65:9","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:9","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"794:2:9"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"820:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:9"},"scope":1729,"src":"774:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"835:71:9","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:9","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"account","nameLocation":"938:7:9","nodeType":"VariableDeclaration","scope":1686,"src":"930:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:9"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1686,"src":"970:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:9"},"scope":1729,"src":"911:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"985:213:9","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:9","nodeType":"FunctionDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"to","nameLocation":"1229:2:9","nodeType":"VariableDeclaration","scope":1696,"src":"1221:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"value","nameLocation":"1241:5:9","nodeType":"VariableDeclaration","scope":1696,"src":"1233:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:9"},"returnParameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"1266:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1693,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:9"},"scope":1729,"src":"1203:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1278:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:9","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"owner","nameLocation":"1574:5:9","nodeType":"VariableDeclaration","scope":1706,"src":"1566:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"spender","nameLocation":"1589:7:9","nodeType":"VariableDeclaration","scope":1706,"src":"1581:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:9"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"1621:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:9"},"scope":1729,"src":"1547:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"1636:667:9","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:9","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"spender","nameLocation":"2333:7:9","nodeType":"VariableDeclaration","scope":1716,"src":"2325:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1708,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"value","nameLocation":"2350:5:9","nodeType":"VariableDeclaration","scope":1716,"src":"2342:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:9"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"2375:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1713,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:9"},"scope":1729,"src":"2308:73:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"2387:297:9","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:9","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"from","nameLocation":"2719:4:9","nodeType":"VariableDeclaration","scope":1728,"src":"2711:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"to","nameLocation":"2733:2:9","nodeType":"VariableDeclaration","scope":1728,"src":"2725:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"value","nameLocation":"2745:5:9","nodeType":"VariableDeclaration","scope":1728,"src":"2737:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:9"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1728,"src":"2770:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1725,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:9"},"scope":1729,"src":"2689:87:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1730,"src":"203:2575:9","usedErrors":[],"usedEvents":[1663,1672]}],"src":"106:2673:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1729],"IERC20Metadata":[1755]},"id":1756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1756,"sourceUnit":1730,"src":"151:37:10","symbolAliases":[{"foreign":{"id":1732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"159:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1735,"name":"IERC20","nameLocations":["305:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"305:6:10"},"id":1736,"nodeType":"InheritanceSpecifier","src":"305:6:10"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"190:86:10","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1755,"linearizedBaseContracts":[1755,1729],"name":"IERC20Metadata","nameLocation":"287:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"318:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:10","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[],"src":"390:2:10"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1742,"src":"416:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1739,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:10"},"scope":1755,"src":"377:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"437:56:10","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:10","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[],"src":"513:2:10"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"539:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1745,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:10"},"scope":1755,"src":"498:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"560:65:10","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:10","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[],"src":"647:2:10"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1754,"src":"673:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1751,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:10"},"scope":1755,"src":"630:50:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1756,"src":"277:405:10","usedErrors":[],"usedEvents":[1663,1672]}],"src":"125:558:10"},"id":10},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2008]},"id":2009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"127:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2008,"linearizedBaseContracts":[2008],"name":"Address","nameLocation":"203:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"217:94:11","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1763,"name":"AddressInsufficientBalance","nameLocation":"322:26:11","nodeType":"ErrorDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"account","nameLocation":"357:7:11","nodeType":"VariableDeclaration","scope":1763,"src":"349:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:11"},"src":"316:50:11"},{"documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"372:75:11","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1768,"name":"AddressEmptyCode","nameLocation":"458:16:11","nodeType":"ErrorDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"target","nameLocation":"483:6:11","nodeType":"VariableDeclaration","scope":1768,"src":"475:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:11"},"src":"452:39:11"},{"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"497:89:11","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1771,"name":"FailedInnerCall","nameLocation":"597:15:11","nodeType":"ErrorDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"612:2:11"},"src":"591:24:11"},{"body":{"id":1811,"nodeType":"Block","src":"1602:260:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1781,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:11","typeDescriptions":{}}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:11","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1784,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1640:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1794,"nodeType":"IfStatement","src":"1612:109:11","trueBody":{"id":1793,"nodeType":"Block","src":"1648:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1789,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:11","typeDescriptions":{}}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1786,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"1669:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1792,"nodeType":"RevertStatement","src":"1662:48:11"}]}},{"assignments":[1796,null],"declarations":[{"constant":false,"id":1796,"mutability":"mutable","name":"success","nameLocation":"1737:7:11","nodeType":"VariableDeclaration","scope":1811,"src":"1732:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1795,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1803,"initialValue":{"arguments":[{"hexValue":"","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1797,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"1750:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:11","memberName":"call","nodeType":"MemberAccess","src":"1750:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1799,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1772:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:11"},{"condition":{"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:11","subExpression":{"id":1804,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"1798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1810,"nodeType":"IfStatement","src":"1793:63:11","trueBody":{"id":1809,"nodeType":"Block","src":"1807:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1806,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1828:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1808,"nodeType":"RevertStatement","src":"1821:24:11"}]}}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"621:905:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:11","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:11","nodeType":"VariableDeclaration","scope":1812,"src":"1550:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"amount","nameLocation":"1585:6:11","nodeType":"VariableDeclaration","scope":1812,"src":"1577:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:11"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[],"src":"1602:0:11"},"scope":2008,"src":"1531:331:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1828,"nodeType":"Block","src":"2794:62:11","statements":[{"expression":{"arguments":[{"id":1823,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2833:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1824,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"2841:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1822,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2811:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1821,"id":1827,"nodeType":"Return","src":"2804:45:11"}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"1868:832:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1829,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:11","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"target","nameLocation":"2735:6:11","nodeType":"VariableDeclaration","scope":1829,"src":"2727:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"data","nameLocation":"2756:4:11","nodeType":"VariableDeclaration","scope":1829,"src":"2743:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1816,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:11"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"2780:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1819,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:11"},"scope":2008,"src":"2705:151:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1874,"nodeType":"Block","src":"3293:279:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1843,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:11","typeDescriptions":{}}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:11","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3331:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1856,"nodeType":"IfStatement","src":"3303:108:11","trueBody":{"id":1855,"nodeType":"Block","src":"3338:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1851,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:11","typeDescriptions":{}}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1848,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3359:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1854,"nodeType":"RevertStatement","src":"3352:48:11"}]}},{"assignments":[1858,1860],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"success","nameLocation":"3426:7:11","nodeType":"VariableDeclaration","scope":1874,"src":"3421:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1857,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:11","nodeType":"VariableDeclaration","scope":1874,"src":"3435:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1859,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1867,"initialValue":{"arguments":[{"id":1865,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"3488:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1861,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3462:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:11","memberName":"call","nodeType":"MemberAccess","src":"3462:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3481:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:11"},{"expression":{"arguments":[{"id":1869,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3537:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1870,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3545:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1871,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"3554:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1868,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3510:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1840,"id":1873,"nodeType":"Return","src":"3503:62:11"}]},"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"2862:313:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1875,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:11","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"target","nameLocation":"3219:6:11","nodeType":"VariableDeclaration","scope":1875,"src":"3211:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"data","nameLocation":"3240:4:11","nodeType":"VariableDeclaration","scope":1875,"src":"3227:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1833,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"value","nameLocation":"3254:5:11","nodeType":"VariableDeclaration","scope":1875,"src":"3246:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:11"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1875,"src":"3279:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1838,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:11"},"scope":2008,"src":"3180:392:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1900,"nodeType":"Block","src":"3811:154:11","statements":[{"assignments":[1886,1888],"declarations":[{"constant":false,"id":1886,"mutability":"mutable","name":"success","nameLocation":"3827:7:11","nodeType":"VariableDeclaration","scope":1900,"src":"3822:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1885,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:11","nodeType":"VariableDeclaration","scope":1900,"src":"3836:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1887,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1893,"initialValue":{"arguments":[{"id":1891,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"3881:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1889,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3863:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:11"},{"expression":{"arguments":[{"id":1895,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3930:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1896,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"3938:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1897,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3947:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1894,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3903:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1884,"id":1899,"nodeType":"Return","src":"3896:62:11"}]},"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"3578:128:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:11","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"target","nameLocation":"3747:6:11","nodeType":"VariableDeclaration","scope":1901,"src":"3739:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"data","nameLocation":"3768:4:11","nodeType":"VariableDeclaration","scope":1901,"src":"3755:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1879,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:11"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"3797:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1882,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:11"},"scope":2008,"src":"3711:254:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1926,"nodeType":"Block","src":"4203:156:11","statements":[{"assignments":[1912,1914],"declarations":[{"constant":false,"id":1912,"mutability":"mutable","name":"success","nameLocation":"4219:7:11","nodeType":"VariableDeclaration","scope":1926,"src":"4214:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1911,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:11","nodeType":"VariableDeclaration","scope":1926,"src":"4228:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1913,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1919,"initialValue":{"arguments":[{"id":1917,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4275:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1915,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4255:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:11","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:11"},{"expression":{"arguments":[{"id":1921,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4324:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1922,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"4332:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1923,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"4341:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1920,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"4297:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1910,"id":1925,"nodeType":"Return","src":"4290:62:11"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"3971:130:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1927,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:11","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"target","nameLocation":"4144:6:11","nodeType":"VariableDeclaration","scope":1927,"src":"4136:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"data","nameLocation":"4165:4:11","nodeType":"VariableDeclaration","scope":1927,"src":"4152:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1905,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:11"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1927,"src":"4189:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1908,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:11"},"scope":2008,"src":"4106:253:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1966,"nodeType":"Block","src":"4783:424:11","statements":[{"condition":{"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:11","subExpression":{"id":1939,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"4798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1964,"nodeType":"Block","src":"4857:344:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1946,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5045:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:11","memberName":"length","nodeType":"MemberAccess","src":"5045:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1950,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5071:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:11","memberName":"code","nodeType":"MemberAccess","src":"5071:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:11","memberName":"length","nodeType":"MemberAccess","src":"5071:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1961,"nodeType":"IfStatement","src":"5041:119:11","trueBody":{"id":1960,"nodeType":"Block","src":"5096:64:11","statements":[{"errorCall":{"arguments":[{"id":1957,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5138:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1956,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"5121:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1959,"nodeType":"RevertStatement","src":"5114:31:11"}]}},{"expression":{"id":1962,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5180:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1938,"id":1963,"nodeType":"Return","src":"5173:17:11"}]},"id":1965,"nodeType":"IfStatement","src":"4793:408:11","trueBody":{"id":1945,"nodeType":"Block","src":"4807:44:11","statements":[{"expression":{"arguments":[{"id":1942,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"4829:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1941,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"4821:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1944,"nodeType":"ExpressionStatement","src":"4821:19:11"}]}}]},"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"4365:255:11","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1967,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:11","nodeType":"FunctionDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"target","nameLocation":"4678:6:11","nodeType":"VariableDeclaration","scope":1967,"src":"4670:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"success","nameLocation":"4699:7:11","nodeType":"VariableDeclaration","scope":1967,"src":"4694:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1931,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:11","nodeType":"VariableDeclaration","scope":1967,"src":"4716:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1933,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:11"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1967,"src":"4769:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1936,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:11"},"scope":2008,"src":"4625:582:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1988,"nodeType":"Block","src":"5509:122:11","statements":[{"condition":{"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:11","subExpression":{"id":1977,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"5524:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1986,"nodeType":"Block","src":"5583:42:11","statements":[{"expression":{"id":1984,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5604:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1976,"id":1985,"nodeType":"Return","src":"5597:17:11"}]},"id":1987,"nodeType":"IfStatement","src":"5519:106:11","trueBody":{"id":1983,"nodeType":"Block","src":"5533:44:11","statements":[{"expression":{"arguments":[{"id":1980,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5555:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1979,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"5547:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1982,"nodeType":"ExpressionStatement","src":"5547:19:11"}]}}]},"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"5213:189:11","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1989,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:11","nodeType":"FunctionDefinition","parameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"success","nameLocation":"5438:7:11","nodeType":"VariableDeclaration","scope":1989,"src":"5433:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1969,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:11","nodeType":"VariableDeclaration","scope":1989,"src":"5447:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1971,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:11"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1989,"src":"5495:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1974,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:11"},"scope":2008,"src":"5407:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2006,"nodeType":"Block","src":"5798:461:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1995,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"5874:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:11","memberName":"length","nodeType":"MemberAccess","src":"5874:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2004,"nodeType":"Block","src":"6204:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2001,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"6225:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2003,"nodeType":"RevertStatement","src":"6218:24:11"}]},"id":2005,"nodeType":"IfStatement","src":"5870:383:11","trueBody":{"id":2000,"nodeType":"Block","src":"5897:301:11","statements":[{"AST":{"nativeSrc":"6055:133:11","nodeType":"YulBlock","src":"6055:133:11","statements":[{"nativeSrc":"6073:40:11","nodeType":"YulVariableDeclaration","src":"6073:40:11","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:11","nodeType":"YulIdentifier","src":"6102:10:11"}],"functionName":{"name":"mload","nativeSrc":"6096:5:11","nodeType":"YulIdentifier","src":"6096:5:11"},"nativeSrc":"6096:17:11","nodeType":"YulFunctionCall","src":"6096:17:11"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:11","nodeType":"YulTypedName","src":"6077:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:11","nodeType":"YulLiteral","src":"6141:2:11","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:11","nodeType":"YulIdentifier","src":"6145:10:11"}],"functionName":{"name":"add","nativeSrc":"6137:3:11","nodeType":"YulIdentifier","src":"6137:3:11"},"nativeSrc":"6137:19:11","nodeType":"YulFunctionCall","src":"6137:19:11"},{"name":"returndata_size","nativeSrc":"6158:15:11","nodeType":"YulIdentifier","src":"6158:15:11"}],"functionName":{"name":"revert","nativeSrc":"6130:6:11","nodeType":"YulIdentifier","src":"6130:6:11"},"nativeSrc":"6130:44:11","nodeType":"YulFunctionCall","src":"6130:44:11"},"nativeSrc":"6130:44:11","nodeType":"YulExpressionStatement","src":"6130:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":1992,"isOffset":false,"isSlot":false,"src":"6102:10:11","valueSize":1},{"declaration":1992,"isOffset":false,"isSlot":false,"src":"6145:10:11","valueSize":1}],"id":1999,"nodeType":"InlineAssembly","src":"6046:142:11"}]}}]},"documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"5637:101:11","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:11","nodeType":"FunctionDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:11","nodeType":"VariableDeclaration","scope":2007,"src":"5760:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1991,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:11"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"5798:0:11"},"scope":2008,"src":"5743:516:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2009,"src":"195:6066:11","usedErrors":[1763,1768,1771],"usedEvents":[]}],"src":"101:6161:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2038]},"id":2039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2010,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2038,"linearizedBaseContracts":[2038],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2019,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":2016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2015,"id":2018,"nodeType":"Return","src":"728:17:12"}]},"id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2020,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":2038,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":2025,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2024,"id":2027,"nodeType":"Return","src":"835:15:12"}]},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2022,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":2038,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2036,"nodeType":"Block","src":"935:25:12","statements":[{"expression":{"hexValue":"30","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2033,"id":2035,"nodeType":"Return","src":"945:8:12"}]},"id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:12","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[],"src":"892:2:12"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2037,"src":"926:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:12"},"scope":2038,"src":"863:97:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2039,"src":"624:338:12","usedErrors":[],"usedEvents":[]}],"src":"101:862:12"},"id":12},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2107]},"id":2108,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2040,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"135:750:13","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2107,"linearizedBaseContracts":[2107],"name":"ReentrancyGuard","nameLocation":"904:15:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2044,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:13","nodeType":"VariableDeclaration","scope":2107,"src":"1674:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2047,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:13","nodeType":"VariableDeclaration","scope":2107,"src":"1720:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2049,"mutability":"mutable","name":"_status","nameLocation":"1779:7:13","nodeType":"VariableDeclaration","scope":2107,"src":"1763:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"1793:52:13","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2052,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:13","nodeType":"ErrorDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[],"src":"1884:2:13"},"src":"1850:37:13"},{"body":{"id":2059,"nodeType":"Block","src":"1907:38:13","statements":[{"expression":{"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2055,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"1917:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2056,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"1927:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2058,"nodeType":"ExpressionStatement","src":"1917:21:13"}]},"id":2060,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[],"src":"1904:2:13"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[],"src":"1907:0:13"},"scope":2107,"src":"1893:52:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2070,"nodeType":"Block","src":"2346:79:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2063,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"2356:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2065,"nodeType":"ExpressionStatement","src":"2356:21:13"},{"id":2066,"nodeType":"PlaceholderStatement","src":"2387:1:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2067,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"2398:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2069,"nodeType":"ExpressionStatement","src":"2398:20:13"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"1951:366:13","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2071,"name":"nonReentrant","nameLocation":"2331:12:13","nodeType":"ModifierDefinition","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[],"src":"2343:2:13"},"src":"2322:103:13","virtual":false,"visibility":"internal"},{"body":{"id":2086,"nodeType":"Block","src":"2470:268:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2558:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2075,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"2569:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2081,"nodeType":"IfStatement","src":"2554:86:13","trueBody":{"id":2080,"nodeType":"Block","src":"2578:62:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2077,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"2599:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2079,"nodeType":"RevertStatement","src":"2592:37:13"}]}},{"expression":{"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2082,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2714:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2083,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"2724:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2085,"nodeType":"ExpressionStatement","src":"2714:17:13"}]},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:13","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[],"src":"2459:2:13"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[],"src":"2470:0:13"},"scope":2107,"src":"2431:307:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2094,"nodeType":"Block","src":"2782:170:13","statements":[{"expression":{"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2090,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2924:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2091,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"2934:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2093,"nodeType":"ExpressionStatement","src":"2924:21:13"}]},"id":2095,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:13","nodeType":"FunctionDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[],"src":"2771:2:13"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[],"src":"2782:0:13"},"scope":2107,"src":"2744:208:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2105,"nodeType":"Block","src":"3195:42:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2101,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"3212:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2102,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"3223:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2100,"id":2104,"nodeType":"Return","src":"3205:25:13"}]},"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"2958:168:13","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:13","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[],"src":"3163:2:13"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"3189:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2098,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:13"},"scope":2107,"src":"3131:106:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2108,"src":"886:2353:13","usedErrors":[2052],"usedEvents":[]}],"src":"109:3131:13"},"id":13},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2217]},"id":2218,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2109,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"219:1025:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2217,"linearizedBaseContracts":[2217],"name":"StorageSlot","nameLocation":"1253:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2113,"members":[{"constant":false,"id":2112,"mutability":"mutable","name":"value","nameLocation":"1308:5:14","nodeType":"VariableDeclaration","scope":2113,"src":"1300:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2111,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:14","nodeType":"StructDefinition","scope":2217,"src":"1271:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2116,"members":[{"constant":false,"id":2115,"mutability":"mutable","name":"value","nameLocation":"1360:5:14","nodeType":"VariableDeclaration","scope":2116,"src":"1355:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2114,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:14","nodeType":"StructDefinition","scope":2217,"src":"1326:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2119,"members":[{"constant":false,"id":2118,"mutability":"mutable","name":"value","nameLocation":"1415:5:14","nodeType":"VariableDeclaration","scope":2119,"src":"1407:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:14","nodeType":"StructDefinition","scope":2217,"src":"1378:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2122,"members":[{"constant":false,"id":2121,"mutability":"mutable","name":"value","nameLocation":"1470:5:14","nodeType":"VariableDeclaration","scope":2122,"src":"1462:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:14","nodeType":"StructDefinition","scope":2217,"src":"1433:49:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2125,"members":[{"constant":false,"id":2124,"mutability":"mutable","name":"value","nameLocation":"1523:5:14","nodeType":"VariableDeclaration","scope":2125,"src":"1516:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2123,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:14","nodeType":"StructDefinition","scope":2217,"src":"1488:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2128,"members":[{"constant":false,"id":2127,"mutability":"mutable","name":"value","nameLocation":"1574:5:14","nodeType":"VariableDeclaration","scope":2128,"src":"1568:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2126,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:14","nodeType":"StructDefinition","scope":2217,"src":"1541:45:14","visibility":"public"},{"body":{"id":2138,"nodeType":"Block","src":"1768:106:14","statements":[{"AST":{"nativeSrc":"1830:38:14","nodeType":"YulBlock","src":"1830:38:14","statements":[{"nativeSrc":"1844:14:14","nodeType":"YulAssignment","src":"1844:14:14","value":{"name":"slot","nativeSrc":"1854:4:14","nodeType":"YulIdentifier","src":"1854:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:14","nodeType":"YulIdentifier","src":"1844:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2135,"isOffset":false,"isSlot":true,"src":"1844:6:14","suffix":"slot","valueSize":1},{"declaration":2131,"isOffset":false,"isSlot":false,"src":"1854:4:14","valueSize":1}],"id":2137,"nodeType":"InlineAssembly","src":"1821:47:14"}]},"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"1592:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2139,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:14","nodeType":"FunctionDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"slot","nameLocation":"1716:4:14","nodeType":"VariableDeclaration","scope":2139,"src":"1708:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:14"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"r","nameLocation":"1765:1:14","nodeType":"VariableDeclaration","scope":2139,"src":"1745:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2134,"nodeType":"UserDefinedTypeName","pathNode":{"id":2133,"name":"AddressSlot","nameLocations":["1745:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2113,"src":"1745:11:14"},"referencedDeclaration":2113,"src":"1745:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:14"},"scope":2217,"src":"1684:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2149,"nodeType":"Block","src":"2056:106:14","statements":[{"AST":{"nativeSrc":"2118:38:14","nodeType":"YulBlock","src":"2118:38:14","statements":[{"nativeSrc":"2132:14:14","nodeType":"YulAssignment","src":"2132:14:14","value":{"name":"slot","nativeSrc":"2142:4:14","nodeType":"YulIdentifier","src":"2142:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:14","nodeType":"YulIdentifier","src":"2132:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2146,"isOffset":false,"isSlot":true,"src":"2132:6:14","suffix":"slot","valueSize":1},{"declaration":2142,"isOffset":false,"isSlot":false,"src":"2142:4:14","valueSize":1}],"id":2148,"nodeType":"InlineAssembly","src":"2109:47:14"}]},"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"1880:87:14","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2150,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:14","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"slot","nameLocation":"2004:4:14","nodeType":"VariableDeclaration","scope":2150,"src":"1996:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:14"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"r","nameLocation":"2053:1:14","nodeType":"VariableDeclaration","scope":2150,"src":"2033:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2116_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2145,"nodeType":"UserDefinedTypeName","pathNode":{"id":2144,"name":"BooleanSlot","nameLocations":["2033:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2116,"src":"2033:11:14"},"referencedDeclaration":2116,"src":"2033:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2116_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:14"},"scope":2217,"src":"1972:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2160,"nodeType":"Block","src":"2344:106:14","statements":[{"AST":{"nativeSrc":"2406:38:14","nodeType":"YulBlock","src":"2406:38:14","statements":[{"nativeSrc":"2420:14:14","nodeType":"YulAssignment","src":"2420:14:14","value":{"name":"slot","nativeSrc":"2430:4:14","nodeType":"YulIdentifier","src":"2430:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:14","nodeType":"YulIdentifier","src":"2420:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2157,"isOffset":false,"isSlot":true,"src":"2420:6:14","suffix":"slot","valueSize":1},{"declaration":2153,"isOffset":false,"isSlot":false,"src":"2430:4:14","valueSize":1}],"id":2159,"nodeType":"InlineAssembly","src":"2397:47:14"}]},"documentation":{"id":2151,"nodeType":"StructuredDocumentation","src":"2168:87:14","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2161,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:14","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"slot","nameLocation":"2292:4:14","nodeType":"VariableDeclaration","scope":2161,"src":"2284:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:14"},"returnParameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"r","nameLocation":"2341:1:14","nodeType":"VariableDeclaration","scope":2161,"src":"2321:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2119_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2156,"nodeType":"UserDefinedTypeName","pathNode":{"id":2155,"name":"Bytes32Slot","nameLocations":["2321:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"2321:11:14"},"referencedDeclaration":2119,"src":"2321:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2119_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:14"},"scope":2217,"src":"2260:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2171,"nodeType":"Block","src":"2632:106:14","statements":[{"AST":{"nativeSrc":"2694:38:14","nodeType":"YulBlock","src":"2694:38:14","statements":[{"nativeSrc":"2708:14:14","nodeType":"YulAssignment","src":"2708:14:14","value":{"name":"slot","nativeSrc":"2718:4:14","nodeType":"YulIdentifier","src":"2718:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:14","nodeType":"YulIdentifier","src":"2708:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2168,"isOffset":false,"isSlot":true,"src":"2708:6:14","suffix":"slot","valueSize":1},{"declaration":2164,"isOffset":false,"isSlot":false,"src":"2718:4:14","valueSize":1}],"id":2170,"nodeType":"InlineAssembly","src":"2685:47:14"}]},"documentation":{"id":2162,"nodeType":"StructuredDocumentation","src":"2456:87:14","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2172,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:14","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"slot","nameLocation":"2580:4:14","nodeType":"VariableDeclaration","scope":2172,"src":"2572:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:14"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"r","nameLocation":"2629:1:14","nodeType":"VariableDeclaration","scope":2172,"src":"2609:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2122_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2167,"nodeType":"UserDefinedTypeName","pathNode":{"id":2166,"name":"Uint256Slot","nameLocations":["2609:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"2609:11:14"},"referencedDeclaration":2122,"src":"2609:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2122_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:14"},"scope":2217,"src":"2548:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2182,"nodeType":"Block","src":"2917:106:14","statements":[{"AST":{"nativeSrc":"2979:38:14","nodeType":"YulBlock","src":"2979:38:14","statements":[{"nativeSrc":"2993:14:14","nodeType":"YulAssignment","src":"2993:14:14","value":{"name":"slot","nativeSrc":"3003:4:14","nodeType":"YulIdentifier","src":"3003:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:14","nodeType":"YulIdentifier","src":"2993:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2179,"isOffset":false,"isSlot":true,"src":"2993:6:14","suffix":"slot","valueSize":1},{"declaration":2175,"isOffset":false,"isSlot":false,"src":"3003:4:14","valueSize":1}],"id":2181,"nodeType":"InlineAssembly","src":"2970:47:14"}]},"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"2744:86:14","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2183,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:14","nodeType":"FunctionDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"slot","nameLocation":"2866:4:14","nodeType":"VariableDeclaration","scope":2183,"src":"2858:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:14"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"r","nameLocation":"2914:1:14","nodeType":"VariableDeclaration","scope":2183,"src":"2895:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2178,"nodeType":"UserDefinedTypeName","pathNode":{"id":2177,"name":"StringSlot","nameLocations":["2895:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"2895:10:14"},"referencedDeclaration":2125,"src":"2895:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:14"},"scope":2217,"src":"2835:188:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2193,"nodeType":"Block","src":"3225:112:14","statements":[{"AST":{"nativeSrc":"3287:44:14","nodeType":"YulBlock","src":"3287:44:14","statements":[{"nativeSrc":"3301:20:14","nodeType":"YulAssignment","src":"3301:20:14","value":{"name":"store.slot","nativeSrc":"3311:10:14","nodeType":"YulIdentifier","src":"3311:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:14","nodeType":"YulIdentifier","src":"3301:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2190,"isOffset":false,"isSlot":true,"src":"3301:6:14","suffix":"slot","valueSize":1},{"declaration":2186,"isOffset":false,"isSlot":true,"src":"3311:10:14","suffix":"slot","valueSize":1}],"id":2192,"nodeType":"InlineAssembly","src":"3278:53:14"}]},"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"3029:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:14","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"store","nameLocation":"3173:5:14","nodeType":"VariableDeclaration","scope":2194,"src":"3158:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2185,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:14"},"returnParameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"r","nameLocation":"3222:1:14","nodeType":"VariableDeclaration","scope":2194,"src":"3203:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2189,"nodeType":"UserDefinedTypeName","pathNode":{"id":2188,"name":"StringSlot","nameLocations":["3203:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"3203:10:14"},"referencedDeclaration":2125,"src":"3203:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:14"},"scope":2217,"src":"3135:202:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2204,"nodeType":"Block","src":"3513:106:14","statements":[{"AST":{"nativeSrc":"3575:38:14","nodeType":"YulBlock","src":"3575:38:14","statements":[{"nativeSrc":"3589:14:14","nodeType":"YulAssignment","src":"3589:14:14","value":{"name":"slot","nativeSrc":"3599:4:14","nodeType":"YulIdentifier","src":"3599:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:14","nodeType":"YulIdentifier","src":"3589:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2201,"isOffset":false,"isSlot":true,"src":"3589:6:14","suffix":"slot","valueSize":1},{"declaration":2197,"isOffset":false,"isSlot":false,"src":"3599:4:14","valueSize":1}],"id":2203,"nodeType":"InlineAssembly","src":"3566:47:14"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"3343:85:14","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:14","nodeType":"FunctionDefinition","parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"slot","nameLocation":"3463:4:14","nodeType":"VariableDeclaration","scope":2205,"src":"3455:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:14"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"r","nameLocation":"3510:1:14","nodeType":"VariableDeclaration","scope":2205,"src":"3492:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2200,"nodeType":"UserDefinedTypeName","pathNode":{"id":2199,"name":"BytesSlot","nameLocations":["3492:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2128,"src":"3492:9:14"},"referencedDeclaration":2128,"src":"3492:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:14"},"scope":2217,"src":"3433:186:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"3816:112:14","statements":[{"AST":{"nativeSrc":"3878:44:14","nodeType":"YulBlock","src":"3878:44:14","statements":[{"nativeSrc":"3892:20:14","nodeType":"YulAssignment","src":"3892:20:14","value":{"name":"store.slot","nativeSrc":"3902:10:14","nodeType":"YulIdentifier","src":"3902:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:14","nodeType":"YulIdentifier","src":"3892:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2212,"isOffset":false,"isSlot":true,"src":"3892:6:14","suffix":"slot","valueSize":1},{"declaration":2208,"isOffset":false,"isSlot":true,"src":"3902:10:14","suffix":"slot","valueSize":1}],"id":2214,"nodeType":"InlineAssembly","src":"3869:53:14"}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"3625:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:14","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"store","nameLocation":"3765:5:14","nodeType":"VariableDeclaration","scope":2216,"src":"3751:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2207,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:14"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"r","nameLocation":"3813:1:14","nodeType":"VariableDeclaration","scope":2216,"src":"3795:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2211,"nodeType":"UserDefinedTypeName","pathNode":{"id":2210,"name":"BytesSlot","nameLocations":["3795:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2128,"src":"3795:9:14"},"referencedDeclaration":2128,"src":"3795:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:14"},"scope":2217,"src":"3729:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2218,"src":"1245:2685:14","usedErrors":[],"usedEvents":[]}],"src":"193:3738:14"},"id":14},"contracts/BaluniV1Pool.sol":{"ast":{"absolutePath":"contracts/BaluniV1Pool.sol","exportedSymbols":{"BaluniV1Pool":[3972],"Context":[2038],"ERC20":[1651],"I1inchSpotAgg":[4491],"IBaluniV1Agent":[4511],"IBaluniV1PoolPeriphery":[4649],"IBaluniV1Rebalancer":[4759],"IBaluniV1Router":[5027],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755],"ReentrancyGuard":[2107]},"id":3973,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2219,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:15"},{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","file":"./interfaces/IBaluniV1Rebalancer.sol","id":2220,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3973,"sourceUnit":4760,"src":"1466:46:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Router.sol","file":"./interfaces/IBaluniV1Router.sol","id":2221,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3973,"sourceUnit":5028,"src":"1514:42:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3973,"sourceUnit":1652,"src":"1558:55:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":2223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3973,"sourceUnit":2108,"src":"1615:59:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1PoolPeriphery.sol","file":"./interfaces/IBaluniV1PoolPeriphery.sol","id":2224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3973,"sourceUnit":4650,"src":"1678:49:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2225,"name":"ERC20","nameLocations":["1756:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1651,"src":"1756:5:15"},"id":2226,"nodeType":"InheritanceSpecifier","src":"1756:5:15"},{"baseName":{"id":2227,"name":"ReentrancyGuard","nameLocations":["1763:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":2107,"src":"1763:15:15"},"id":2228,"nodeType":"InheritanceSpecifier","src":"1763:15:15"}],"canonicalName":"BaluniV1Pool","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3972,"linearizedBaseContracts":[3972,2107,1651,728,1755,1729,2038],"name":"BaluniV1Pool","nameLocation":"1740:12:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"d14ef46d","id":2232,"mutability":"mutable","name":"assetInfos","nameLocation":"1805:10:15","nodeType":"VariableDeclaration","scope":3972,"src":"1786:29:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo[]"},"typeName":{"baseType":{"id":2230,"nodeType":"UserDefinedTypeName","pathNode":{"id":2229,"name":"AssetInfo","nameLocations":["1786:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2252,"src":"1786:9:15"},"referencedDeclaration":2252,"src":"1786:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2252_storage_ptr","typeString":"struct BaluniV1Pool.AssetInfo"}},"id":2231,"nodeType":"ArrayTypeName","src":"1786:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage_ptr","typeString":"struct BaluniV1Pool.AssetInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"7fec8d38","id":2234,"mutability":"mutable","name":"trigger","nameLocation":"1837:7:15","nodeType":"VariableDeclaration","scope":3972,"src":"1822:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"1822:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c2ee3a08","id":2236,"mutability":"mutable","name":"ONE","nameLocation":"1866:3:15","nodeType":"VariableDeclaration","scope":3972,"src":"1851:18:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1851:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"77aace1a","id":2238,"mutability":"mutable","name":"periphery","nameLocation":"1891:9:15","nodeType":"VariableDeclaration","scope":3972,"src":"1876:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2237,"name":"address","nodeType":"ElementaryTypeName","src":"1876:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"c45a0155","id":2240,"mutability":"mutable","name":"factory","nameLocation":"1922:7:15","nodeType":"VariableDeclaration","scope":3972,"src":"1907:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2239,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"functionSelector":"67a6c440","id":2243,"mutability":"constant","name":"SWAP_FEE_BPS","nameLocation":"1960:12:15","nodeType":"VariableDeclaration","scope":3972,"src":"1936:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1936:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3330","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1975:2:15","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"visibility":"public"},{"constant":false,"functionSelector":"cdf456e1","id":2245,"mutability":"mutable","name":"baseAsset","nameLocation":"2007:9:15","nodeType":"VariableDeclaration","scope":3972,"src":"1992:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"1992:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"01d22ccd","id":2247,"mutability":"mutable","name":"rebalancer","nameLocation":"2038:10:15","nodeType":"VariableDeclaration","scope":3972,"src":"2023:25:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"canonicalName":"BaluniV1Pool.AssetInfo","id":2252,"members":[{"constant":false,"id":2249,"mutability":"mutable","name":"asset","nameLocation":"2093:5:15","nodeType":"VariableDeclaration","scope":2252,"src":"2085:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2248,"name":"address","nodeType":"ElementaryTypeName","src":"2085:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2251,"mutability":"mutable","name":"weight","nameLocation":"2117:6:15","nodeType":"VariableDeclaration","scope":2252,"src":"2109:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2109:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AssetInfo","nameLocation":"2064:9:15","nodeType":"StructDefinition","scope":3972,"src":"2057:74:15","visibility":"public"},{"anonymous":false,"eventSelector":"279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8","id":2259,"name":"RebalancePerformed","nameLocation":"2145:18:15","nodeType":"EventDefinition","parameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"indexed":true,"mutability":"mutable","name":"by","nameLocation":"2180:2:15","nodeType":"VariableDeclaration","scope":2259,"src":"2164:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2253,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2257,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2194:6:15","nodeType":"VariableDeclaration","scope":2259,"src":"2184:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2255,"name":"address","nodeType":"ElementaryTypeName","src":"2184:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2256,"nodeType":"ArrayTypeName","src":"2184:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2163:38:15"},"src":"2139:63:15"},{"anonymous":false,"eventSelector":"a95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e","id":2266,"name":"WeightsRebalanced","nameLocation":"2214:17:15","nodeType":"EventDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2261,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2248:4:15","nodeType":"VariableDeclaration","scope":2266,"src":"2232:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2260,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2264,"indexed":false,"mutability":"mutable","name":"amountsAdded","nameLocation":"2264:12:15","nodeType":"VariableDeclaration","scope":2266,"src":"2254:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2254:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2263,"nodeType":"ArrayTypeName","src":"2254:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2231:46:15"},"src":"2208:70:15"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":2272,"name":"Burn","nameLocation":"2290:4:15","nodeType":"EventDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2311:4:15","nodeType":"VariableDeclaration","scope":2272,"src":"2295:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2267,"name":"address","nodeType":"ElementaryTypeName","src":"2295:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2270,"indexed":false,"mutability":"mutable","name":"sharesBurned","nameLocation":"2325:12:15","nodeType":"VariableDeclaration","scope":2272,"src":"2317:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"2317:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2294:44:15"},"src":"2284:55:15"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":2278,"name":"Mint","nameLocation":"2351:4:15","nodeType":"EventDefinition","parameters":{"id":2277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2372:2:15","nodeType":"VariableDeclaration","scope":2278,"src":"2356:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2273,"name":"address","nodeType":"ElementaryTypeName","src":"2356:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2276,"indexed":false,"mutability":"mutable","name":"sharesMinted","nameLocation":"2384:12:15","nodeType":"VariableDeclaration","scope":2278,"src":"2376:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2275,"name":"uint256","nodeType":"ElementaryTypeName","src":"2376:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2355:42:15"},"src":"2345:53:15"},{"anonymous":false,"eventSelector":"cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062","id":2290,"name":"Swap","nameLocation":"2410:4:15","nodeType":"EventDefinition","parameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2441:4:15","nodeType":"VariableDeclaration","scope":2290,"src":"2425:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2279,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2282,"indexed":true,"mutability":"mutable","name":"fromToken","nameLocation":"2472:9:15","nodeType":"VariableDeclaration","scope":2290,"src":"2456:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2281,"name":"address","nodeType":"ElementaryTypeName","src":"2456:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2284,"indexed":true,"mutability":"mutable","name":"toToken","nameLocation":"2508:7:15","nodeType":"VariableDeclaration","scope":2290,"src":"2492:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"2492:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2286,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"2534:8:15","nodeType":"VariableDeclaration","scope":2290,"src":"2526:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2285,"name":"uint256","nodeType":"ElementaryTypeName","src":"2526:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2288,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"2561:9:15","nodeType":"VariableDeclaration","scope":2290,"src":"2553:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"2553:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2414:163:15"},"src":"2404:174:15"},{"body":{"id":2374,"nodeType":"Block","src":"3249:593:15","statements":[{"expression":{"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2310,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"3260:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2311,"name":"_periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"3272:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3260:22:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2313,"nodeType":"ExpressionStatement","src":"3260:22:15"},{"expression":{"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2314,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"3293:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2315,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3303:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3307:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3303:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3293:20:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2318,"nodeType":"ExpressionStatement","src":"3293:20:15"},{"expression":{"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2319,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"3324:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2320,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"3337:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3324:24:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2322,"nodeType":"ExpressionStatement","src":"3324:24:15"},{"expression":{"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2323,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"3359:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31653138","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3365:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"3359:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2326,"nodeType":"ExpressionStatement","src":"3359:10:15"},{"expression":{"arguments":[{"id":2328,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"3399:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":2329,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"3408:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2327,"name":"initializeAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"3382:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory,uint256[] memory)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3382:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2331,"nodeType":"ExpressionStatement","src":"3382:35:15"},{"expression":{"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2332,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"3430:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2333,"name":"_trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"3440:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3430:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2335,"nodeType":"ExpressionStatement","src":"3430:18:15"},{"expression":{"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2336,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"3461:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2338,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"3493:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2337,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"3473:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$4759_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3473:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$4759","typeString":"contract IBaluniV1Rebalancer"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:4:15","memberName":"USDC","nodeType":"MemberAccess","referencedDeclaration":4691,"src":"3473:37:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3473:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3461:51:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2343,"nodeType":"ExpressionStatement","src":"3461:51:15"},{"assignments":[2345],"declarations":[{"constant":false,"id":2345,"mutability":"mutable","name":"totalWeight","nameLocation":"3651:11:15","nodeType":"VariableDeclaration","scope":2374,"src":"3643:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"3643:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2347,"initialValue":{"hexValue":"30","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3665:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3643:23:15"},{"body":{"id":2365,"nodeType":"Block","src":"3723:53:15","statements":[{"expression":{"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2359,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"3738:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":2360,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"3753:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2362,"indexExpression":{"id":2361,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"3762:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3753:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3738:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2364,"nodeType":"ExpressionStatement","src":"3738:26:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2352,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"3697:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2353,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"3701:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3710:6:15","memberName":"length","nodeType":"MemberAccess","src":"3701:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3697:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2366,"initializationExpression":{"assignments":[2349],"declarations":[{"constant":false,"id":2349,"mutability":"mutable","name":"i","nameLocation":"3690:1:15","nodeType":"VariableDeclaration","scope":2366,"src":"3682:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"3682:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2351,"initialValue":{"hexValue":"30","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3694:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3682:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3718:3:15","subExpression":{"id":2356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"3718:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2358,"nodeType":"ExpressionStatement","src":"3718:3:15"},"nodeType":"ForStatement","src":"3677:99:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2368,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"3794:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3130303030","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3809:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3794:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642077656967687473","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3816:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89","typeString":"literal_string \"Invalid weights\""},"value":"Invalid weights"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89","typeString":"literal_string \"Invalid weights\""}],"id":2367,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3786:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3786:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2373,"nodeType":"ExpressionStatement","src":"3786:48:15"}]},"documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"2586:449:15","text":" @dev Initializes a new instance of the BaluniV1Pool contract.\n @param _rebalancer The address of the rebalancer contract.\n @param _assets An array of addresses representing the assets in the pool.\n @param _weights An array of weights corresponding to the assets in the pool.\n @param _trigger The trigger value for rebalancing the pool.\n @param _periphery The address of the periphery contract."},"id":2375,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"42616c756e69204c50","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3223:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffab3cad7a41854f5c383caa9a930fe1ab39b32cbc67d790708a7a9f02409818","typeString":"literal_string \"Baluni LP\""},"value":"Baluni LP"},{"hexValue":"42414c554e492d4c50","id":2307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3236:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9cdad270784d4cf630085b188c6ca83632e4ebde5d7094eec6989a900521298","typeString":"literal_string \"BALUNI-LP\""},"value":"BALUNI-LP"}],"id":2308,"kind":"baseConstructorSpecifier","modifierName":{"id":2305,"name":"ERC20","nameLocations":["3217:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1651,"src":"3217:5:15"},"nodeType":"ModifierInvocation","src":"3217:31:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"_rebalancer","nameLocation":"3071:11:15","nodeType":"VariableDeclaration","scope":2375,"src":"3063:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2292,"name":"address","nodeType":"ElementaryTypeName","src":"3063:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"_assets","nameLocation":"3110:7:15","nodeType":"VariableDeclaration","scope":2375,"src":"3093:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2294,"name":"address","nodeType":"ElementaryTypeName","src":"3093:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2295,"nodeType":"ArrayTypeName","src":"3093:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2299,"mutability":"mutable","name":"_weights","nameLocation":"3145:8:15","nodeType":"VariableDeclaration","scope":2375,"src":"3128:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"3128:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2298,"nodeType":"ArrayTypeName","src":"3128:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2301,"mutability":"mutable","name":"_trigger","nameLocation":"3172:8:15","nodeType":"VariableDeclaration","scope":2375,"src":"3164:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2300,"name":"uint256","nodeType":"ElementaryTypeName","src":"3164:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2303,"mutability":"mutable","name":"_periphery","nameLocation":"3199:10:15","nodeType":"VariableDeclaration","scope":2375,"src":"3191:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2302,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3052:164:15"},"returnParameters":{"id":2309,"nodeType":"ParameterList","parameters":[],"src":"3249:0:15"},"scope":3972,"src":"3041:801:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2386,"nodeType":"Block","src":"3875:81:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2378,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3894:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3898:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3894:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2380,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"3908:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3894:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920506572697068657279","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3919:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2","typeString":"literal_string \"Only Periphery\""},"value":"Only Periphery"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2","typeString":"literal_string \"Only Periphery\""}],"id":2377,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3886:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3886:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2384,"nodeType":"ExpressionStatement","src":"3886:50:15"},{"id":2385,"nodeType":"PlaceholderStatement","src":"3947:1:15"}]},"id":2387,"name":"onlyPeriphery","nameLocation":"3859:13:15","nodeType":"ModifierDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[],"src":"3872:2:15"},"src":"3850:106:15","virtual":false,"visibility":"internal"},{"body":{"id":2491,"nodeType":"Block","src":"4265:597:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2398,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"4284:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4292:6:15","memberName":"length","nodeType":"MemberAccess","src":"4284:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2400,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"4302:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4311:6:15","memberName":"length","nodeType":"MemberAccess","src":"4302:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4284:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d61746368","id":2403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4319:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""},"value":"Assets and weights length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""}],"id":2397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4276:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2405,"nodeType":"ExpressionStatement","src":"4276:80:15"},{"body":{"id":2489,"nodeType":"Block","src":"4414:441:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2418,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"4437:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2420,"indexExpression":{"id":2419,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"4445:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4437:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4459:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4451:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2421,"name":"address","nodeType":"ElementaryTypeName","src":"4451:7:15","typeDescriptions":{}}},"id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4451:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4437:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061737365742061646472657373","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4463:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92","typeString":"literal_string \"Invalid asset address\""},"value":"Invalid asset address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92","typeString":"literal_string \"Invalid asset address\""}],"id":2417,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4429:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4429:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2428,"nodeType":"ExpressionStatement","src":"4429:58:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2430,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"4510:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2432,"indexExpression":{"id":2431,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"4519:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4510:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4524:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4510:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420776569676874","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4527:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19","typeString":"literal_string \"Invalid weight\""},"value":"Invalid weight"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19","typeString":"literal_string \"Invalid weight\""}],"id":2429,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4502:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2437,"nodeType":"ExpressionStatement","src":"4502:42:15"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":2442,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"4595:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2444,"indexExpression":{"id":2443,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"4603:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4595:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2445,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"4615:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2447,"indexExpression":{"id":2446,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"4624:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4615:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2441,"name":"AssetInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"4577:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AssetInfo_$2252_storage_ptr_$","typeString":"type(struct BaluniV1Pool.AssetInfo storage pointer)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4588:5:15","4607:6:15"],"names":["asset","weight"],"nodeType":"FunctionCall","src":"4577:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2252_memory_ptr","typeString":"struct BaluniV1Pool.AssetInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AssetInfo_$2252_memory_ptr","typeString":"struct BaluniV1Pool.AssetInfo memory"}],"expression":{"id":2438,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"4561:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4572:4:15","memberName":"push","nodeType":"MemberAccess","src":"4561:15:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage_ptr_$_t_struct$_AssetInfo_$2252_storage_$returns$__$attached_to$_t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage_ptr_$","typeString":"function (struct BaluniV1Pool.AssetInfo storage ref[] storage pointer,struct BaluniV1Pool.AssetInfo storage ref)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2450,"nodeType":"ExpressionStatement","src":"4561:68:15"},{"assignments":[2453],"declarations":[{"constant":false,"id":2453,"mutability":"mutable","name":"asset","nameLocation":"4653:5:15","nodeType":"VariableDeclaration","scope":2489,"src":"4646:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":2452,"nodeType":"UserDefinedTypeName","pathNode":{"id":2451,"name":"IERC20","nameLocations":["4646:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"4646:6:15"},"referencedDeclaration":1729,"src":"4646:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"}],"id":2459,"initialValue":{"arguments":[{"baseExpression":{"id":2455,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"4668:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2457,"indexExpression":{"id":2456,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"4676:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4668:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2454,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"4661:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"4646:33:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2464,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4722:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}],"id":2463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4714:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2462,"name":"address","nodeType":"ElementaryTypeName","src":"4714:7:15","typeDescriptions":{}}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4714:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2468,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"4737:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4729:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2466,"name":"address","nodeType":"ElementaryTypeName","src":"4729:7:15","typeDescriptions":{}}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4729:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2460,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"4698:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4704:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"4698:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4698:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4753:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4698:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2488,"nodeType":"IfStatement","src":"4694:150:15","trueBody":{"id":2487,"nodeType":"Block","src":"4756:88:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":2478,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"4797:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4789:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2476,"name":"address","nodeType":"ElementaryTypeName","src":"4789:7:15","typeDescriptions":{}}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4789:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":2482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4815:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"4815:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2480,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4810:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4824:3:15","memberName":"max","nodeType":"MemberAccess","src":"4810:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2473,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"4775:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4781:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"4775:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4775:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2486,"nodeType":"ExpressionStatement","src":"4775:53:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"4389:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2411,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"4393:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4401:6:15","memberName":"length","nodeType":"MemberAccess","src":"4393:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4389:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2490,"initializationExpression":{"assignments":[2407],"declarations":[{"constant":false,"id":2407,"mutability":"mutable","name":"i","nameLocation":"4382:1:15","nodeType":"VariableDeclaration","scope":2490,"src":"4374:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2409,"initialValue":{"hexValue":"30","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4386:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4374:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4409:3:15","subExpression":{"id":2414,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"4409:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2416,"nodeType":"ExpressionStatement","src":"4409:3:15"},"nodeType":"ForStatement","src":"4369:486:15"}]},"documentation":{"id":2388,"nodeType":"StructuredDocumentation","src":"3964:207:15","text":" @dev Initializes the assets and their weights for the pool.\n @param _assets The array of asset addresses.\n @param _weights The array of weights corresponding to each asset."},"id":2492,"implemented":true,"kind":"function","modifiers":[],"name":"initializeAssets","nameLocation":"4186:16:15","nodeType":"FunctionDefinition","parameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"_assets","nameLocation":"4220:7:15","nodeType":"VariableDeclaration","scope":2492,"src":"4203:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2389,"name":"address","nodeType":"ElementaryTypeName","src":"4203:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2390,"nodeType":"ArrayTypeName","src":"4203:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2394,"mutability":"mutable","name":"_weights","nameLocation":"4246:8:15","nodeType":"VariableDeclaration","scope":2492,"src":"4229:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"4229:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2393,"nodeType":"ArrayTypeName","src":"4229:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4202:53:15"},"returnParameters":{"id":2396,"nodeType":"ParameterList","parameters":[],"src":"4265:0:15"},"scope":3972,"src":"4177:685:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2605,"nodeType":"Block","src":"5355:937:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2504,"name":"isRebalanceNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"5374:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5374:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526562616c616e6365206e6f74206e6565646564","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5395:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""},"value":"Rebalance not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""}],"id":2503,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2508,"nodeType":"ExpressionStatement","src":"5366:52:15"},{"assignments":[2510,2513],"declarations":[{"constant":false,"id":2510,"mutability":"mutable","name":"totalValuation","nameLocation":"5438:14:15","nodeType":"VariableDeclaration","scope":2605,"src":"5430:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2513,"mutability":"mutable","name":"valuations","nameLocation":"5471:10:15","nodeType":"VariableDeclaration","scope":2605,"src":"5454:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2511,"name":"uint256","nodeType":"ElementaryTypeName","src":"5454:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2512,"nodeType":"ArrayTypeName","src":"5454:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2516,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2514,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"5485:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5485:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"5429:80:15"},{"assignments":[2521],"declarations":[{"constant":false,"id":2521,"mutability":"mutable","name":"amountsToAdd","nameLocation":"5539:12:15","nodeType":"VariableDeclaration","scope":2605,"src":"5522:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2519,"name":"uint256","nodeType":"ElementaryTypeName","src":"5522:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2520,"nodeType":"ArrayTypeName","src":"5522:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2526,"initialValue":{"arguments":[{"id":2523,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"5577:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2524,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"5593:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2522,"name":"_calculateAmountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"5554:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256[] memory) view returns (uint256[] memory)"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5554:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5522:82:15"},{"assignments":[2528],"declarations":[{"constant":false,"id":2528,"mutability":"mutable","name":"totalAddedLiquidity","nameLocation":"5684:19:15","nodeType":"VariableDeclaration","scope":2605,"src":"5676:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"5676:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2532,"initialValue":{"arguments":[{"id":2530,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"5736:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2529,"name":"_calculateTotalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"5706:29:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) view returns (uint256)"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5706:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5676:73:15"},{"assignments":[2534],"declarations":[{"constant":false,"id":2534,"mutability":"mutable","name":"baseDecimal","nameLocation":"5767:11:15","nodeType":"VariableDeclaration","scope":2605,"src":"5762:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2533,"name":"uint","nodeType":"ElementaryTypeName","src":"5762:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2540,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2536,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"5796:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2535,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"5781:14:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1755_$","typeString":"type(contract IERC20Metadata)"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5781:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1755","typeString":"contract IERC20Metadata"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5807:8:15","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1754,"src":"5781:34:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5781:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"5762:55:15"},{"expression":{"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2541,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"5830:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5853:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5859:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"5853:8:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2545,"name":"baseDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"5864:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5853:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5830:45:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2548,"nodeType":"ExpressionStatement","src":"5830:45:15"},{"assignments":[2553],"declarations":[{"constant":false,"id":2553,"mutability":"mutable","name":"amounts","nameLocation":"5905:7:15","nodeType":"VariableDeclaration","scope":2605,"src":"5888:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2551,"name":"uint256","nodeType":"ElementaryTypeName","src":"5888:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2552,"nodeType":"ArrayTypeName","src":"5888:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2560,"initialValue":{"arguments":[{"expression":{"id":2557,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"5929:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5940:6:15","memberName":"length","nodeType":"MemberAccess","src":"5929:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5915:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"5919:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2555,"nodeType":"ArrayTypeName","src":"5919:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5915:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5888:59:15"},{"body":{"id":2590,"nodeType":"Block","src":"6010:138:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2572,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"6029:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2574,"indexExpression":{"id":2573,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6042:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6029:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6047:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6029:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2589,"nodeType":"IfStatement","src":"6025:112:15","trueBody":{"id":2588,"nodeType":"Block","src":"6050:87:15","statements":[{"expression":{"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2577,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"6069:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2579,"indexExpression":{"id":2578,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6077:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6069:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2581,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6102:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2582,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"6105:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2584,"indexExpression":{"id":2583,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6118:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6105:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2580,"name":"_calculateLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"6082:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6082:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6069:52:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2587,"nodeType":"ExpressionStatement","src":"6069:52:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"5980:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2566,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"5984:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5997:6:15","memberName":"length","nodeType":"MemberAccess","src":"5984:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5980:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2591,"initializationExpression":{"assignments":[2562],"declarations":[{"constant":false,"id":2562,"mutability":"mutable","name":"i","nameLocation":"5973:1:15","nodeType":"VariableDeclaration","scope":2591,"src":"5965:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"5965:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2564,"initialValue":{"hexValue":"30","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5977:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5965:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6005:3:15","subExpression":{"id":2569,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6005:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2571,"nodeType":"ExpressionStatement","src":"6005:3:15"},"nodeType":"ForStatement","src":"5960:188:15"},{"expression":{"arguments":[{"id":2593,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"6166:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2594,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"6176:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2592,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"6160:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6160:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2596,"nodeType":"ExpressionStatement","src":"6160:36:15"},{"eventCall":{"arguments":[{"expression":{"id":2598,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6232:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6236:6:15","memberName":"sender","nodeType":"MemberAccess","src":"6232:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2600,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"6244:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2597,"name":"WeightsRebalanced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"6214:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory)"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6214:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2602,"nodeType":"EmitStatement","src":"6209:48:15"},{"expression":{"id":2603,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"6277:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2502,"id":2604,"nodeType":"Return","src":"6270:14:15"}]},"documentation":{"id":2493,"nodeType":"StructuredDocumentation","src":"4870:385:15","text":" @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\n transferring the calculated amounts from the user to the pool, minting the total added liquidity,\n updating the reserves, and emitting an event to indicate the rebalancing of weights.\n @param receiver The address to receive the minted liquidity tokens."},"functionSelector":"0723c999","id":2606,"implemented":true,"kind":"function","modifiers":[{"id":2498,"kind":"modifierInvocation","modifierName":{"id":2497,"name":"onlyPeriphery","nameLocations":["5314:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2387,"src":"5314:13:15"},"nodeType":"ModifierInvocation","src":"5314:13:15"}],"name":"rebalanceWeights","nameLocation":"5270:16:15","nodeType":"FunctionDefinition","parameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2495,"mutability":"mutable","name":"receiver","nameLocation":"5295:8:15","nodeType":"VariableDeclaration","scope":2606,"src":"5287:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2494,"name":"address","nodeType":"ElementaryTypeName","src":"5287:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5286:18:15"},"returnParameters":{"id":2502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2606,"src":"5337:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"5337:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2500,"nodeType":"ArrayTypeName","src":"5337:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5336:18:15"},"scope":3972,"src":"5261:1031:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2685,"nodeType":"Block","src":"7262:583:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2623,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"7281:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2624,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"7294:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7281:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742073776170207468652073616d6520746f6b656e","id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7303:28:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23","typeString":"literal_string \"Cannot swap the same token\""},"value":"Cannot swap the same token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23","typeString":"literal_string \"Cannot swap the same token\""}],"id":2622,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7273:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7273:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2628,"nodeType":"ExpressionStatement","src":"7273:59:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2630,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7351:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7360:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7351:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7363:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":2629,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7343:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7343:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2635,"nodeType":"ExpressionStatement","src":"7343:55:15"},{"assignments":[2637],"declarations":[{"constant":false,"id":2637,"mutability":"mutable","name":"receivedAmount","nameLocation":"7419:14:15","nodeType":"VariableDeclaration","scope":2685,"src":"7411:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"7411:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2643,"initialValue":{"arguments":[{"id":2639,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"7449:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2640,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"7460:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2641,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7469:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2638,"name":"getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"7436:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7436:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7411:65:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2646,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"7511:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2645,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"7495:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7495:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2648,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"7523:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7495:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204c6971756964697479","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7539:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""},"value":"Insufficient Liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""}],"id":2644,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7487:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7487:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2652,"nodeType":"ExpressionStatement","src":"7487:77:15"},{"assignments":[2654],"declarations":[{"constant":false,"id":2654,"mutability":"mutable","name":"fee","nameLocation":"7585:3:15","nodeType":"VariableDeclaration","scope":2685,"src":"7577:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"7577:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2661,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2655,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"7592:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2656,"name":"SWAP_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"7609:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7592:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7591:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7625:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7591:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7577:53:15"},{"expression":{"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2662,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"7641:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2663,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"7650:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2664,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"7667:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7650:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7641:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2667,"nodeType":"ExpressionStatement","src":"7641:29:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2669,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"7691:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7700:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7691:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7420746f2073656e64206d7573742062652067726561746572207468616e2030","id":2672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7703:39:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec","typeString":"literal_string \"Amount to send must be greater than 0\""},"value":"Amount to send must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec","typeString":"literal_string \"Amount to send must be greater than 0\""}],"id":2668,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7683:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2674,"nodeType":"ExpressionStatement","src":"7683:60:15"},{"eventCall":{"arguments":[{"id":2676,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"7766:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2677,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"7776:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2678,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"7787:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2679,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7796:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2680,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"7804:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2675,"name":"Swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"7761:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7761:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2682,"nodeType":"EmitStatement","src":"7756:55:15"},{"expression":{"id":2683,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"7831:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2621,"id":2684,"nodeType":"Return","src":"7824:13:15"}]},"documentation":{"id":2607,"nodeType":"StructuredDocumentation","src":"6300:782:15","text":" @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\n Requirements:\n - `fromToken` and `toToken` must be different tokens.\n - `amount` must be greater than zero.\n - Sufficient liquidity of `toToken` must be available in the contract.\n Emits a `Swap` event with the details of the swap.\n Updates the reserves after the swap.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of `fromToken` to swap.\n @param receiver The address to receive the swapped tokens.\n @return toSend The amount of `toToken` received after the swap."},"functionSelector":"6e81221c","id":2686,"implemented":true,"kind":"function","modifiers":[{"id":2618,"kind":"modifierInvocation","modifierName":{"id":2617,"name":"nonReentrant","nameLocations":["7224:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2071,"src":"7224:12:15"},"nodeType":"ModifierInvocation","src":"7224:12:15"}],"name":"swap","nameLocation":"7097:4:15","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2609,"mutability":"mutable","name":"fromToken","nameLocation":"7120:9:15","nodeType":"VariableDeclaration","scope":2686,"src":"7112:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2608,"name":"address","nodeType":"ElementaryTypeName","src":"7112:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2611,"mutability":"mutable","name":"toToken","nameLocation":"7148:7:15","nodeType":"VariableDeclaration","scope":2686,"src":"7140:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2610,"name":"address","nodeType":"ElementaryTypeName","src":"7140:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2613,"mutability":"mutable","name":"amount","nameLocation":"7174:6:15","nodeType":"VariableDeclaration","scope":2686,"src":"7166:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2612,"name":"uint256","nodeType":"ElementaryTypeName","src":"7166:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"receiver","nameLocation":"7199:8:15","nodeType":"VariableDeclaration","scope":2686,"src":"7191:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2614,"name":"address","nodeType":"ElementaryTypeName","src":"7191:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7101:113:15"},"returnParameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"toSend","nameLocation":"7254:6:15","nodeType":"VariableDeclaration","scope":2686,"src":"7246:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"7246:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7245:16:15"},"scope":3972,"src":"7088:757:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2828,"nodeType":"Block","src":"8149:1071:15","statements":[{"assignments":[2700],"declarations":[{"constant":false,"id":2700,"mutability":"mutable","name":"totalSupply","nameLocation":"8168:11:15","nodeType":"VariableDeclaration","scope":2828,"src":"8160:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"8160:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2703,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2701,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8182:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8182:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8160:35:15"},{"assignments":[2705],"declarations":[{"constant":false,"id":2705,"mutability":"mutable","name":"totalValue","nameLocation":"8214:10:15","nodeType":"VariableDeclaration","scope":2828,"src":"8206:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"8206:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2707,"initialValue":{"hexValue":"30","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8206:22:15"},{"assignments":[2712],"declarations":[{"constant":false,"id":2712,"mutability":"mutable","name":"_reserves","nameLocation":"8256:9:15","nodeType":"VariableDeclaration","scope":2828,"src":"8239:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"8239:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2711,"nodeType":"ArrayTypeName","src":"8239:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2715,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2713,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"8268:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8268:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8239:42:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2717,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"8300:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8311:6:15","memberName":"length","nodeType":"MemberAccess","src":"8300:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2719,"name":"_reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"8321:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8331:6:15","memberName":"length","nodeType":"MemberAccess","src":"8321:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8300:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207265736572766573206c656e677468","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8339:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d","typeString":"literal_string \"Invalid reserves length\""},"value":"Invalid reserves length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d","typeString":"literal_string \"Invalid reserves length\""}],"id":2716,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8292:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8292:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2724,"nodeType":"ExpressionStatement","src":"8292:73:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2726,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"8384:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8395:6:15","memberName":"length","nodeType":"MemberAccess","src":"8384:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8404:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8384:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20617373657473","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8407:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0","typeString":"literal_string \"No assets\""},"value":"No assets"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0","typeString":"literal_string \"No assets\""}],"id":2725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8376:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8376:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2732,"nodeType":"ExpressionStatement","src":"8376:43:15"},{"body":{"id":2764,"nodeType":"Block","src":"8480:175:15","statements":[{"assignments":[2745],"declarations":[{"constant":false,"id":2745,"mutability":"mutable","name":"asset","nameLocation":"8503:5:15","nodeType":"VariableDeclaration","scope":2764,"src":"8495:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2744,"name":"address","nodeType":"ElementaryTypeName","src":"8495:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2750,"initialValue":{"expression":{"baseExpression":{"id":2746,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"8511:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2748,"indexExpression":{"id":2747,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"8522:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8511:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2252_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":2749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8525:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2249,"src":"8511:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8495:35:15"},{"assignments":[2752],"declarations":[{"constant":false,"id":2752,"mutability":"mutable","name":"valuation","nameLocation":"8555:9:15","nodeType":"VariableDeclaration","scope":2764,"src":"8547:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"8547:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2759,"initialValue":{"arguments":[{"id":2754,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"8587:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2755,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"8594:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2757,"indexExpression":{"id":2756,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"8602:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8594:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2753,"name":"_convertTokenToBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"8567:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8567:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8547:58:15"},{"expression":{"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2760,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"8620:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2761,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"8634:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8620:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2763,"nodeType":"ExpressionStatement","src":"8620:23:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2737,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"8452:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2738,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"8456:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8467:6:15","memberName":"length","nodeType":"MemberAccess","src":"8456:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8452:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2765,"initializationExpression":{"assignments":[2734],"declarations":[{"constant":false,"id":2734,"mutability":"mutable","name":"i","nameLocation":"8445:1:15","nodeType":"VariableDeclaration","scope":2765,"src":"8437:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"8437:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2736,"initialValue":{"hexValue":"30","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8449:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8437:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8475:3:15","subExpression":{"id":2741,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"8475:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2743,"nodeType":"ExpressionStatement","src":"8475:3:15"},"nodeType":"ForStatement","src":"8432:223:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2767,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"8675:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8688:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8675:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c2076616c7565206d7573742062652067726561746572207468616e2030","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8691:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f","typeString":"literal_string \"Total value must be greater than 0\""},"value":"Total value must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f","typeString":"literal_string \"Total value must be greater than 0\""}],"id":2766,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8667:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8667:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2772,"nodeType":"ExpressionStatement","src":"8667:61:15"},{"assignments":[2774],"declarations":[{"constant":false,"id":2774,"mutability":"mutable","name":"toMint","nameLocation":"8749:6:15","nodeType":"VariableDeclaration","scope":2828,"src":"8741:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2773,"name":"uint256","nodeType":"ElementaryTypeName","src":"8741:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2775,"nodeType":"VariableDeclarationStatement","src":"8741:14:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2776,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"8772:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8787:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8772:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2807,"nodeType":"Block","src":"8842:235:15","statements":[{"assignments":[2785,null],"declarations":[{"constant":false,"id":2785,"mutability":"mutable","name":"totalLiquidity","nameLocation":"8866:14:15","nodeType":"VariableDeclaration","scope":2807,"src":"8858:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"8858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":2788,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2786,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"8886:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8886:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8857:53:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2790,"name":"totalLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"8933:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8950:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8933:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c206c6971756964697479206d7573742062652067726561746572207468616e2030","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8953:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c","typeString":"literal_string \"Total liquidity must be greater than 0\""},"value":"Total liquidity must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c","typeString":"literal_string \"Total liquidity must be greater than 0\""}],"id":2789,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8925:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8925:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2795,"nodeType":"ExpressionStatement","src":"8925:69:15"},{"expression":{"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2796,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"9009:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":2797,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"9021:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9020:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2799,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"9035:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9020:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9019:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2802,"name":"totalLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"9050:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9019:45:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9018:47:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9009:56:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2806,"nodeType":"ExpressionStatement","src":"9009:56:15"}]},"id":2808,"nodeType":"IfStatement","src":"8768:309:15","trueBody":{"id":2783,"nodeType":"Block","src":"8790:46:15","statements":[{"expression":{"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2779,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"8805:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2780,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"8814:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8805:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2782,"nodeType":"ExpressionStatement","src":"8805:19:15"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2810,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"9095:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9105:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9095:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e74207174792069732030","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9108:15:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb","typeString":"literal_string \"Mint qty is 0\""},"value":"Mint qty is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb","typeString":"literal_string \"Mint qty is 0\""}],"id":2809,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9087:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9087:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2815,"nodeType":"ExpressionStatement","src":"9087:37:15"},{"expression":{"arguments":[{"id":2817,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"9143:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2818,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"9147:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2816,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"9137:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9137:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2820,"nodeType":"ExpressionStatement","src":"9137:17:15"},{"eventCall":{"arguments":[{"id":2822,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"9175:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2823,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"9179:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2821,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"9170:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9170:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2825,"nodeType":"EmitStatement","src":"9165:21:15"},{"expression":{"id":2826,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"9206:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2698,"id":2827,"nodeType":"Return","src":"9199:13:15"}]},"documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"7853:197:15","text":" @dev Mints new tokens and adds them to the specified address.\n @param to The address to which the new tokens will be minted.\n @return The amount of tokens minted."},"functionSelector":"de836ebd","id":2829,"implemented":true,"kind":"function","modifiers":[{"id":2695,"kind":"modifierInvocation","modifierName":{"id":2694,"name":"onlyPeriphery","nameLocations":["8117:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2387,"src":"8117:13:15"},"nodeType":"ModifierInvocation","src":"8117:13:15"}],"name":"mint","nameLocation":"8065:4:15","nodeType":"FunctionDefinition","parameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"to","nameLocation":"8078:2:15","nodeType":"VariableDeclaration","scope":2829,"src":"8070:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2688,"name":"address","nodeType":"ElementaryTypeName","src":"8070:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2692,"mutability":"mutable","name":"amounts","nameLocation":"8099:7:15","nodeType":"VariableDeclaration","scope":2829,"src":"8082:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2690,"name":"uint256","nodeType":"ElementaryTypeName","src":"8082:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2691,"nodeType":"ArrayTypeName","src":"8082:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8069:38:15"},"returnParameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2829,"src":"8140:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2696,"name":"uint256","nodeType":"ElementaryTypeName","src":"8140:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8139:9:15"},"scope":3972,"src":"8056:1164:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2984,"nodeType":"Block","src":"10317:1099:15","statements":[{"assignments":[2841],"declarations":[{"constant":false,"id":2841,"mutability":"mutable","name":"share","nameLocation":"10336:5:15","nodeType":"VariableDeclaration","scope":2984,"src":"10328:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2840,"name":"uint256","nodeType":"ElementaryTypeName","src":"10328:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2848,"initialValue":{"arguments":[{"arguments":[{"id":2845,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10362:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}],"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10354:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2843,"name":"address","nodeType":"ElementaryTypeName","src":"10354:7:15","typeDescriptions":{}}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10354:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2842,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"10344:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10344:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10328:40:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2850,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"10387:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10395:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10387:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5368617265206d7573742062652067726561746572207468616e2030","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10398:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b","typeString":"literal_string \"Share must be greater than 0\""},"value":"Share must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b","typeString":"literal_string \"Share must be greater than 0\""}],"id":2849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10379:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10379:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2855,"nodeType":"ExpressionStatement","src":"10379:50:15"},{"assignments":[2857],"declarations":[{"constant":false,"id":2857,"mutability":"mutable","name":"totalSupply","nameLocation":"10450:11:15","nodeType":"VariableDeclaration","scope":2984,"src":"10442:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2856,"name":"uint256","nodeType":"ElementaryTypeName","src":"10442:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2860,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2858,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"10464:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10464:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10442:35:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2862,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"10496:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10510:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10496:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206c6971756964697479","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10513:14:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31","typeString":"literal_string \"No liquidity\""},"value":"No liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31","typeString":"literal_string \"No liquidity\""}],"id":2861,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10488:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10488:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2867,"nodeType":"ExpressionStatement","src":"10488:40:15"},{"assignments":[2872],"declarations":[{"constant":false,"id":2872,"mutability":"mutable","name":"amounts","nameLocation":"10558:7:15","nodeType":"VariableDeclaration","scope":2984,"src":"10541:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"10541:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2871,"nodeType":"ArrayTypeName","src":"10541:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2879,"initialValue":{"arguments":[{"expression":{"id":2876,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"10582:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10593:6:15","memberName":"length","nodeType":"MemberAccess","src":"10582:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10568:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"10572:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2874,"nodeType":"ArrayTypeName","src":"10572:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10568:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10541:59:15"},{"assignments":[2881],"declarations":[{"constant":false,"id":2881,"mutability":"mutable","name":"fee","nameLocation":"10619:3:15","nodeType":"VariableDeclaration","scope":2984,"src":"10611:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2880,"name":"uint256","nodeType":"ElementaryTypeName","src":"10611:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2888,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2882,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"10626:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2883,"name":"SWAP_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"10634:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10626:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10625:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10650:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"10625:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10611:44:15"},{"assignments":[2890],"declarations":[{"constant":false,"id":2890,"mutability":"mutable","name":"shareAfterFee","nameLocation":"10674:13:15","nodeType":"VariableDeclaration","scope":2984,"src":"10666:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"10666:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2894,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2891,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"10690:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2892,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10698:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10690:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10666:35:15"},{"body":{"id":2933,"nodeType":"Block","src":"10762:256:15","statements":[{"assignments":[2907],"declarations":[{"constant":false,"id":2907,"mutability":"mutable","name":"assetBalance","nameLocation":"10785:12:15","nodeType":"VariableDeclaration","scope":2933,"src":"10777:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"10777:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2921,"initialValue":{"arguments":[{"arguments":[{"id":2914,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10876:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}],"id":2913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10868:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2912,"name":"address","nodeType":"ElementaryTypeName","src":"10868:7:15","typeDescriptions":{}}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10868:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":2916,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"10900:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2918,"indexExpression":{"id":2917,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"10911:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10900:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2252_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":2919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10914:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2249,"src":"10900:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2909,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"10823:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2908,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"10800:22:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$4649_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10800:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$4649","typeString":"contract IBaluniV1PoolPeriphery"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10834:15:15","memberName":"getAssetReserve","nodeType":"MemberAccess","referencedDeclaration":4648,"src":"10800:49:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10800:134:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10777:157:15"},{"expression":{"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2922,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"10949:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2924,"indexExpression":{"id":2923,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"10957:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10949:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"assetBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"10963:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2926,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"10978:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10963:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10962:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2929,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"10995:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10962:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10949:57:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2932,"nodeType":"ExpressionStatement","src":"10949:57:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2899,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"10734:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2900,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"10738:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10749:6:15","memberName":"length","nodeType":"MemberAccess","src":"10738:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10734:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2934,"initializationExpression":{"assignments":[2896],"declarations":[{"constant":false,"id":2896,"mutability":"mutable","name":"i","nameLocation":"10727:1:15","nodeType":"VariableDeclaration","scope":2934,"src":"10719:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"10719:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2898,"initialValue":{"hexValue":"30","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10731:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10719:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10757:3:15","subExpression":{"id":2903,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"10757:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2905,"nodeType":"ExpressionStatement","src":"10757:3:15"},"nodeType":"ForStatement","src":"10714:304:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2939,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11056:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}],"id":2938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11048:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2937,"name":"address","nodeType":"ElementaryTypeName","src":"11048:7:15","typeDescriptions":{}}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11048:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2936,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"11038:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11038:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2942,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"11066:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11038:41:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742042414c554e49206c6971756964697479","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11081:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e","typeString":"literal_string \"Insufficient BALUNI liquidity\""},"value":"Insufficient BALUNI liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e","typeString":"literal_string \"Insufficient BALUNI liquidity\""}],"id":2935,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11030:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11030:83:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2946,"nodeType":"ExpressionStatement","src":"11030:83:15"},{"assignments":[2948],"declarations":[{"constant":false,"id":2948,"mutability":"mutable","name":"feeTransferSuccess","nameLocation":"11131:18:15","nodeType":"VariableDeclaration","scope":2984,"src":"11126:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2947,"name":"bool","nodeType":"ElementaryTypeName","src":"11126:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2963,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2957,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"11203:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2956,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"11183:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$4759_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$4759","typeString":"contract IBaluniV1Rebalancer"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11215:8:15","memberName":"treasury","nodeType":"MemberAccess","referencedDeclaration":4706,"src":"11183:40:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2961,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"11227:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":2952,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11167:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}],"id":2951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11159:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2950,"name":"address","nodeType":"ElementaryTypeName","src":"11159:7:15","typeDescriptions":{}}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11159:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2949,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"11152:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11152:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11174:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"11152:30:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11152:79:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"11126:105:15"},{"expression":{"arguments":[{"id":2965,"name":"feeTransferSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"11250:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565207472616e73666572206661696c6564","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11270:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""},"value":"Fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""}],"id":2964,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11242:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2968,"nodeType":"ExpressionStatement","src":"11242:50:15"},{"expression":{"arguments":[{"arguments":[{"id":2972,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11319:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}],"id":2971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11311:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2970,"name":"address","nodeType":"ElementaryTypeName","src":"11311:7:15","typeDescriptions":{}}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11311:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2974,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"11326:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2969,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"11305:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11305:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2976,"nodeType":"ExpressionStatement","src":"11305:35:15"},{"eventCall":{"arguments":[{"id":2978,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"11363:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2979,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"11367:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2977,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"11358:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11358:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2981,"nodeType":"EmitStatement","src":"11353:28:15"},{"expression":{"id":2982,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"11401:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2839,"id":2983,"nodeType":"Return","src":"11394:14:15"}]},"documentation":{"id":2830,"nodeType":"StructuredDocumentation","src":"9228:1007:15","text":" @dev Burns the pool tokens and transfers the underlying assets to the specified address.\n @param to The address to transfer the underlying assets to.\n @notice This function can only be called by the periphery contract.\n @notice The pool tokens must have a balance greater than 0.\n @notice The total supply of pool tokens must be greater than 0.\n @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\n @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\n @notice The function checks if the pool has sufficient liquidity before performing any transfers.\n @notice If any transfer fails, the function reverts the entire operation.\n @notice After the transfers, the function updates the reserves of the pool.\n @notice Emits a `Burn` event with the address and share of pool tokens burned."},"functionSelector":"89afcb44","id":2985,"implemented":true,"kind":"function","modifiers":[{"id":2835,"kind":"modifierInvocation","modifierName":{"id":2834,"name":"onlyPeriphery","nameLocations":["10276:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2387,"src":"10276:13:15"},"nodeType":"ModifierInvocation","src":"10276:13:15"}],"name":"burn","nameLocation":"10250:4:15","nodeType":"FunctionDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2832,"mutability":"mutable","name":"to","nameLocation":"10263:2:15","nodeType":"VariableDeclaration","scope":2985,"src":"10255:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2831,"name":"address","nodeType":"ElementaryTypeName","src":"10255:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10254:12:15"},"returnParameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2985,"src":"10299:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"10299:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2837,"nodeType":"ArrayTypeName","src":"10299:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10298:18:15"},"scope":3972,"src":"10241:1175:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3006,"nodeType":"Block","src":"11919:93:15","statements":[{"expression":{"arguments":[{"id":3001,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"11977:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3002,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"11988:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3003,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"11997:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2998,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"11957:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2997,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"11937:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$4759_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11937:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$4759","typeString":"contract IBaluniV1Rebalancer"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11969:7:15","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":4758,"src":"11937:39:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11937:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2996,"id":3005,"nodeType":"Return","src":"11930:74:15"}]},"documentation":{"id":2986,"nodeType":"StructuredDocumentation","src":"11424:385:15","text":" @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\n @param fromToken The address of the token being swapped from.\n @param toToken The address of the token being swapped to.\n @param amount The amount of `fromToken` being swapped.\n @return The amount of `toToken` that will be received."},"functionSelector":"4aa06652","id":3007,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"11824:12:15","nodeType":"FunctionDefinition","parameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"fromToken","nameLocation":"11845:9:15","nodeType":"VariableDeclaration","scope":3007,"src":"11837:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2987,"name":"address","nodeType":"ElementaryTypeName","src":"11837:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2990,"mutability":"mutable","name":"toToken","nameLocation":"11864:7:15","nodeType":"VariableDeclaration","scope":3007,"src":"11856:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2989,"name":"address","nodeType":"ElementaryTypeName","src":"11856:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2992,"mutability":"mutable","name":"amount","nameLocation":"11881:6:15","nodeType":"VariableDeclaration","scope":3007,"src":"11873:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2991,"name":"uint256","nodeType":"ElementaryTypeName","src":"11873:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11836:52:15"},"returnParameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3007,"src":"11910:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"11910:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11909:9:15"},"scope":3972,"src":"11815:197:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3028,"nodeType":"Block","src":"12235:116:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3020,"name":"isRebalanceNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"12254:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12254:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526562616c616e6365206e6f74206e6565646564","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12275:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""},"value":"Rebalance not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""}],"id":3019,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12246:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12246:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3024,"nodeType":"ExpressionStatement","src":"12246:52:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3025,"name":"_performRebalanceIfNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"12316:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () returns (uint256[] memory,uint256[] memory)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12316:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"functionReturnParameters":3018,"id":3027,"nodeType":"Return","src":"12309:34:15"}]},"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"12020:44:15","text":" @dev Performs rebalance"},"functionSelector":"f47b45e8","id":3029,"implemented":true,"kind":"function","modifiers":[{"id":3011,"kind":"modifierInvocation","modifierName":{"id":3010,"name":"onlyPeriphery","nameLocations":["12133:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2387,"src":"12133:13:15"},"nodeType":"ModifierInvocation","src":"12133:13:15"}],"name":"performRebalanceIfNeeded","nameLocation":"12079:24:15","nodeType":"FunctionDefinition","parameters":{"id":3009,"nodeType":"ParameterList","parameters":[],"src":"12103:2:15"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"amountsToAdd","nameLocation":"12182:12:15","nodeType":"VariableDeclaration","scope":3029,"src":"12165:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"12165:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3013,"nodeType":"ArrayTypeName","src":"12165:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3017,"mutability":"mutable","name":"amountsToRemove","nameLocation":"12213:15:15","nodeType":"VariableDeclaration","scope":3029,"src":"12196:32:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3015,"name":"uint256","nodeType":"ElementaryTypeName","src":"12196:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3016,"nodeType":"ArrayTypeName","src":"12196:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12164:65:15"},"scope":3972,"src":"12070:281:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3136,"nodeType":"Block","src":"12736:764:15","statements":[{"assignments":[3040,3043],"declarations":[{"constant":false,"id":3040,"mutability":"mutable","name":"totVal","nameLocation":"12756:6:15","nodeType":"VariableDeclaration","scope":3136,"src":"12748:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"12748:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3043,"mutability":"mutable","name":"valuations","nameLocation":"12781:10:15","nodeType":"VariableDeclaration","scope":3136,"src":"12764:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"12764:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3042,"nodeType":"ArrayTypeName","src":"12764:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3046,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3044,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"12795:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12795:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12747:72:15"},{"assignments":[3048],"declarations":[{"constant":false,"id":3048,"mutability":"mutable","name":"numAssets","nameLocation":"12838:9:15","nodeType":"VariableDeclaration","scope":3136,"src":"12830:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3047,"name":"uint256","nodeType":"ElementaryTypeName","src":"12830:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3051,"initialValue":{"expression":{"id":3049,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"12850:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12861:6:15","memberName":"length","nodeType":"MemberAccess","src":"12850:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12830:37:15"},{"expression":{"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3052,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"12880:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3056,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"12904:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12893:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":3053,"name":"bool","nodeType":"ElementaryTypeName","src":"12897:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3054,"nodeType":"ArrayTypeName","src":"12897:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12893:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"src":"12880:34:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3059,"nodeType":"ExpressionStatement","src":"12880:34:15"},{"expression":{"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3060,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"12925:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3064,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"12952:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12938:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3061,"name":"uint256","nodeType":"ElementaryTypeName","src":"12942:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3062,"nodeType":"ArrayTypeName","src":"12942:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12938:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"12925:37:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3067,"nodeType":"ExpressionStatement","src":"12925:37:15"},{"body":{"id":3130,"nodeType":"Block","src":"13015:434:15","statements":[{"assignments":[3079],"declarations":[{"constant":false,"id":3079,"mutability":"mutable","name":"currentWeight","nameLocation":"13038:13:15","nodeType":"VariableDeclaration","scope":3130,"src":"13030:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3078,"name":"uint256","nodeType":"ElementaryTypeName","src":"13030:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3088,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3080,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"13055:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3082,"indexExpression":{"id":3081,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"13066:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13055:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13071:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"13055:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13054:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3086,"name":"totVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"13080:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13054:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13030:56:15"},{"assignments":[3090],"declarations":[{"constant":false,"id":3090,"mutability":"mutable","name":"targetWeight","nameLocation":"13109:12:15","nodeType":"VariableDeclaration","scope":3130,"src":"13101:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3089,"name":"uint256","nodeType":"ElementaryTypeName","src":"13101:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3095,"initialValue":{"expression":{"baseExpression":{"id":3091,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"13124:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3093,"indexExpression":{"id":3092,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"13135:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13124:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2252_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13138:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2251,"src":"13124:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13101:43:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3096,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"13165:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3097,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"13181:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13165:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3128,"nodeType":"Block","src":"13319:119:15","statements":[{"expression":{"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3114,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"13338:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3116,"indexExpression":{"id":3115,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"13349:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13338:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3117,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"13354:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3118,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"13369:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13354:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13338:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3121,"nodeType":"ExpressionStatement","src":"13338:44:15"},{"expression":{"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3122,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"13401:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3124,"indexExpression":{"id":3123,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"13412:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13401:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13417:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13401:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3127,"nodeType":"ExpressionStatement","src":"13401:21:15"}]},"id":3129,"nodeType":"IfStatement","src":"13161:277:15","trueBody":{"id":3113,"nodeType":"Block","src":"13195:118:15","statements":[{"expression":{"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3099,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"13214:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3101,"indexExpression":{"id":3100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"13225:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13214:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3102,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"13230:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3103,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"13246:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13230:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13214:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3106,"nodeType":"ExpressionStatement","src":"13214:44:15"},{"expression":{"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3107,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"13277:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3109,"indexExpression":{"id":3108,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"13288:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13277:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13293:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13277:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3112,"nodeType":"ExpressionStatement","src":"13277:20:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3072,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"12995:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3073,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"12999:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12995:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3131,"initializationExpression":{"assignments":[3069],"declarations":[{"constant":false,"id":3069,"mutability":"mutable","name":"i","nameLocation":"12988:1:15","nodeType":"VariableDeclaration","scope":3131,"src":"12980:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3068,"name":"uint256","nodeType":"ElementaryTypeName","src":"12980:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3071,"initialValue":{"hexValue":"30","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12992:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12980:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13010:3:15","subExpression":{"id":3075,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"13010:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3077,"nodeType":"ExpressionStatement","src":"13010:3:15"},"nodeType":"ForStatement","src":"12975:474:15"},{"expression":{"components":[{"id":3132,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"13469:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":3133,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"13481:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13468:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"functionReturnParameters":3038,"id":3135,"nodeType":"Return","src":"13461:31:15"}]},"documentation":{"id":3030,"nodeType":"StructuredDocumentation","src":"12359:271:15","text":" @dev Returns the deviation between the current weights and target weights of the assets in the pool.\n @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight."},"functionSelector":"89ab3532","id":3137,"implemented":true,"kind":"function","modifiers":[],"name":"getDeviation","nameLocation":"12645:12:15","nodeType":"FunctionDefinition","parameters":{"id":3031,"nodeType":"ParameterList","parameters":[],"src":"12657:2:15"},"returnParameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"directions","nameLocation":"12695:10:15","nodeType":"VariableDeclaration","scope":3137,"src":"12681:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3032,"name":"bool","nodeType":"ElementaryTypeName","src":"12681:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3033,"nodeType":"ArrayTypeName","src":"12681:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3037,"mutability":"mutable","name":"deviations","nameLocation":"12724:10:15","nodeType":"VariableDeclaration","scope":3137,"src":"12707:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3035,"name":"uint256","nodeType":"ElementaryTypeName","src":"12707:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3036,"nodeType":"ArrayTypeName","src":"12707:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12680:55:15"},"scope":3972,"src":"12636:864:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3165,"nodeType":"Block","src":"13764:199:15","statements":[{"assignments":[null,3149],"declarations":[null,{"constant":false,"id":3149,"mutability":"mutable","name":"usdValuations","nameLocation":"13795:13:15","nodeType":"VariableDeclaration","scope":3165,"src":"13778:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3148,"nodeType":"ArrayTypeName","src":"13778:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3152,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3150,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"13812:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13812:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"13775:61:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3154,"name":"assetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"13855:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3155,"name":"usdValuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"13868:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13882:6:15","memberName":"length","nodeType":"MemberAccess","src":"13868:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13855:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420617373657420696e646578","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13890:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918","typeString":"literal_string \"Invalid asset index\""},"value":"Invalid asset index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918","typeString":"literal_string \"Invalid asset index\""}],"id":3153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13847:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13847:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3160,"nodeType":"ExpressionStatement","src":"13847:65:15"},{"expression":{"baseExpression":{"id":3161,"name":"usdValuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"13930:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3163,"indexExpression":{"id":3162,"name":"assetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"13944:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13930:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3144,"id":3164,"nodeType":"Return","src":"13923:32:15"}]},"documentation":{"id":3138,"nodeType":"StructuredDocumentation","src":"13508:174:15","text":" @dev Returns the liquidity of a specific asset in the pool.\n @param assetIndex The index of the asset.\n @return The liquidity of the asset."},"functionSelector":"cf8fa764","id":3166,"implemented":true,"kind":"function","modifiers":[],"name":"assetLiquidity","nameLocation":"13697:14:15","nodeType":"FunctionDefinition","parameters":{"id":3141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3140,"mutability":"mutable","name":"assetIndex","nameLocation":"13720:10:15","nodeType":"VariableDeclaration","scope":3166,"src":"13712:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3139,"name":"uint256","nodeType":"ElementaryTypeName","src":"13712:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13711:20:15"},"returnParameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3166,"src":"13755:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3142,"name":"uint256","nodeType":"ElementaryTypeName","src":"13755:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13754:9:15"},"scope":3972,"src":"13688:275:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3186,"nodeType":"Block","src":"14337:108:15","statements":[{"expression":{"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3175,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"14349:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3176,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"14359:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3177,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"14348:22:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3178,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"14373:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14373:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"src":"14348:49:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3181,"nodeType":"ExpressionStatement","src":"14348:49:15"},{"expression":{"components":[{"id":3182,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"14416:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3183,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"14426:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3184,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14415:22:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":3174,"id":3185,"nodeType":"Return","src":"14408:29:15"}]},"documentation":{"id":3167,"nodeType":"StructuredDocumentation","src":"13971:257:15","text":" @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\n @return totalVal The total valuation of the pool.\n @return valuations An array of individual valuations."},"functionSelector":"36bf6e39","id":3187,"implemented":true,"kind":"function","modifiers":[],"name":"computeTotalValuation","nameLocation":"14243:21:15","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[],"src":"14264:2:15"},"returnParameters":{"id":3174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"totalVal","nameLocation":"14298:8:15","nodeType":"VariableDeclaration","scope":3187,"src":"14290:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3169,"name":"uint256","nodeType":"ElementaryTypeName","src":"14290:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3173,"mutability":"mutable","name":"valuations","nameLocation":"14325:10:15","nodeType":"VariableDeclaration","scope":3187,"src":"14308:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"14308:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3172,"nodeType":"ArrayTypeName","src":"14308:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14289:47:15"},"scope":3972,"src":"14234:211:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3200,"nodeType":"Block","src":"14627:92:15","statements":[{"assignments":[3194,null],"declarations":[{"constant":false,"id":3194,"mutability":"mutable","name":"totalVal","nameLocation":"14647:8:15","nodeType":"VariableDeclaration","scope":3200,"src":"14639:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"14639:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3197,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3195,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"14661:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14661:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"14638:47:15"},{"expression":{"id":3198,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"14703:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3192,"id":3199,"nodeType":"Return","src":"14696:15:15"}]},"documentation":{"id":3188,"nodeType":"StructuredDocumentation","src":"14453:115:15","text":" @dev Returns the total liquidity of the pool.\n @return The total liquidity of the pool."},"functionSelector":"1a686502","id":3201,"implemented":true,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"14583:9:15","nodeType":"FunctionDefinition","parameters":{"id":3189,"nodeType":"ParameterList","parameters":[],"src":"14592:2:15"},"returnParameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3201,"src":"14618:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"14618:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14617:9:15"},"scope":3972,"src":"14574:145:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3231,"nodeType":"Block","src":"14891:227:15","statements":[{"assignments":[3208,null],"declarations":[{"constant":false,"id":3208,"mutability":"mutable","name":"totalVal","nameLocation":"14911:8:15","nodeType":"VariableDeclaration","scope":3231,"src":"14903:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3207,"name":"uint256","nodeType":"ElementaryTypeName","src":"14903:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3211,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3209,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"14925:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14925:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"14902:47:15"},{"assignments":[3213],"declarations":[{"constant":false,"id":3213,"mutability":"mutable","name":"totalSupply","nameLocation":"14968:11:15","nodeType":"VariableDeclaration","scope":3231,"src":"14960:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3212,"name":"uint256","nodeType":"ElementaryTypeName","src":"14960:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3216,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3214,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"14982:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14982:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14960:35:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3217,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"15010:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15025:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15010:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3223,"nodeType":"IfStatement","src":"15006:57:15","trueBody":{"id":3222,"nodeType":"Block","src":"15028:35:15","statements":[{"expression":{"hexValue":"30","id":3220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15050:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3206,"id":3221,"nodeType":"Return","src":"15043:8:15"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3224,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"15081:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3225,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"15092:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15081:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15080:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3228,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"15099:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15080:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3206,"id":3230,"nodeType":"Return","src":"15073:37:15"}]},"documentation":{"id":3202,"nodeType":"StructuredDocumentation","src":"14727:105:15","text":" @dev Returns the unit price of the pool.\n @return The unit price of the pool."},"functionSelector":"e73faa2d","id":3232,"implemented":true,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"14847:9:15","nodeType":"FunctionDefinition","parameters":{"id":3203,"nodeType":"ParameterList","parameters":[],"src":"14856:2:15"},"returnParameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3232,"src":"14882:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3204,"name":"uint256","nodeType":"ElementaryTypeName","src":"14882:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14881:9:15"},"scope":3972,"src":"14838:280:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3249,"nodeType":"Block","src":"15314:86:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3245,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15386:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}],"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15378:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3243,"name":"address","nodeType":"ElementaryTypeName","src":"15378:7:15","typeDescriptions":{}}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15378:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3240,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"15355:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3239,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"15332:22:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$4649_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15332:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$4649","typeString":"contract IBaluniV1PoolPeriphery"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15366:11:15","memberName":"getReserves","nodeType":"MemberAccess","referencedDeclaration":4638,"src":"15332:45:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) view external returns (uint256[] memory)"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15332:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3238,"id":3248,"nodeType":"Return","src":"15325:67:15"}]},"documentation":{"id":3233,"nodeType":"StructuredDocumentation","src":"15126:120:15","text":" @dev Returns an array of reserves for each asset in the pool.\n @return An array of reserves."},"functionSelector":"0902f1ac","id":3250,"implemented":true,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"15261:11:15","nodeType":"FunctionDefinition","parameters":{"id":3234,"nodeType":"ParameterList","parameters":[],"src":"15272:2:15"},"returnParameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3250,"src":"15296:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3235,"name":"uint256","nodeType":"ElementaryTypeName","src":"15296:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3236,"nodeType":"ArrayTypeName","src":"15296:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15295:18:15"},"scope":3972,"src":"15252:148:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3269,"nodeType":"Block","src":"15656:97:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3264,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15732:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}],"id":3263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15724:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3262,"name":"address","nodeType":"ElementaryTypeName","src":"15724:7:15","typeDescriptions":{}}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15724:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3266,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"15739:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3259,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"15697:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3258,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"15674:22:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$4649_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15674:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$4649","typeString":"contract IBaluniV1PoolPeriphery"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15708:15:15","memberName":"getAssetReserve","nodeType":"MemberAccess","referencedDeclaration":4648,"src":"15674:49:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15674:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3257,"id":3268,"nodeType":"Return","src":"15667:78:15"}]},"documentation":{"id":3251,"nodeType":"StructuredDocumentation","src":"15408:172:15","text":" @dev Returns the reserve amount of the specified asset.\n @param asset The address of the asset.\n @return The reserve amount of the asset."},"functionSelector":"b2b55d70","id":3270,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"15595:15:15","nodeType":"FunctionDefinition","parameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"asset","nameLocation":"15619:5:15","nodeType":"VariableDeclaration","scope":3270,"src":"15611:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3252,"name":"address","nodeType":"ElementaryTypeName","src":"15611:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15610:15:15"},"returnParameters":{"id":3257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3270,"src":"15647:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3255,"name":"uint256","nodeType":"ElementaryTypeName","src":"15647:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15646:9:15"},"scope":3972,"src":"15586:167:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3313,"nodeType":"Block","src":"15959:217:15","statements":[{"assignments":[3281],"declarations":[{"constant":false,"id":3281,"mutability":"mutable","name":"assets","nameLocation":"15987:6:15","nodeType":"VariableDeclaration","scope":3313,"src":"15970:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3279,"name":"address","nodeType":"ElementaryTypeName","src":"15970:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3280,"nodeType":"ArrayTypeName","src":"15970:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3288,"initialValue":{"arguments":[{"expression":{"id":3285,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"16010:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16021:6:15","memberName":"length","nodeType":"MemberAccess","src":"16010:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"15996:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3282,"name":"address","nodeType":"ElementaryTypeName","src":"16000:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3283,"nodeType":"ArrayTypeName","src":"16000:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"15970:58:15"},{"body":{"id":3309,"nodeType":"Block","src":"16087:58:15","statements":[{"expression":{"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3300,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"16102:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3302,"indexExpression":{"id":3301,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"16109:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16102:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3303,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"16114:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3305,"indexExpression":{"id":3304,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"16125:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16114:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2252_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16128:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2249,"src":"16114:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16102:31:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3308,"nodeType":"ExpressionStatement","src":"16102:31:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3293,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"16059:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3294,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"16063:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16074:6:15","memberName":"length","nodeType":"MemberAccess","src":"16063:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16059:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3310,"initializationExpression":{"assignments":[3290],"declarations":[{"constant":false,"id":3290,"mutability":"mutable","name":"i","nameLocation":"16052:1:15","nodeType":"VariableDeclaration","scope":3310,"src":"16044:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"16044:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3292,"initialValue":{"hexValue":"30","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16056:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16044:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16082:3:15","subExpression":{"id":3297,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"16082:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3299,"nodeType":"ExpressionStatement","src":"16082:3:15"},"nodeType":"ForStatement","src":"16039:106:15"},{"expression":{"id":3311,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"16162:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3276,"id":3312,"nodeType":"Return","src":"16155:13:15"}]},"documentation":{"id":3271,"nodeType":"StructuredDocumentation","src":"15761:130:15","text":" @dev Retrieves the list of assets in the pool.\n @return An array of addresses representing the assets."},"functionSelector":"67e4ac2c","id":3314,"implemented":true,"kind":"function","modifiers":[],"name":"getAssets","nameLocation":"15906:9:15","nodeType":"FunctionDefinition","parameters":{"id":3272,"nodeType":"ParameterList","parameters":[],"src":"15915:2:15"},"returnParameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3314,"src":"15941:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3273,"name":"address","nodeType":"ElementaryTypeName","src":"15941:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3274,"nodeType":"ArrayTypeName","src":"15941:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15940:18:15"},"scope":3972,"src":"15897:279:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3357,"nodeType":"Block","src":"16417:221:15","statements":[{"assignments":[3325],"declarations":[{"constant":false,"id":3325,"mutability":"mutable","name":"weights","nameLocation":"16445:7:15","nodeType":"VariableDeclaration","scope":3357,"src":"16428:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"16428:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3324,"nodeType":"ArrayTypeName","src":"16428:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3332,"initialValue":{"arguments":[{"expression":{"id":3329,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"16469:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16480:6:15","memberName":"length","nodeType":"MemberAccess","src":"16469:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16455:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"16459:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3327,"nodeType":"ArrayTypeName","src":"16459:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16455:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16428:59:15"},{"body":{"id":3353,"nodeType":"Block","src":"16546:60:15","statements":[{"expression":{"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3344,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"16561:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3346,"indexExpression":{"id":3345,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"16569:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16561:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3347,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"16574:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3349,"indexExpression":{"id":3348,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"16585:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16574:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2252_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16588:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2251,"src":"16574:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16561:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3352,"nodeType":"ExpressionStatement","src":"16561:33:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3337,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"16518:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3338,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"16522:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16533:6:15","memberName":"length","nodeType":"MemberAccess","src":"16522:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16518:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3354,"initializationExpression":{"assignments":[3334],"declarations":[{"constant":false,"id":3334,"mutability":"mutable","name":"i","nameLocation":"16511:1:15","nodeType":"VariableDeclaration","scope":3354,"src":"16503:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"16503:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3336,"initialValue":{"hexValue":"30","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16515:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16503:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16541:3:15","subExpression":{"id":3341,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"16541:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3343,"nodeType":"ExpressionStatement","src":"16541:3:15"},"nodeType":"ForStatement","src":"16498:108:15"},{"expression":{"id":3355,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"16623:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3320,"id":3356,"nodeType":"Return","src":"16616:14:15"}]},"documentation":{"id":3315,"nodeType":"StructuredDocumentation","src":"16184:164:15","text":" @dev Retrieves the list of weights associated with the assets in the pool.\n @return An array of uint256 values representing the weights."},"functionSelector":"22acb867","id":3358,"implemented":true,"kind":"function","modifiers":[],"name":"getWeights","nameLocation":"16363:10:15","nodeType":"FunctionDefinition","parameters":{"id":3316,"nodeType":"ParameterList","parameters":[],"src":"16373:2:15"},"returnParameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3358,"src":"16399:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"16399:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3318,"nodeType":"ArrayTypeName","src":"16399:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16398:18:15"},"scope":3972,"src":"16354:284:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3450,"nodeType":"Block","src":"16987:645:15","statements":[{"assignments":[3368],"declarations":[{"constant":false,"id":3368,"mutability":"mutable","name":"numAssets","nameLocation":"17006:9:15","nodeType":"VariableDeclaration","scope":3450,"src":"16998:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"16998:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3371,"initialValue":{"expression":{"id":3369,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"17018:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17029:6:15","memberName":"length","nodeType":"MemberAccess","src":"17018:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16998:37:15"},{"expression":{"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3372,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"17046:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3376,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"17073:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17059:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"17063:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3374,"nodeType":"ArrayTypeName","src":"17063:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17059:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"17046:37:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3379,"nodeType":"ExpressionStatement","src":"17046:37:15"},{"body":{"id":3444,"nodeType":"Block","src":"17134:445:15","statements":[{"assignments":[3391],"declarations":[{"constant":false,"id":3391,"mutability":"mutable","name":"asset","nameLocation":"17157:5:15","nodeType":"VariableDeclaration","scope":3444,"src":"17149:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3390,"name":"address","nodeType":"ElementaryTypeName","src":"17149:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3396,"initialValue":{"expression":{"baseExpression":{"id":3392,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"17165:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3394,"indexExpression":{"id":3393,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"17176:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17165:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2252_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17179:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2249,"src":"17165:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17149:35:15"},{"assignments":[3398],"declarations":[{"constant":false,"id":3398,"mutability":"mutable","name":"assetReserve","nameLocation":"17207:12:15","nodeType":"VariableDeclaration","scope":3444,"src":"17199:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3397,"name":"uint256","nodeType":"ElementaryTypeName","src":"17199:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3405,"initialValue":{"arguments":[{"arguments":[{"id":3402,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"17246:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17238:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3400,"name":"address","nodeType":"ElementaryTypeName","src":"17238:7:15","typeDescriptions":{}}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17238:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3399,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"17222:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17222:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17199:54:15"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3408,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"17283:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17275:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3406,"name":"address","nodeType":"ElementaryTypeName","src":"17275:7:15","typeDescriptions":{}}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17275:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3410,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"17293:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17275:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3412,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17274:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3436,"nodeType":"Block","src":"17374:148:15","statements":[{"assignments":[3421],"declarations":[{"constant":false,"id":3421,"mutability":"mutable","name":"valuation","nameLocation":"17401:9:15","nodeType":"VariableDeclaration","scope":3436,"src":"17393:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"17393:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3429,"initialValue":{"arguments":[{"arguments":[{"id":3425,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"17441:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17433:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3423,"name":"address","nodeType":"ElementaryTypeName","src":"17433:7:15","typeDescriptions":{}}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17433:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3427,"name":"assetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"17449:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3422,"name":"_convertTokenToBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"17413:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17413:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17393:69:15"},{"expression":{"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3430,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"17481:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3432,"indexExpression":{"id":3431,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"17492:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17481:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3433,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"17497:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17481:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3435,"nodeType":"ExpressionStatement","src":"17481:25:15"}]},"id":3437,"nodeType":"IfStatement","src":"17270:252:15","trueBody":{"id":3419,"nodeType":"Block","src":"17305:63:15","statements":[{"expression":{"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3413,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"17324:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3415,"indexExpression":{"id":3414,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"17335:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17324:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3416,"name":"assetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"17340:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17324:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3418,"nodeType":"ExpressionStatement","src":"17324:28:15"}]}},{"expression":{"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3438,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"17536:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3439,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"17554:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3441,"indexExpression":{"id":3440,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"17565:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17554:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17536:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3443,"nodeType":"ExpressionStatement","src":"17536:31:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3384,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"17114:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3385,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"17118:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17114:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3445,"initializationExpression":{"assignments":[3381],"declarations":[{"constant":false,"id":3381,"mutability":"mutable","name":"i","nameLocation":"17107:1:15","nodeType":"VariableDeclaration","scope":3445,"src":"17099:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3380,"name":"uint256","nodeType":"ElementaryTypeName","src":"17099:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3383,"initialValue":{"hexValue":"30","id":3382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17111:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17099:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17129:3:15","subExpression":{"id":3387,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"17129:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3389,"nodeType":"ExpressionStatement","src":"17129:3:15"},"nodeType":"ForStatement","src":"17094:485:15"},{"expression":{"components":[{"id":3446,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"17597:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3447,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"17613:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17596:28:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":3366,"id":3449,"nodeType":"Return","src":"17589:35:15"}]},"documentation":{"id":3359,"nodeType":"StructuredDocumentation","src":"16646:225:15","text":" @dev Computes the total valuation of the assets in the pool.\n @return totalValuation The total valuation of the assets.\n @return valuations An array of valuations for each asset in the pool."},"id":3451,"implemented":true,"kind":"function","modifiers":[],"name":"_computeTotalValuation","nameLocation":"16886:22:15","nodeType":"FunctionDefinition","parameters":{"id":3360,"nodeType":"ParameterList","parameters":[],"src":"16908:2:15"},"returnParameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"totalValuation","nameLocation":"16942:14:15","nodeType":"VariableDeclaration","scope":3451,"src":"16934:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3361,"name":"uint256","nodeType":"ElementaryTypeName","src":"16934:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3365,"mutability":"mutable","name":"valuations","nameLocation":"16975:10:15","nodeType":"VariableDeclaration","scope":3451,"src":"16958:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"16958:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3364,"nodeType":"ArrayTypeName","src":"16958:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16933:53:15"},"scope":3972,"src":"16877:755:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3668,"nodeType":"Block","src":"18119:1435:15","statements":[{"assignments":[3465],"declarations":[{"constant":false,"id":3465,"mutability":"mutable","name":"assets","nameLocation":"18147:6:15","nodeType":"VariableDeclaration","scope":3668,"src":"18130:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3463,"name":"address","nodeType":"ElementaryTypeName","src":"18130:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3464,"nodeType":"ArrayTypeName","src":"18130:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3472,"initialValue":{"arguments":[{"expression":{"id":3469,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18170:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18181:6:15","memberName":"length","nodeType":"MemberAccess","src":"18170:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18156:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3466,"name":"address","nodeType":"ElementaryTypeName","src":"18160:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3467,"nodeType":"ArrayTypeName","src":"18160:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18156:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18130:58:15"},{"assignments":[3477],"declarations":[{"constant":false,"id":3477,"mutability":"mutable","name":"weights","nameLocation":"18216:7:15","nodeType":"VariableDeclaration","scope":3668,"src":"18199:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"18199:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3476,"nodeType":"ArrayTypeName","src":"18199:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3484,"initialValue":{"arguments":[{"expression":{"id":3481,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18240:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18251:6:15","memberName":"length","nodeType":"MemberAccess","src":"18240:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18226:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3478,"name":"uint256","nodeType":"ElementaryTypeName","src":"18230:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3479,"nodeType":"ArrayTypeName","src":"18230:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18226:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18199:59:15"},{"assignments":[3489],"declarations":[{"constant":false,"id":3489,"mutability":"mutable","name":"peripheryBalancesB4","nameLocation":"18286:19:15","nodeType":"VariableDeclaration","scope":3668,"src":"18269:36:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"18269:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3488,"nodeType":"ArrayTypeName","src":"18269:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3496,"initialValue":{"arguments":[{"expression":{"id":3493,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18322:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18333:6:15","memberName":"length","nodeType":"MemberAccess","src":"18322:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18308:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"18312:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3491,"nodeType":"ArrayTypeName","src":"18312:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18308:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18269:71:15"},{"assignments":[3501],"declarations":[{"constant":false,"id":3501,"mutability":"mutable","name":"peripheryBalancesAfter","nameLocation":"18368:22:15","nodeType":"VariableDeclaration","scope":3668,"src":"18351:39:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"18351:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3500,"nodeType":"ArrayTypeName","src":"18351:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3508,"initialValue":{"arguments":[{"expression":{"id":3505,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18407:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18418:6:15","memberName":"length","nodeType":"MemberAccess","src":"18407:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18393:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3502,"name":"uint256","nodeType":"ElementaryTypeName","src":"18397:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3503,"nodeType":"ArrayTypeName","src":"18397:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18393:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18351:74:15"},{"assignments":[3513],"declarations":[{"constant":false,"id":3513,"mutability":"mutable","name":"amountsToAdd","nameLocation":"18453:12:15","nodeType":"VariableDeclaration","scope":3668,"src":"18436:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"18436:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3512,"nodeType":"ArrayTypeName","src":"18436:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3520,"initialValue":{"arguments":[{"expression":{"id":3517,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18482:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18493:6:15","memberName":"length","nodeType":"MemberAccess","src":"18482:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18468:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3514,"name":"uint256","nodeType":"ElementaryTypeName","src":"18472:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3515,"nodeType":"ArrayTypeName","src":"18472:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18468:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18436:64:15"},{"assignments":[3525],"declarations":[{"constant":false,"id":3525,"mutability":"mutable","name":"amountsToRemove","nameLocation":"18528:15:15","nodeType":"VariableDeclaration","scope":3668,"src":"18511:32:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3523,"name":"uint256","nodeType":"ElementaryTypeName","src":"18511:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3524,"nodeType":"ArrayTypeName","src":"18511:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3532,"initialValue":{"arguments":[{"expression":{"id":3529,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18560:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18571:6:15","memberName":"length","nodeType":"MemberAccess","src":"18560:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18546:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"18550:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3527,"nodeType":"ArrayTypeName","src":"18550:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18546:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18511:67:15"},{"body":{"id":3575,"nodeType":"Block","src":"18639:184:15","statements":[{"expression":{"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3544,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"18654:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3546,"indexExpression":{"id":3545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"18661:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18654:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3547,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18666:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3549,"indexExpression":{"id":3548,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"18677:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18666:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2252_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3550,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18680:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2249,"src":"18666:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18654:31:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3552,"nodeType":"ExpressionStatement","src":"18654:31:15"},{"expression":{"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3553,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"18700:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3555,"indexExpression":{"id":3554,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"18708:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18700:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3556,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18713:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3558,"indexExpression":{"id":3557,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"18724:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18713:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2252_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18727:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2251,"src":"18713:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18700:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3561,"nodeType":"ExpressionStatement","src":"18700:33:15"},{"expression":{"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3562,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"18748:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3564,"indexExpression":{"id":3563,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"18768:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18748:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3571,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"18801:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":3566,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"18780:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3568,"indexExpression":{"id":3567,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"18787:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18780:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3565,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"18773:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18773:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18791:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"18773:27:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18773:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18748:63:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3574,"nodeType":"ExpressionStatement","src":"18748:63:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3537,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"18611:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3538,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18615:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18626:6:15","memberName":"length","nodeType":"MemberAccess","src":"18615:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18611:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3576,"initializationExpression":{"assignments":[3534],"declarations":[{"constant":false,"id":3534,"mutability":"mutable","name":"i","nameLocation":"18604:1:15","nodeType":"VariableDeclaration","scope":3576,"src":"18596:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3533,"name":"uint256","nodeType":"ElementaryTypeName","src":"18596:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3536,"initialValue":{"hexValue":"30","id":3535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18608:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18596:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18634:3:15","subExpression":{"id":3541,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"18634:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3543,"nodeType":"ExpressionStatement","src":"18634:3:15"},"nodeType":"ForStatement","src":"18591:232:15"},{"assignments":[3581],"declarations":[{"constant":false,"id":3581,"mutability":"mutable","name":"balances","nameLocation":"18852:8:15","nodeType":"VariableDeclaration","scope":3668,"src":"18835:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"18835:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3580,"nodeType":"ArrayTypeName","src":"18835:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3584,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3582,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"18863:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18863:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18835:41:15"},{"expression":{"arguments":[{"id":3589,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"18931:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3590,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"18941:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":3591,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"18949:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3592,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"18958:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3593,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"18967:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3594,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"18978:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3595,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"18989:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3586,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"18909:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3585,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"18889:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$4759_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18889:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$4759","typeString":"contract IBaluniV1Rebalancer"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18921:9:15","memberName":"rebalance","nodeType":"MemberAccess","referencedDeclaration":4726,"src":"18889:41:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256[] memory,address[] memory,uint256[] memory,uint256,address,address,address) external"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18889:110:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3597,"nodeType":"ExpressionStatement","src":"18889:110:15"},{"body":{"id":3656,"nodeType":"Block","src":"19060:380:15","statements":[{"expression":{"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3609,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"19075:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3611,"indexExpression":{"id":3610,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"19098:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19075:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3618,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"19131:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":3613,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"19110:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3615,"indexExpression":{"id":3614,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"19117:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19110:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3612,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"19103:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19103:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19121:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"19103:27:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19103:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19075:66:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3621,"nodeType":"ExpressionStatement","src":"19075:66:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3622,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"19162:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3624,"indexExpression":{"id":3623,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"19185:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19162:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"id":3625,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"19190:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3627,"indexExpression":{"id":3626,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"19210:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19190:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19162:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3654,"nodeType":"Block","src":"19323:106:15","statements":[{"expression":{"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3642,"name":"amountsToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"19342:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3644,"indexExpression":{"id":3643,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"19358:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19342:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3645,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"19363:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3647,"indexExpression":{"id":3646,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"19383:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19363:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":3648,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"19388:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3650,"indexExpression":{"id":3649,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"19411:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19388:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19363:50:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19342:71:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3653,"nodeType":"ExpressionStatement","src":"19342:71:15"}]},"id":3655,"nodeType":"IfStatement","src":"19158:271:15","trueBody":{"id":3641,"nodeType":"Block","src":"19214:103:15","statements":[{"expression":{"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3629,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"19233:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3631,"indexExpression":{"id":3630,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"19246:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19233:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3632,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"19251:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3634,"indexExpression":{"id":3633,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"19274:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19251:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":3635,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"19279:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3637,"indexExpression":{"id":3636,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"19299:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19279:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19251:50:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19233:68:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3640,"nodeType":"ExpressionStatement","src":"19233:68:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3602,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"19032:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3603,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"19036:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19047:6:15","memberName":"length","nodeType":"MemberAccess","src":"19036:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19032:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3657,"initializationExpression":{"assignments":[3599],"declarations":[{"constant":false,"id":3599,"mutability":"mutable","name":"i","nameLocation":"19025:1:15","nodeType":"VariableDeclaration","scope":3657,"src":"19017:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"19017:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3601,"initialValue":{"hexValue":"30","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19029:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19017:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19055:3:15","subExpression":{"id":3606,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"19055:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3608,"nodeType":"ExpressionStatement","src":"19055:3:15"},"nodeType":"ForStatement","src":"19012:428:15"},{"eventCall":{"arguments":[{"expression":{"id":3659,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19476:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19480:6:15","memberName":"sender","nodeType":"MemberAccess","src":"19476:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3661,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"19488:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3658,"name":"RebalancePerformed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"19457:18:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address[] memory)"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19457:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3663,"nodeType":"EmitStatement","src":"19452:43:15"},{"expression":{"components":[{"id":3664,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"19516:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3665,"name":"amountsToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"19530:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19515:31:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"functionReturnParameters":3460,"id":3667,"nodeType":"Return","src":"19508:38:15"}]},"documentation":{"id":3452,"nodeType":"StructuredDocumentation","src":"17640:382:15","text":" @dev Performs rebalance if needed.\n This function retrieves the assets and weights from the `assetInfos` array,\n and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\n It emits a `RebalancePerformed` event after the rebalance is performed.\n @notice This function should only be called internally."},"id":3669,"implemented":true,"kind":"function","modifiers":[],"name":"_performRebalanceIfNeeded","nameLocation":"18037:25:15","nodeType":"FunctionDefinition","parameters":{"id":3453,"nodeType":"ParameterList","parameters":[],"src":"18062:2:15"},"returnParameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3669,"src":"18083:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"18083:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3455,"nodeType":"ArrayTypeName","src":"18083:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3669,"src":"18101:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3457,"name":"uint256","nodeType":"ElementaryTypeName","src":"18101:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3458,"nodeType":"ArrayTypeName","src":"18101:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"18082:36:15"},"scope":3972,"src":"18028:1526:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3699,"nodeType":"Block","src":"19931:168:15","statements":[{"body":{"id":3695,"nodeType":"Block","src":"19990:65:15","statements":[{"expression":{"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3689,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"20005:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3690,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"20028:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3692,"indexExpression":{"id":3691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"20041:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20028:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20005:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3694,"nodeType":"ExpressionStatement","src":"20005:38:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3682,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"19962:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3683,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"19966:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19977:6:15","memberName":"length","nodeType":"MemberAccess","src":"19966:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19962:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3696,"initializationExpression":{"assignments":[3679],"declarations":[{"constant":false,"id":3679,"mutability":"mutable","name":"i","nameLocation":"19955:1:15","nodeType":"VariableDeclaration","scope":3696,"src":"19947:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"19947:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3681,"initialValue":{"hexValue":"30","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19959:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19947:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19985:3:15","subExpression":{"id":3686,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"19985:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3688,"nodeType":"ExpressionStatement","src":"19985:3:15"},"nodeType":"ForStatement","src":"19942:113:15"},{"expression":{"id":3697,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"20072:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3677,"id":3698,"nodeType":"Return","src":"20065:26:15"}]},"documentation":{"id":3670,"nodeType":"StructuredDocumentation","src":"19562:225:15","text":" @dev Calculates the total added liquidity based on the amounts to add.\n @param amountsToAdd An array of amounts to add for each asset.\n @return totalAddedLiquidity The total added liquidity."},"id":3700,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateTotalAddedLiquidity","nameLocation":"19802:29:15","nodeType":"FunctionDefinition","parameters":{"id":3674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3673,"mutability":"mutable","name":"amountsToAdd","nameLocation":"19859:12:15","nodeType":"VariableDeclaration","scope":3700,"src":"19842:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"19842:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3672,"nodeType":"ArrayTypeName","src":"19842:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"19831:47:15"},"returnParameters":{"id":3677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3676,"mutability":"mutable","name":"totalAddedLiquidity","nameLocation":"19910:19:15","nodeType":"VariableDeclaration","scope":3700,"src":"19902:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"19902:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19901:29:15"},"scope":3972,"src":"19793:306:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3765,"nodeType":"Block","src":"20606:391:15","statements":[{"expression":{"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3712,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"20617:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3716,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"20646:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20657:6:15","memberName":"length","nodeType":"MemberAccess","src":"20646:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"20632:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"20636:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3714,"nodeType":"ArrayTypeName","src":"20636:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20632:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"20617:47:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3720,"nodeType":"ExpressionStatement","src":"20617:47:15"},{"body":{"id":3761,"nodeType":"Block","src":"20723:235:15","statements":[{"assignments":[3733],"declarations":[{"constant":false,"id":3733,"mutability":"mutable","name":"targetValuation","nameLocation":"20746:15:15","nodeType":"VariableDeclaration","scope":3761,"src":"20738:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"20738:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3743,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3734,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"20765:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"baseExpression":{"id":3735,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"20782:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3737,"indexExpression":{"id":3736,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"20793:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20782:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2252_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20796:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2251,"src":"20782:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20765:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3740,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20764:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20806:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"20764:47:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20738:73:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3744,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"20830:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3746,"indexExpression":{"id":3745,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"20841:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20830:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3747,"name":"targetValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"20846:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20830:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3760,"nodeType":"IfStatement","src":"20826:121:15","trueBody":{"id":3759,"nodeType":"Block","src":"20863:84:15","statements":[{"expression":{"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3749,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"20882:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3751,"indexExpression":{"id":3750,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"20895:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20882:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3752,"name":"targetValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"20900:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":3753,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"20918:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3755,"indexExpression":{"id":3754,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"20929:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20918:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20900:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20882:49:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3758,"nodeType":"ExpressionStatement","src":"20882:49:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3725,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"20695:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3726,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"20699:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20710:6:15","memberName":"length","nodeType":"MemberAccess","src":"20699:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20695:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3762,"initializationExpression":{"assignments":[3722],"declarations":[{"constant":false,"id":3722,"mutability":"mutable","name":"i","nameLocation":"20688:1:15","nodeType":"VariableDeclaration","scope":3762,"src":"20680:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3721,"name":"uint256","nodeType":"ElementaryTypeName","src":"20680:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3724,"initialValue":{"hexValue":"30","id":3723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20692:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20680:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20718:3:15","subExpression":{"id":3729,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"20718:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3731,"nodeType":"ExpressionStatement","src":"20718:3:15"},"nodeType":"ForStatement","src":"20675:283:15"},{"expression":{"id":3763,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"20977:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3711,"id":3764,"nodeType":"Return","src":"20970:19:15"}]},"documentation":{"id":3701,"nodeType":"StructuredDocumentation","src":"20107:329:15","text":" @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\n @param totalValuation The total valuation of the pool.\n @param valuations An array of current valuations for each asset.\n @return amountsToAdd An array of amounts to add to each asset."},"id":3766,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateAmountsToAdd","nameLocation":"20451:22:15","nodeType":"FunctionDefinition","parameters":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3703,"mutability":"mutable","name":"totalValuation","nameLocation":"20492:14:15","nodeType":"VariableDeclaration","scope":3766,"src":"20484:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3702,"name":"uint256","nodeType":"ElementaryTypeName","src":"20484:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"valuations","nameLocation":"20534:10:15","nodeType":"VariableDeclaration","scope":3766,"src":"20517:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3704,"name":"uint256","nodeType":"ElementaryTypeName","src":"20517:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3705,"nodeType":"ArrayTypeName","src":"20517:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"20473:78:15"},"returnParameters":{"id":3711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"amountsToAdd","nameLocation":"20592:12:15","nodeType":"VariableDeclaration","scope":3766,"src":"20575:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"20575:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3709,"nodeType":"ArrayTypeName","src":"20575:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"20574:31:15"},"scope":3972,"src":"20442:555:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3804,"nodeType":"Block","src":"21376:266:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3776,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"21391:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3778,"indexExpression":{"id":3777,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"21402:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21391:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2252_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21409:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2249,"src":"21391:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3780,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"21418:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21391:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3784,"nodeType":"IfStatement","src":"21387:60:15","trueBody":{"expression":{"id":3782,"name":"amountToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"21436:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3775,"id":3783,"nodeType":"Return","src":"21429:18:15"}},{"assignments":[3786],"declarations":[{"constant":false,"id":3786,"mutability":"mutable","name":"tokenAmount","nameLocation":"21468:11:15","nodeType":"VariableDeclaration","scope":3804,"src":"21460:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3785,"name":"uint256","nodeType":"ElementaryTypeName","src":"21460:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3794,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":3788,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"21502:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3790,"indexExpression":{"id":3789,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"21513:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21502:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2252_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21520:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2249,"src":"21502:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3792,"name":"amountToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"21527:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3787,"name":"_convertBaseToToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"21482:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21482:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21460:79:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3796,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"21558:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21572:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21558:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e20616d6f756e7420746f20616464","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21575:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d","typeString":"literal_string \"Invalid token amount to add\""},"value":"Invalid token amount to add"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d","typeString":"literal_string \"Invalid token amount to add\""}],"id":3795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21550:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21550:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3801,"nodeType":"ExpressionStatement","src":"21550:55:15"},{"expression":{"id":3802,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"21623:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3775,"id":3803,"nodeType":"Return","src":"21616:18:15"}]},"documentation":{"id":3767,"nodeType":"StructuredDocumentation","src":"21005:268:15","text":" @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\n @param index The index of the asset in the assetInfos array.\n @param amountToAdd The amount of native tokens to add as liquidity."},"id":3805,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateLiquidity","nameLocation":"21288:19:15","nodeType":"FunctionDefinition","parameters":{"id":3772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3769,"mutability":"mutable","name":"index","nameLocation":"21316:5:15","nodeType":"VariableDeclaration","scope":3805,"src":"21308:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint256","nodeType":"ElementaryTypeName","src":"21308:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3771,"mutability":"mutable","name":"amountToAdd","nameLocation":"21331:11:15","nodeType":"VariableDeclaration","scope":3805,"src":"21323:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3770,"name":"uint256","nodeType":"ElementaryTypeName","src":"21323:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21307:36:15"},"returnParameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3805,"src":"21367:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"21367:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21366:9:15"},"scope":3972,"src":"21279:363:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3828,"nodeType":"Block","src":"22037:137:15","statements":[{"assignments":[3816],"declarations":[{"constant":false,"id":3816,"mutability":"mutable","name":"tokenAmount","nameLocation":"22056:11:15","nodeType":"VariableDeclaration","scope":3828,"src":"22048:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"22048:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3825,"initialValue":{"arguments":[{"id":3821,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"22110:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3822,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"22121:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3823,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"22130:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3818,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"22090:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3817,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"22070:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$4759_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22070:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$4759","typeString":"contract IBaluniV1Rebalancer"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22102:7:15","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":4758,"src":"22070:39:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22070:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22048:89:15"},{"expression":{"id":3826,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"22155:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3814,"id":3827,"nodeType":"Return","src":"22148:18:15"}]},"documentation":{"id":3806,"nodeType":"StructuredDocumentation","src":"21650:287:15","text":" @dev Converts the specified amount of native token to the corresponding token amount.\n @param toToken The address of the native token to convert from.\n @param amount The amount of native token to convert.\n @return The corresponding token amount."},"id":3829,"implemented":true,"kind":"function","modifiers":[],"name":"_convertBaseToToken","nameLocation":"21952:19:15","nodeType":"FunctionDefinition","parameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3808,"mutability":"mutable","name":"toToken","nameLocation":"21980:7:15","nodeType":"VariableDeclaration","scope":3829,"src":"21972:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3807,"name":"address","nodeType":"ElementaryTypeName","src":"21972:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3810,"mutability":"mutable","name":"amount","nameLocation":"21997:6:15","nodeType":"VariableDeclaration","scope":3829,"src":"21989:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"21989:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21971:33:15"},"returnParameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3829,"src":"22028:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"22028:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22027:9:15"},"scope":3972,"src":"21943:231:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3846,"nodeType":"Block","src":"22446:40:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3839,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"22464:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3840,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"22469:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"22464:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3843,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"22477:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"22464:14:15","trueExpression":{"id":3842,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"22473:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3838,"id":3845,"nodeType":"Return","src":"22457:21:15"}]},"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"22182:198:15","text":" @dev Returns the maximum of two uint8 values.\n @param a The first uint8 value.\n @param b The second uint8 value.\n @return The maximum value between a and b."},"id":3847,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"22395:3:15","nodeType":"FunctionDefinition","parameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3832,"mutability":"mutable","name":"a","nameLocation":"22405:1:15","nodeType":"VariableDeclaration","scope":3847,"src":"22399:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3831,"name":"uint8","nodeType":"ElementaryTypeName","src":"22399:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3834,"mutability":"mutable","name":"b","nameLocation":"22414:1:15","nodeType":"VariableDeclaration","scope":3847,"src":"22408:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3833,"name":"uint8","nodeType":"ElementaryTypeName","src":"22408:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"22398:18:15"},"returnParameters":{"id":3838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3847,"src":"22439:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3836,"name":"uint8","nodeType":"ElementaryTypeName","src":"22439:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"22438:7:15"},"scope":3972,"src":"22386:100:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3864,"nodeType":"Block","src":"22758:40:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3857,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"22776:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3858,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"22781:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"22776:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3861,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"22789:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"22776:14:15","trueExpression":{"id":3860,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"22785:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3856,"id":3863,"nodeType":"Return","src":"22769:21:15"}]},"documentation":{"id":3848,"nodeType":"StructuredDocumentation","src":"22494:198:15","text":" @dev Returns the minimum of two uint8 values.\n @param a The first uint8 value.\n @param b The second uint8 value.\n @return The minimum value between a and b."},"id":3865,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"22707:3:15","nodeType":"FunctionDefinition","parameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"a","nameLocation":"22717:1:15","nodeType":"VariableDeclaration","scope":3865,"src":"22711:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3849,"name":"uint8","nodeType":"ElementaryTypeName","src":"22711:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3852,"mutability":"mutable","name":"b","nameLocation":"22726:1:15","nodeType":"VariableDeclaration","scope":3865,"src":"22720:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3851,"name":"uint8","nodeType":"ElementaryTypeName","src":"22720:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"22710:18:15"},"returnParameters":{"id":3856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3865,"src":"22751:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3854,"name":"uint8","nodeType":"ElementaryTypeName","src":"22751:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"22750:7:15"},"scope":3972,"src":"22698:100:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3888,"nodeType":"Block","src":"23209:139:15","statements":[{"assignments":[3876],"declarations":[{"constant":false,"id":3876,"mutability":"mutable","name":"tokenAmount","nameLocation":"23228:11:15","nodeType":"VariableDeclaration","scope":3888,"src":"23220:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"23220:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3885,"initialValue":{"arguments":[{"id":3881,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"23282:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3882,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"23293:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3883,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"23304:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3878,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"23262:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3877,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"23242:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$4759_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23242:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$4759","typeString":"contract IBaluniV1Rebalancer"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23274:7:15","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":4758,"src":"23242:39:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23242:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23220:91:15"},{"expression":{"id":3886,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"23329:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3874,"id":3887,"nodeType":"Return","src":"23322:18:15"}]},"documentation":{"id":3866,"nodeType":"StructuredDocumentation","src":"22806:288:15","text":" @dev Converts the specified token to the native token using the rebalancer contract.\n @param fromToken The address of the token to convert from.\n @param amount The amount of tokens to convert.\n @return scaledAmount The converted amount of tokens."},"id":3889,"implemented":true,"kind":"function","modifiers":[],"name":"_convertTokenToBase","nameLocation":"23109:19:15","nodeType":"FunctionDefinition","parameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3868,"mutability":"mutable","name":"fromToken","nameLocation":"23137:9:15","nodeType":"VariableDeclaration","scope":3889,"src":"23129:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3867,"name":"address","nodeType":"ElementaryTypeName","src":"23129:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3870,"mutability":"mutable","name":"amount","nameLocation":"23156:6:15","nodeType":"VariableDeclaration","scope":3889,"src":"23148:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3869,"name":"uint256","nodeType":"ElementaryTypeName","src":"23148:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23128:35:15"},"returnParameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"scaledAmount","nameLocation":"23195:12:15","nodeType":"VariableDeclaration","scope":3889,"src":"23187:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3872,"name":"uint256","nodeType":"ElementaryTypeName","src":"23187:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23186:22:15"},"scope":3972,"src":"23100:248:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3934,"nodeType":"Block","src":"23635:290:15","statements":[{"assignments":[3899,3902],"declarations":[{"constant":false,"id":3899,"mutability":"mutable","name":"directions","nameLocation":"23661:10:15","nodeType":"VariableDeclaration","scope":3934,"src":"23647:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3897,"name":"bool","nodeType":"ElementaryTypeName","src":"23647:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3898,"nodeType":"ArrayTypeName","src":"23647:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3902,"mutability":"mutable","name":"deviations","nameLocation":"23690:10:15","nodeType":"VariableDeclaration","scope":3934,"src":"23673:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"23673:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3901,"nodeType":"ArrayTypeName","src":"23673:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3905,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3903,"name":"getDeviation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"23704:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (bool[] memory,uint256[] memory)"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23704:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"23646:72:15"},{"body":{"id":3930,"nodeType":"Block","src":"23777:118:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3917,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"23796:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3919,"indexExpression":{"id":3918,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"23807:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23796:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3920,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"23813:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3922,"indexExpression":{"id":3921,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"23824:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23813:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3923,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"23829:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23813:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23796:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3929,"nodeType":"IfStatement","src":"23792:92:15","trueBody":{"id":3928,"nodeType":"Block","src":"23838:46:15","statements":[{"expression":{"hexValue":"74727565","id":3926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23864:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3894,"id":3927,"nodeType":"Return","src":"23857:11:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"23749:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3911,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"23753:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23764:6:15","memberName":"length","nodeType":"MemberAccess","src":"23753:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23749:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3931,"initializationExpression":{"assignments":[3907],"declarations":[{"constant":false,"id":3907,"mutability":"mutable","name":"i","nameLocation":"23742:1:15","nodeType":"VariableDeclaration","scope":3931,"src":"23734:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"23734:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3909,"initialValue":{"hexValue":"30","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23746:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23734:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23772:3:15","subExpression":{"id":3914,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"23772:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3916,"nodeType":"ExpressionStatement","src":"23772:3:15"},"nodeType":"ForStatement","src":"23729:166:15"},{"expression":{"hexValue":"66616c7365","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23912:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3894,"id":3933,"nodeType":"Return","src":"23905:12:15"}]},"documentation":{"id":3890,"nodeType":"StructuredDocumentation","src":"23421:152:15","text":" @dev Checks if rebalancing is needed for the pool.\n @return A boolean value indicating whether rebalancing is needed or not."},"functionSelector":"8a77c8dc","id":3935,"implemented":true,"kind":"function","modifiers":[],"name":"isRebalanceNeeded","nameLocation":"23588:17:15","nodeType":"FunctionDefinition","parameters":{"id":3891,"nodeType":"ParameterList","parameters":[],"src":"23605:2:15"},"returnParameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3935,"src":"23629:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3892,"name":"bool","nodeType":"ElementaryTypeName","src":"23629:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23628:6:15"},"scope":3972,"src":"23579:346:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3970,"nodeType":"Block","src":"24007:208:15","statements":[{"body":{"id":3966,"nodeType":"Block","src":"24066:123:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3953,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"24085:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3955,"indexExpression":{"id":3954,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"24096:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24085:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2252_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24099:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2249,"src":"24085:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3957,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"24108:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24085:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3965,"nodeType":"IfStatement","src":"24081:97:15","trueBody":{"id":3964,"nodeType":"Block","src":"24116:62:15","statements":[{"expression":{"expression":{"baseExpression":{"id":3959,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"24142:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3961,"indexExpression":{"id":3960,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"24153:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24142:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2252_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24156:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2251,"src":"24142:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3941,"id":3963,"nodeType":"Return","src":"24135:27:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"24038:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3947,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"24042:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2252_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24053:6:15","memberName":"length","nodeType":"MemberAccess","src":"24042:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24038:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3967,"initializationExpression":{"assignments":[3943],"declarations":[{"constant":false,"id":3943,"mutability":"mutable","name":"i","nameLocation":"24031:1:15","nodeType":"VariableDeclaration","scope":3967,"src":"24023:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3942,"name":"uint256","nodeType":"ElementaryTypeName","src":"24023:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3945,"initialValue":{"hexValue":"30","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"24023:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24061:3:15","subExpression":{"id":3950,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"24061:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3952,"nodeType":"ExpressionStatement","src":"24061:3:15"},"nodeType":"ForStatement","src":"24018:171:15"},{"expression":{"hexValue":"30","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24206:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3941,"id":3969,"nodeType":"Return","src":"24199:8:15"}]},"id":3971,"implemented":true,"kind":"function","modifiers":[],"name":"_getTargetWeight","nameLocation":"23942:16:15","nodeType":"FunctionDefinition","parameters":{"id":3938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3937,"mutability":"mutable","name":"_token","nameLocation":"23967:6:15","nodeType":"VariableDeclaration","scope":3971,"src":"23959:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3936,"name":"address","nodeType":"ElementaryTypeName","src":"23959:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23958:16:15"},"returnParameters":{"id":3941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3971,"src":"23998:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"23998:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23997:9:15"},"scope":3972,"src":"23933:282:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3973,"src":"1731:22487:15","usedErrors":[698,703,708,717,722,727,2052],"usedEvents":[1663,1672,2259,2266,2272,2278,2290]}],"src":"40:24180:15"},"id":15},"contracts/BaluniV1PoolFactory.sol":{"ast":{"absolutePath":"contracts/BaluniV1PoolFactory.sol","exportedSymbols":{"BaluniV1Pool":[3972],"BaluniV1PoolFactory":[4464],"Context":[2038],"ContextUpgradeable":[676],"ERC1967Utils":[1126],"ERC20":[1651],"I1inchSpotAgg":[4491],"IBaluniV1Agent":[4511],"IBaluniV1PoolPeriphery":[4649],"IBaluniV1Rebalancer":[4759],"IBaluniV1Router":[5027],"IERC1822Proxiable":[686],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755],"Initializable":[448],"OwnableUpgradeable":[194],"ReentrancyGuard":[2107],"UUPSUpgradeable":[630]},"id":4465,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":3974,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:16"},{"absolutePath":"contracts/BaluniV1Pool.sol","file":"./BaluniV1Pool.sol","id":3975,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4465,"sourceUnit":3973,"src":"1466:28:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":3976,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4465,"sourceUnit":195,"src":"1496:75:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":3977,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4465,"sourceUnit":449,"src":"1573:75:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":3978,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4465,"sourceUnit":631,"src":"1650:77:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3979,"name":"Initializable","nameLocations":["1763:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1763:13:16"},"id":3980,"nodeType":"InheritanceSpecifier","src":"1763:13:16"},{"baseName":{"id":3981,"name":"UUPSUpgradeable","nameLocations":["1778:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"1778:15:16"},"id":3982,"nodeType":"InheritanceSpecifier","src":"1778:15:16"},{"baseName":{"id":3983,"name":"OwnableUpgradeable","nameLocations":["1795:18:16"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"1795:18:16"},"id":3984,"nodeType":"InheritanceSpecifier","src":"1795:18:16"}],"canonicalName":"BaluniV1PoolFactory","contractDependencies":[3972],"contractKind":"contract","fullyImplemented":true,"id":4464,"linearizedBaseContracts":[4464,194,676,630,686,448],"name":"BaluniV1PoolFactory","nameLocation":"1740:19:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"41d1de97","id":3987,"mutability":"mutable","name":"allPools","nameLocation":"1836:8:16","nodeType":"VariableDeclaration","scope":4464,"src":"1819:25:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":3985,"name":"address","nodeType":"ElementaryTypeName","src":"1819:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3986,"nodeType":"ArrayTypeName","src":"1819:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"531aa03e","id":3993,"mutability":"mutable","name":"getPool","nameLocation":"1904:7:16","nodeType":"VariableDeclaration","scope":4464,"src":"1849:62:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"typeName":{"id":3992,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3988,"name":"address","nodeType":"ElementaryTypeName","src":"1857:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1849:47:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3991,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3989,"name":"address","nodeType":"ElementaryTypeName","src":"1876:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1868:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3990,"name":"address","nodeType":"ElementaryTypeName","src":"1887:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"public"},{"constant":false,"functionSelector":"01d22ccd","id":3995,"mutability":"mutable","name":"rebalancer","nameLocation":"1933:10:16","nodeType":"VariableDeclaration","scope":4464,"src":"1918:25:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3994,"name":"address","nodeType":"ElementaryTypeName","src":"1918:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"77aace1a","id":3997,"mutability":"mutable","name":"periphery","nameLocation":"1963:9:16","nodeType":"VariableDeclaration","scope":4464,"src":"1948:24:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3996,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"93de7d9de9f3e05ba87a0170fcbb71af623439caf5e5079587b9d38c5da9b0d1","id":4006,"name":"PoolCreated","nameLocation":"1985:11:16","nodeType":"EventDefinition","parameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3999,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"2013:4:16","nodeType":"VariableDeclaration","scope":4006,"src":"1997:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3998,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4002,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2029:6:16","nodeType":"VariableDeclaration","scope":4006,"src":"2019:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4000,"name":"address","nodeType":"ElementaryTypeName","src":"2019:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4001,"nodeType":"ArrayTypeName","src":"2019:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4004,"indexed":false,"mutability":"mutable","name":"rebalancer","nameLocation":"2045:10:16","nodeType":"VariableDeclaration","scope":4006,"src":"2037:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4003,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1996:60:16"},"src":"1979:78:16"},{"body":{"id":4025,"nodeType":"Block","src":"2123:101:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4013,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2130:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2130:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4015,"nodeType":"ExpressionStatement","src":"2130:24:16"},{"expression":{"arguments":[{"expression":{"id":4017,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2176:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2180:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2176:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4016,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2161:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4020,"nodeType":"ExpressionStatement","src":"2161:26:16"},{"expression":{"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4021,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"2194:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4022,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"2207:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2194:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4024,"nodeType":"ExpressionStatement","src":"2194:24:16"}]},"functionSelector":"c4d66de8","id":4026,"implemented":true,"kind":"function","modifiers":[{"id":4011,"kind":"modifierInvocation","modifierName":{"id":4010,"name":"initializer","nameLocations":["2111:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2111:11:16"},"nodeType":"ModifierInvocation","src":"2111:11:16"}],"name":"initialize","nameLocation":"2072:10:16","nodeType":"FunctionDefinition","parameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"_rebalancer","nameLocation":"2091:11:16","nodeType":"VariableDeclaration","scope":4026,"src":"2083:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4007,"name":"address","nodeType":"ElementaryTypeName","src":"2083:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2082:21:16"},"returnParameters":{"id":4012,"nodeType":"ParameterList","parameters":[],"src":"2123:0:16"},"scope":4464,"src":"2063:161:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4040,"nodeType":"Block","src":"2321:37:16","statements":[{"expression":{"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4036,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"2328:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4037,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"2341:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2328:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4039,"nodeType":"ExpressionStatement","src":"2328:24:16"}]},"functionSelector":"8f2248bc","id":4041,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4033,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"2311:8:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":4034,"kind":"modifierInvocation","modifierName":{"id":4032,"name":"reinitializer","nameLocations":["2297:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"2297:13:16"},"nodeType":"ModifierInvocation","src":"2297:23:16"}],"name":"reinitialize","nameLocation":"2239:12:16","nodeType":"FunctionDefinition","parameters":{"id":4031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4028,"mutability":"mutable","name":"_rebalancer","nameLocation":"2260:11:16","nodeType":"VariableDeclaration","scope":4041,"src":"2252:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4027,"name":"address","nodeType":"ElementaryTypeName","src":"2252:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4030,"mutability":"mutable","name":"_version","nameLocation":"2280:8:16","nodeType":"VariableDeclaration","scope":4041,"src":"2273:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4029,"name":"uint64","nodeType":"ElementaryTypeName","src":"2273:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2251:38:16"},"returnParameters":{"id":4035,"nodeType":"ParameterList","parameters":[],"src":"2321:0:16"},"scope":4464,"src":"2230:128:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[584],"body":{"id":4049,"nodeType":"Block","src":"2446:2:16","statements":[]},"id":4050,"implemented":true,"kind":"function","modifiers":[{"id":4047,"kind":"modifierInvocation","modifierName":{"id":4046,"name":"onlyOwner","nameLocations":["2436:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2436:9:16"},"nodeType":"ModifierInvocation","src":"2436:9:16"}],"name":"_authorizeUpgrade","nameLocation":"2373:17:16","nodeType":"FunctionDefinition","overrides":{"id":4045,"nodeType":"OverrideSpecifier","overrides":[],"src":"2427:8:16"},"parameters":{"id":4044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"mutability":"mutable","name":"newImplementation","nameLocation":"2399:17:16","nodeType":"VariableDeclaration","scope":4050,"src":"2391:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4042,"name":"address","nodeType":"ElementaryTypeName","src":"2391:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2390:27:16"},"returnParameters":{"id":4048,"nodeType":"ParameterList","parameters":[],"src":"2446:0:16"},"scope":4464,"src":"2364:84:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4226,"nodeType":"Block","src":"2941:951:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4065,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"2956:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2977:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2969:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4066,"name":"address","nodeType":"ElementaryTypeName","src":"2969:7:16","typeDescriptions":{}}},"id":4069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2969:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2956:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506572697068657279206e6f7420736574","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:19:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_65b375d97171da936ab457dc3ee73246dd9c78a6728e209f2b7bd00d6d44e84f","typeString":"literal_string \"Periphery not set\""},"value":"Periphery not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65b375d97171da936ab457dc3ee73246dd9c78a6728e209f2b7bd00d6d44e84f","typeString":"literal_string \"Periphery not set\""}],"id":4064,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2948:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2948:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4073,"nodeType":"ExpressionStatement","src":"2948:53:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4075,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3016:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:16","memberName":"length","nodeType":"MemberAccess","src":"3016:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3016:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4174206c656173742074776f2061737365747320617265207265717569726564","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3035:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d","typeString":"literal_string \"At least two assets are required\""},"value":"At least two assets are required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d","typeString":"literal_string \"At least two assets are required\""}],"id":4074,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3008:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3008:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4081,"nodeType":"ExpressionStatement","src":"3008:62:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4083,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3085:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3092:6:16","memberName":"length","nodeType":"MemberAccess","src":"3085:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4085,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"3102:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3110:6:16","memberName":"length","nodeType":"MemberAccess","src":"3102:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3085:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d61746368","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3118:36:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""},"value":"Assets and weights length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""}],"id":4082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3077:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3077:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4090,"nodeType":"ExpressionStatement","src":"3077:78:16"},{"body":{"id":4138,"nodeType":"Block","src":"3208:183:16","statements":[{"body":{"id":4136,"nodeType":"Block","src":"3265:119:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"baseExpression":{"id":4118,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"3292:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4122,"indexExpression":{"baseExpression":{"id":4119,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3300:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4121,"indexExpression":{"id":4120,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"3307:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3300:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3292:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4126,"indexExpression":{"baseExpression":{"id":4123,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3311:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4125,"indexExpression":{"id":4124,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"3318:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3311:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3292:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3284:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4116,"name":"address","nodeType":"ElementaryTypeName","src":"3284:7:16","typeDescriptions":{}}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3326:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4128,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:16","typeDescriptions":{}}},"id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3284:52:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20616c72656164792065786973747320666f7220746869732070616972","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3338:35:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e","typeString":"literal_string \"Pool already exists for this pair\""},"value":"Pool already exists for this pair"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e","typeString":"literal_string \"Pool already exists for this pair\""}],"id":4115,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3276:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3276:98:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4135,"nodeType":"ExpressionStatement","src":"3276:98:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4108,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"3241:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4109,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3245:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3252:6:16","memberName":"length","nodeType":"MemberAccess","src":"3245:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3241:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4137,"initializationExpression":{"assignments":[4103],"declarations":[{"constant":false,"id":4103,"mutability":"mutable","name":"j","nameLocation":"3230:1:16","nodeType":"VariableDeclaration","scope":4137,"src":"3222:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"3222:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4107,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4104,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"3234:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3234:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3222:17:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3260:3:16","subExpression":{"id":4112,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"3260:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4114,"nodeType":"ExpressionStatement","src":"3260:3:16"},"nodeType":"ForStatement","src":"3217:167:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4095,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"3184:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4096,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3188:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:6:16","memberName":"length","nodeType":"MemberAccess","src":"3188:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3184:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4139,"initializationExpression":{"assignments":[4092],"declarations":[{"constant":false,"id":4092,"mutability":"mutable","name":"i","nameLocation":"3177:1:16","nodeType":"VariableDeclaration","scope":4139,"src":"3169:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4091,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4094,"initialValue":{"hexValue":"30","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3181:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3169:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3203:3:16","subExpression":{"id":4099,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"3203:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4101,"nodeType":"ExpressionStatement","src":"3203:3:16"},"nodeType":"ForStatement","src":"3164:227:16"},{"assignments":[4142],"declarations":[{"constant":false,"id":4142,"mutability":"mutable","name":"newPool","nameLocation":"3412:7:16","nodeType":"VariableDeclaration","scope":4226,"src":"3399:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"},"typeName":{"id":4141,"nodeType":"UserDefinedTypeName","pathNode":{"id":4140,"name":"BaluniV1Pool","nameLocations":["3399:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3972,"src":"3399:12:16"},"referencedDeclaration":3972,"src":"3399:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4152,"initialValue":{"arguments":[{"id":4146,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"3439:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4147,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3451:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4148,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"3459:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4149,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"3468:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4150,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"3477:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"3422:16:16","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_BaluniV1Pool_$3972_$","typeString":"function (address,address[] memory,uint256[] memory,uint256,address) returns (contract BaluniV1Pool)"},"typeName":{"id":4144,"nodeType":"UserDefinedTypeName","pathNode":{"id":4143,"name":"BaluniV1Pool","nameLocations":["3426:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3972,"src":"3426:12:16"},"referencedDeclaration":3972,"src":"3426:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3422:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"3399:88:16"},{"assignments":[4154],"declarations":[{"constant":false,"id":4154,"mutability":"mutable","name":"poolAddress","nameLocation":"3504:11:16","nodeType":"VariableDeclaration","scope":4226,"src":"3496:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4153,"name":"address","nodeType":"ElementaryTypeName","src":"3496:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4159,"initialValue":{"arguments":[{"id":4157,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"3526:7:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}],"id":4156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3518:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4155,"name":"address","nodeType":"ElementaryTypeName","src":"3518:7:16","typeDescriptions":{}}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3518:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3496:38:16"},{"expression":{"arguments":[{"id":4163,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"3557:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4160,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"3543:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3552:4:16","memberName":"push","nodeType":"MemberAccess","src":"3543:13:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3543:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4165,"nodeType":"ExpressionStatement","src":"3543:26:16"},{"body":{"id":4216,"nodeType":"Block","src":"3620:182:16","statements":[{"body":{"id":4214,"nodeType":"Block","src":"3677:118:16","statements":[{"expression":{"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4190,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"3688:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4197,"indexExpression":{"baseExpression":{"id":4191,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3696:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4193,"indexExpression":{"id":4192,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"3703:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3696:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3688:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4198,"indexExpression":{"baseExpression":{"id":4194,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3707:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4196,"indexExpression":{"id":4195,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"3714:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3707:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3688:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4199,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"3720:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3688:43:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4201,"nodeType":"ExpressionStatement","src":"3688:43:16"},{"expression":{"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4202,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"3742:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4209,"indexExpression":{"baseExpression":{"id":4203,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3750:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4205,"indexExpression":{"id":4204,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"3757:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3750:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3742:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4210,"indexExpression":{"baseExpression":{"id":4206,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3761:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4208,"indexExpression":{"id":4207,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"3768:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3761:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3742:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4211,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"3774:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3742:43:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4213,"nodeType":"ExpressionStatement","src":"3742:43:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4183,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"3653:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4184,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3657:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3664:6:16","memberName":"length","nodeType":"MemberAccess","src":"3657:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3653:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4215,"initializationExpression":{"assignments":[4178],"declarations":[{"constant":false,"id":4178,"mutability":"mutable","name":"j","nameLocation":"3642:1:16","nodeType":"VariableDeclaration","scope":4215,"src":"3634:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4177,"name":"uint256","nodeType":"ElementaryTypeName","src":"3634:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4182,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4179,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"3646:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3650:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3646:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3634:17:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3672:3:16","subExpression":{"id":4187,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"3672:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4189,"nodeType":"ExpressionStatement","src":"3672:3:16"},"nodeType":"ForStatement","src":"3629:166:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4170,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"3596:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4171,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3600:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3607:6:16","memberName":"length","nodeType":"MemberAccess","src":"3600:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3596:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4217,"initializationExpression":{"assignments":[4167],"declarations":[{"constant":false,"id":4167,"mutability":"mutable","name":"i","nameLocation":"3589:1:16","nodeType":"VariableDeclaration","scope":4217,"src":"3581:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4166,"name":"uint256","nodeType":"ElementaryTypeName","src":"3581:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4169,"initialValue":{"hexValue":"30","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3593:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3581:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3615:3:16","subExpression":{"id":4174,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"3615:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4176,"nodeType":"ExpressionStatement","src":"3615:3:16"},"nodeType":"ForStatement","src":"3576:226:16"},{"eventCall":{"arguments":[{"id":4219,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"3827:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4220,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3840:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4221,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"3848:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4218,"name":"PoolCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"3815:11:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$__$","typeString":"function (address,address[] memory,address)"}},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3815:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4223,"nodeType":"EmitStatement","src":"3810:49:16"},{"expression":{"id":4224,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"3875:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4063,"id":4225,"nodeType":"Return","src":"3868:18:16"}]},"documentation":{"id":4051,"nodeType":"StructuredDocumentation","src":"2454:368:16","text":" @dev Creates a new BaluniV1Pool contract and registers it in the factory.\n @param assets The array of asset addresses to be included in the pool.\n @param weights The array of weights corresponding to each asset in the pool.\n @param trigger The trigger value for rebalancing the pool.\n @return The address of the newly created pool."},"functionSelector":"3069873b","id":4227,"implemented":true,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"2835:10:16","nodeType":"FunctionDefinition","parameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"assets","nameLocation":"2863:6:16","nodeType":"VariableDeclaration","scope":4227,"src":"2846:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4052,"name":"address","nodeType":"ElementaryTypeName","src":"2846:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4053,"nodeType":"ArrayTypeName","src":"2846:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4057,"mutability":"mutable","name":"weights","nameLocation":"2888:7:16","nodeType":"VariableDeclaration","scope":4227,"src":"2871:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4055,"name":"uint256","nodeType":"ElementaryTypeName","src":"2871:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4056,"nodeType":"ArrayTypeName","src":"2871:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4059,"mutability":"mutable","name":"trigger","nameLocation":"2905:7:16","nodeType":"VariableDeclaration","scope":4227,"src":"2897:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4058,"name":"uint256","nodeType":"ElementaryTypeName","src":"2897:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2845:68:16"},"returnParameters":{"id":4063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4227,"src":"2932:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4061,"name":"address","nodeType":"ElementaryTypeName","src":"2932:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2931:9:16"},"scope":4464,"src":"2826:1066:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4236,"nodeType":"Block","src":"4077:28:16","statements":[{"expression":{"id":4234,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"4091:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":4233,"id":4235,"nodeType":"Return","src":"4084:15:16"}]},"documentation":{"id":4228,"nodeType":"StructuredDocumentation","src":"3898:111:16","text":" @dev Retrieves all the pools created by the factory.\n @return An array of pool addresses."},"functionSelector":"d88ff1f4","id":4237,"implemented":true,"kind":"function","modifiers":[],"name":"getAllPools","nameLocation":"4022:11:16","nodeType":"FunctionDefinition","parameters":{"id":4229,"nodeType":"ParameterList","parameters":[],"src":"4033:2:16"},"returnParameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4237,"src":"4059:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4230,"name":"address","nodeType":"ElementaryTypeName","src":"4059:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4231,"nodeType":"ArrayTypeName","src":"4059:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4058:18:16"},"scope":4464,"src":"4013:92:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4246,"nodeType":"Block","src":"4281:35:16","statements":[{"expression":{"expression":{"id":4243,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"4295:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4304:6:16","memberName":"length","nodeType":"MemberAccess","src":"4295:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4242,"id":4245,"nodeType":"Return","src":"4288:22:16"}]},"documentation":{"id":4238,"nodeType":"StructuredDocumentation","src":"4111:109:16","text":" @dev Retrieves the number of pools created by the factory.\n @return The count of pools."},"functionSelector":"b4ac6860","id":4247,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsCount","nameLocation":"4233:13:16","nodeType":"FunctionDefinition","parameters":{"id":4239,"nodeType":"ParameterList","parameters":[],"src":"4246:2:16"},"returnParameters":{"id":4242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4247,"src":"4272:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4240,"name":"uint256","nodeType":"ElementaryTypeName","src":"4272:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4271:9:16"},"scope":4464,"src":"4224:92:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4267,"nodeType":"Block","src":"4566:88:16","statements":[{"assignments":[4258],"declarations":[{"constant":false,"id":4258,"mutability":"mutable","name":"pool","nameLocation":"4586:4:16","nodeType":"VariableDeclaration","scope":4267,"src":"4573:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"},"typeName":{"id":4257,"nodeType":"UserDefinedTypeName","pathNode":{"id":4256,"name":"BaluniV1Pool","nameLocations":["4573:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3972,"src":"4573:12:16"},"referencedDeclaration":3972,"src":"4573:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4262,"initialValue":{"arguments":[{"id":4260,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"4606:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4259,"name":"BaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"4593:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaluniV1Pool_$3972_$","typeString":"type(contract BaluniV1Pool)"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"4573:45:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4263,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"4632:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4637:9:16","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3314,"src":"4632:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4632:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4255,"id":4266,"nodeType":"Return","src":"4625:23:16"}]},"documentation":{"id":4248,"nodeType":"StructuredDocumentation","src":"4322:155:16","text":" @dev Retrieves the assets of a specific pool.\n @param poolAddress The address of the pool.\n @return An array of asset addresses."},"functionSelector":"4276b97b","id":4268,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolAssets","nameLocation":"4490:13:16","nodeType":"FunctionDefinition","parameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"poolAddress","nameLocation":"4512:11:16","nodeType":"VariableDeclaration","scope":4268,"src":"4504:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4249,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4503:21:16"},"returnParameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4268,"src":"4548:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4252,"name":"address","nodeType":"ElementaryTypeName","src":"4548:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4253,"nodeType":"ArrayTypeName","src":"4548:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4547:18:16"},"scope":4464,"src":"4481:173:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4287,"nodeType":"Block","src":"4972:52:16","statements":[{"expression":{"arguments":[{"baseExpression":{"baseExpression":{"id":4280,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"4994:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4282,"indexExpression":{"id":4281,"name":"asset1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"5002:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4994:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4284,"indexExpression":{"id":4283,"name":"asset2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"5010:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4994:23:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4986:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4278,"name":"address","nodeType":"ElementaryTypeName","src":"4986:7:16","typeDescriptions":{}}},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4986:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4277,"id":4286,"nodeType":"Return","src":"4979:39:16"}]},"documentation":{"id":4269,"nodeType":"StructuredDocumentation","src":"4660:219:16","text":" @dev Retrieves the pool address based on the given assets.\n @param asset1 The address of the first asset.\n @param asset2 The address of the second asset.\n @return The address of the pool."},"functionSelector":"2d5e94a7","id":4288,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolByAssets","nameLocation":"4892:15:16","nodeType":"FunctionDefinition","parameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4271,"mutability":"mutable","name":"asset1","nameLocation":"4916:6:16","nodeType":"VariableDeclaration","scope":4288,"src":"4908:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4270,"name":"address","nodeType":"ElementaryTypeName","src":"4908:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4273,"mutability":"mutable","name":"asset2","nameLocation":"4932:6:16","nodeType":"VariableDeclaration","scope":4288,"src":"4924:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4272,"name":"address","nodeType":"ElementaryTypeName","src":"4924:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4907:32:16"},"returnParameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4288,"src":"4963:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4275,"name":"address","nodeType":"ElementaryTypeName","src":"4963:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4962:9:16"},"scope":4464,"src":"4883:141:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4417,"nodeType":"Block","src":"5306:667:16","statements":[{"assignments":[4301],"declarations":[{"constant":false,"id":4301,"mutability":"mutable","name":"pools","nameLocation":"5330:5:16","nodeType":"VariableDeclaration","scope":4417,"src":"5313:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4299,"name":"address","nodeType":"ElementaryTypeName","src":"5313:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4300,"nodeType":"ArrayTypeName","src":"5313:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4308,"initialValue":{"arguments":[{"expression":{"id":4305,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"5352:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5361:6:16","memberName":"length","nodeType":"MemberAccess","src":"5352:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5338:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4302,"name":"address","nodeType":"ElementaryTypeName","src":"5342:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4303,"nodeType":"ArrayTypeName","src":"5342:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5338:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5313:55:16"},{"assignments":[4310],"declarations":[{"constant":false,"id":4310,"mutability":"mutable","name":"count","nameLocation":"5383:5:16","nodeType":"VariableDeclaration","scope":4417,"src":"5375:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4309,"name":"uint256","nodeType":"ElementaryTypeName","src":"5375:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4312,"initialValue":{"hexValue":"30","id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5391:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5375:17:16"},{"body":{"id":4382,"nodeType":"Block","src":"5447:365:16","statements":[{"assignments":[4326],"declarations":[{"constant":false,"id":4326,"mutability":"mutable","name":"pool","nameLocation":"5469:4:16","nodeType":"VariableDeclaration","scope":4382,"src":"5456:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"},"typeName":{"id":4325,"nodeType":"UserDefinedTypeName","pathNode":{"id":4324,"name":"BaluniV1Pool","nameLocations":["5456:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3972,"src":"5456:12:16"},"referencedDeclaration":3972,"src":"5456:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4332,"initialValue":{"arguments":[{"baseExpression":{"id":4328,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"5489:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4330,"indexExpression":{"id":4329,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"5498:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5489:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4327,"name":"BaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"5476:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaluniV1Pool_$3972_$","typeString":"type(contract BaluniV1Pool)"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5476:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"5456:45:16"},{"assignments":[4337],"declarations":[{"constant":false,"id":4337,"mutability":"mutable","name":"assets","nameLocation":"5527:6:16","nodeType":"VariableDeclaration","scope":4382,"src":"5510:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4335,"name":"address","nodeType":"ElementaryTypeName","src":"5510:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4336,"nodeType":"ArrayTypeName","src":"5510:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4341,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4338,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"5536:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5541:9:16","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3314,"src":"5536:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5510:42:16"},{"body":{"id":4373,"nodeType":"Block","src":"5607:135:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4353,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"5622:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4355,"indexExpression":{"id":4354,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"5629:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5622:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4356,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"5635:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5622:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4372,"nodeType":"IfStatement","src":"5618:115:16","trueBody":{"id":4371,"nodeType":"Block","src":"5642:91:16","statements":[{"expression":{"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4358,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"5655:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4360,"indexExpression":{"id":4359,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"5661:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5655:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4363,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"5678:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3972","typeString":"contract BaluniV1Pool"}],"id":4362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5670:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4361,"name":"address","nodeType":"ElementaryTypeName","src":"5670:7:16","typeDescriptions":{}}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5670:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5655:28:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4366,"nodeType":"ExpressionStatement","src":"5655:28:16"},{"expression":{"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5696:7:16","subExpression":{"id":4367,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"5696:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4369,"nodeType":"ExpressionStatement","src":"5696:7:16"},{"id":4370,"nodeType":"Break","src":"5716:5:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4346,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"5583:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4347,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"5587:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5594:6:16","memberName":"length","nodeType":"MemberAccess","src":"5587:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5583:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4374,"initializationExpression":{"assignments":[4343],"declarations":[{"constant":false,"id":4343,"mutability":"mutable","name":"j","nameLocation":"5576:1:16","nodeType":"VariableDeclaration","scope":4374,"src":"5568:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4342,"name":"uint256","nodeType":"ElementaryTypeName","src":"5568:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4345,"initialValue":{"hexValue":"30","id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5580:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5568:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5602:3:16","subExpression":{"id":4350,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"5602:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4352,"nodeType":"ExpressionStatement","src":"5602:3:16"},"nodeType":"ForStatement","src":"5563:179:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4375,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"5756:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4376,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"5765:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5771:6:16","memberName":"length","nodeType":"MemberAccess","src":"5765:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5756:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4381,"nodeType":"IfStatement","src":"5752:53:16","trueBody":{"id":4380,"nodeType":"Block","src":"5779:26:16","statements":[{"id":4379,"nodeType":"Break","src":"5790:5:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4317,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"5421:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4318,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"5425:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5434:6:16","memberName":"length","nodeType":"MemberAccess","src":"5425:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5421:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4383,"initializationExpression":{"assignments":[4314],"declarations":[{"constant":false,"id":4314,"mutability":"mutable","name":"i","nameLocation":"5414:1:16","nodeType":"VariableDeclaration","scope":4383,"src":"5406:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"5406:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4316,"initialValue":{"hexValue":"30","id":4315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5418:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5406:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5442:3:16","subExpression":{"id":4321,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"5442:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4323,"nodeType":"ExpressionStatement","src":"5442:3:16"},"nodeType":"ForStatement","src":"5401:411:16"},{"assignments":[4388],"declarations":[{"constant":false,"id":4388,"mutability":"mutable","name":"result","nameLocation":"5837:6:16","nodeType":"VariableDeclaration","scope":4417,"src":"5820:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4386,"name":"address","nodeType":"ElementaryTypeName","src":"5820:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4387,"nodeType":"ArrayTypeName","src":"5820:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4394,"initialValue":{"arguments":[{"id":4392,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"5860:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5846:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4389,"name":"address","nodeType":"ElementaryTypeName","src":"5850:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4390,"nodeType":"ArrayTypeName","src":"5850:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5820:46:16"},{"body":{"id":4413,"nodeType":"Block","src":"5909:37:16","statements":[{"expression":{"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"5918:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4407,"indexExpression":{"id":4406,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"5925:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5918:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4408,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"5930:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4410,"indexExpression":{"id":4409,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"5936:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5930:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5918:20:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4412,"nodeType":"ExpressionStatement","src":"5918:20:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4399,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"5893:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4400,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"5897:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5893:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4414,"initializationExpression":{"assignments":[4396],"declarations":[{"constant":false,"id":4396,"mutability":"mutable","name":"i","nameLocation":"5886:1:16","nodeType":"VariableDeclaration","scope":4414,"src":"5878:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4395,"name":"uint256","nodeType":"ElementaryTypeName","src":"5878:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4398,"initialValue":{"hexValue":"30","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5890:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5878:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5904:3:16","subExpression":{"id":4402,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"5904:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4404,"nodeType":"ExpressionStatement","src":"5904:3:16"},"nodeType":"ForStatement","src":"5873:73:16"},{"expression":{"id":4415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"5961:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4296,"id":4416,"nodeType":"Return","src":"5954:13:16"}]},"documentation":{"id":4289,"nodeType":"StructuredDocumentation","src":"5030:191:16","text":" @dev Returns an array of pool addresses that contain the specified token.\n @param token The address of the token to search for.\n @return An array of pool addresses."},"functionSelector":"b4340e6a","id":4418,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsByAsset","nameLocation":"5234:15:16","nodeType":"FunctionDefinition","parameters":{"id":4292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4291,"mutability":"mutable","name":"token","nameLocation":"5258:5:16","nodeType":"VariableDeclaration","scope":4418,"src":"5250:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4290,"name":"address","nodeType":"ElementaryTypeName","src":"5250:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5249:15:16"},"returnParameters":{"id":4296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4418,"src":"5288:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4293,"name":"address","nodeType":"ElementaryTypeName","src":"5288:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4294,"nodeType":"ArrayTypeName","src":"5288:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5287:18:16"},"scope":4464,"src":"5225:748:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4430,"nodeType":"Block","src":"6188:38:16","statements":[{"expression":{"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4426,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"6195:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4427,"name":"_newPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"6207:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6195:25:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4429,"nodeType":"ExpressionStatement","src":"6195:25:16"}]},"documentation":{"id":4419,"nodeType":"StructuredDocumentation","src":"5979:138:16","text":" @dev Changes the address of the periphery contract.\n @param _newPeriphery The new address of the periphery contract."},"functionSelector":"e9b31cff","id":4431,"implemented":true,"kind":"function","modifiers":[{"id":4424,"kind":"modifierInvocation","modifierName":{"id":4423,"name":"onlyOwner","nameLocations":["6178:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"6178:9:16"},"nodeType":"ModifierInvocation","src":"6178:9:16"}],"name":"changePeriphery","nameLocation":"6130:15:16","nodeType":"FunctionDefinition","parameters":{"id":4422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4421,"mutability":"mutable","name":"_newPeriphery","nameLocation":"6154:13:16","nodeType":"VariableDeclaration","scope":4431,"src":"6146:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4420,"name":"address","nodeType":"ElementaryTypeName","src":"6146:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6145:23:16"},"returnParameters":{"id":4425,"nodeType":"ParameterList","parameters":[],"src":"6188:0:16"},"scope":4464,"src":"6121:105:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4462,"nodeType":"Block","src":"6295:151:16","statements":[{"body":{"id":4458,"nodeType":"Block","src":"6348:74:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4449,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"6361:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4451,"indexExpression":{"id":4450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"6370:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6361:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4452,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"6376:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6361:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4457,"nodeType":"IfStatement","src":"6357:58:16","trueBody":{"id":4456,"nodeType":"Block","src":"6383:32:16","statements":[{"expression":{"hexValue":"74727565","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6401:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4437,"id":4455,"nodeType":"Return","src":"6394:11:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4442,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"6322:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4443,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"6326:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6335:6:16","memberName":"length","nodeType":"MemberAccess","src":"6326:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6322:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4459,"initializationExpression":{"assignments":[4439],"declarations":[{"constant":false,"id":4439,"mutability":"mutable","name":"i","nameLocation":"6315:1:16","nodeType":"VariableDeclaration","scope":4459,"src":"6307:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4438,"name":"uint256","nodeType":"ElementaryTypeName","src":"6307:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4441,"initialValue":{"hexValue":"30","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6319:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6307:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6343:3:16","subExpression":{"id":4446,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"6343:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4448,"nodeType":"ExpressionStatement","src":"6343:3:16"},"nodeType":"ForStatement","src":"6302:120:16"},{"expression":{"hexValue":"66616c7365","id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6435:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4437,"id":4461,"nodeType":"Return","src":"6428:12:16"}]},"functionSelector":"89345efb","id":4463,"implemented":true,"kind":"function","modifiers":[],"name":"poolExist","nameLocation":"6241:9:16","nodeType":"FunctionDefinition","parameters":{"id":4434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4433,"mutability":"mutable","name":"_pool","nameLocation":"6259:5:16","nodeType":"VariableDeclaration","scope":4463,"src":"6251:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4432,"name":"address","nodeType":"ElementaryTypeName","src":"6251:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6250:15:16"},"returnParameters":{"id":4437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4463,"src":"6289:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4435,"name":"bool","nodeType":"ElementaryTypeName","src":"6289:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6288:6:16"},"scope":4464,"src":"6232:214:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4465,"src":"1731:4718:16","usedErrors":[30,35,211,214,475,480,858,871,1768,1771],"usedEvents":[41,219,837,4006]}],"src":"40:6411:16"},"id":16},"contracts/interfaces/I1inchSpotAgg.sol":{"ast":{"absolutePath":"contracts/interfaces/I1inchSpotAgg.sol","exportedSymbols":{"I1inchSpotAgg":[4491],"IERC20":[1729]},"id":4492,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4466,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4467,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4492,"sourceUnit":1730,"src":"65:56:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"I1inchSpotAgg","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4491,"linearizedBaseContracts":[4491],"name":"I1inchSpotAgg","nameLocation":"135:13:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"802431fb","id":4480,"implemented":false,"kind":"function","modifiers":[],"name":"getRate","nameLocation":"163:7:17","nodeType":"FunctionDefinition","parameters":{"id":4476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"srcToken","nameLocation":"178:8:17","nodeType":"VariableDeclaration","scope":4480,"src":"171:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":4469,"nodeType":"UserDefinedTypeName","pathNode":{"id":4468,"name":"IERC20","nameLocations":["171:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"171:6:17"},"referencedDeclaration":1729,"src":"171:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4473,"mutability":"mutable","name":"dstToken","nameLocation":"195:8:17","nodeType":"VariableDeclaration","scope":4480,"src":"188:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":4472,"nodeType":"UserDefinedTypeName","pathNode":{"id":4471,"name":"IERC20","nameLocations":["188:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"188:6:17"},"referencedDeclaration":1729,"src":"188:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4475,"mutability":"mutable","name":"useWrappers","nameLocation":"210:11:17","nodeType":"VariableDeclaration","scope":4480,"src":"205:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4474,"name":"bool","nodeType":"ElementaryTypeName","src":"205:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"170:52:17"},"returnParameters":{"id":4479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4478,"mutability":"mutable","name":"weightedRate","nameLocation":"254:12:17","nodeType":"VariableDeclaration","scope":4480,"src":"246:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4477,"name":"uint256","nodeType":"ElementaryTypeName","src":"246:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"245:22:17"},"scope":4491,"src":"154:114:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7de4fd10","id":4490,"implemented":false,"kind":"function","modifiers":[],"name":"getRateToEth","nameLocation":"283:12:17","nodeType":"FunctionDefinition","parameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4483,"mutability":"mutable","name":"srcToken","nameLocation":"303:8:17","nodeType":"VariableDeclaration","scope":4490,"src":"296:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":4482,"nodeType":"UserDefinedTypeName","pathNode":{"id":4481,"name":"IERC20","nameLocations":["296:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"296:6:17"},"referencedDeclaration":1729,"src":"296:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4485,"mutability":"mutable","name":"useWrappers","nameLocation":"318:11:17","nodeType":"VariableDeclaration","scope":4490,"src":"313:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4484,"name":"bool","nodeType":"ElementaryTypeName","src":"313:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"295:35:17"},"returnParameters":{"id":4489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"weightedRate","nameLocation":"362:12:17","nodeType":"VariableDeclaration","scope":4490,"src":"354:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4487,"name":"uint256","nodeType":"ElementaryTypeName","src":"354:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"353:22:17"},"scope":4491,"src":"274:102:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4492,"src":"125:254:17","usedErrors":[],"usedEvents":[]}],"src":"40:341:17"},"id":17},"contracts/interfaces/IBaluniV1Agent.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Agent.sol","exportedSymbols":{"IBaluniV1Agent":[4511]},"id":4512,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4493,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Agent","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4511,"linearizedBaseContracts":[4511],"name":"IBaluniV1Agent","nameLocation":"77:14:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Agent.Call","id":4500,"members":[{"constant":false,"id":4495,"mutability":"mutable","name":"to","nameLocation":"124:2:18","nodeType":"VariableDeclaration","scope":4500,"src":"116:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4494,"name":"address","nodeType":"ElementaryTypeName","src":"116:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4497,"mutability":"mutable","name":"value","nameLocation":"141:5:18","nodeType":"VariableDeclaration","scope":4500,"src":"133:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"133:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4499,"mutability":"mutable","name":"data","nameLocation":"159:4:18","nodeType":"VariableDeclaration","scope":4500,"src":"153:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4498,"name":"bytes","nodeType":"ElementaryTypeName","src":"153:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"104:4:18","nodeType":"StructDefinition","scope":4511,"src":"97:72:18","visibility":"public"},{"functionSelector":"eedc3c50","id":4510,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"184:7:18","nodeType":"FunctionDefinition","parameters":{"id":4508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4504,"mutability":"mutable","name":"calls","nameLocation":"206:5:18","nodeType":"VariableDeclaration","scope":4510,"src":"192:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4500_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call[]"},"typeName":{"baseType":{"id":4502,"nodeType":"UserDefinedTypeName","pathNode":{"id":4501,"name":"Call","nameLocations":["192:4:18"],"nodeType":"IdentifierPath","referencedDeclaration":4500,"src":"192:4:18"},"referencedDeclaration":4500,"src":"192:4:18","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4500_storage_ptr","typeString":"struct IBaluniV1Agent.Call"}},"id":4503,"nodeType":"ArrayTypeName","src":"192:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4500_storage_$dyn_storage_ptr","typeString":"struct IBaluniV1Agent.Call[]"}},"visibility":"internal"},{"constant":false,"id":4507,"mutability":"mutable","name":"tokensReturn","nameLocation":"230:12:18","nodeType":"VariableDeclaration","scope":4510,"src":"213:29:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4505,"name":"address","nodeType":"ElementaryTypeName","src":"213:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4506,"nodeType":"ArrayTypeName","src":"213:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"191:52:18"},"returnParameters":{"id":4509,"nodeType":"ParameterList","parameters":[],"src":"252:0:18"},"scope":4511,"src":"175:78:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4512,"src":"67:189:18","usedErrors":[],"usedEvents":[]}],"src":"40:218:18"},"id":18},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1PoolPeriphery.sol","exportedSymbols":{"IBaluniV1PoolPeriphery":[4649]},"id":4650,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4513,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1PoolPeriphery","contractDependencies":[],"contractKind":"interface","documentation":{"id":4514,"nodeType":"StructuredDocumentation","src":"67:101:19","text":" @title IBaluniV1PoolPeriphery\n @dev Interface for the BaluniV1PoolPeriphery contract."},"fullyImplemented":false,"id":4649,"linearizedBaseContracts":[4649],"name":"IBaluniV1PoolPeriphery","nameLocation":"180:22:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4515,"nodeType":"StructuredDocumentation","src":"210:164:19","text":" @dev Initializes the contract by setting the pool factory address.\n @param _poolFactory The address of the BaluniV1PoolFactory contract."},"functionSelector":"c4d66de8","id":4520,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"389:10:19","nodeType":"FunctionDefinition","parameters":{"id":4518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4517,"mutability":"mutable","name":"_poolFactory","nameLocation":"408:12:19","nodeType":"VariableDeclaration","scope":4520,"src":"400:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4516,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"399:22:19"},"returnParameters":{"id":4519,"nodeType":"ParameterList","parameters":[],"src":"430:0:19"},"scope":4649,"src":"380:51:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4521,"nodeType":"StructuredDocumentation","src":"439:209:19","text":" @dev Reinitializes the contract by setting the pool factory address.\n @param _poolFactory The address of the BaluniV1PoolFactory contract.\n @param version The version number."},"functionSelector":"8f2248bc","id":4528,"implemented":false,"kind":"function","modifiers":[],"name":"reinitialize","nameLocation":"663:12:19","nodeType":"FunctionDefinition","parameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4523,"mutability":"mutable","name":"_poolFactory","nameLocation":"684:12:19","nodeType":"VariableDeclaration","scope":4528,"src":"676:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4522,"name":"address","nodeType":"ElementaryTypeName","src":"676:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4525,"mutability":"mutable","name":"version","nameLocation":"705:7:19","nodeType":"VariableDeclaration","scope":4528,"src":"698:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4524,"name":"uint64","nodeType":"ElementaryTypeName","src":"698:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"675:38:19"},"returnParameters":{"id":4527,"nodeType":"ParameterList","parameters":[],"src":"722:0:19"},"scope":4649,"src":"654:69:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4529,"nodeType":"StructuredDocumentation","src":"731:348:19","text":" @dev Swaps tokens in a BaluniV1Pool.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of tokens to swap.\n @param receiver The address of the receiver.\n @return The amount of tokens received after the swap."},"functionSelector":"6e81221c","id":4542,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"1094:4:19","nodeType":"FunctionDefinition","parameters":{"id":4538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4531,"mutability":"mutable","name":"fromToken","nameLocation":"1107:9:19","nodeType":"VariableDeclaration","scope":4542,"src":"1099:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4530,"name":"address","nodeType":"ElementaryTypeName","src":"1099:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4533,"mutability":"mutable","name":"toToken","nameLocation":"1126:7:19","nodeType":"VariableDeclaration","scope":4542,"src":"1118:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4532,"name":"address","nodeType":"ElementaryTypeName","src":"1118:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4535,"mutability":"mutable","name":"amount","nameLocation":"1143:6:19","nodeType":"VariableDeclaration","scope":4542,"src":"1135:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4537,"mutability":"mutable","name":"receiver","nameLocation":"1159:8:19","nodeType":"VariableDeclaration","scope":4542,"src":"1151:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4536,"name":"address","nodeType":"ElementaryTypeName","src":"1151:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1098:70:19"},"returnParameters":{"id":4541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4542,"src":"1187:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4539,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:9:19"},"scope":4649,"src":"1085:111:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4543,"nodeType":"StructuredDocumentation","src":"1204:515:19","text":" @dev Performs batch swaps between multiple token pairs.\n @param fromTokens An array of addresses representing the tokens to swap from.\n @param toTokens An array of addresses representing the tokens to swap to.\n @param amounts An array of amounts representing the amounts to swap.\n @param receivers An array of addresses representing the receivers of the swapped tokens.\n @return An array of amounts representing the amounts of tokens received after the swaps."},"functionSelector":"e74e9b06","id":4561,"implemented":false,"kind":"function","modifiers":[],"name":"batchSwap","nameLocation":"1734:9:19","nodeType":"FunctionDefinition","parameters":{"id":4556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4546,"mutability":"mutable","name":"fromTokens","nameLocation":"1773:10:19","nodeType":"VariableDeclaration","scope":4561,"src":"1754:29:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4544,"name":"address","nodeType":"ElementaryTypeName","src":"1754:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4545,"nodeType":"ArrayTypeName","src":"1754:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4549,"mutability":"mutable","name":"toTokens","nameLocation":"1813:8:19","nodeType":"VariableDeclaration","scope":4561,"src":"1794:27:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4547,"name":"address","nodeType":"ElementaryTypeName","src":"1794:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4548,"nodeType":"ArrayTypeName","src":"1794:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4552,"mutability":"mutable","name":"amounts","nameLocation":"1851:7:19","nodeType":"VariableDeclaration","scope":4561,"src":"1832:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1832:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4551,"nodeType":"ArrayTypeName","src":"1832:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4555,"mutability":"mutable","name":"receivers","nameLocation":"1888:9:19","nodeType":"VariableDeclaration","scope":4561,"src":"1869:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4553,"name":"address","nodeType":"ElementaryTypeName","src":"1869:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4554,"nodeType":"ArrayTypeName","src":"1869:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1743:161:19"},"returnParameters":{"id":4560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4561,"src":"1923:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4558,"nodeType":"ArrayTypeName","src":"1923:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1922:18:19"},"scope":4649,"src":"1725:216:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4562,"nodeType":"StructuredDocumentation","src":"1949:160:19","text":" @dev Rebalances weights in a pool.\n @param poolAddress The address of the pool.\n @param receiver The address of the receiver."},"functionSelector":"ad414263","id":4569,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceWeights","nameLocation":"2124:16:19","nodeType":"FunctionDefinition","parameters":{"id":4567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"poolAddress","nameLocation":"2149:11:19","nodeType":"VariableDeclaration","scope":4569,"src":"2141:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4563,"name":"address","nodeType":"ElementaryTypeName","src":"2141:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4566,"mutability":"mutable","name":"receiver","nameLocation":"2170:8:19","nodeType":"VariableDeclaration","scope":4569,"src":"2162:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4565,"name":"address","nodeType":"ElementaryTypeName","src":"2162:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2140:39:19"},"returnParameters":{"id":4568,"nodeType":"ParameterList","parameters":[],"src":"2188:0:19"},"scope":4649,"src":"2115:74:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4570,"nodeType":"StructuredDocumentation","src":"2197:243:19","text":" @dev Adds liquidity to a BaluniV1Pool.\n @param amounts An array of amounts for each asset to add as liquidity.\n @param poolAddress The address of the pool.\n @param receiver The address of the receiver."},"functionSelector":"ec0cd2eb","id":4580,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"2455:12:19","nodeType":"FunctionDefinition","parameters":{"id":4578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4573,"mutability":"mutable","name":"amounts","nameLocation":"2487:7:19","nodeType":"VariableDeclaration","scope":4580,"src":"2468:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"2468:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4572,"nodeType":"ArrayTypeName","src":"2468:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4575,"mutability":"mutable","name":"poolAddress","nameLocation":"2504:11:19","nodeType":"VariableDeclaration","scope":4580,"src":"2496:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4574,"name":"address","nodeType":"ElementaryTypeName","src":"2496:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4577,"mutability":"mutable","name":"receiver","nameLocation":"2525:8:19","nodeType":"VariableDeclaration","scope":4580,"src":"2517:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4576,"name":"address","nodeType":"ElementaryTypeName","src":"2517:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2467:67:19"},"returnParameters":{"id":4579,"nodeType":"ParameterList","parameters":[],"src":"2543:0:19"},"scope":4649,"src":"2446:98:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4581,"nodeType":"StructuredDocumentation","src":"2552:232:19","text":" @dev Removes liquidity from a BaluniV1Pool.\n @param share The amount of liquidity tokens to remove.\n @param poolAddress The address of the pool.\n @param receiver The address of the receiver."},"functionSelector":"f31abcc4","id":4590,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"2799:15:19","nodeType":"FunctionDefinition","parameters":{"id":4588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4583,"mutability":"mutable","name":"share","nameLocation":"2823:5:19","nodeType":"VariableDeclaration","scope":4590,"src":"2815:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4582,"name":"uint256","nodeType":"ElementaryTypeName","src":"2815:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4585,"mutability":"mutable","name":"poolAddress","nameLocation":"2838:11:19","nodeType":"VariableDeclaration","scope":4590,"src":"2830:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4584,"name":"address","nodeType":"ElementaryTypeName","src":"2830:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4587,"mutability":"mutable","name":"receiver","nameLocation":"2859:8:19","nodeType":"VariableDeclaration","scope":4590,"src":"2851:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4586,"name":"address","nodeType":"ElementaryTypeName","src":"2851:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2814:54:19"},"returnParameters":{"id":4589,"nodeType":"ParameterList","parameters":[],"src":"2877:0:19"},"scope":4649,"src":"2790:88:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4591,"nodeType":"StructuredDocumentation","src":"2886:330:19","text":" @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of tokens to swap.\n @return The amount of tokens received after the swap."},"functionSelector":"4aa06652","id":4602,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"3231:12:19","nodeType":"FunctionDefinition","parameters":{"id":4598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4593,"mutability":"mutable","name":"fromToken","nameLocation":"3252:9:19","nodeType":"VariableDeclaration","scope":4602,"src":"3244:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4592,"name":"address","nodeType":"ElementaryTypeName","src":"3244:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4595,"mutability":"mutable","name":"toToken","nameLocation":"3271:7:19","nodeType":"VariableDeclaration","scope":4602,"src":"3263:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4594,"name":"address","nodeType":"ElementaryTypeName","src":"3263:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4597,"mutability":"mutable","name":"amount","nameLocation":"3288:6:19","nodeType":"VariableDeclaration","scope":4602,"src":"3280:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4596,"name":"uint256","nodeType":"ElementaryTypeName","src":"3280:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3243:52:19"},"returnParameters":{"id":4601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4602,"src":"3319:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4599,"name":"uint256","nodeType":"ElementaryTypeName","src":"3319:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3318:9:19"},"scope":4649,"src":"3222:106:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4603,"nodeType":"StructuredDocumentation","src":"3336:147:19","text":" @dev Performs rebalance if needed for the given tokens.\n @param poolAddress The address of the token pool to rebalance."},"functionSelector":"5568081a","id":4608,"implemented":false,"kind":"function","modifiers":[],"name":"performRebalanceIfNeeded","nameLocation":"3498:24:19","nodeType":"FunctionDefinition","parameters":{"id":4606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"poolAddress","nameLocation":"3531:11:19","nodeType":"VariableDeclaration","scope":4608,"src":"3523:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4604,"name":"address","nodeType":"ElementaryTypeName","src":"3523:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3522:21:19"},"returnParameters":{"id":4607,"nodeType":"ParameterList","parameters":[],"src":"3552:0:19"},"scope":4649,"src":"3489:64:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4609,"nodeType":"StructuredDocumentation","src":"3561:195:19","text":" @dev Returns an array of pool addresses that contain the given token.\n @param token The address of the token to search for.\n @return An array of pool addresses."},"functionSelector":"ae3cce1c","id":4617,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolsContainingToken","nameLocation":"3771:23:19","nodeType":"FunctionDefinition","parameters":{"id":4612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4611,"mutability":"mutable","name":"token","nameLocation":"3803:5:19","nodeType":"VariableDeclaration","scope":4617,"src":"3795:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4610,"name":"address","nodeType":"ElementaryTypeName","src":"3795:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3794:15:19"},"returnParameters":{"id":4616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4617,"src":"3833:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4613,"name":"address","nodeType":"ElementaryTypeName","src":"3833:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4614,"nodeType":"ArrayTypeName","src":"3833:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3832:18:19"},"scope":4649,"src":"3762:89:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4618,"nodeType":"StructuredDocumentation","src":"3859:98:19","text":" @dev Returns the version of the contract.\n @return The version string."},"functionSelector":"0d8e6e2c","id":4623,"implemented":false,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"3972:10:19","nodeType":"FunctionDefinition","parameters":{"id":4619,"nodeType":"ParameterList","parameters":[],"src":"3982:2:19"},"returnParameters":{"id":4622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4623,"src":"4008:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4620,"name":"uint64","nodeType":"ElementaryTypeName","src":"4008:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4007:8:19"},"scope":4649,"src":"3963:53:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4624,"nodeType":"StructuredDocumentation","src":"4024:199:19","text":" @dev Changes the address of the pool factory contract.\n Can only be called by the contract owner.\n @param _poolFactory The new address of the pool factory contract."},"functionSelector":"72591be5","id":4629,"implemented":false,"kind":"function","modifiers":[],"name":"changePoolFactory","nameLocation":"4238:17:19","nodeType":"FunctionDefinition","parameters":{"id":4627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4626,"mutability":"mutable","name":"_poolFactory","nameLocation":"4264:12:19","nodeType":"VariableDeclaration","scope":4629,"src":"4256:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4625,"name":"address","nodeType":"ElementaryTypeName","src":"4256:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4255:22:19"},"returnParameters":{"id":4628,"nodeType":"ParameterList","parameters":[],"src":"4286:0:19"},"scope":4649,"src":"4229:58:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4630,"nodeType":"StructuredDocumentation","src":"4295:142:19","text":" @dev Returns the reserves of the pool.\n @param pool The address of the pool.\n @return An array of reserves."},"functionSelector":"3e99c1e4","id":4638,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"4452:11:19","nodeType":"FunctionDefinition","parameters":{"id":4633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4632,"mutability":"mutable","name":"pool","nameLocation":"4472:4:19","nodeType":"VariableDeclaration","scope":4638,"src":"4464:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4631,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4463:14:19"},"returnParameters":{"id":4637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4638,"src":"4501:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4634,"name":"uint256","nodeType":"ElementaryTypeName","src":"4501:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4635,"nodeType":"ArrayTypeName","src":"4501:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4500:18:19"},"scope":4649,"src":"4443:76:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4639,"nodeType":"StructuredDocumentation","src":"4527:210:19","text":" @dev Returns the reserve of a specific asset in a pool.\n @param pool The address of the pool.\n @param asset The address of the asset.\n @return The reserve of the asset."},"functionSelector":"a3e113fb","id":4648,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"4752:15:19","nodeType":"FunctionDefinition","parameters":{"id":4644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4641,"mutability":"mutable","name":"pool","nameLocation":"4776:4:19","nodeType":"VariableDeclaration","scope":4648,"src":"4768:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4640,"name":"address","nodeType":"ElementaryTypeName","src":"4768:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4643,"mutability":"mutable","name":"asset","nameLocation":"4790:5:19","nodeType":"VariableDeclaration","scope":4648,"src":"4782:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4642,"name":"address","nodeType":"ElementaryTypeName","src":"4782:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4767:29:19"},"returnParameters":{"id":4647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4648,"src":"4820:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4645,"name":"uint256","nodeType":"ElementaryTypeName","src":"4820:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4819:9:19"},"scope":4649,"src":"4743:86:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4650,"src":"170:4662:19","usedErrors":[],"usedEvents":[]}],"src":"40:4794:19"},"id":19},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","exportedSymbols":{"IBaluniV1Rebalancer":[4759]},"id":4760,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4651,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Rebalancer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4759,"linearizedBaseContracts":[4759],"name":"IBaluniV1Rebalancer","nameLocation":"77:19:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Rebalancer.RebalanceVars","id":4681,"members":[{"constant":false,"id":4653,"mutability":"mutable","name":"length","nameLocation":"144:6:20","nodeType":"VariableDeclaration","scope":4681,"src":"136:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4652,"name":"uint256","nodeType":"ElementaryTypeName","src":"136:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4655,"mutability":"mutable","name":"totalValue","nameLocation":"169:10:20","nodeType":"VariableDeclaration","scope":4681,"src":"161:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4654,"name":"uint256","nodeType":"ElementaryTypeName","src":"161:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4657,"mutability":"mutable","name":"finalUsdBalance","nameLocation":"198:15:20","nodeType":"VariableDeclaration","scope":4681,"src":"190:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4656,"name":"uint256","nodeType":"ElementaryTypeName","src":"190:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4659,"mutability":"mutable","name":"overweightVaultsLength","nameLocation":"232:22:20","nodeType":"VariableDeclaration","scope":4681,"src":"224:30:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4658,"name":"uint256","nodeType":"ElementaryTypeName","src":"224:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4661,"mutability":"mutable","name":"underweightVaultsLength","nameLocation":"273:23:20","nodeType":"VariableDeclaration","scope":4681,"src":"265:31:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4660,"name":"uint256","nodeType":"ElementaryTypeName","src":"265:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4663,"mutability":"mutable","name":"totalActiveWeight","nameLocation":"315:17:20","nodeType":"VariableDeclaration","scope":4681,"src":"307:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4662,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4665,"mutability":"mutable","name":"amountOut","nameLocation":"351:9:20","nodeType":"VariableDeclaration","scope":4681,"src":"343:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4664,"name":"uint256","nodeType":"ElementaryTypeName","src":"343:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4668,"mutability":"mutable","name":"overweightVaults","nameLocation":"381:16:20","nodeType":"VariableDeclaration","scope":4681,"src":"371:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4666,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4667,"nodeType":"ArrayTypeName","src":"371:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4671,"mutability":"mutable","name":"overweightAmounts","nameLocation":"418:17:20","nodeType":"VariableDeclaration","scope":4681,"src":"408:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4669,"name":"uint256","nodeType":"ElementaryTypeName","src":"408:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4670,"nodeType":"ArrayTypeName","src":"408:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4674,"mutability":"mutable","name":"underweightVaults","nameLocation":"456:17:20","nodeType":"VariableDeclaration","scope":4681,"src":"446:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4672,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4673,"nodeType":"ArrayTypeName","src":"446:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4677,"mutability":"mutable","name":"underweightAmounts","nameLocation":"494:18:20","nodeType":"VariableDeclaration","scope":4681,"src":"484:28:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4675,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4676,"nodeType":"ArrayTypeName","src":"484:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4680,"mutability":"mutable","name":"balances","nameLocation":"533:8:20","nodeType":"VariableDeclaration","scope":4681,"src":"523:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4678,"name":"uint256","nodeType":"ElementaryTypeName","src":"523:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4679,"nodeType":"ArrayTypeName","src":"523:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"RebalanceVars","nameLocation":"111:13:20","nodeType":"StructDefinition","scope":4759,"src":"104:445:20","visibility":"public"},{"functionSelector":"39b65140","id":4686,"implemented":false,"kind":"function","modifiers":[],"name":"baluniRouter","nameLocation":"584:12:20","nodeType":"FunctionDefinition","parameters":{"id":4682,"nodeType":"ParameterList","parameters":[],"src":"596:2:20"},"returnParameters":{"id":4685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4686,"src":"622:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4683,"name":"address","nodeType":"ElementaryTypeName","src":"622:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"621:9:20"},"scope":4759,"src":"575:56:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"89a30271","id":4691,"implemented":false,"kind":"function","modifiers":[],"name":"USDC","nameLocation":"648:4:20","nodeType":"FunctionDefinition","parameters":{"id":4687,"nodeType":"ParameterList","parameters":[],"src":"652:2:20"},"returnParameters":{"id":4690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4691,"src":"678:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4688,"name":"address","nodeType":"ElementaryTypeName","src":"678:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"677:9:20"},"scope":4759,"src":"639:48:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b381cf40","id":4696,"implemented":false,"kind":"function","modifiers":[],"name":"WNATIVE","nameLocation":"704:7:20","nodeType":"FunctionDefinition","parameters":{"id":4692,"nodeType":"ParameterList","parameters":[],"src":"711:2:20"},"returnParameters":{"id":4695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4696,"src":"737:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4693,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:9:20"},"scope":4759,"src":"695:51:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"eb06b29d","id":4701,"implemented":false,"kind":"function","modifiers":[],"name":"_1InchSpotAgg","nameLocation":"763:13:20","nodeType":"FunctionDefinition","parameters":{"id":4697,"nodeType":"ParameterList","parameters":[],"src":"776:2:20"},"returnParameters":{"id":4700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4701,"src":"802:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4698,"name":"address","nodeType":"ElementaryTypeName","src":"802:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"801:9:20"},"scope":4759,"src":"754:57:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"61d027b3","id":4706,"implemented":false,"kind":"function","modifiers":[],"name":"treasury","nameLocation":"828:8:20","nodeType":"FunctionDefinition","parameters":{"id":4702,"nodeType":"ParameterList","parameters":[],"src":"836:2:20"},"returnParameters":{"id":4705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4706,"src":"862:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4703,"name":"address","nodeType":"ElementaryTypeName","src":"862:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"861:9:20"},"scope":4759,"src":"819:52:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f0bf7714","id":4726,"implemented":false,"kind":"function","modifiers":[],"name":"rebalance","nameLocation":"906:9:20","nodeType":"FunctionDefinition","parameters":{"id":4724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4709,"mutability":"mutable","name":"balances","nameLocation":"943:8:20","nodeType":"VariableDeclaration","scope":4726,"src":"926:25:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4707,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4708,"nodeType":"ArrayTypeName","src":"926:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4712,"mutability":"mutable","name":"assets","nameLocation":"981:6:20","nodeType":"VariableDeclaration","scope":4726,"src":"962:25:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4710,"name":"address","nodeType":"ElementaryTypeName","src":"962:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4711,"nodeType":"ArrayTypeName","src":"962:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4715,"mutability":"mutable","name":"weights","nameLocation":"1017:7:20","nodeType":"VariableDeclaration","scope":4726,"src":"998:26:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4714,"nodeType":"ArrayTypeName","src":"998:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4717,"mutability":"mutable","name":"limit","nameLocation":"1043:5:20","nodeType":"VariableDeclaration","scope":4726,"src":"1035:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4716,"name":"uint256","nodeType":"ElementaryTypeName","src":"1035:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4719,"mutability":"mutable","name":"sender","nameLocation":"1067:6:20","nodeType":"VariableDeclaration","scope":4726,"src":"1059:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4718,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4721,"mutability":"mutable","name":"receiver","nameLocation":"1092:8:20","nodeType":"VariableDeclaration","scope":4726,"src":"1084:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4720,"name":"address","nodeType":"ElementaryTypeName","src":"1084:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4723,"mutability":"mutable","name":"baseAsset","nameLocation":"1119:9:20","nodeType":"VariableDeclaration","scope":4726,"src":"1111:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4722,"name":"address","nodeType":"ElementaryTypeName","src":"1111:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"915:220:20"},"returnParameters":{"id":4725,"nodeType":"ParameterList","parameters":[],"src":"1144:0:20"},"scope":4759,"src":"897:248:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"997146f5","id":4747,"implemented":false,"kind":"function","modifiers":[],"name":"checkRebalance","nameLocation":"1162:14:20","nodeType":"FunctionDefinition","parameters":{"id":4742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4729,"mutability":"mutable","name":"balances","nameLocation":"1204:8:20","nodeType":"VariableDeclaration","scope":4747,"src":"1187:25:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4728,"nodeType":"ArrayTypeName","src":"1187:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4732,"mutability":"mutable","name":"assets","nameLocation":"1242:6:20","nodeType":"VariableDeclaration","scope":4747,"src":"1223:25:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4730,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4731,"nodeType":"ArrayTypeName","src":"1223:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4735,"mutability":"mutable","name":"weights","nameLocation":"1278:7:20","nodeType":"VariableDeclaration","scope":4747,"src":"1259:26:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4733,"name":"uint256","nodeType":"ElementaryTypeName","src":"1259:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4734,"nodeType":"ArrayTypeName","src":"1259:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4737,"mutability":"mutable","name":"limit","nameLocation":"1304:5:20","nodeType":"VariableDeclaration","scope":4747,"src":"1296:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4736,"name":"uint256","nodeType":"ElementaryTypeName","src":"1296:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4739,"mutability":"mutable","name":"sender","nameLocation":"1328:6:20","nodeType":"VariableDeclaration","scope":4747,"src":"1320:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4738,"name":"address","nodeType":"ElementaryTypeName","src":"1320:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4741,"mutability":"mutable","name":"baseAsset","nameLocation":"1353:9:20","nodeType":"VariableDeclaration","scope":4747,"src":"1345:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4740,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1176:193:20"},"returnParameters":{"id":4746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4747,"src":"1393:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$4681_memory_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"},"typeName":{"id":4744,"nodeType":"UserDefinedTypeName","pathNode":{"id":4743,"name":"RebalanceVars","nameLocations":["1393:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":4681,"src":"1393:13:20"},"referencedDeclaration":4681,"src":"1393:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$4681_storage_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"}},"visibility":"internal"}],"src":"1392:22:20"},"scope":4759,"src":"1153:262:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"248391ff","id":4758,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"1432:7:20","nodeType":"FunctionDefinition","parameters":{"id":4754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4749,"mutability":"mutable","name":"fromToken","nameLocation":"1448:9:20","nodeType":"VariableDeclaration","scope":4758,"src":"1440:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4748,"name":"address","nodeType":"ElementaryTypeName","src":"1440:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4751,"mutability":"mutable","name":"toToken","nameLocation":"1467:7:20","nodeType":"VariableDeclaration","scope":4758,"src":"1459:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4750,"name":"address","nodeType":"ElementaryTypeName","src":"1459:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4753,"mutability":"mutable","name":"amount","nameLocation":"1484:6:20","nodeType":"VariableDeclaration","scope":4758,"src":"1476:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4752,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1439:52:20"},"returnParameters":{"id":4757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4758,"src":"1515:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4755,"name":"uint256","nodeType":"ElementaryTypeName","src":"1515:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1514:9:20"},"scope":4759,"src":"1423:101:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4760,"src":"67:1460:20","usedErrors":[],"usedEvents":[]}],"src":"40:1489:20"},"id":20},"contracts/interfaces/IBaluniV1Router.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Router.sol","exportedSymbols":{"I1inchSpotAgg":[4491],"IBaluniV1Agent":[4511],"IBaluniV1Router":[5027],"IERC20":[1729],"IERC20Metadata":[1755]},"id":5028,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4761,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4762,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5028,"sourceUnit":1730,"src":"67:56:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":4763,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5028,"sourceUnit":1756,"src":"125:75:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/I1inchSpotAgg.sol","file":"./I1inchSpotAgg.sol","id":4764,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5028,"sourceUnit":4492,"src":"202:29:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Agent.sol","file":"./IBaluniV1Agent.sol","id":4765,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5028,"sourceUnit":4512,"src":"233:30:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Router","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5027,"linearizedBaseContracts":[5027],"name":"IBaluniV1Router","nameLocation":"277:15:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Router.Call","id":4772,"members":[{"constant":false,"id":4767,"mutability":"mutable","name":"to","nameLocation":"331:2:21","nodeType":"VariableDeclaration","scope":4772,"src":"323:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4766,"name":"address","nodeType":"ElementaryTypeName","src":"323:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4769,"mutability":"mutable","name":"value","nameLocation":"352:5:21","nodeType":"VariableDeclaration","scope":4772,"src":"344:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4768,"name":"uint256","nodeType":"ElementaryTypeName","src":"344:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4771,"mutability":"mutable","name":"data","nameLocation":"374:4:21","nodeType":"VariableDeclaration","scope":4772,"src":"368:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4770,"name":"bytes","nodeType":"ElementaryTypeName","src":"368:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"307:4:21","nodeType":"StructDefinition","scope":5027,"src":"300:86:21","visibility":"public"},{"functionSelector":"34decfc9","id":4777,"implemented":false,"kind":"function","modifiers":[],"name":"_MAX_BPS_FEE","nameLocation":"421:12:21","nodeType":"FunctionDefinition","parameters":{"id":4773,"nodeType":"ParameterList","parameters":[],"src":"433:2:21"},"returnParameters":{"id":4776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4777,"src":"459:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4774,"name":"uint256","nodeType":"ElementaryTypeName","src":"459:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"458:9:21"},"scope":5027,"src":"412:56:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b9f5e617","id":4782,"implemented":false,"kind":"function","modifiers":[],"name":"_BPS_FEE","nameLocation":"485:8:21","nodeType":"FunctionDefinition","parameters":{"id":4778,"nodeType":"ParameterList","parameters":[],"src":"493:2:21"},"returnParameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4782,"src":"519:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4779,"name":"uint256","nodeType":"ElementaryTypeName","src":"519:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"518:9:21"},"scope":5027,"src":"476:52:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"85377188","id":4787,"implemented":false,"kind":"function","modifiers":[],"name":"_BPS_BASE","nameLocation":"545:9:21","nodeType":"FunctionDefinition","parameters":{"id":4783,"nodeType":"ParameterList","parameters":[],"src":"554:2:21"},"returnParameters":{"id":4786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4787,"src":"580:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"580:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:9:21"},"scope":5027,"src":"536:53:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aa6ca808","id":4793,"implemented":false,"kind":"function","modifiers":[],"name":"getTokens","nameLocation":"606:9:21","nodeType":"FunctionDefinition","parameters":{"id":4788,"nodeType":"ParameterList","parameters":[],"src":"615:2:21"},"returnParameters":{"id":4792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4793,"src":"641:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4789,"name":"address","nodeType":"ElementaryTypeName","src":"641:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4790,"nodeType":"ArrayTypeName","src":"641:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"640:18:21"},"scope":5027,"src":"597:62:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"89a30271","id":4799,"implemented":false,"kind":"function","modifiers":[],"name":"USDC","nameLocation":"676:4:21","nodeType":"FunctionDefinition","parameters":{"id":4794,"nodeType":"ParameterList","parameters":[],"src":"680:2:21"},"returnParameters":{"id":4798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4799,"src":"706:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":4796,"nodeType":"UserDefinedTypeName","pathNode":{"id":4795,"name":"IERC20","nameLocations":["706:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"706:6:21"},"referencedDeclaration":1729,"src":"706:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"705:8:21"},"scope":5027,"src":"667:47:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b381cf40","id":4804,"implemented":false,"kind":"function","modifiers":[],"name":"WNATIVE","nameLocation":"731:7:21","nodeType":"FunctionDefinition","parameters":{"id":4800,"nodeType":"ParameterList","parameters":[],"src":"738:2:21"},"returnParameters":{"id":4803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4804,"src":"764:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4801,"name":"address","nodeType":"ElementaryTypeName","src":"764:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"763:9:21"},"scope":5027,"src":"722:51:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7dc0d1d0","id":4809,"implemented":false,"kind":"function","modifiers":[],"name":"oracle","nameLocation":"790:6:21","nodeType":"FunctionDefinition","parameters":{"id":4805,"nodeType":"ParameterList","parameters":[],"src":"796:2:21"},"returnParameters":{"id":4808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4809,"src":"822:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4806,"name":"address","nodeType":"ElementaryTypeName","src":"822:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"821:9:21"},"scope":5027,"src":"781:50:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"735de9f7","id":4814,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapRouter","nameLocation":"848:13:21","nodeType":"FunctionDefinition","parameters":{"id":4810,"nodeType":"ParameterList","parameters":[],"src":"861:2:21"},"returnParameters":{"id":4813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4814,"src":"887:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4811,"name":"address","nodeType":"ElementaryTypeName","src":"887:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"886:9:21"},"scope":5027,"src":"839:57:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8bdb2afa","id":4819,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapFactory","nameLocation":"913:14:21","nodeType":"FunctionDefinition","parameters":{"id":4815,"nodeType":"ParameterList","parameters":[],"src":"927:2:21"},"returnParameters":{"id":4818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4819,"src":"953:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4816,"name":"address","nodeType":"ElementaryTypeName","src":"953:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"952:9:21"},"scope":5027,"src":"904:58:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"196b7a5f","id":4824,"implemented":false,"kind":"function","modifiers":[],"name":"baluniFactory","nameLocation":"979:13:21","nodeType":"FunctionDefinition","parameters":{"id":4820,"nodeType":"ParameterList","parameters":[],"src":"992:2:21"},"returnParameters":{"id":4823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4824,"src":"1018:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4821,"name":"address","nodeType":"ElementaryTypeName","src":"1018:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1017:9:21"},"scope":5027,"src":"970:57:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"060b5e82","id":4829,"implemented":false,"kind":"function","modifiers":[],"name":"baluniPeriphery","nameLocation":"1044:15:21","nodeType":"FunctionDefinition","parameters":{"id":4825,"nodeType":"ParameterList","parameters":[],"src":"1059:2:21"},"returnParameters":{"id":4828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4829,"src":"1085:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4826,"name":"address","nodeType":"ElementaryTypeName","src":"1085:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1084:9:21"},"scope":5027,"src":"1035:59:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7df107ea","id":4834,"implemented":false,"kind":"function","modifiers":[],"name":"agentFactory","nameLocation":"1111:12:21","nodeType":"FunctionDefinition","parameters":{"id":4830,"nodeType":"ParameterList","parameters":[],"src":"1123:2:21"},"returnParameters":{"id":4833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4834,"src":"1149:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4831,"name":"address","nodeType":"ElementaryTypeName","src":"1149:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1148:9:21"},"scope":5027,"src":"1102:56:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"60961528","id":4839,"implemented":false,"kind":"function","modifiers":[],"name":"marketOracle","nameLocation":"1175:12:21","nodeType":"FunctionDefinition","parameters":{"id":4835,"nodeType":"ParameterList","parameters":[],"src":"1187:2:21"},"returnParameters":{"id":4838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4839,"src":"1213:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4836,"name":"address","nodeType":"ElementaryTypeName","src":"1213:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1212:9:21"},"scope":5027,"src":"1166:56:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"01d22ccd","id":4844,"implemented":false,"kind":"function","modifiers":[],"name":"rebalancer","nameLocation":"1239:10:21","nodeType":"FunctionDefinition","parameters":{"id":4840,"nodeType":"ParameterList","parameters":[],"src":"1249:2:21"},"returnParameters":{"id":4843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4844,"src":"1275:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4841,"name":"address","nodeType":"ElementaryTypeName","src":"1275:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1274:9:21"},"scope":5027,"src":"1230:54:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"61d027b3","id":4849,"implemented":false,"kind":"function","modifiers":[],"name":"treasury","nameLocation":"1301:8:21","nodeType":"FunctionDefinition","parameters":{"id":4845,"nodeType":"ParameterList","parameters":[],"src":"1309:2:21"},"returnParameters":{"id":4848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4849,"src":"1335:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4846,"name":"address","nodeType":"ElementaryTypeName","src":"1335:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1334:9:21"},"scope":5027,"src":"1292:52:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cc2a9a5b","id":4864,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"1379:10:21","nodeType":"FunctionDefinition","parameters":{"id":4862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4851,"mutability":"mutable","name":"_usdc","nameLocation":"1408:5:21","nodeType":"VariableDeclaration","scope":4864,"src":"1400:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4850,"name":"address","nodeType":"ElementaryTypeName","src":"1400:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4853,"mutability":"mutable","name":"_wnative","nameLocation":"1432:8:21","nodeType":"VariableDeclaration","scope":4864,"src":"1424:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4852,"name":"address","nodeType":"ElementaryTypeName","src":"1424:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4855,"mutability":"mutable","name":"_1inchSpotAgg","nameLocation":"1459:13:21","nodeType":"VariableDeclaration","scope":4864,"src":"1451:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4854,"name":"address","nodeType":"ElementaryTypeName","src":"1451:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4857,"mutability":"mutable","name":"_uniRouter","nameLocation":"1491:10:21","nodeType":"VariableDeclaration","scope":4864,"src":"1483:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4856,"name":"address","nodeType":"ElementaryTypeName","src":"1483:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4859,"mutability":"mutable","name":"_uniFactory","nameLocation":"1520:11:21","nodeType":"VariableDeclaration","scope":4864,"src":"1512:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4858,"name":"address","nodeType":"ElementaryTypeName","src":"1512:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4861,"mutability":"mutable","name":"_rebalancer","nameLocation":"1550:11:21","nodeType":"VariableDeclaration","scope":4864,"src":"1542:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4860,"name":"address","nodeType":"ElementaryTypeName","src":"1542:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1389:179:21"},"returnParameters":{"id":4863,"nodeType":"ParameterList","parameters":[],"src":"1577:0:21"},"scope":5027,"src":"1370:208:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b0d60ba0","id":4881,"implemented":false,"kind":"function","modifiers":[],"name":"reinitialize","nameLocation":"1595:12:21","nodeType":"FunctionDefinition","parameters":{"id":4879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4866,"mutability":"mutable","name":"_usdc","nameLocation":"1626:5:21","nodeType":"VariableDeclaration","scope":4881,"src":"1618:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4865,"name":"address","nodeType":"ElementaryTypeName","src":"1618:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4868,"mutability":"mutable","name":"_wnative","nameLocation":"1650:8:21","nodeType":"VariableDeclaration","scope":4881,"src":"1642:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4867,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4870,"mutability":"mutable","name":"_1inchSpotAgg","nameLocation":"1677:13:21","nodeType":"VariableDeclaration","scope":4881,"src":"1669:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4869,"name":"address","nodeType":"ElementaryTypeName","src":"1669:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4872,"mutability":"mutable","name":"_uniRouter","nameLocation":"1709:10:21","nodeType":"VariableDeclaration","scope":4881,"src":"1701:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4871,"name":"address","nodeType":"ElementaryTypeName","src":"1701:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4874,"mutability":"mutable","name":"_uniFactory","nameLocation":"1738:11:21","nodeType":"VariableDeclaration","scope":4881,"src":"1730:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4873,"name":"address","nodeType":"ElementaryTypeName","src":"1730:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4876,"mutability":"mutable","name":"_rebalancer","nameLocation":"1768:11:21","nodeType":"VariableDeclaration","scope":4881,"src":"1760:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4875,"name":"address","nodeType":"ElementaryTypeName","src":"1760:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4878,"mutability":"mutable","name":"version","nameLocation":"1797:7:21","nodeType":"VariableDeclaration","scope":4881,"src":"1790:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4877,"name":"uint64","nodeType":"ElementaryTypeName","src":"1790:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1607:204:21"},"returnParameters":{"id":4880,"nodeType":"ParameterList","parameters":[],"src":"1820:0:21"},"scope":5027,"src":"1586:235:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"980d24f9","id":4886,"implemented":false,"kind":"function","modifiers":[],"name":"initializeMarketOracle","nameLocation":"1838:22:21","nodeType":"FunctionDefinition","parameters":{"id":4884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4883,"mutability":"mutable","name":"_marketOracle","nameLocation":"1869:13:21","nodeType":"VariableDeclaration","scope":4886,"src":"1861:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4882,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1860:23:21"},"returnParameters":{"id":4885,"nodeType":"ParameterList","parameters":[],"src":"1892:0:21"},"scope":5027,"src":"1829:64:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"35aa0efa","id":4891,"implemented":false,"kind":"function","modifiers":[],"name":"changeMarketOracle","nameLocation":"1910:18:21","nodeType":"FunctionDefinition","parameters":{"id":4889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4888,"mutability":"mutable","name":"_marketOracle","nameLocation":"1937:13:21","nodeType":"VariableDeclaration","scope":4891,"src":"1929:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4887,"name":"address","nodeType":"ElementaryTypeName","src":"1929:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1928:23:21"},"returnParameters":{"id":4890,"nodeType":"ParameterList","parameters":[],"src":"1960:0:21"},"scope":5027,"src":"1901:60:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06497cb9","id":4896,"implemented":false,"kind":"function","modifiers":[],"name":"changeBpsFee","nameLocation":"1978:12:21","nodeType":"FunctionDefinition","parameters":{"id":4894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"_newFee","nameLocation":"1999:7:21","nodeType":"VariableDeclaration","scope":4896,"src":"1991:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4892,"name":"uint256","nodeType":"ElementaryTypeName","src":"1991:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1990:17:21"},"returnParameters":{"id":4895,"nodeType":"ParameterList","parameters":[],"src":"2016:0:21"},"scope":5027,"src":"1969:48:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b14f2a39","id":4901,"implemented":false,"kind":"function","modifiers":[],"name":"changeTreasury","nameLocation":"2034:14:21","nodeType":"FunctionDefinition","parameters":{"id":4899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4898,"mutability":"mutable","name":"_newTreasury","nameLocation":"2057:12:21","nodeType":"VariableDeclaration","scope":4901,"src":"2049:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4897,"name":"address","nodeType":"ElementaryTypeName","src":"2049:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2048:22:21"},"returnParameters":{"id":4900,"nodeType":"ParameterList","parameters":[],"src":"2079:0:21"},"scope":5027,"src":"2025:55:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0918281b","id":4906,"implemented":false,"kind":"function","modifiers":[],"name":"changeRebalancer","nameLocation":"2097:16:21","nodeType":"FunctionDefinition","parameters":{"id":4904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4903,"mutability":"mutable","name":"_newRebalancer","nameLocation":"2122:14:21","nodeType":"VariableDeclaration","scope":4906,"src":"2114:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4902,"name":"address","nodeType":"ElementaryTypeName","src":"2114:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2113:24:21"},"returnParameters":{"id":4905,"nodeType":"ParameterList","parameters":[],"src":"2146:0:21"},"scope":5027,"src":"2088:59:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0a38abab","id":4911,"implemented":false,"kind":"function","modifiers":[],"name":"changeAgentFactory","nameLocation":"2164:18:21","nodeType":"FunctionDefinition","parameters":{"id":4909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4908,"mutability":"mutable","name":"_agentFactory","nameLocation":"2191:13:21","nodeType":"VariableDeclaration","scope":4911,"src":"2183:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4907,"name":"address","nodeType":"ElementaryTypeName","src":"2183:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2182:23:21"},"returnParameters":{"id":4910,"nodeType":"ParameterList","parameters":[],"src":"2214:0:21"},"scope":5027,"src":"2155:60:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"eedc3c50","id":4921,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"2232:7:21","nodeType":"FunctionDefinition","parameters":{"id":4919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4915,"mutability":"mutable","name":"calls","nameLocation":"2269:5:21","nodeType":"VariableDeclaration","scope":4921,"src":"2240:34:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4500_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call[]"},"typeName":{"baseType":{"id":4913,"nodeType":"UserDefinedTypeName","pathNode":{"id":4912,"name":"IBaluniV1Agent.Call","nameLocations":["2240:14:21","2255:4:21"],"nodeType":"IdentifierPath","referencedDeclaration":4500,"src":"2240:19:21"},"referencedDeclaration":4500,"src":"2240:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$4500_storage_ptr","typeString":"struct IBaluniV1Agent.Call"}},"id":4914,"nodeType":"ArrayTypeName","src":"2240:21:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$4500_storage_$dyn_storage_ptr","typeString":"struct IBaluniV1Agent.Call[]"}},"visibility":"internal"},{"constant":false,"id":4918,"mutability":"mutable","name":"tokensReturn","nameLocation":"2293:12:21","nodeType":"VariableDeclaration","scope":4921,"src":"2276:29:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4916,"name":"address","nodeType":"ElementaryTypeName","src":"2276:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4917,"nodeType":"ArrayTypeName","src":"2276:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2239:67:21"},"returnParameters":{"id":4920,"nodeType":"ParameterList","parameters":[],"src":"2315:0:21"},"scope":5027,"src":"2223:93:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2f865568","id":4926,"implemented":false,"kind":"function","modifiers":[],"name":"liquidate","nameLocation":"2333:9:21","nodeType":"FunctionDefinition","parameters":{"id":4924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4923,"mutability":"mutable","name":"token","nameLocation":"2351:5:21","nodeType":"VariableDeclaration","scope":4926,"src":"2343:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4922,"name":"address","nodeType":"ElementaryTypeName","src":"2343:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2342:15:21"},"returnParameters":{"id":4925,"nodeType":"ParameterList","parameters":[],"src":"2366:0:21"},"scope":5027,"src":"2324:43:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3c2066a9","id":4929,"implemented":false,"kind":"function","modifiers":[],"name":"liquidateAll","nameLocation":"2384:12:21","nodeType":"FunctionDefinition","parameters":{"id":4927,"nodeType":"ParameterList","parameters":[],"src":"2396:2:21"},"returnParameters":{"id":4928,"nodeType":"ParameterList","parameters":[],"src":"2407:0:21"},"scope":5027,"src":"2375:33:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1a168da2","id":4934,"implemented":false,"kind":"function","modifiers":[],"name":"burnERC20","nameLocation":"2425:9:21","nodeType":"FunctionDefinition","parameters":{"id":4932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4931,"mutability":"mutable","name":"burnAmount","nameLocation":"2443:10:21","nodeType":"VariableDeclaration","scope":4934,"src":"2435:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4930,"name":"uint256","nodeType":"ElementaryTypeName","src":"2435:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2434:20:21"},"returnParameters":{"id":4933,"nodeType":"ParameterList","parameters":[],"src":"2463:0:21"},"scope":5027,"src":"2416:48:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fe0a4dd1","id":4939,"implemented":false,"kind":"function","modifiers":[],"name":"burnUSDC","nameLocation":"2481:8:21","nodeType":"FunctionDefinition","parameters":{"id":4937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4936,"mutability":"mutable","name":"burnAmount","nameLocation":"2498:10:21","nodeType":"VariableDeclaration","scope":4939,"src":"2490:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4935,"name":"uint256","nodeType":"ElementaryTypeName","src":"2490:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2489:20:21"},"returnParameters":{"id":4938,"nodeType":"ParameterList","parameters":[],"src":"2518:0:21"},"scope":5027,"src":"2472:47:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"27d54a92","id":4946,"implemented":false,"kind":"function","modifiers":[],"name":"getAgentAddress","nameLocation":"2536:15:21","nodeType":"FunctionDefinition","parameters":{"id":4942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4941,"mutability":"mutable","name":"_user","nameLocation":"2560:5:21","nodeType":"VariableDeclaration","scope":4946,"src":"2552:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4940,"name":"address","nodeType":"ElementaryTypeName","src":"2552:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2551:15:21"},"returnParameters":{"id":4945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4946,"src":"2590:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4943,"name":"address","nodeType":"ElementaryTypeName","src":"2590:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2589:9:21"},"scope":5027,"src":"2527:72:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0cfc7386","id":4951,"implemented":false,"kind":"function","modifiers":[],"name":"mintWithUSDC","nameLocation":"2616:12:21","nodeType":"FunctionDefinition","parameters":{"id":4949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4948,"mutability":"mutable","name":"balAmountToMint","nameLocation":"2637:15:21","nodeType":"VariableDeclaration","scope":4951,"src":"2629:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4947,"name":"uint256","nodeType":"ElementaryTypeName","src":"2629:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2628:25:21"},"returnParameters":{"id":4950,"nodeType":"ParameterList","parameters":[],"src":"2662:0:21"},"scope":5027,"src":"2607:56:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"599f69f7","id":4968,"implemented":false,"kind":"function","modifiers":[],"name":"callRebalance","nameLocation":"2680:13:21","nodeType":"FunctionDefinition","parameters":{"id":4966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4954,"mutability":"mutable","name":"assets","nameLocation":"2723:6:21","nodeType":"VariableDeclaration","scope":4968,"src":"2704:25:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4952,"name":"address","nodeType":"ElementaryTypeName","src":"2704:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4953,"nodeType":"ArrayTypeName","src":"2704:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4957,"mutability":"mutable","name":"weights","nameLocation":"2759:7:21","nodeType":"VariableDeclaration","scope":4968,"src":"2740:26:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4955,"name":"uint256","nodeType":"ElementaryTypeName","src":"2740:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4956,"nodeType":"ArrayTypeName","src":"2740:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4959,"mutability":"mutable","name":"sender","nameLocation":"2785:6:21","nodeType":"VariableDeclaration","scope":4968,"src":"2777:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4958,"name":"address","nodeType":"ElementaryTypeName","src":"2777:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4961,"mutability":"mutable","name":"receiver","nameLocation":"2810:8:21","nodeType":"VariableDeclaration","scope":4968,"src":"2802:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4960,"name":"address","nodeType":"ElementaryTypeName","src":"2802:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4963,"mutability":"mutable","name":"limit","nameLocation":"2837:5:21","nodeType":"VariableDeclaration","scope":4968,"src":"2829:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4962,"name":"uint256","nodeType":"ElementaryTypeName","src":"2829:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4965,"mutability":"mutable","name":"baseAsset","nameLocation":"2861:9:21","nodeType":"VariableDeclaration","scope":4968,"src":"2853:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4964,"name":"address","nodeType":"ElementaryTypeName","src":"2853:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2693:184:21"},"returnParameters":{"id":4967,"nodeType":"ParameterList","parameters":[],"src":"2886:0:21"},"scope":5027,"src":"2671:216:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"aa95d893","id":4975,"implemented":false,"kind":"function","modifiers":[],"name":"requiredUSDCtoMint","nameLocation":"2904:18:21","nodeType":"FunctionDefinition","parameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"balAmountToMint","nameLocation":"2931:15:21","nodeType":"VariableDeclaration","scope":4975,"src":"2923:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2923:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2922:25:21"},"returnParameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4975,"src":"2971:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4972,"name":"uint256","nodeType":"ElementaryTypeName","src":"2971:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2970:9:21"},"scope":5027,"src":"2895:85:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fe330a51","id":4988,"implemented":false,"kind":"function","modifiers":[],"name":"calculateTokenShare","nameLocation":"2997:19:21","nodeType":"FunctionDefinition","parameters":{"id":4984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4977,"mutability":"mutable","name":"totalBaluni","nameLocation":"3035:11:21","nodeType":"VariableDeclaration","scope":4988,"src":"3027:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4976,"name":"uint256","nodeType":"ElementaryTypeName","src":"3027:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4979,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"3065:17:21","nodeType":"VariableDeclaration","scope":4988,"src":"3057:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4978,"name":"uint256","nodeType":"ElementaryTypeName","src":"3057:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4981,"mutability":"mutable","name":"baluniAmount","nameLocation":"3101:12:21","nodeType":"VariableDeclaration","scope":4988,"src":"3093:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4980,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4983,"mutability":"mutable","name":"tokenDecimals","nameLocation":"3132:13:21","nodeType":"VariableDeclaration","scope":4988,"src":"3124:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4982,"name":"uint256","nodeType":"ElementaryTypeName","src":"3124:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3016:136:21"},"returnParameters":{"id":4987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4988,"src":"3176:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4985,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3175:9:21"},"scope":5027,"src":"2988:197:21","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"2bdd955a","id":4997,"implemented":false,"kind":"function","modifiers":[],"name":"tokenValuation","nameLocation":"3202:14:21","nodeType":"FunctionDefinition","parameters":{"id":4993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4990,"mutability":"mutable","name":"amount","nameLocation":"3225:6:21","nodeType":"VariableDeclaration","scope":4997,"src":"3217:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4989,"name":"uint256","nodeType":"ElementaryTypeName","src":"3217:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4992,"mutability":"mutable","name":"token","nameLocation":"3241:5:21","nodeType":"VariableDeclaration","scope":4997,"src":"3233:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4991,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3216:31:21"},"returnParameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4997,"src":"3271:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"3271:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3270:9:21"},"scope":5027,"src":"3193:87:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"295b9300","id":5002,"implemented":false,"kind":"function","modifiers":[],"name":"totalValuation","nameLocation":"3297:14:21","nodeType":"FunctionDefinition","parameters":{"id":4998,"nodeType":"ParameterList","parameters":[],"src":"3311:2:21"},"returnParameters":{"id":5001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5002,"src":"3337:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4999,"name":"uint256","nodeType":"ElementaryTypeName","src":"3337:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3336:9:21"},"scope":5027,"src":"3288:58:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"71ddcfb8","id":5009,"implemented":false,"kind":"function","modifiers":[],"name":"getUSDCShareValue","nameLocation":"3363:17:21","nodeType":"FunctionDefinition","parameters":{"id":5005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5004,"mutability":"mutable","name":"amount","nameLocation":"3389:6:21","nodeType":"VariableDeclaration","scope":5009,"src":"3381:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5003,"name":"uint256","nodeType":"ElementaryTypeName","src":"3381:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3380:16:21"},"returnParameters":{"id":5008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5009,"src":"3420:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5006,"name":"uint256","nodeType":"ElementaryTypeName","src":"3420:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3419:9:21"},"scope":5027,"src":"3354:75:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8d483df1","id":5016,"implemented":false,"kind":"function","modifiers":[],"name":"fetchMarketPrices","nameLocation":"3446:17:21","nodeType":"FunctionDefinition","parameters":{"id":5010,"nodeType":"ParameterList","parameters":[],"src":"3463:2:21"},"returnParameters":{"id":5015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5016,"src":"3489:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5011,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5016,"src":"3498:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5013,"name":"uint256","nodeType":"ElementaryTypeName","src":"3498:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3488:18:21"},"scope":5027,"src":"3437:70:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0d8e6e2c","id":5021,"implemented":false,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"3524:10:21","nodeType":"FunctionDefinition","parameters":{"id":5017,"nodeType":"ParameterList","parameters":[],"src":"3534:2:21"},"returnParameters":{"id":5020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5021,"src":"3560:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5018,"name":"uint64","nodeType":"ElementaryTypeName","src":"3560:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3559:8:21"},"scope":5027,"src":"3515:53:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e73faa2d","id":5026,"implemented":false,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"3585:9:21","nodeType":"FunctionDefinition","parameters":{"id":5022,"nodeType":"ParameterList","parameters":[],"src":"3594:2:21"},"returnParameters":{"id":5025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5026,"src":"3620:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5023,"name":"uint256","nodeType":"ElementaryTypeName","src":"3620:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3619:9:21"},"scope":5027,"src":"3576:53:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5028,"src":"267:3365:21","usedErrors":[],"usedEvents":[]}],"src":"40:3594:21"},"id":21}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"UPGRADE_INTERFACE_VERSION":{"details":"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122099005689d8ee280502f7a9ed0831b2aacdc1ae64fd05b81ebd15e0f9d60fce7f64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 STOP JUMP DUP10 0xD8 0xEE 0x28 SDIV MUL 0xF7 0xA9 0xED ADDMOD BALANCE 0xB2 0xAA 0xCD 0xC1 0xAE PUSH5 0xFD05B81EBD ISZERO 0xE0 0xF9 0xD6 0xF 0xCE PUSH32 0x64736F6C63430008190033000000000000000000000000000000000000000000 ","sourceMap":"449:6273:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea264697066735822122099005689d8ee280502f7a9ed0831b2aacdc1ae64fd05b81ebd15e0f9d60fce7f64736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 STOP JUMP DUP10 0xD8 0xEE 0x28 SDIV MUL 0xF7 0xA9 0xED ADDMOD BALANCE 0xB2 0xAA 0xCD 0xC1 0xAE PUSH5 0xFD05B81EBD ISZERO 0xE0 0xF9 0xD6 0xF 0xCE PUSH32 0x64736F6C63430008190033000000000000000000000000000000000000000000 ","sourceMap":"449:6273:6:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220e629626646d1d2bc1379505bf1e85b3b108993263cd5a4564554fb4f0d923bfe64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0x29 PUSH3 0x6646D1 0xD2 0xBC SGT PUSH26 0x505BF1E85B3B108993263CD5A4564554FB4F0D923BFE64736F6C PUSH4 0x43000819 STOP CALLER ","sourceMap":"195:6066:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220e629626646d1d2bc1379505bf1e85b3b108993263cd5a4564554fb4f0d923bfe64736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0x29 PUSH3 0x6646D1 0xD2 0xBC SGT PUSH26 0x505BF1E85B3B108993263CD5A4564554FB4F0D923BFE64736F6C PUSH4 0x43000819 STOP CALLER ","sourceMap":"195:6066:11:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2049,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220369bb9cb24b5a45a41b5d61f09cfcbb3b81fd65fb733bfc24b7c89345473a26464736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE SWAP12 0xB9 0xCB 0x24 0xB5 LOG4 GAS COINBASE 0xB5 0xD6 0x1F MULMOD 0xCF 0xCB 0xB3 0xB8 0x1F 0xD6 PUSH0 0xB7 CALLER 0xBF 0xC2 0x4B PUSH29 0x89345473A26464736F6C63430008190033000000000000000000000000 ","sourceMap":"1245:2685:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220369bb9cb24b5a45a41b5d61f09cfcbb3b81fd65fb733bfc24b7c89345473a26464736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE SWAP12 0xB9 0xCB 0x24 0xB5 LOG4 GAS COINBASE 0xB5 0xD6 0x1F MULMOD 0xCF 0xCB 0xB3 0xB8 0x1F 0xD6 PUSH0 0xB7 CALLER 0xBF 0xC2 0x4B PUSH29 0x89345473A26464736F6C63430008190033000000000000000000000000 ","sourceMap":"1245:2685:14:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/BaluniV1Pool.sol":{"BaluniV1Pool":{"abi":[{"inputs":[{"internalType":"address","name":"_rebalancer","type":"address"},{"internalType":"address[]","name":"_assets","type":"address[]"},{"internalType":"uint256[]","name":"_weights","type":"uint256[]"},{"internalType":"uint256","name":"_trigger","type":"uint256"},{"internalType":"address","name":"_periphery","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesBurned","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesMinted","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"by","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"}],"name":"RebalancePerformed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"fromToken","type":"address"},{"indexed":true,"internalType":"address","name":"toToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"amountsAdded","type":"uint256[]"}],"name":"WeightsRebalanced","type":"event"},{"inputs":[],"name":"ONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SWAP_FEE_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"assetInfos","outputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"weight","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetIndex","type":"uint256"}],"name":"assetLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"computeTotalValuation","outputs":[{"internalType":"uint256","name":"totalVal","type":"uint256"},{"internalType":"uint256[]","name":"valuations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeviation","outputs":[{"internalType":"bool[]","name":"directions","type":"bool[]"},{"internalType":"uint256[]","name":"deviations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isRebalanceNeeded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"performRebalanceIfNeeded","outputs":[{"internalType":"uint256[]","name":"amountsToAdd","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsToRemove","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"periphery","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"toSend","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trigger","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"assetLiquidity(uint256)":{"details":"Returns the liquidity of a specific asset in the pool.","params":{"assetIndex":"The index of the asset."},"returns":{"_0":"The liquidity of the asset."}},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(address)":{"details":"Burns the pool tokens and transfers the underlying assets to the specified address.","params":{"to":"The address to transfer the underlying assets to."}},"computeTotalValuation()":{"details":"Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.","returns":{"totalVal":"The total valuation of the pool.","valuations":"An array of individual valuations."}},"constructor":{"details":"Initializes a new instance of the BaluniV1Pool contract.","params":{"_assets":"An array of addresses representing the assets in the pool.","_periphery":"The address of the periphery contract.","_rebalancer":"The address of the rebalancer contract.","_trigger":"The trigger value for rebalancing the pool.","_weights":"An array of weights corresponding to the assets in the pool."}},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"getAmountOut(address,address,uint256)":{"details":"Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.","params":{"amount":"The amount of `fromToken` being swapped.","fromToken":"The address of the token being swapped from.","toToken":"The address of the token being swapped to."},"returns":{"_0":"The amount of `toToken` that will be received."}},"getAssetReserve(address)":{"details":"Returns the reserve amount of the specified asset.","params":{"asset":"The address of the asset."},"returns":{"_0":"The reserve amount of the asset."}},"getAssets()":{"details":"Retrieves the list of assets in the pool.","returns":{"_0":"An array of addresses representing the assets."}},"getDeviation()":{"details":"Returns the deviation between the current weights and target weights of the assets in the pool.","returns":{"directions":"An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight."}},"getReserves()":{"details":"Returns an array of reserves for each asset in the pool.","returns":{"_0":"An array of reserves."}},"getWeights()":{"details":"Retrieves the list of weights associated with the assets in the pool.","returns":{"_0":"An array of uint256 values representing the weights."}},"isRebalanceNeeded()":{"details":"Checks if rebalancing is needed for the pool.","returns":{"_0":"A boolean value indicating whether rebalancing is needed or not."}},"liquidity()":{"details":"Returns the total liquidity of the pool.","returns":{"_0":"The total liquidity of the pool."}},"mint(address,uint256[])":{"details":"Mints new tokens and adds them to the specified address.","params":{"to":"The address to which the new tokens will be minted."},"returns":{"_0":"The amount of tokens minted."}},"name()":{"details":"Returns the name of the token."},"performRebalanceIfNeeded()":{"details":"Performs rebalance"},"rebalanceWeights(address)":{"details":"Rebalances the weights of the pool by calculating the amounts to add for each token, transferring the calculated amounts from the user to the pool, minting the total added liquidity, updating the reserves, and emitting an event to indicate the rebalancing of weights.","params":{"receiver":"The address to receive the minted liquidity tokens."}},"swap(address,address,uint256,address)":{"details":"Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`. Requirements: - `fromToken` and `toToken` must be different tokens. - `amount` must be greater than zero. - Sufficient liquidity of `toToken` must be available in the contract. Emits a `Swap` event with the details of the swap. Updates the reserves after the swap.","params":{"amount":"The amount of `fromToken` to swap.","fromToken":"The address of the token to swap from.","receiver":"The address to receive the swapped tokens.","toToken":"The address of the token to swap to."},"returns":{"toSend":"The amount of `toToken` received after the swap."}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."},"unitPrice()":{"details":"Returns the unit price of the pool.","returns":{"_0":"The unit price of the pool."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":2337,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":2357,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2302,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_9377":{"entryPoint":2275,"id":null,"parameterSlots":1,"returnSlots":0},"memory_array_index_access_uint256_dyn":{"entryPoint":2380,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x439 JUMPI PUSH2 0x2B1A DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x8FE JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH2 0x439 JUMPI PUSH2 0x33 DUP3 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP4 ADD SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD SWAP3 PUSH2 0x63 DUP5 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0x71 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP5 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8CB JUMPI POP POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP5 ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD PUSH2 0xC3 DUP2 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0xD1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8BB JUMPI POP POP POP PUSH2 0x107 PUSH1 0x80 PUSH1 0x60 DUP7 ADD MLOAD SWAP6 ADD PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 DUP2 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x136 DUP3 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8B1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x843 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7BB JUMPI PUSH0 SWAP3 PUSH2 0x7B0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x7A6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x724 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x6A0 JUMPI PUSH0 SWAP3 PUSH2 0x695 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND CALLER OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE DUP3 MLOAD DUP3 MLOAD SUB PUSH2 0x645 JUMPI PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x525 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x280 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND ISZERO PUSH2 0x4E0 JUMPI PUSH2 0x291 DUP2 DUP5 PUSH2 0x94C JUMP JUMPDEST MLOAD ISZERO PUSH2 0x4AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A9 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH2 0x2B5 DUP3 DUP6 PUSH2 0x94C JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 DUP4 ADD DUP1 DUP5 GT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 DUP4 ADD PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x496 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x6 SSTORE DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x6 PUSH0 MSTORE DUP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 SWAP1 SWAP2 ADD SSTORE PUSH2 0x383 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x450 JUMPI JUMPDEST POP ISZERO PUSH2 0x3D1 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x265 JUMP JUMPDEST PUSH0 SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP2 NOT PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x445 JUMPI PUSH2 0x409 JUMPI JUMPDEST DUP1 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x43D JUMPI JUMPDEST DUP2 PUSH2 0x422 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x439 JUMPI PUSH0 PUSH2 0x403 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x47A JUMPI JUMPDEST DUP2 PUSH2 0x46B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD PUSH0 PUSH2 0x3C0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x45E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x7 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x89A30271 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x60B JUMPI JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH0 SWAP1 DUP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x594 DUP4 DUP4 PUSH2 0x94C JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5A9 JUMPI PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x581 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2710 SUB PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH2 0x21B9 SWAP1 DUP2 PUSH2 0x961 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x63D JUMPI JUMPDEST DUP2 PUSH2 0x626 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI PUSH2 0x637 SWAP1 PUSH2 0x921 JUMP JUMPDEST DUP3 PUSH2 0x55C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x70C JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x6F4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x210 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x6E6 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x4 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x788 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x77A JUMPI POP PUSH2 0x1E5 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x76D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D1 JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x828 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x810 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x1AE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x802 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x3 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x8A7 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x899 JUMPI POP PUSH2 0x183 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x88C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16F JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xEC JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x8D8 DUP5 PUSH2 0x921 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x439 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x496 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1D22CCD EQ PUSH2 0x188E JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1799 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x156F JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x153F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1496 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1478 JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x1454 JUMPI DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x13F7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1316 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x12FB JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x12C7 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x12AC JUMPI DUP1 PUSH4 0x67A6C440 EQ PUSH2 0x1291 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x122E JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x1015 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xFDF JUMPI DUP1 PUSH4 0x77AACE1A EQ PUSH2 0xFB7 JUMPI DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0xF99 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0xF2F JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0xB05 JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0xAE0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x9E1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0x98C JUMPI DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0x96E JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x946 JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x91E JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0x8A6 JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0x85A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x811 JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x524 JUMPI PUSH4 0xF47B45E8 EQ PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x3 NOT PUSH0 CALLDATASIZE DUP3 ADD SLT PUSH2 0x41F JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 DUP6 AND SWAP2 PUSH2 0x1B8 CALLER DUP5 EQ PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1C3 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP4 PUSH2 0x1D5 DUP6 PUSH2 0x1AF9 JUMP JUMPDEST SWAP4 PUSH2 0x1DF DUP7 PUSH2 0x1AF9 JUMP JUMPDEST SWAP8 PUSH2 0x1E9 DUP8 PUSH2 0x1AF9 JUMP JUMPDEST SWAP3 PUSH2 0x1F3 DUP9 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 PUSH2 0x1FD DUP10 PUSH2 0x1AF9 JUMP JUMPDEST SWAP11 PUSH2 0x207 DUP11 PUSH2 0x1AF9 JUMP JUMPDEST SWAP10 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x46B JUMPI POP POP PUSH2 0x21B PUSH2 0x1B3F JUMP JUMPDEST DUP5 PUSH1 0xC SLOAD AND SWAP2 PUSH1 0x7 SLOAD DUP7 PUSH1 0xB SLOAD AND DUP5 EXTCODESIZE ISZERO PUSH2 0x41F JUMPI DUP15 MLOAD PUSH4 0x3C2FDDC5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xE0 DUP2 DUP15 ADD MSTORE DUP14 SWAP10 SWAP1 SWAP7 DUP8 SWAP6 DUP7 SWAP6 SWAP2 SWAP1 PUSH2 0x25A SWAP1 PUSH1 0xE4 DUP9 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST SWAP12 PUSH1 0x24 SWAP13 DUP3 DUP9 DUP3 SUB ADD PUSH1 0x24 DUP10 ADD MSTORE PUSH2 0x271 SWAP2 PUSH2 0x196F JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB ADD PUSH1 0x44 DUP8 ADD MSTORE PUSH2 0x284 SWAP2 PUSH2 0x1907 JUMP JUMPDEST SWAP3 PUSH1 0x64 DUP6 ADD MSTORE DUP1 PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC4 DUP4 ADD MSTORE SUB DUP2 GAS PUSH0 SWAP5 DUP6 SWAP2 CALL DUP1 ISZERO PUSH2 0x461 JUMPI PUSH2 0x434 JUMPI JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x9 SLOAD SWAP1 SWAP7 SWAP1 DUP4 AND SWAP3 DUP3 JUMPDEST DUP9 DUP2 LT PUSH2 0x329 JUMPI DUP13 DUP13 PUSH2 0x325 DUP14 DUP14 PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP5 MLOAD PUSH1 0x20 DUP2 MSTORE DUP1 PUSH2 0x301 CALLER SWAP5 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x196F JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x317 DUP4 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1907 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 PUSH2 0x334 DUP3 DUP13 PUSH2 0x1B2B JUMP JUMPDEST MLOAD AND DUP13 MLOAD DUP1 SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP8 DUP7 DUP4 ADD MSTORE DUP2 DUP10 PUSH1 0x20 SWAP5 DUP6 SWAP4 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x42A JUMPI DUP16 SWAP1 DUP11 SWAP5 SWAP4 DUP16 SWAP2 SWAP4 DUP14 SWAP5 DUP11 SWAP3 PUSH2 0x3E9 JUMPI JUMPDEST POP POP SWAP5 DUP5 SWAP2 PUSH1 0x1 SWAP7 PUSH2 0x37C DUP5 DUP8 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x387 DUP4 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MLOAD PUSH2 0x392 DUP5 DUP5 PUSH2 0x1B2B JUMP JUMPDEST MLOAD LT ISZERO PUSH2 0x3CC JUMPI POP PUSH2 0x3BE SWAP1 PUSH2 0x3B7 DUP4 PUSH2 0x3B0 DUP2 PUSH2 0x3C4 SWAP8 SWAP9 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP3 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST SWAP3 PUSH2 0x1B2B JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x2BC JUMP JUMPDEST SWAP4 PUSH2 0x3E3 SWAP4 POP PUSH2 0x3B7 DUP4 PUSH2 0x3B0 DUP2 PUSH2 0x3BE SWAP6 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x3C6 JUMP JUMPDEST SWAP5 POP SWAP6 POP POP POP POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x423 JUMPI JUMPDEST PUSH2 0x404 DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI DUP9 DUP15 DUP3 DUP11 DUP16 PUSH1 0x1 SWAP7 MLOAD SWAP2 SWAP7 DUP2 SWAP4 POP PUSH2 0x36A JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3FA JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x44E JUMPI DUP9 MSTORE PUSH0 DUP1 PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x475 DUP3 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD AND PUSH2 0x482 DUP3 DUP14 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH2 0x48E DUP3 PUSH2 0x19AB JUMP JUMPDEST POP ADD SLOAD PUSH2 0x49B DUP3 DUP6 PUSH2 0x1B2B JUMP JUMPDEST MSTORE DUP6 PUSH2 0x4A7 DUP3 DUP14 PUSH2 0x1B2B JUMP JUMPDEST MLOAD AND SWAP1 DUP14 MLOAD DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP10 DUP14 DUP4 ADD MSTORE DUP2 PUSH1 0x24 PUSH1 0x20 SWAP4 DUP5 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x51A JUMPI PUSH0 SWAP2 PUSH2 0x4EB JUMPI JUMPDEST POP PUSH1 0x1 SWAP3 POP PUSH2 0x4E4 DUP3 DUP12 PUSH2 0x1B2B JUMP JUMPDEST MSTORE ADD PUSH2 0x20A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x513 JUMPI JUMPDEST PUSH2 0x501 DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH0 PUSH2 0x4D5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4F7 JUMP JUMPDEST DUP16 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x540 PUSH2 0x1E37 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH2 0x561 PUSH2 0x18DB JUMP JUMPDEST SWAP1 PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x41F JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x41F JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP1 PUSH2 0x590 DUP3 PUSH2 0x1A2D JUMP JUMPDEST SWAP2 PUSH2 0x59D DUP6 MLOAD SWAP4 DUP5 PUSH2 0x19F7 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP7 DUP9 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x41F JUMPI DUP8 DUP10 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x802 JUMPI POP POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP3 POP PUSH2 0x5E1 SWAP2 POP DUP5 AND CALLER EQ PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP2 PUSH2 0x5EE PUSH2 0x1B3F JUMP JUMPDEST SWAP1 PUSH1 0x6 SLOAD SWAP2 MLOAD DUP3 SUB PUSH2 0x7C0 JUMPI DUP2 ISZERO PUSH2 0x792 JUMPI SWAP1 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x759 JUMPI POP POP POP DUP2 ISZERO PUSH2 0x70C JUMPI DUP1 PUSH2 0x692 JUMPI POP SWAP5 JUMPDEST DUP6 ISZERO PUSH2 0x660 JUMPI POP POP DUP5 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP2 PUSH2 0x651 DUP7 DUP6 PUSH2 0x2008 JUMP JUMPDEST DUP5 MLOAD SWAP4 DUP7 DUP6 MSTORE AND SWAP3 LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x4D696E7420717479206973203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x69A PUSH2 0x1E62 JUMP JUMPDEST POP SWAP2 DUP3 ISZERO PUSH2 0x6BB JUMPI PUSH2 0x6B5 SWAP3 SWAP2 PUSH2 0x6B0 SWAP2 PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x1C97 JUMP JUMPDEST SWAP5 PUSH2 0x61C JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP11 SWAP1 MSTORE PUSH1 0x26 DUP2 DUP11 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP10 SWAP1 MSTORE PUSH1 0x22 DUP2 DUP10 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP4 PUSH2 0x789 PUSH1 0x1 SWAP2 PUSH2 0x783 DUP10 PUSH2 0x76F DUP10 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD AND PUSH2 0x77C DUP10 DUP8 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x213F JUMP JUMPDEST SWAP1 PUSH2 0x1E2A JUMP JUMPDEST SWAP5 ADD SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP12 SWAP1 MSTORE PUSH1 0x9 DUP2 DUP12 ADD MSTORE PUSH9 0x4E6F20617373657473 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP12 SWAP1 MSTORE PUSH1 0x17 DUP2 DUP12 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0x5BC JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x82D PUSH2 0x18DB JUMP JUMPDEST PUSH2 0x835 PUSH2 0x18F1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x41F JUMPI PUSH2 0x881 SWAP1 PUSH2 0x19AB JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x8C4 PUSH2 0x1E62 JUMP JUMPDEST DUP1 SWAP3 SWAP2 POP MLOAD DUP4 LT ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x20 DUP5 PUSH2 0x8DD DUP6 DUP6 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840C2E6E6CAE840D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0xB SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0xA SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x540 PUSH2 0x9AC PUSH2 0x18DB JUMP JUMPDEST PUSH2 0x1DF2 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x9DA PUSH2 0x9D0 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x207D JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0xAD6 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP2 EQ PUSH2 0xAC3 JUMPI DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xAA1 JUMPI POP PUSH1 0x1 EQ PUSH2 0xA48 JUMPI JUMPDEST PUSH2 0x325 DUP7 DUP7 PUSH2 0xA3E DUP3 DUP12 SUB DUP4 PUSH2 0x19F7 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18B1 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xA8E JUMPI POP POP POP DUP3 PUSH2 0x325 SWAP5 PUSH2 0xA3E SWAP3 DUP3 ADD ADD SWAP5 PUSH0 PUSH2 0xA2D JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xA71 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xA3E DUP3 PUSH2 0x325 PUSH0 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x22 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xA0E JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0xAFC PUSH2 0x1D9C JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH2 0xB22 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH2 0xB3C CALLER DUP5 EQ PUSH2 0x1A45 JUMP JUMPDEST ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE DUP4 PUSH0 KECCAK256 SLOAD SWAP6 DUP7 ISZERO PUSH2 0xEEC JUMPI PUSH1 0x2 SLOAD SWAP7 DUP8 ISZERO PUSH2 0xEBA JUMPI PUSH1 0x6 SLOAD PUSH2 0xB63 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP9 PUSH1 0x1E DUP4 MUL DUP4 DUP2 DIV PUSH1 0x1E SUB PUSH2 0xEA7 JUMPI PUSH2 0x2710 PUSH2 0xB81 SWAP2 DIV DUP1 SWAP5 PUSH2 0x1AC5 JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xDEC JUMPI POP POP POP POP ADDRESS PUSH0 MSTORE PUSH0 DUP8 MSTORE DUP5 DUP7 PUSH0 KECCAK256 SLOAD LT PUSH2 0xDA9 JUMPI DUP2 DUP8 DUP6 PUSH1 0xC SLOAD AND DUP9 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x61D027B3 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xD9F JUMPI SWAP1 DUP9 SWAP2 PUSH0 SWAP2 PUSH2 0xD65 JUMPI JUMPDEST POP DUP8 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB DUP2 PUSH0 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xD5B JUMPI PUSH0 SWAP2 PUSH2 0xD25 JUMPI JUMPDEST POP ISZERO PUSH2 0xCEC JUMPI ADDRESS ISZERO PUSH2 0xCD6 JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP5 PUSH0 KECCAK256 SLOAD SWAP1 DUP5 DUP3 LT PUSH2 0xCAB JUMPI POP DUP4 SWAP3 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 PUSH2 0x325 SWAP7 SWAP6 DUP9 SWAP4 ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE SUB DUP7 PUSH0 KECCAK256 SSTORE DUP5 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 DUP7 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 ADDRESS SWAP3 LOG3 DUP6 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST DUP6 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP7 MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xD54 JUMPI JUMPDEST PUSH2 0xD3C DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x41F JUMPI PUSH0 PUSH2 0xC0C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xD32 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xD98 JUMPI JUMPDEST PUSH2 0xD7C DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0x41F JUMPI DUP8 SWAP1 PUSH2 0xBF8 PUSH2 0xBC9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xD72 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xE2E DUP12 DUP10 PUSH2 0xDFA DUP5 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD DUP14 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP12 DUP3 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE9D JUMPI DUP11 DUP6 SWAP4 SWAP3 DUP16 SWAP3 PUSH0 SWAP2 PUSH2 0xE63 JUMPI JUMPDEST POP PUSH2 0x3BE PUSH1 0x1 SWAP6 PUSH2 0x6B0 PUSH2 0xE5C SWAP5 DUP8 SWAP5 PUSH2 0x1AE6 JUMP JUMPDEST MSTORE ADD PUSH2 0xB84 JUMP JUMPDEST SWAP5 POP POP POP POP DUP12 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE96 JUMPI JUMPDEST PUSH2 0xE7D DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI SWAP1 MLOAD DUP4 SWAP2 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH2 0x3BE PUSH2 0xE47 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE73 JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH2 0xF48 PUSH2 0x1CB5 JUMP JUMPDEST DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP2 DUP4 ADD SWAP2 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 PUSH1 0x20 DUP1 SWAP6 ADD SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0xF80 JUMPI DUP6 DUP1 PUSH2 0x325 DUP8 DUP8 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1907 JUMP JUMPDEST DUP7 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP6 DUP2 ADD SWAP6 DUP8 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 ADD PUSH2 0xF65 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1004 PUSH2 0x18DB JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH2 0x1030 PUSH2 0x18DB JUMP JUMPDEST SWAP2 PUSH2 0x1039 PUSH2 0x18F1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x41F JUMPI PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x121E JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP4 DUP2 AND SWAP4 DUP4 AND SWAP3 DUP5 DUP5 EQ PUSH2 0x11DB JUMPI DUP8 ISZERO PUSH2 0x1198 JUMPI SWAP1 PUSH2 0x1087 DUP9 DUP3 PUSH2 0x108F SWAP5 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 DUP3 SWAP2 PUSH2 0x1DF2 JUMP JUMPDEST LT PUSH2 0x115C JUMPI PUSH1 0x1E DUP2 MUL DUP2 DUP2 DIV PUSH1 0x1E EQ DUP3 ISZERO OR ISZERO PUSH2 0x1149 JUMPI SWAP1 PUSH2 0x2710 PUSH2 0x10B5 SWAP3 DIV SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST SWAP5 DUP6 ISZERO PUSH2 0x10F8 JUMPI POP PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP5 PUSH1 0x20 SWAP8 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP8 DUP10 DUP3 ADD MSTORE LOG4 PUSH1 0x1 PUSH1 0x5 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F2073656E64206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x11 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74204C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP10 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP10 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP7 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x6 SLOAD PUSH2 0x124B DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x126A JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x325 SWAP1 DUP3 ADD DUP7 PUSH2 0x196F JUMP JUMPDEST DUP1 PUSH2 0x1276 PUSH1 0x1 SWAP3 PUSH2 0x19AB JUMP JUMPDEST POP DUP3 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND PUSH2 0x128A DUP3 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MSTORE ADD PUSH2 0x124E JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1E DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x540 PUSH2 0x12C1 CALLDATASIZE PUSH2 0x193A JUMP JUMPDEST SWAP2 PUSH2 0x1C14 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH2 0x325 PUSH2 0x12E3 PUSH2 0x1E62 JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x41F JUMPI PUSH2 0x1326 CALLDATASIZE PUSH2 0x193A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE DUP9 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 MSTORE SWAP1 DUP8 SWAP1 KECCAK256 SLOAD SWAP3 SWAP6 SWAP4 SWAP5 SWAP4 SWAP1 DUP4 ADD PUSH2 0x1363 JUMPI JUMPDEST PUSH1 0x20 DUP8 PUSH2 0x9DA DUP9 DUP9 DUP9 PUSH2 0x207D JUMP JUMPDEST DUP6 DUP4 LT PUSH2 0x13CB JUMPI DUP2 ISZERO PUSH2 0x13B5 JUMPI CALLER ISZERO PUSH2 0x139F JUMPI POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 SWAP2 DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0x9DA PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x6 SLOAD PUSH2 0x1414 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1433 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x325 SWAP1 DUP3 ADD DUP7 PUSH2 0x1907 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x1440 DUP2 SWAP4 PUSH2 0x19AB JUMP JUMPDEST POP ADD SLOAD PUSH2 0x144D DUP3 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MSTORE ADD PUSH2 0x1417 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1470 PUSH2 0x1E62 JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH2 0x14B0 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x1529 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1513 JUMPI PUSH1 0x20 SWAP4 POP CALLER PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 DUP2 DUP7 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP2 DUP7 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH2 0x325 SWAP1 PUSH2 0x155C PUSH2 0x1B3F JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH2 0x158C PUSH2 0x18DB JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x15A4 DUP5 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x15AF PUSH2 0x1C3 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0x15B7 PUSH2 0x1E62 JUMP JUMPDEST SWAP3 SWAP1 SWAP5 PUSH1 0x6 SLOAD SWAP6 PUSH2 0x15C7 DUP8 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x1744 JUMPI POP POP POP DUP2 DUP4 PUSH0 SWAP3 PUSH0 JUMPDEST DUP10 DUP2 LT PUSH2 0x171D JUMPI POP PUSH1 0xB SLOAD AND DUP8 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xD5B JUMPI PUSH0 SWAP4 PUSH2 0x16E4 JUMPI JUMPDEST POP PUSH1 0xFF PUSH8 0xDE0B6B3A7640000 SWAP4 AND DUP4 SUB SWAP3 DUP4 GT PUSH2 0x16D1 JUMPI POP PUSH2 0x1631 SWAP2 PUSH2 0x162B SWAP2 PUSH2 0x1AE6 JUMP JUMPDEST SWAP5 PUSH2 0x1AF9 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x167A JUMPI DUP1 PUSH2 0x164A PUSH1 0x1 SWAP3 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MLOAD PUSH2 0x1656 JUMPI JUMPDEST ADD PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x166A PUSH2 0x1663 DUP3 DUP8 PUSH2 0x1B2B JUMP JUMPDEST MLOAD DUP3 PUSH2 0x1EF6 JUMP JUMPDEST PUSH2 0x1674 DUP3 DUP9 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x1650 JUMP JUMPDEST POP PUSH2 0x325 SWAP2 SWAP3 PUSH2 0x168A DUP7 DUP9 PUSH2 0x2008 JUMP JUMPDEST PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP3 MLOAD DUP6 DUP2 MSTORE DUP1 PUSH2 0x16BF CALLER SWAP5 DUP9 DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST SUB SWAP1 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP3 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1716 JUMPI JUMPDEST PUSH2 0x16FC DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x41F JUMPI SWAP2 PUSH0 PUSH2 0x1606 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x16F2 JUMP JUMPDEST SWAP4 PUSH2 0x1739 SWAP2 SWAP4 POP PUSH1 0x1 SWAP3 POP PUSH2 0x1732 DUP6 DUP10 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1E2A JUMP JUMPDEST SWAP3 ADD DUP4 SWAP2 DUP6 SWAP2 PUSH2 0x15DA JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH2 0x1760 PUSH1 0x1 PUSH2 0x1757 DUP2 SWAP6 PUSH2 0x19AB JUMP JUMPDEST POP ADD SLOAD DUP7 PUSH2 0x1AE6 JUMP JUMPDEST DIV DUP1 PUSH2 0x176C DUP4 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MLOAD LT PUSH2 0x177A JUMPI JUMPDEST POP ADD PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x1788 SWAP1 PUSH2 0x3B7 DUP4 DUP7 PUSH2 0x1B2B JUMP JUMPDEST PUSH2 0x1792 DUP3 DUP11 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x1773 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x1884 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP3 EQ PUSH2 0x1871 JUMPI POP DUP4 DUP8 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1851 JUMPI POP PUSH1 0x1 EQ PUSH2 0x17F7 JUMPI JUMPDEST POP POP POP PUSH2 0xA3E DUP3 PUSH2 0x325 SWAP5 SUB DUP4 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x183E JUMPI POP POP POP DUP3 PUSH2 0x325 SWAP5 PUSH2 0xA3E SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0x17E5 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x1822 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xA3E DUP3 PUSH2 0x325 PUSH2 0x17E5 JUMP JUMPDEST PUSH1 0x22 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x17C5 JUMP JUMPDEST CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x40 SWAP3 DUP2 DUP4 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x41F JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x41F JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1926 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x41F JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x41F JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x198E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x19E3 JUMPI PUSH1 0x6 PUSH0 MSTORE PUSH1 0x1 SHL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1A19 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A19 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1A4C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4F6E6C7920506572697068657279 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A89 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1AD2 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1AD2 JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x1B03 DUP3 PUSH2 0x1A2D JUMP JUMPDEST PUSH2 0x1B10 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x19F7 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1B21 PUSH1 0x1F NOT SWAP2 PUSH2 0x1A2D JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x19E3 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xFA67079 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH0 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1C09 JUMPI PUSH0 SWAP2 PUSH2 0x1B7B JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x1B8C DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x41F JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x41F JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x41F JUMPI DUP3 MLOAD PUSH2 0x1BC5 DUP2 PUSH2 0x1A2D JUMP JUMPDEST SWAP4 PUSH2 0x1BD3 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x19F7 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x41F JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1BFA JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1C09 JUMPI PUSH0 SWAP2 PUSH2 0x1C68 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1C8F JUMPI JUMPDEST DUP2 PUSH2 0x1C83 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1C76 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1CA1 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1CBD PUSH2 0x1E62 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x6 SLOAD SWAP1 PUSH2 0x1CCC DUP3 PUSH2 0x1A2D JUMP JUMPDEST SWAP2 PUSH2 0x1CDA PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x19F7 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x1CE9 DUP3 PUSH2 0x1A2D JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH2 0x1CF9 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1D0B JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x1D15 DUP2 DUP4 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1AD2 JUMPI PUSH2 0x1D37 DUP6 PUSH1 0x1 SWAP4 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x1D40 DUP3 PUSH2 0x19AB JUMP JUMPDEST POP DUP4 ADD SLOAD DUP4 SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x1D75 JUMPI SWAP1 PUSH2 0x1D58 SWAP2 PUSH2 0x1AC5 JUMP JUMPDEST PUSH2 0x1D62 DUP4 DUP12 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x1D6D DUP3 DUP9 PUSH2 0x1B2B JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x1CFC JUMP JUMPDEST SWAP1 PUSH2 0x1D80 SWAP3 POP PUSH2 0x1AC5 JUMP JUMPDEST PUSH2 0x1D8A DUP3 DUP11 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x1D96 DUP3 DUP9 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0x1DA4 PUSH2 0x1CB5 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1DEB JUMPI PUSH2 0x1DB9 DUP2 DUP5 PUSH2 0x1B2B JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x1DD6 JUMPI JUMPDEST PUSH2 0x1DCE JUMPI PUSH1 0x1 ADD PUSH2 0x1DA6 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x1DE1 DUP2 DUP4 PUSH2 0x1B2B JUMP JUMPDEST MLOAD PUSH1 0x7 SLOAD LT PUSH2 0x1DC2 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x44 DUP2 ADD PUSH2 0x1C53 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1AD2 JUMPI JUMP JUMPDEST PUSH2 0x1E3F PUSH2 0x1E62 JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x1E5C JUMPI PUSH2 0x6B0 PUSH2 0x1E59 SWAP3 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH0 PUSH2 0x1E70 DUP4 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP4 PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x1E93 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x1ED2 PUSH1 0x1 SWAP2 DUP4 PUSH2 0x1EA7 DUP9 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD AND PUSH2 0x1EB3 DUP2 PUSH2 0x1DF2 JUMP JUMPDEST SWAP1 DUP7 DUP2 SUB PUSH2 0x1EDC JUMPI POP PUSH2 0x1EC6 DUP9 DUP12 PUSH2 0x1B2B JUMP JUMPDEST MSTORE JUMPDEST PUSH2 0x1732 DUP8 DUP11 PUSH2 0x1B2B JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 PUSH2 0x1EE6 SWAP2 PUSH2 0x213F JUMP JUMPDEST PUSH2 0x1EF0 DUP9 DUP12 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x1EC8 JUMP JUMPDEST PUSH2 0x1EFF DUP2 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 SWAP2 DUP3 AND DUP4 EQ PUSH2 0x2002 JUMPI SWAP2 DUP2 PUSH2 0x1F6F SWAP5 SWAP3 PUSH2 0x1F2C PUSH1 0x20 SWAP6 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD AND SWAP1 PUSH1 0xC SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0x248391FF PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1C09 JUMPI PUSH0 SWAP2 PUSH2 0x1FD0 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x1F8B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1FFA JUMPI JUMPDEST DUP2 PUSH2 0x1FEB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD PUSH0 PUSH2 0x1F81 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1FDE JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2065 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x2049 PUSH0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2127 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2065 JUMPI DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x20F5 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD PUSH2 0x1C53 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR BLOBBASEFEE LOG2 DUP3 0x21 BALANCE LT MOD PUSH11 0x9558CA1CAE88E104122E88 0xC8 0xCC EXP POP 0xDC SDIV LOG3 0xC6 TLOAD 0xC0 STATICCALL 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1731:22487:15:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1731:22487:15;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;-1:-1:-1;;;;;1731:22487:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1731:22487:15;;;;;;;-1:-1:-1;;;;;1731:22487:15;;;;1962:13:8;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:22487:15;;;;;;;;;;;;;1962:13:8;1731:22487:15;;;;;1962:13:8;1731:22487:15;;;;;-1:-1:-1;;;;;1731:22487:15;;;;1985:17:8;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:22487:15;;;;;;;;;;;;;1962:13:8;1731:22487:15;;;;;1985:17:8;1731:22487:15;;;;;;;;-1:-1:-1;;;;;;1731:22487:15;;;-1:-1:-1;;;;;1731:22487:15;;;;;;;3293:20;1731:22487;;;;3303:10;1731:22487;;;3324:24;1731:22487;;;;;;;;;;;;;;3365:4;3359:10;1731:22487;;;;;4284:33;1731:22487;;-1:-1:-1;4409:3:15;1731:22487;;4389:18;;;;;-1:-1:-1;;;;;4437:10:15;;;;:::i;:::-;1731:22487;;4437:24;1731:22487;;4510:11;;;;:::i;:::-;1731:22487;4510:15;1731:22487;;-1:-1:-1;;;;;4595:10:15;;;;:::i;:::-;1731:22487;;4615:11;;;;:::i;:::-;1731:22487;;;;;;;;-1:-1:-1;;;;;;;;1731:22487:15;;;;;;;;;;;;;;4577:51;;1731:22487;4561:10;1731:22487;;;;;;;;;;;4561:10;1731:22487;;;;;;4561:10;-1:-1:-1;1731:22487:15;;;;;;;;;;;;;;-1:-1:-1;;;;;1731:22487:15;;;-1:-1:-1;;;;;;1731:22487:15;;;;;;;4577:51;;;1731:22487;;;;;;4668:10;;;;:::i;:::-;1731:22487;;;;;;;3324:24;1731:22487;;;;;;;4698:51;;4722:4;1985:17:8;4698:51:15;;1731:22487;;;;;;;4698:51;1731:22487;4698:51;;;;;;;;;-1:-1:-1;4698:51:15;;;4409:3;4698:56;;4694:150;;4409:3;;;1731:22487;;4374:13;;4694:150;-1:-1:-1;1731:22487:15;;;;;;;;;;;;;;4775:53;;1985:17:8;4775:53:15;;1731:22487;;;;;;;4775:53;;;;;;;;4694:150;;;;4775:53;1731:22487;4775:53;;1731:22487;4775:53;;;;;;1731:22487;4775:53;;;:::i;:::-;;;1731:22487;;;;;;;;;;;4775:53;;;1731:22487;-1:-1:-1;1731:22487:15;;4775:53;;;-1:-1:-1;4775:53:15;;;1731:22487;;;-1:-1:-1;1731:22487:15;;;;;4698:51;;;1731:22487;4698:51;;1731:22487;4698:51;;;;;;1731:22487;4698:51;;;:::i;:::-;;;1731:22487;;;;;4698:51;;;;;;-1:-1:-1;4698:51:15;;1731:22487;;;;-1:-1:-1;1731:22487:15;;1985:17:8;1731:22487:15;;-1:-1:-1;1731:22487:15;;;;;-1:-1:-1;1731:22487:15;;1985:17:8;1731:22487:15;;-1:-1:-1;1731:22487:15;;;;-1:-1:-1;;;1731:22487:15;;;1985:17:8;1731:22487:15;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;1985:17:8;1731:22487:15;;;;;;;;;;;;;;;;4389:18;-1:-1:-1;3430:18:15;1731:22487;;;;;-1:-1:-1;;;3473:39:15;;1731:22487;;;;;1985:17:8;;1731:22487:15;;-1:-1:-1;;;;;1731:22487:15;3473:39;;;;;;;-1:-1:-1;3473:39:15;;;4369:486;-1:-1:-1;3461:51:15;1731:22487;;-1:-1:-1;;;;;;1731:22487:15;-1:-1:-1;;;;;1731:22487:15;;;;;;;;;;-1:-1:-1;;;3718:3:15;1731:22487;;3697:19;;;;;3753:11;;;;:::i;:::-;1731:22487;;;;;;;;;3738:26;3718:3;1731:22487;3682:13;;;1731:22487;;;;-1:-1:-1;1731:22487:15;;1985:17:8;1731:22487:15;;-1:-1:-1;1731:22487:15;3697:19;3809:5;3794:20;1731:22487;;;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;1985:17:8;1731:22487:15;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;3473:39;;;1731:22487;3473:39;;1731:22487;3473:39;;;;;;1731:22487;3473:39;;;:::i;:::-;;;1731:22487;;;;;;;:::i;:::-;3473:39;;;;;;-1:-1:-1;3473:39:15;;1731:22487;;;-1:-1:-1;;;1731:22487:15;;;1985:17:8;1731:22487:15;;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;-1:-1:-1;1731:22487:15;;;;;1985:17:8;-1:-1:-1;1731:22487:15;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:17:8;1731:22487:15;;;;;;;;;;1962:13:8;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:17:8;-1:-1:-1;1731:22487:15;;;-1:-1:-1;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:22487:15;;;;-1:-1:-1;1731:22487:15;;;;;;;-1:-1:-1;1731:22487:15;;;;;;;;-1:-1:-1;1731:22487:15;;1985:17:8;1731:22487:15;;-1:-1:-1;1731:22487:15;;;;;;;;;;;;-1:-1:-1;1731:22487:15;;;;;1962:13:8;-1:-1:-1;1731:22487:15;;;-1:-1:-1;;1731:22487:15;;;;-1:-1:-1;;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;1962:13:8;1731:22487:15;;;;;;;;;;1962:13:8;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:13:8;-1:-1:-1;1731:22487:15;;;-1:-1:-1;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:22487:15;;;;-1:-1:-1;1731:22487:15;;;;;;;-1:-1:-1;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1731:22487:15;;;;;;;:::o;:::-;;;;;-1:-1:-1;;1731:22487:15;;;;-1:-1:-1;;;;;1731:22487:15;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1731:22487:15;;;;;;:::o;:::-;-1:-1:-1;;;;;1731:22487:15;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":6363,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_24108":{"entryPoint":6385,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":6458,"id":null,"parameterSlots":1,"returnSlots":3},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":6511,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":6407,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":6321,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":6905,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":6701,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":7722,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":7319,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":6886,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":6853,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":6647,"id":null,"parameterSlots":2,"returnSlots":0},"fun_calculateLiquidity":{"entryPoint":7926,"id":3805,"parameterSlots":2,"returnSlots":1},"fun_computeTotalValuation":{"entryPoint":7778,"id":3451,"parameterSlots":0,"returnSlots":2},"fun_convertTokenToBase":{"entryPoint":8511,"id":3889,"parameterSlots":2,"returnSlots":1},"fun_getAmountOut":{"entryPoint":7188,"id":3007,"parameterSlots":3,"returnSlots":1},"fun_getAssetReserve":{"entryPoint":7666,"id":3270,"parameterSlots":1,"returnSlots":1},"fun_getDeviation":{"entryPoint":7349,"id":3137,"parameterSlots":0,"returnSlots":2},"fun_getReserves":{"entryPoint":6975,"id":3250,"parameterSlots":0,"returnSlots":1},"fun_isRebalanceNeeded":{"entryPoint":7580,"id":3935,"parameterSlots":0,"returnSlots":1},"fun_mint":{"entryPoint":8200,"id":1491,"parameterSlots":2,"returnSlots":0},"fun_transfer":{"entryPoint":8317,"id":1381,"parameterSlots":3,"returnSlots":0},"fun_unitPrice":{"entryPoint":7735,"id":3232,"parameterSlots":0,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":6955,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral_e4fc":{"entryPoint":6786,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e84c":{"entryPoint":6725,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_AssetInfo__dyn":{"entryPoint":6571,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604081815260049182361015610015575f80fd5b5f905f3560e01c90816301d22ccd1461188e5750806306fdde03146117995780630723c9991461156f5780630902f1ac1461153f578063095ea7b31461149657806318160ddd146114785780631a6865021461145457806322acb867146113f757806323b872dd14611316578063313ce567146112fb57806336bf6e39146112c75780634aa06652146112ac57806367a6c4401461129157806367e4ac2c1461122e5780636e81221c1461101557806370a0823114610fdf57806377aace1a14610fb75780637fec8d3814610f9957806389ab353214610f2f57806389afcb4414610b055780638a77c8dc14610ae057806395d89b41146109e1578063a9059cbb146109b1578063b2b55d701461098c578063c2ee3a081461096e578063c45a015514610946578063cdf456e11461091e578063cf8fa764146108a6578063d14ef46d1461085a578063dd62ed3e14610811578063de836ebd14610547578063e73faa2d146105245763f47b45e81461018c575f80fd5b3461041f576003195f3682011261041f576009546001600160a01b0394908516916101b8338414611a45565b6101c86101c3611d9c565b611a82565b600654936101d585611af9565b936101df86611af9565b976101e987611af9565b926101f388611af9565b946101fd89611af9565b9a6102078a611af9565b995f5b81811061046b57505061021b611b3f565b84600c54169160075486600b5416843b1561041f578e51633c2fddc560e21b815260e0818e01528d99909687958695919061025a9060e4880190611907565b9b60249c828882030160248901526102719161196f565b9086820301604487015261028491611907565b92606485015280608485015260a484015260c483015203815a5f948591f1801561046157610434575b50600654600954909690831692825b888110610329578c8c6103258d8d7f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8845160208152806103013394602083019061196f565b0390a26103178351948486958652850190611907565b908382036020850152611907565b0390f35b81610334828c611b2b565b51168c5180916370a0823160e01b82528786830152818960209485935afa91821561042a578f908a94938f91938d948a926103e9575b505094849160019661037c8487611b2b565b526103878386611b2b565b516103928484611b2b565b5110156103cc57506103be906103b7836103b0816103c49798611b2b565b5192611b2b565b5190611ac5565b92611b2b565b525b016102bc565b936103e393506103b7836103b0816103be95611b2b565b526103c6565b9450955050505082813d8311610423575b61040481836119f7565b8101031261041f57888e828a8f60019651919681935061036a565b5f80fd5b503d6103fa565b8e513d88823e3d90fd5b905067ffffffffffffffff811161044e5788525f806102ad565b604186634e487b7160e01b5f525260245ffd5b8a513d5f823e3d90fd5b85610475826119ab565b505416610482828d611b2b565b52600161048e826119ab565b50015461049b8285611b2b565b52856104a7828d611b2b565b5116908d5180926370a0823160e01b8252898d83015281602460209384935afa90811561051a575f916104eb575b50600192506104e4828b611b2b565b520161020a565b905082813d8311610513575b61050181836119f7565b8101031261041f57600191515f6104d5565b503d6104f7565b8f513d5f823e3d90fd5b823461041f575f36600319011261041f57602090610540611e37565b9051908152f35b50503461041f578060031936011261041f576105616118db565b9060249182359367ffffffffffffffff851161041f573660238601121561041f57848101359061059082611a2d565b9161059d855193846119f7565b808352602096868885019260051b8201019136831161041f5787899201905b8382106108025750506009546001600160a01b039492506105e1915084163314611a45565b6002545f916105ee611b3f565b90600654915182036107c057811561079257905f915b81831061075957505050811561070c57806106925750945b8515610660575050847f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885916106518685612008565b8451938685521692a251908152f35b845162461bcd60e51b8152918201879052600d908201526c04d696e7420717479206973203609c1b6044820152606490fd5b61069a611e62565b509182156106bb576106b592916106b091611ae6565b611c97565b9461061c565b865162461bcd60e51b81528085018a90526026818a01527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608490fd5b855162461bcd60e51b81528084018990526022818901527f546f74616c2076616c7565206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608490fd5b9091936107896001916107838961076f896119ab565b50541661077c8987611b2b565b519061213f565b90611e2a565b94019190610604565b875162461bcd60e51b81528086018b90526009818b0152684e6f2061737365747360b81b6044820152606490fd5b875162461bcd60e51b81528086018b90526017818b01527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152606490fd5b813581529082019082016105bc565b823461041f578060031936011261041f5760209061082d6118db565b6108356118f1565b9060018060a01b038091165f5260018452825f2091165f528252805f20549051908152f35b82843461041f57602036600319011261041f573560065481101561041f57610881906119ab565b50805460019091015491516001600160a01b0390911681526020810191909152604090f35b82843461041f57602036600319011261041f578035906108c4611e62565b80929150518310156108e5576020846108dd8585611b2b565b519051908152f35b606490602085519162461bcd60e51b83528201526013602482015272092dcecc2d8d2c840c2e6e6cae840d2dcc8caf606b1b6044820152fd5b823461041f575f36600319011261041f57600b5490516001600160a01b039091168152602090f35b823461041f575f36600319011261041f57600a5490516001600160a01b039091168152602090f35b823461041f575f36600319011261041f576020906008549051908152f35b823461041f57602036600319011261041f576020906105406109ac6118db565b611df2565b823461041f578060031936011261041f576020906109da6109d06118db565b602435903361207d565b5160018152f35b50503461041f575f36600319011261041f578051905f9280549060018260011c9160018416938415610ad6575b6020948585108114610ac357848852908115610aa15750600114610a48575b6103258686610a3e828b03836119f7565b51918291826118b1565b5f9081529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610a8e575050508261032594610a3e92820101945f610a2d565b8054868501880152928601928101610a71565b60ff191687860152505050151560051b8301019250610a3e826103255f610a2d565b602283634e487b7160e01b5f525260245ffd5b92607f1692610a0e565b823461041f575f36600319011261041f57602090610afc611d9c565b90519015158152f35b50503461041f576020908160031936011261041f57610b226118db565b6009546001600160a01b0390811691610b3c338414611a45565b305f525f8552835f2054958615610eec57600254968715610eba57600654610b6381611af9565b98601e8302838104601e03610ea757612710610b8191048094611ac5565b965f5b838110610dec5750505050305f525f875284865f205410610da957818785600c54168851928380926361d027b360e01b82525afa908115610d9f579088915f91610d65575b50875163a9059cbb60e01b81526001600160a01b03909116848201908152602081019390935291829081906040015b03815f305af1908115610d5b575f91610d25575b5015610cec573015610cd657305f525f8652845f205490848210610cab575083927fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59261032596958893305f525f855203865f205584600254036002555f86518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853092a385519485521692a251928284938452830190611907565b855163391434e360e21b81523091810191825260208201929092526040810185905281906060010390fd5b6024905f865191634b637e8f60e11b8352820152fd5b845162461bcd60e51b81529081018690526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b90508681813d8311610d54575b610d3c81836119f7565b8101031261041f5751801515810361041f575f610c0c565b503d610d32565b86513d5f823e3d90fd5b82819392503d8311610d98575b610d7c81836119f7565b8101031261041f5751848116810361041f578790610bf8610bc9565b503d610d72565b87513d5f823e3d90fd5b855162461bcd60e51b8152808301889052601d60248201527f496e73756666696369656e742042414c554e49206c69717569646974790000006044820152606490fd5b610e2e8b89610dfa846119ab565b50548d5163a3e113fb60e01b8152308b8201908152929091166001600160a01b031660208301529283918291604090910190565b0381865afa908115610e9d578a8593928f925f91610e63575b506103be6001956106b0610e5c948794611ae6565b5201610b84565b94505050508b82813d8311610e96575b610e7d81836119f7565b8101031261041f5790518391908d908b906103be610e47565b503d610e73565b8b513d5f823e3d90fd5b601185634e487b7160e01b5f525260245ffd5b855162461bcd60e51b8152808301889052600c60248201526b4e6f206c697175696469747960a01b6044820152606490fd5b845162461bcd60e51b8152908101869052601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b823461041f575f36600319011261041f57610f48611cb5565b8251928391818301918352835180925260608301916020809501945f5b828110610f8057858061032587878382036020850152611907565b8651151585529581019587955093810193600101610f65565b823461041f575f36600319011261041f576020906007549051908152f35b823461041f575f36600319011261041f5760095490516001600160a01b039091168152602090f35b823461041f57602036600319011261041f576020906001600160a01b036110046118db565b165f525f8252805f20549051908152f35b82843461041f57608036600319011261041f576110306118db565b916110396118f1565b604435936001600160a01b0391606435838116919082900361041f5760026005541461121e576002600555838116938316928484146111db5787156111985790611087888261108f94611c14565b918291611df2565b1061115c57601e8102818104601e148215171561114957906127106110b5920490611ac5565b9485156110f857507fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628460209781519081528789820152a4600160055551908152f35b608490602086519162461bcd60e51b8352820152602560248201527f416d6f756e7420746f2073656e64206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152fd5b601187634e487b7160e01b5f525260245ffd5b845162461bcd60e51b81526020818801526016602482015275496e73756666696369656e74204c697175696469747960501b6044820152606490fd5b855162461bcd60e51b8152602081890181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606490fd5b855162461bcd60e51b8152602081890152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152606490fd5b8451633ee5aeb560e01b81528690fd5b823461041f575f36600319011261041f5760065461124b81611af9565b905f5b81811061126a578351602080825281906103259082018661196f565b806112766001926119ab565b50828060a01b0390541661128a8286611b2b565b520161124e565b823461041f575f36600319011261041f5760209051601e8152f35b823461041f576020906105406112c13661193a565b91611c14565b823461041f575f36600319011261041f576103256112e3611e62565b83929192519384938452806020850152830190611907565b823461041f575f36600319011261041f576020905160128152f35b82843461041f576113263661193a565b6001600160a01b0383165f81815260016020818152888320338452905290879020549295939493908301611363575b6020876109da88888861207d565b8583106113cb5781156113b557331561139f57505f908152600160209081528682203383528152908690209185900390915582906109da611355565b6024905f885191634a1406b160e11b8352820152fd5b6024905f88519163e602df0560e01b8352820152fd5b8651637dc7a0d960e11b8152339181019182526020820193909352604081018690528291506060010390fd5b823461041f575f36600319011261041f5760065461141481611af9565b905f5b8181106114335783516020808252819061032590820186611907565b80600161144081936119ab565b50015461144d8286611b2b565b5201611417565b823461041f575f36600319011261041f57602090611470611e62565b509051908152f35b823461041f575f36600319011261041f576020906002549051908152f35b50503461041f578060031936011261041f576114b06118db565b602435903315611529576001600160a01b03169081156115135760209350335f5260018452825f20825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8251634a1406b160e11b81525f81860152602490fd5b825163e602df0560e01b81525f81860152602490fd5b823461041f575f36600319011261041f576103259061155c611b3f565b9051918291602083526020830190611907565b50503461041f576020908160031936011261041f5761158c6118db565b9260018060a01b03926115a484600954163314611a45565b6115af6101c3611d9c565b6115b7611e62565b929094600654956115c787611af9565b945f5b8881106117445750505081835f925f5b89811061171d5750600b541687519485809263313ce56760e01b82525afa928315610d5b575f936116e4575b5060ff670de0b6b3a7640000931683039283116116d157506116319161162b91611ae6565b94611af9565b925f5b835181101561167a578061164a60019286611b2b565b51611656575b01611634565b61166a6116638287611b2b565b5182611ef6565b6116748288611b2b565b52611650565b50610325919261168a8688612008565b7fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e8251858152806116bf339488830190611907565b0390a251928284938452830190611907565b601190634e487b7160e01b5f525260245ffd5b9092508381813d8311611716575b6116fc81836119f7565b8101031261041f575160ff8116810361041f57915f611606565b503d6116f2565b93611739919350600192506117328589611b2b565b5190611e2a565b9201839185916115da565b80612710611760600161175781956119ab565b50015486611ae6565b048061176c8386611b2b565b511061177a575b50016115ca565b611788906103b78386611b2b565b611792828a611b2b565b525f611773565b50503461041f575f36600319011261041f578051905f9260035460018160011c91600181168015611884575b6020948585108214611871575083875290811561185157506001146117f7575b505050610a3e826103259403836119f7565b60035f9081529295507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061183e575050508261032594610a3e92820101946117e5565b8054868501880152928601928101611822565b60ff1916868501525050151560051b8301019250610a3e826103256117e5565b602290634e487b7160e01b5f525260245ffd5b92607f16926117c5565b3461041f575f36600319011261041f57600c546001600160a01b03168152602090f35b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361041f57565b602435906001600160a01b038216820361041f57565b9081518082526020808093019301915f5b828110611926575050505090565b835185529381019392810192600101611918565b606090600319011261041f576001600160a01b0390600435828116810361041f5791602435908116810361041f579060443590565b9081518082526020808093019301915f5b82811061198e575050505090565b83516001600160a01b031685529381019392810192600101611980565b6006548110156119e35760065f5260011b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01905f90565b634e487b7160e01b5f52603260045260245ffd5b90601f8019910116810190811067ffffffffffffffff821117611a1957604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff8111611a195760051b60200190565b15611a4c57565b60405162461bcd60e51b815260206004820152600e60248201526d4f6e6c792050657269706865727960901b6044820152606490fd5b15611a8957565b60405162461bcd60e51b8152602060048201526014602482015273149958985b185b98d9481b9bdd081b995959195960621b6044820152606490fd5b91908203918211611ad257565b634e487b7160e01b5f52601160045260245ffd5b81810292918115918404141715611ad257565b90611b0382611a2d565b611b1060405191826119f7565b8281528092611b21601f1991611a2d565b0190602036910137565b80518210156119e35760209160051b010190565b600954604051630fa6707960e21b8152306004820152905f90829060249082906001600160a01b03165afa908115611c09575f91611b7b575090565b90503d805f833e611b8c81836119f7565b810190602090818184031261041f5780519067ffffffffffffffff821161041f57019180601f8401121561041f578251611bc581611a2d565b93611bd360405195866119f7565b818552838086019260051b82010192831161041f578301905b828210611bfa575050505090565b81518152908301908301611bec565b6040513d5f823e3d90fd5b600c5460405163248391ff60e01b81526001600160a01b0392831660048201529282166024840152604483019390935290916020918391168180606481015b03915afa908115611c09575f91611c68575090565b90506020813d602011611c8f575b81611c83602093836119f7565b8101031261041f575190565b3d9150611c76565b8115611ca1570490565b634e487b7160e01b5f52601260045260245ffd5b611cbd611e62565b919060065490611ccc82611a2d565b91611cda60405193846119f7565b808352601f19611ce982611a2d565b01366020850137611cf981611af9565b945f5b828110611d0b57505050509190565b611d158183611b2b565b519061271091828102928184041490151715611ad257611d3785600193611c97565b611d40826119ab565b50830154839181811115611d755790611d5891611ac5565b611d62838b611b2b565b52611d6d8288611b2b565b525b01611cfc565b90611d809250611ac5565b611d8a828a611b2b565b525f611d968288611b2b565b52611d6f565b611da4611cb5565b5f5b8151811015611deb57611db98184611b2b565b51151580611dd6575b611dce57600101611da6565b505050600190565b50611de18183611b2b565b5160075410611dc2565b5050505f90565b60095460405163a3e113fb60e01b81523060048201526001600160a01b03928316602482015291602091839116818060448101611c53565b91908201809211611ad257565b611e3f611e62565b506002548015611e5c576106b0611e599260085490611ae6565b90565b50505f90565b600654905f611e7083611af9565b600b5490935f916001600160a01b03908116905b828410611e9357505050509190565b90919293611ed260019183611ea7886119ab565b505416611eb381611df2565b90868103611edc5750611ec6888b611b2b565b525b611732878a611b2b565b9401929190611e84565b90611ee69161213f565b611ef0888b611b2b565b52611ec8565b611eff816119ab565b5054600b546001600160a01b0390811692909182168314612002579181611f6f9492611f2c6020956119ab565b50541690600c5416916040519586948593849363248391ff60e01b85526004850160409194939294606082019560018060a01b0380921683521660208201520152565b03915afa908115611c09575f91611fd0575b508015611f8b5790565b60405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152606490fd5b90506020813d602011611ffa575b81611feb602093836119f7565b8101031261041f57515f611f81565b3d9150611fde565b50505090565b6001600160a01b0316908115612065577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826120495f94600254611e2a565b60025584845283825260408420818154019055604051908152a3565b60405163ec442f0560e01b81525f6004820152602490fd5b916001600160a01b03808416928315612127571692831561206557825f525f60205260405f2054908282106120f55750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b604051634b637e8f60e11b81525f6004820152602490fd5b600c54600b5460405163248391ff60e01b81526001600160a01b03938416600482015290831660248201526044810193909352602091839116818060648101611c5356fea2646970667358221220184aa282213110066a9558ca1cae88e104122e88c8cc0a50dc05a3c65cc0fac464736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1D22CCD EQ PUSH2 0x188E JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1799 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x156F JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x153F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1496 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1478 JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x1454 JUMPI DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x13F7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1316 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x12FB JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x12C7 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x12AC JUMPI DUP1 PUSH4 0x67A6C440 EQ PUSH2 0x1291 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x122E JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x1015 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xFDF JUMPI DUP1 PUSH4 0x77AACE1A EQ PUSH2 0xFB7 JUMPI DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0xF99 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0xF2F JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0xB05 JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0xAE0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x9E1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0x98C JUMPI DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0x96E JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x946 JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x91E JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0x8A6 JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0x85A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x811 JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x524 JUMPI PUSH4 0xF47B45E8 EQ PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x3 NOT PUSH0 CALLDATASIZE DUP3 ADD SLT PUSH2 0x41F JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 DUP6 AND SWAP2 PUSH2 0x1B8 CALLER DUP5 EQ PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1C3 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP4 PUSH2 0x1D5 DUP6 PUSH2 0x1AF9 JUMP JUMPDEST SWAP4 PUSH2 0x1DF DUP7 PUSH2 0x1AF9 JUMP JUMPDEST SWAP8 PUSH2 0x1E9 DUP8 PUSH2 0x1AF9 JUMP JUMPDEST SWAP3 PUSH2 0x1F3 DUP9 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 PUSH2 0x1FD DUP10 PUSH2 0x1AF9 JUMP JUMPDEST SWAP11 PUSH2 0x207 DUP11 PUSH2 0x1AF9 JUMP JUMPDEST SWAP10 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x46B JUMPI POP POP PUSH2 0x21B PUSH2 0x1B3F JUMP JUMPDEST DUP5 PUSH1 0xC SLOAD AND SWAP2 PUSH1 0x7 SLOAD DUP7 PUSH1 0xB SLOAD AND DUP5 EXTCODESIZE ISZERO PUSH2 0x41F JUMPI DUP15 MLOAD PUSH4 0x3C2FDDC5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xE0 DUP2 DUP15 ADD MSTORE DUP14 SWAP10 SWAP1 SWAP7 DUP8 SWAP6 DUP7 SWAP6 SWAP2 SWAP1 PUSH2 0x25A SWAP1 PUSH1 0xE4 DUP9 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST SWAP12 PUSH1 0x24 SWAP13 DUP3 DUP9 DUP3 SUB ADD PUSH1 0x24 DUP10 ADD MSTORE PUSH2 0x271 SWAP2 PUSH2 0x196F JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB ADD PUSH1 0x44 DUP8 ADD MSTORE PUSH2 0x284 SWAP2 PUSH2 0x1907 JUMP JUMPDEST SWAP3 PUSH1 0x64 DUP6 ADD MSTORE DUP1 PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC4 DUP4 ADD MSTORE SUB DUP2 GAS PUSH0 SWAP5 DUP6 SWAP2 CALL DUP1 ISZERO PUSH2 0x461 JUMPI PUSH2 0x434 JUMPI JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x9 SLOAD SWAP1 SWAP7 SWAP1 DUP4 AND SWAP3 DUP3 JUMPDEST DUP9 DUP2 LT PUSH2 0x329 JUMPI DUP13 DUP13 PUSH2 0x325 DUP14 DUP14 PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP5 MLOAD PUSH1 0x20 DUP2 MSTORE DUP1 PUSH2 0x301 CALLER SWAP5 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x196F JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x317 DUP4 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1907 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 PUSH2 0x334 DUP3 DUP13 PUSH2 0x1B2B JUMP JUMPDEST MLOAD AND DUP13 MLOAD DUP1 SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP8 DUP7 DUP4 ADD MSTORE DUP2 DUP10 PUSH1 0x20 SWAP5 DUP6 SWAP4 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x42A JUMPI DUP16 SWAP1 DUP11 SWAP5 SWAP4 DUP16 SWAP2 SWAP4 DUP14 SWAP5 DUP11 SWAP3 PUSH2 0x3E9 JUMPI JUMPDEST POP POP SWAP5 DUP5 SWAP2 PUSH1 0x1 SWAP7 PUSH2 0x37C DUP5 DUP8 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x387 DUP4 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MLOAD PUSH2 0x392 DUP5 DUP5 PUSH2 0x1B2B JUMP JUMPDEST MLOAD LT ISZERO PUSH2 0x3CC JUMPI POP PUSH2 0x3BE SWAP1 PUSH2 0x3B7 DUP4 PUSH2 0x3B0 DUP2 PUSH2 0x3C4 SWAP8 SWAP9 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP3 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST SWAP3 PUSH2 0x1B2B JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x2BC JUMP JUMPDEST SWAP4 PUSH2 0x3E3 SWAP4 POP PUSH2 0x3B7 DUP4 PUSH2 0x3B0 DUP2 PUSH2 0x3BE SWAP6 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x3C6 JUMP JUMPDEST SWAP5 POP SWAP6 POP POP POP POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x423 JUMPI JUMPDEST PUSH2 0x404 DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI DUP9 DUP15 DUP3 DUP11 DUP16 PUSH1 0x1 SWAP7 MLOAD SWAP2 SWAP7 DUP2 SWAP4 POP PUSH2 0x36A JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3FA JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x44E JUMPI DUP9 MSTORE PUSH0 DUP1 PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x475 DUP3 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD AND PUSH2 0x482 DUP3 DUP14 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH2 0x48E DUP3 PUSH2 0x19AB JUMP JUMPDEST POP ADD SLOAD PUSH2 0x49B DUP3 DUP6 PUSH2 0x1B2B JUMP JUMPDEST MSTORE DUP6 PUSH2 0x4A7 DUP3 DUP14 PUSH2 0x1B2B JUMP JUMPDEST MLOAD AND SWAP1 DUP14 MLOAD DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP10 DUP14 DUP4 ADD MSTORE DUP2 PUSH1 0x24 PUSH1 0x20 SWAP4 DUP5 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x51A JUMPI PUSH0 SWAP2 PUSH2 0x4EB JUMPI JUMPDEST POP PUSH1 0x1 SWAP3 POP PUSH2 0x4E4 DUP3 DUP12 PUSH2 0x1B2B JUMP JUMPDEST MSTORE ADD PUSH2 0x20A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x513 JUMPI JUMPDEST PUSH2 0x501 DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH0 PUSH2 0x4D5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4F7 JUMP JUMPDEST DUP16 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x540 PUSH2 0x1E37 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH2 0x561 PUSH2 0x18DB JUMP JUMPDEST SWAP1 PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x41F JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x41F JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP1 PUSH2 0x590 DUP3 PUSH2 0x1A2D JUMP JUMPDEST SWAP2 PUSH2 0x59D DUP6 MLOAD SWAP4 DUP5 PUSH2 0x19F7 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP7 DUP9 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x41F JUMPI DUP8 DUP10 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x802 JUMPI POP POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP3 POP PUSH2 0x5E1 SWAP2 POP DUP5 AND CALLER EQ PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP2 PUSH2 0x5EE PUSH2 0x1B3F JUMP JUMPDEST SWAP1 PUSH1 0x6 SLOAD SWAP2 MLOAD DUP3 SUB PUSH2 0x7C0 JUMPI DUP2 ISZERO PUSH2 0x792 JUMPI SWAP1 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x759 JUMPI POP POP POP DUP2 ISZERO PUSH2 0x70C JUMPI DUP1 PUSH2 0x692 JUMPI POP SWAP5 JUMPDEST DUP6 ISZERO PUSH2 0x660 JUMPI POP POP DUP5 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP2 PUSH2 0x651 DUP7 DUP6 PUSH2 0x2008 JUMP JUMPDEST DUP5 MLOAD SWAP4 DUP7 DUP6 MSTORE AND SWAP3 LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x4D696E7420717479206973203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x69A PUSH2 0x1E62 JUMP JUMPDEST POP SWAP2 DUP3 ISZERO PUSH2 0x6BB JUMPI PUSH2 0x6B5 SWAP3 SWAP2 PUSH2 0x6B0 SWAP2 PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x1C97 JUMP JUMPDEST SWAP5 PUSH2 0x61C JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP11 SWAP1 MSTORE PUSH1 0x26 DUP2 DUP11 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP10 SWAP1 MSTORE PUSH1 0x22 DUP2 DUP10 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP4 PUSH2 0x789 PUSH1 0x1 SWAP2 PUSH2 0x783 DUP10 PUSH2 0x76F DUP10 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD AND PUSH2 0x77C DUP10 DUP8 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x213F JUMP JUMPDEST SWAP1 PUSH2 0x1E2A JUMP JUMPDEST SWAP5 ADD SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP12 SWAP1 MSTORE PUSH1 0x9 DUP2 DUP12 ADD MSTORE PUSH9 0x4E6F20617373657473 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP12 SWAP1 MSTORE PUSH1 0x17 DUP2 DUP12 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0x5BC JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x82D PUSH2 0x18DB JUMP JUMPDEST PUSH2 0x835 PUSH2 0x18F1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x41F JUMPI PUSH2 0x881 SWAP1 PUSH2 0x19AB JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x8C4 PUSH2 0x1E62 JUMP JUMPDEST DUP1 SWAP3 SWAP2 POP MLOAD DUP4 LT ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x20 DUP5 PUSH2 0x8DD DUP6 DUP6 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840C2E6E6CAE840D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0xB SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0xA SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x540 PUSH2 0x9AC PUSH2 0x18DB JUMP JUMPDEST PUSH2 0x1DF2 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x9DA PUSH2 0x9D0 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x207D JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0xAD6 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP2 EQ PUSH2 0xAC3 JUMPI DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xAA1 JUMPI POP PUSH1 0x1 EQ PUSH2 0xA48 JUMPI JUMPDEST PUSH2 0x325 DUP7 DUP7 PUSH2 0xA3E DUP3 DUP12 SUB DUP4 PUSH2 0x19F7 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18B1 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xA8E JUMPI POP POP POP DUP3 PUSH2 0x325 SWAP5 PUSH2 0xA3E SWAP3 DUP3 ADD ADD SWAP5 PUSH0 PUSH2 0xA2D JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xA71 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xA3E DUP3 PUSH2 0x325 PUSH0 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x22 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xA0E JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0xAFC PUSH2 0x1D9C JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH2 0xB22 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH2 0xB3C CALLER DUP5 EQ PUSH2 0x1A45 JUMP JUMPDEST ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE DUP4 PUSH0 KECCAK256 SLOAD SWAP6 DUP7 ISZERO PUSH2 0xEEC JUMPI PUSH1 0x2 SLOAD SWAP7 DUP8 ISZERO PUSH2 0xEBA JUMPI PUSH1 0x6 SLOAD PUSH2 0xB63 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP9 PUSH1 0x1E DUP4 MUL DUP4 DUP2 DIV PUSH1 0x1E SUB PUSH2 0xEA7 JUMPI PUSH2 0x2710 PUSH2 0xB81 SWAP2 DIV DUP1 SWAP5 PUSH2 0x1AC5 JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xDEC JUMPI POP POP POP POP ADDRESS PUSH0 MSTORE PUSH0 DUP8 MSTORE DUP5 DUP7 PUSH0 KECCAK256 SLOAD LT PUSH2 0xDA9 JUMPI DUP2 DUP8 DUP6 PUSH1 0xC SLOAD AND DUP9 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x61D027B3 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xD9F JUMPI SWAP1 DUP9 SWAP2 PUSH0 SWAP2 PUSH2 0xD65 JUMPI JUMPDEST POP DUP8 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB DUP2 PUSH0 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xD5B JUMPI PUSH0 SWAP2 PUSH2 0xD25 JUMPI JUMPDEST POP ISZERO PUSH2 0xCEC JUMPI ADDRESS ISZERO PUSH2 0xCD6 JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP5 PUSH0 KECCAK256 SLOAD SWAP1 DUP5 DUP3 LT PUSH2 0xCAB JUMPI POP DUP4 SWAP3 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 PUSH2 0x325 SWAP7 SWAP6 DUP9 SWAP4 ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE SUB DUP7 PUSH0 KECCAK256 SSTORE DUP5 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 DUP7 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 ADDRESS SWAP3 LOG3 DUP6 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST DUP6 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP7 MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xD54 JUMPI JUMPDEST PUSH2 0xD3C DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x41F JUMPI PUSH0 PUSH2 0xC0C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xD32 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xD98 JUMPI JUMPDEST PUSH2 0xD7C DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0x41F JUMPI DUP8 SWAP1 PUSH2 0xBF8 PUSH2 0xBC9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xD72 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xE2E DUP12 DUP10 PUSH2 0xDFA DUP5 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD DUP14 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP12 DUP3 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE9D JUMPI DUP11 DUP6 SWAP4 SWAP3 DUP16 SWAP3 PUSH0 SWAP2 PUSH2 0xE63 JUMPI JUMPDEST POP PUSH2 0x3BE PUSH1 0x1 SWAP6 PUSH2 0x6B0 PUSH2 0xE5C SWAP5 DUP8 SWAP5 PUSH2 0x1AE6 JUMP JUMPDEST MSTORE ADD PUSH2 0xB84 JUMP JUMPDEST SWAP5 POP POP POP POP DUP12 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE96 JUMPI JUMPDEST PUSH2 0xE7D DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI SWAP1 MLOAD DUP4 SWAP2 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH2 0x3BE PUSH2 0xE47 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE73 JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH2 0xF48 PUSH2 0x1CB5 JUMP JUMPDEST DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP2 DUP4 ADD SWAP2 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 PUSH1 0x20 DUP1 SWAP6 ADD SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0xF80 JUMPI DUP6 DUP1 PUSH2 0x325 DUP8 DUP8 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1907 JUMP JUMPDEST DUP7 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP6 DUP2 ADD SWAP6 DUP8 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 ADD PUSH2 0xF65 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1004 PUSH2 0x18DB JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH2 0x1030 PUSH2 0x18DB JUMP JUMPDEST SWAP2 PUSH2 0x1039 PUSH2 0x18F1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x41F JUMPI PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x121E JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP4 DUP2 AND SWAP4 DUP4 AND SWAP3 DUP5 DUP5 EQ PUSH2 0x11DB JUMPI DUP8 ISZERO PUSH2 0x1198 JUMPI SWAP1 PUSH2 0x1087 DUP9 DUP3 PUSH2 0x108F SWAP5 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 DUP3 SWAP2 PUSH2 0x1DF2 JUMP JUMPDEST LT PUSH2 0x115C JUMPI PUSH1 0x1E DUP2 MUL DUP2 DUP2 DIV PUSH1 0x1E EQ DUP3 ISZERO OR ISZERO PUSH2 0x1149 JUMPI SWAP1 PUSH2 0x2710 PUSH2 0x10B5 SWAP3 DIV SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST SWAP5 DUP6 ISZERO PUSH2 0x10F8 JUMPI POP PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP5 PUSH1 0x20 SWAP8 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP8 DUP10 DUP3 ADD MSTORE LOG4 PUSH1 0x1 PUSH1 0x5 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F2073656E64206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x11 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74204C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP10 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP10 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP7 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x6 SLOAD PUSH2 0x124B DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x126A JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x325 SWAP1 DUP3 ADD DUP7 PUSH2 0x196F JUMP JUMPDEST DUP1 PUSH2 0x1276 PUSH1 0x1 SWAP3 PUSH2 0x19AB JUMP JUMPDEST POP DUP3 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND PUSH2 0x128A DUP3 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MSTORE ADD PUSH2 0x124E JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1E DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x540 PUSH2 0x12C1 CALLDATASIZE PUSH2 0x193A JUMP JUMPDEST SWAP2 PUSH2 0x1C14 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH2 0x325 PUSH2 0x12E3 PUSH2 0x1E62 JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x41F JUMPI PUSH2 0x1326 CALLDATASIZE PUSH2 0x193A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE DUP9 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 MSTORE SWAP1 DUP8 SWAP1 KECCAK256 SLOAD SWAP3 SWAP6 SWAP4 SWAP5 SWAP4 SWAP1 DUP4 ADD PUSH2 0x1363 JUMPI JUMPDEST PUSH1 0x20 DUP8 PUSH2 0x9DA DUP9 DUP9 DUP9 PUSH2 0x207D JUMP JUMPDEST DUP6 DUP4 LT PUSH2 0x13CB JUMPI DUP2 ISZERO PUSH2 0x13B5 JUMPI CALLER ISZERO PUSH2 0x139F JUMPI POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 SWAP2 DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0x9DA PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x6 SLOAD PUSH2 0x1414 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1433 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x325 SWAP1 DUP3 ADD DUP7 PUSH2 0x1907 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x1440 DUP2 SWAP4 PUSH2 0x19AB JUMP JUMPDEST POP ADD SLOAD PUSH2 0x144D DUP3 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MSTORE ADD PUSH2 0x1417 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1470 PUSH2 0x1E62 JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH2 0x14B0 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x1529 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1513 JUMPI PUSH1 0x20 SWAP4 POP CALLER PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 DUP2 DUP7 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP2 DUP7 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH2 0x325 SWAP1 PUSH2 0x155C PUSH2 0x1B3F JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH2 0x158C PUSH2 0x18DB JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x15A4 DUP5 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x15AF PUSH2 0x1C3 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0x15B7 PUSH2 0x1E62 JUMP JUMPDEST SWAP3 SWAP1 SWAP5 PUSH1 0x6 SLOAD SWAP6 PUSH2 0x15C7 DUP8 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x1744 JUMPI POP POP POP DUP2 DUP4 PUSH0 SWAP3 PUSH0 JUMPDEST DUP10 DUP2 LT PUSH2 0x171D JUMPI POP PUSH1 0xB SLOAD AND DUP8 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xD5B JUMPI PUSH0 SWAP4 PUSH2 0x16E4 JUMPI JUMPDEST POP PUSH1 0xFF PUSH8 0xDE0B6B3A7640000 SWAP4 AND DUP4 SUB SWAP3 DUP4 GT PUSH2 0x16D1 JUMPI POP PUSH2 0x1631 SWAP2 PUSH2 0x162B SWAP2 PUSH2 0x1AE6 JUMP JUMPDEST SWAP5 PUSH2 0x1AF9 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x167A JUMPI DUP1 PUSH2 0x164A PUSH1 0x1 SWAP3 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MLOAD PUSH2 0x1656 JUMPI JUMPDEST ADD PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x166A PUSH2 0x1663 DUP3 DUP8 PUSH2 0x1B2B JUMP JUMPDEST MLOAD DUP3 PUSH2 0x1EF6 JUMP JUMPDEST PUSH2 0x1674 DUP3 DUP9 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x1650 JUMP JUMPDEST POP PUSH2 0x325 SWAP2 SWAP3 PUSH2 0x168A DUP7 DUP9 PUSH2 0x2008 JUMP JUMPDEST PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP3 MLOAD DUP6 DUP2 MSTORE DUP1 PUSH2 0x16BF CALLER SWAP5 DUP9 DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST SUB SWAP1 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP3 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1716 JUMPI JUMPDEST PUSH2 0x16FC DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x41F JUMPI SWAP2 PUSH0 PUSH2 0x1606 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x16F2 JUMP JUMPDEST SWAP4 PUSH2 0x1739 SWAP2 SWAP4 POP PUSH1 0x1 SWAP3 POP PUSH2 0x1732 DUP6 DUP10 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1E2A JUMP JUMPDEST SWAP3 ADD DUP4 SWAP2 DUP6 SWAP2 PUSH2 0x15DA JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH2 0x1760 PUSH1 0x1 PUSH2 0x1757 DUP2 SWAP6 PUSH2 0x19AB JUMP JUMPDEST POP ADD SLOAD DUP7 PUSH2 0x1AE6 JUMP JUMPDEST DIV DUP1 PUSH2 0x176C DUP4 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MLOAD LT PUSH2 0x177A JUMPI JUMPDEST POP ADD PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x1788 SWAP1 PUSH2 0x3B7 DUP4 DUP7 PUSH2 0x1B2B JUMP JUMPDEST PUSH2 0x1792 DUP3 DUP11 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x1773 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x1884 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP3 EQ PUSH2 0x1871 JUMPI POP DUP4 DUP8 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1851 JUMPI POP PUSH1 0x1 EQ PUSH2 0x17F7 JUMPI JUMPDEST POP POP POP PUSH2 0xA3E DUP3 PUSH2 0x325 SWAP5 SUB DUP4 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x183E JUMPI POP POP POP DUP3 PUSH2 0x325 SWAP5 PUSH2 0xA3E SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0x17E5 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x1822 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xA3E DUP3 PUSH2 0x325 PUSH2 0x17E5 JUMP JUMPDEST PUSH1 0x22 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x17C5 JUMP JUMPDEST CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x40 SWAP3 DUP2 DUP4 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x41F JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x41F JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1926 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x41F JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x41F JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x198E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x19E3 JUMPI PUSH1 0x6 PUSH0 MSTORE PUSH1 0x1 SHL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1A19 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A19 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1A4C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4F6E6C7920506572697068657279 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A89 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1AD2 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1AD2 JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x1B03 DUP3 PUSH2 0x1A2D JUMP JUMPDEST PUSH2 0x1B10 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x19F7 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1B21 PUSH1 0x1F NOT SWAP2 PUSH2 0x1A2D JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x19E3 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xFA67079 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH0 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1C09 JUMPI PUSH0 SWAP2 PUSH2 0x1B7B JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x1B8C DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x41F JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x41F JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x41F JUMPI DUP3 MLOAD PUSH2 0x1BC5 DUP2 PUSH2 0x1A2D JUMP JUMPDEST SWAP4 PUSH2 0x1BD3 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x19F7 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x41F JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1BFA JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1C09 JUMPI PUSH0 SWAP2 PUSH2 0x1C68 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1C8F JUMPI JUMPDEST DUP2 PUSH2 0x1C83 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1C76 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1CA1 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1CBD PUSH2 0x1E62 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x6 SLOAD SWAP1 PUSH2 0x1CCC DUP3 PUSH2 0x1A2D JUMP JUMPDEST SWAP2 PUSH2 0x1CDA PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x19F7 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x1CE9 DUP3 PUSH2 0x1A2D JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH2 0x1CF9 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1D0B JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x1D15 DUP2 DUP4 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1AD2 JUMPI PUSH2 0x1D37 DUP6 PUSH1 0x1 SWAP4 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x1D40 DUP3 PUSH2 0x19AB JUMP JUMPDEST POP DUP4 ADD SLOAD DUP4 SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x1D75 JUMPI SWAP1 PUSH2 0x1D58 SWAP2 PUSH2 0x1AC5 JUMP JUMPDEST PUSH2 0x1D62 DUP4 DUP12 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x1D6D DUP3 DUP9 PUSH2 0x1B2B JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x1CFC JUMP JUMPDEST SWAP1 PUSH2 0x1D80 SWAP3 POP PUSH2 0x1AC5 JUMP JUMPDEST PUSH2 0x1D8A DUP3 DUP11 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x1D96 DUP3 DUP9 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0x1DA4 PUSH2 0x1CB5 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1DEB JUMPI PUSH2 0x1DB9 DUP2 DUP5 PUSH2 0x1B2B JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x1DD6 JUMPI JUMPDEST PUSH2 0x1DCE JUMPI PUSH1 0x1 ADD PUSH2 0x1DA6 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x1DE1 DUP2 DUP4 PUSH2 0x1B2B JUMP JUMPDEST MLOAD PUSH1 0x7 SLOAD LT PUSH2 0x1DC2 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x44 DUP2 ADD PUSH2 0x1C53 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1AD2 JUMPI JUMP JUMPDEST PUSH2 0x1E3F PUSH2 0x1E62 JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x1E5C JUMPI PUSH2 0x6B0 PUSH2 0x1E59 SWAP3 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH0 PUSH2 0x1E70 DUP4 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP4 PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x1E93 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x1ED2 PUSH1 0x1 SWAP2 DUP4 PUSH2 0x1EA7 DUP9 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD AND PUSH2 0x1EB3 DUP2 PUSH2 0x1DF2 JUMP JUMPDEST SWAP1 DUP7 DUP2 SUB PUSH2 0x1EDC JUMPI POP PUSH2 0x1EC6 DUP9 DUP12 PUSH2 0x1B2B JUMP JUMPDEST MSTORE JUMPDEST PUSH2 0x1732 DUP8 DUP11 PUSH2 0x1B2B JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 PUSH2 0x1EE6 SWAP2 PUSH2 0x213F JUMP JUMPDEST PUSH2 0x1EF0 DUP9 DUP12 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x1EC8 JUMP JUMPDEST PUSH2 0x1EFF DUP2 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 SWAP2 DUP3 AND DUP4 EQ PUSH2 0x2002 JUMPI SWAP2 DUP2 PUSH2 0x1F6F SWAP5 SWAP3 PUSH2 0x1F2C PUSH1 0x20 SWAP6 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD AND SWAP1 PUSH1 0xC SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0x248391FF PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1C09 JUMPI PUSH0 SWAP2 PUSH2 0x1FD0 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x1F8B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1FFA JUMPI JUMPDEST DUP2 PUSH2 0x1FEB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD PUSH0 PUSH2 0x1F81 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1FDE JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2065 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x2049 PUSH0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2127 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2065 JUMPI DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x20F5 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD PUSH2 0x1C53 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR BLOBBASEFEE LOG2 DUP3 0x21 BALANCE LT MOD PUSH11 0x9558CA1CAE88E104122E88 0xC8 0xCC EXP POP 0xDC SDIV LOG3 0xC6 TLOAD 0xC0 STATICCALL 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1731:22487:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;;;;3908:9;1731:22487;-1:-1:-1;;;;;1731:22487:15;;;;;3886:50;3894:10;:23;;3886:50;:::i;:::-;12246:52;12254:19;;:::i;:::-;12246:52;:::i;:::-;18170:10;1731:22487;18156:32;;;;:::i;:::-;18226;;;;:::i;:::-;18308;;;;:::i;:::-;18393;;;;:::i;:::-;18468;;;;:::i;:::-;18546;;;;:::i;:::-;18596:13;1731:22487;18611:21;;;;;;18863:13;;;;:::i;:::-;1731:22487;18909:10;1731:22487;;;18958:7;1731:22487;;18989:9;1731:22487;;18889:110;;;;;1731:22487;;-1:-1:-1;;;18889:110:15;;1731:22487;18889:110;;;1731:22487;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18889:110;;;1731:22487;18889:110;;;;;;;;;;18591:232;-1:-1:-1;18170:10:15;1731:22487;3908:9;1731:22487;;;;;;;19017:13;19032:21;;;;;;1731:22487;;;;;19457:38;1731:22487;;18773:38;1731:22487;;3894:10;1731:22487;3894:10;1731:22487;18773:38;1731:22487;;;;:::i;:::-;19457:38;;;1731:22487;;;;;;;;;;;;;:::i;:::-;;;;;18773:38;1731:22487;;;;:::i;:::-;;;;19055:3;19110:9;;;;;:::i;:::-;1731:22487;;;;;;;;;19103:38;;;;;;1731:22487;18773:38;;;19103;;;;;;;;;;;;;;;;;;;;;;;;19055:3;19075:66;;;;;1731:22487;19075:66;;;;;:::i;:::-;1731:22487;19162:25;;;;:::i;:::-;1731:22487;19190:22;;;;:::i;:::-;1731:22487;-1:-1:-1;19190:22:15;;;19251:25;:50;:25;19279:22;19251:25;;;19233:68;19251:25;;;:::i;:::-;1731:22487;19279:22;;:::i;:::-;1731:22487;19251:50;;:::i;:::-;19233:68;;:::i;:::-;1731:22487;19158:271;1731:22487;19017:13;;19158:271;19363:22;19342:71;19363:22;;19388:25;19363:22;;;:50;:22;;:::i;19342:71::-;1731:22487;19158:271;;19103:38;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1731:22487;;;;;;;;;;;;19103:38;;;;;;;1731:22487;;;;19103:38;;;;;;1731:22487;;;;;;;;;18889:110;1731:22487;;;;;;;;;;18889:110;;;1731:22487;;;;;;;;;;;;18889:110;1731:22487;;;;;;;;;18634:3;18666:13;;;;:::i;:::-;1731:22487;;;18654:31;;;;:::i;:::-;1731:22487;;18713:13;;;:::i;:::-;:20;;1731:22487;18700:33;;;;:::i;:::-;1731:22487;18780:9;;;;;:::i;:::-;1731:22487;;;;;;;;;;18773:38;;;;;;1731:22487;18773:38;1731:22487;18773:38;;;;;;;;;;;1731:22487;18773:38;;;18634:3;18748:63;1731:22487;18748:63;;;;;;:::i;:::-;1731:22487;;18596:13;;18773:38;;;;;;;;;;;;;;;:::i;:::-;;;1731:22487;;;;;;;18773:38;;;;;;;;;1731:22487;;;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3908:9:15;1731:22487;-1:-1:-1;;;;;1731:22487:15;;-1:-1:-1;3886:50:15;;-1:-1:-1;1731:22487:15;;3894:10;:23;3886:50;:::i;:::-;3222:12:8;1731:22487:15;;8268:13;;;:::i;:::-;1731:22487;8300:10;1731:22487;;;8300:37;;1731:22487;;8384:21;;1731:22487;;8437:13;1731:22487;8432:223;8452:21;;;;;;8675:14;;;;;1731:22487;;8772:16;;;8805:19;8768:309;;9095:11;;1731:22487;;9147:6;;;9170:16;9147:6;;;;;:::i;:::-;1731:22487;;;;;;;9170:16;;1731:22487;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;8768:309;8886:24;;:::i;:::-;8933:18;;;;1731:22487;;9019:45;9020:26;;;;;:::i;:::-;9019:45;:::i;:::-;8768:309;;;1731:22487;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;8475:3;8511:13;;;8620:23;1731:22487;8511:13;8567:38;8511:13;;;;:::i;:::-;1731:22487;;;8594:10;;;;:::i;:::-;1731:22487;8567:38;;:::i;:::-;8620:23;;:::i;:::-;8475:3;1731:22487;8437:13;;;;1731:22487;;;-1:-1:-1;;;1731:22487:15;;;;;;;;3908:9;1731:22487;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;3952:11:8;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;;1786:29;1731:22487;1786:29;;;;;;;;:::i;:::-;-1:-1:-1;1731:22487:15;;;1786:29;;;1731:22487;;;-1:-1:-1;;;;;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;;;13812:24;;;:::i;:::-;1731:22487;;;;;13855:33;;1731:22487;;;;13930:25;;;;;:::i;:::-;1731:22487;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;1992:24;1731:22487;;;-1:-1:-1;;;;;1731:22487:15;;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;1907:22;1731:22487;;;-1:-1:-1;;;;;1731:22487:15;;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;;;1851:18;1731:22487;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;3754:5:8;1731:22487:15;;:::i;:::-;;;735:10:12;;3754:5:8;:::i;:::-;1731:22487:15;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;-1:-1:-1;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3908:9;1731:22487;-1:-1:-1;;;;;1731:22487:15;;;;3886:50;3894:10;:23;;3886:50;:::i;:::-;10362:4;1731:22487;;;;;;;;;10387:9;;;1731:22487;;3222:12:8;1731:22487:15;10496:15;;;1731:22487;;10582:10;1731:22487;10568:32;;;:::i;:::-;1731:22487;1975:2;1731:22487;;;;;1975:2;1731:22487;;;10650:5;10690:11;1731:22487;;10690:11;;;:::i;:::-;10719:13;1731:22487;10734:21;;;;;;10362:4;;;;;1731:22487;;;;;;;;;;11038:41;1731:22487;;;;;11203:10;1731:22487;;;;;;;;;;;11183:42;;;;;;;;;;;;1731:22487;11183:42;;;10714:304;-1:-1:-1;1731:22487:15;;-1:-1:-1;;;11152:79:15;;-1:-1:-1;;;;;1731:22487:15;;;11152:79;;;1731:22487;;;;;;;;;;;;;;;;;11152:79;;10362:4;1731:22487;10362:4;11152:79;;;;;;;1731:22487;11152:79;;;10714:304;1731:22487;;;;10362:4;8317:21:8;8313:89;;10362:4:15;1731:22487;;;;;;;;;6603:19:8;;;;6599:115;;10362:4:15;;;11358:23;10362:4;1731:22487;10362:4;;;;;1731:22487;;;;;;;;;1755:1:13;1731:22487:15;3222:12:8;1731:22487:15;;3222:12:8;1755:1:13;1731:22487:15;;;;;;7346:25:8;10362:4:15;;7346:25:8;;1731:22487:15;;;;;;11358:23;;1731:22487;;;;;;;;;;;:::i;6599:115:8:-;1731:22487:15;;-1:-1:-1;;;6649:50:8;;10362:4:15;6649:50:8;;;1731:22487:15;;;;;;;;;;;;;;;;;;;;6649:50:8;;;8313:89;1731:22487:15;;;;;8361:30:8;;;;;;;;1731:22487:15;8361:30:8;1731:22487:15;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;11152:79;;;;;;;;;;;;;;;;:::i;:::-;;;1731:22487;;;;;;;;;;;;11152:79;;;;;;;;;1731:22487;;;;;;;;;11183:42;;;;;;;;;;;;;;;;:::i;:::-;;;1731:22487;;;;;;;;;;;;11183:42;;11152:79;11183:42;;;;;;;;1731:22487;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;;;;;;;;;;10757:3;10800:134;10900:13;;;;;:::i;:::-;-1:-1:-1;1731:22487:15;;;-1:-1:-1;;;10800:134:15;;10362:4;10800:134;;;1731:22487;;;;;;;-1:-1:-1;;;;;1731:22487:15;;;;;;;;;;;;;;;;10800:134;;;;;;;;;;;;;;;;;1731:22487;10800:134;;;10757:3;10963:28;10962:44;1731:22487;10963:28;;10949:57;10963:28;;;;:::i;10949:57::-;1731:22487;;10719:13;;10800:134;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1731:22487;;;;;;;;;;;;;10962:44;10800:134;;;;;;;;1731:22487;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1731:22487:15;;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;;;1822:22;1731:22487;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;1876:24;1731:22487;;;-1:-1:-1;;;;;1731:22487:15;;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;;;-1:-1:-1;;;;;1731:22487:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;;;;1731:22487:15;;;;;;;;;;;;;1755:1:13;2558:7;1731:22487:15;2558:18:13;2554:86;;1755:1;2558:7;1755:1;1731:22487:15;;;;;;7281:20;;;;1731:22487;;7351:10;;1731:22487;;7436:40;;;;7495:24;7436:40;;:::i;:::-;7495:24;;;;:::i;:::-;:42;1731:22487;;1975:2;1731:22487;;;;;1975:2;1731:22487;;;;;;;;7625:5;7650:20;1731:22487;;7650:20;;:::i;:::-;7691:10;;;1731:22487;;;7761:50;1731:22487;;;;;;;;;;;;;7761:50;1731:22487;2558:7:13;1755:1;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;;;;;;;;;2554:86:13;1731:22487:15;;-1:-1:-1;;;2599:30:13;;1731:22487:15;;2599:30:13;1731:22487:15;;;;;;;-1:-1:-1;;1731:22487:15;;;;16010:10;1731:22487;15996:32;;;:::i;:::-;16044:13;1731:22487;16059:21;;;;;;1731:22487;;;;;;;;;;;;;;:::i;16082:3::-;16114:13;;1731:22487;16114:13;;:::i;:::-;1731:22487;;;;;;;;;16102:31;;;;:::i;:::-;1731:22487;;16044:13;;1731:22487;;;;;;;-1:-1:-1;;1731:22487:15;;;;;;;1975:2;1731:22487;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;1731:22487:15;;;;;14373:24;;:::i;:::-;1731:22487;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1731:22487:15;;;;;;;3075:2:8;1731:22487:15;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1731:22487:15;;;;;;;;;;;;;;735:10:12;1731:22487:15;;;;;;;;;;;;;;;10828:37:8;;10824:310;;1731:22487:15;;5249:5:8;;;;;;:::i;10824:310::-;10885:24;;;10881:130;;10061:19;;10057:89;;735:10:12;10159:21:8;10155:90;;-1:-1:-1;1731:22487:15;;;;3952:11:8;1731:22487:15;;;;;;;735:10:12;1731:22487:15;;;;;;;;;;;;1755:1:13;;;1731:22487:15;;5249:5:8;10824:310;;10155:90;1731:22487:15;;;;;10203:31:8;;;;;;;;1731:22487:15;10203:31:8;10057:89;1731:22487:15;;;;;10103:32:8;;;;;;;;1731:22487:15;10103:32:8;10881:130;1731:22487:15;;-1:-1:-1;;;10936:60:8;;735:10:12;10936:60:8;;;1731:22487:15;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:22487:15;;6649:50:8;;;1731:22487:15;;;;;;;-1:-1:-1;;1731:22487:15;;;;16469:10;1731:22487;16455:32;;;:::i;:::-;16503:13;1731:22487;16518:21;;;;;;1731:22487;;;;;;;;;;;;;;:::i;16541:3::-;16574:13;1731:22487;16574:13;;;;:::i;:::-;:20;;1731:22487;16561:33;;;;:::i;:::-;1731:22487;;16503:13;;1731:22487;;;;;;;-1:-1:-1;;1731:22487:15;;;;;14661:24;;;:::i;:::-;1731:22487;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;;;3222:12:8;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;735:10:12;;10061:19:8;10057:89;;-1:-1:-1;;;;;1731:22487:15;;10159:21:8;;10155:90;;1731:22487:15;735:10:12;;;1731:22487:15;;9105:4:8;1731:22487:15;;;;;;;;;;;;;;1755:1:13;1731:22487:15;;;;;10333:31:8;735:10:12;;10333:31:8;;1731:22487:15;9105:4:8;1731:22487:15;;;10155:90:8;1731:22487:15;;-1:-1:-1;;;10203:31:8;;1731:22487:15;10203:31:8;;;1731:22487:15;;;10203:31:8;10057:89;1731:22487:15;;-1:-1:-1;;;10103:32:8;;1731:22487:15;10103:32:8;;;1731:22487:15;;;10103:32:8;1731:22487:15;;;;;;;-1:-1:-1;;1731:22487:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3886:50;1731:22487;3908:9;1731:22487;;3894:10;:23;3886:50;:::i;:::-;5366:52;5374:19;;:::i;5366:52::-;5485:24;;:::i;:::-;1731:22487;;;20646:10;1731:22487;20632:32;;;;:::i;:::-;20680:13;1731:22487;20695:21;;;;;;5706:43;;;19902:27;;1731:22487;19947:13;1731:22487;19962:21;;;;;;1731:22487;5796:9;1731:22487;;;;;;;;;;;5781:36;;;;;;;;;1731:22487;5781:36;;;19942:113;5853:8;1731:22487;5853:8;1731:22487;;;;;;;;;5830:45;5915:32;5830:45;;;;:::i;:::-;5915:32;;:::i;:::-;5965:13;1731:22487;6005:3;1731:22487;;5980:23;;;;;6029:15;;1731:22487;6029:15;;;:::i;:::-;1731:22487;6025:112;;6005:3;1731:22487;5965:13;;6025:112;6082:39;6105:15;;;;:::i;:::-;1731:22487;6082:39;;:::i;:::-;6069:52;;;;:::i;:::-;1731:22487;6025:112;;5980:23;;1731:22487;5980:23;;6176:19;5980:23;;6176:19;:::i;:::-;6214:43;1731:22487;;;;;3894:10;1731:22487;3894:10;1731:22487;;;;;;:::i;:::-;6214:43;;;1731:22487;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;5781:36;;;;;;;;;;;;;;;;;:::i;:::-;;;1731:22487;;;;;;;;;;;;5781:36;;;;;;;;;19985:3;20028:15;20005:38;20028:15;;;1731:22487;20028:15;;;;;;:::i;:::-;1731:22487;20005:38;;:::i;:::-;19985:3;1731:22487;19947:13;;;;;;20718:3;20782:13;20806:5;20765:37;1731:22487;20782:13;;;;:::i;:::-;:20;;1731:22487;20765:37;;:::i;:::-;1731:22487;20830:13;;;;;:::i;:::-;1731:22487;20830:31;20826:121;;20718:3;;1731:22487;20680:13;;20826:121;20900:31;20918:13;;;;;:::i;20900:31::-;20882:49;;;;:::i;:::-;1731:22487;20826:121;;;1731:22487;;;;;;;;-1:-1:-1;;1731:22487:15;;;;;;;;;2151:5:8;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2151:5:8;1731:22487:15;;;;;;-1:-1:-1;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;;-1:-1:-1;;1731:22487:15;;;;;;;;-1:-1:-1;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;2023:25;1731:22487;-1:-1:-1;;;;;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:22487:15;;;;:::o;:::-;;;;-1:-1:-1;;;;;1731:22487:15;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1731:22487:15;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;1731:22487:15;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1731:22487:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;1731:22487:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1731:22487:15;;;;;;;;;;;;;;;;20646:10;1731:22487;;;;;;20646:10;-1:-1:-1;1731:22487:15;;;;;;-1:-1:-1;1731:22487:15;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;-1:-1:-1;;;1731:22487:15;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;15252:148::-;15355:9;1731:22487;;;-1:-1:-1;;;15332:60:15;;15386:4;15332:60;;;1731:22487;;-1:-1:-1;;1731:22487:15;;;;;;-1:-1:-1;;;;;1731:22487:15;15332:60;;;;;;;-1:-1:-1;15332:60:15;;;15325:67;15252:148;:::o;15332:60::-;;;;;-1:-1:-1;15332:60:15;;;;;;:::i;:::-;;;1731:22487;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;15332:60;;;;15252:148;:::o;1731:22487::-;;;;;;;;;;;;;15332:60;1731:22487;;;-1:-1:-1;1731:22487:15;;;;;11815:197;11957:10;1731:22487;;;-1:-1:-1;;;11937:67:15;;-1:-1:-1;;;;;1731:22487:15;;;11937:67;;;1731:22487;;;;;;;;;;;;;;;;;11937:67;;1731:22487;;;;;;;;11937:67;;;;;;;;;;-1:-1:-1;11937:67:15;;;11930:74;11815:197;:::o;11937:67::-;;;;;;;;;;;;;;;;;:::i;:::-;;;1731:22487;;;;;11815:197;:::o;11937:67::-;;;-1:-1:-1;11937:67:15;;1731:22487;;;;;;;:::o;:::-;;;;;;;;;;;;12636:864;12795:24;;:::i;:::-;1731:22487;;12850:10;1731:22487;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1731:22487:15;;;:::i;:::-;;;;;;;12938:24;;;:::i;:::-;12980:13;-1:-1:-1;12995:13:15;;;;;;13461:31;;;;;12636:864;:::o;13010:3::-;13055:13;;;;:::i;:::-;1731:22487;13071:5;;1731:22487;;;;;;;;;;;;;;;13054:32;;1731:22487;13054:32;;:::i;:::-;13124:13;;;:::i;:::-;-1:-1:-1;13124:20:15;;1731:22487;;;13165:28;;;;;;13230;;;;:::i;:::-;13214:44;;;;:::i;:::-;1731:22487;13277:20;;;;:::i;:::-;1731:22487;13161:277;1731:22487;12980:13;;13161:277;13354:28;;;;;:::i;:::-;13338:44;;;;:::i;:::-;1731:22487;-1:-1:-1;13401:21:15;;;;:::i;:::-;1731:22487;13161:277;;23579:346;23704:14;;:::i;:::-;23746:1;23772:3;1731:22487;;23749:21;;;;;23796:13;;;;:::i;:::-;1731:22487;;;23796:40;;;23772:3;23792:92;;1731:22487;;23734:13;;23792:92;23857:11;;;1731:22487;23857:11;:::o;23796:40::-;23813:13;;;;;:::i;:::-;1731:22487;23829:7;1731:22487;-1:-1:-1;23796:40:15;;23749:21;;;;23746:1;23579:346;:::o;15586:167::-;15697:9;1731:22487;;;-1:-1:-1;;;15674:71:15;;15732:4;15674:71;;;1731:22487;-1:-1:-1;;;;;1731:22487:15;;;;;;;;15674:71;;1731:22487;;;;;;;;15674:71;1731:22487;;;;;;;;;;;:::o;14838:280::-;14925:24;;:::i;:::-;1731:22487;3222:12:8;1731:22487:15;15010:16;;15006:57;;15081:14;15080:30;1731:22487;15092:3;1731:22487;15081:14;;:::i;15080:30::-;14838:280;:::o;15006:57::-;15043:8;;-1:-1:-1;15043:8:15;:::o;16877:755::-;17018:10;1731:22487;;;17059:24;1731:22487;17059:24;:::i;:::-;17293:9;1731:22487;17099:13;;1731:22487;;-1:-1:-1;;;;;1731:22487:15;;;;17114:13;;;;;;17589:35;;;;;16877:755;:::o;17129:3::-;17165:13;;;;17536:31;1731:22487;17165:13;;;;;:::i;:::-;1731:22487;;;17222:31;;;:::i;:::-;17275:27;;;;;;17324:28;;;;;:::i;:::-;1731:22487;17270:252;17554:13;;;;:::i;17536:31::-;17129:3;1731:22487;17099:13;;;;;17270:252;17413:49;;;;:::i;:::-;17481:25;;;;:::i;:::-;1731:22487;17270:252;;21279:363;21391:17;;;:::i;:::-;-1:-1:-1;1731:22487:15;21418:9;1731:22487;-1:-1:-1;;;;;1731:22487:15;;;;;;;;21391:36;;21387:60;;21502:17;;22070:67;21502:17;;;22070:67;21502:17;;:::i;:::-;1731:22487;;;;22090:10;1731:22487;;;;;;;;;;;;;;;22070:67;;;;;1731:22487;;;;;;;;;;;;;;;;;;;;;;;;;;;;22070:67;;;;;;;;;;-1:-1:-1;22070:67:15;;;21279:363;21558:15;;;1731:22487;;21279:363;:::o;1731:22487::-;;;-1:-1:-1;;;1731:22487:15;;22070:67;;1731:22487;;;;;;;;;;;;;;;;22070:67;;;;;;;;;;;;;;;;;:::i;:::-;;;1731:22487;;;;;22070:67;;;;;;-1:-1:-1;22070:67:15;;21387:60;21429:18;;;;:::o;7721:208:8:-;-1:-1:-1;;;;;1731:22487:15;;7791:21:8;;7787:91;;7346:25;1731:22487:15;;6496:21:8;6906:425;1731:22487:15;6496:21:8;1731:22487:15;6496:21:8;:::i;:::-;;1755:1:13;1731:22487:15;;;;;;;;;;;;;1755:1:13;;1731:22487:15;;;;;7346:25:8;7721:208::o;7787:91::-;1731:22487:15;;-1:-1:-1;;;7835:32:8;;7810:1;7835:32;;;1731:22487:15;;;7835:32:8;5656:300;;-1:-1:-1;;;;;1731:22487:15;;;;5739:18:8;;5735:86;;1731:22487:15;5834:16:8;;;5830:86;;1731:22487:15;6356:540:8;1731:22487:15;6356:540:8;1731:22487:15;;;6356:540:8;1731:22487:15;;6603:19:8;;;;6599:115;;1731:22487:15;;7346:25:8;1731:22487:15;;;;6356:540:8;1731:22487:15;6356:540:8;1731:22487:15;;;;6356:540:8;1731:22487:15;1755:1:13;1731:22487:15;6356:540:8;1731:22487:15;;6356:540:8;1731:22487:15;;;;;1755:1:13;;1731:22487:15;;;;;7346:25:8;5656:300::o;6599:115::-;1731:22487:15;;-1:-1:-1;;;6649:50:8;;-1:-1:-1;;;;;1731:22487:15;;;;6649:50:8;;;1731:22487:15;;;;;;;;;;;;;;;;6649:50:8;5735:86;1731:22487:15;;-1:-1:-1;;;5780:30:8;;5755:1;5780:30;;;1731:22487:15;;;5780:30:8;23100:248:15;23262:10;1731:22487;23293:9;1731:22487;;;-1:-1:-1;;;23242:69:15;;-1:-1:-1;;;;;1731:22487:15;;;23242:69;;;1731:22487;;;;;;;;;;;;;;;23242:69;;1731:22487;;;;;;;;23242:69;1731:22487"},"gasEstimates":{"creation":{"codeDepositCost":"1726600","executionCost":"infinite","totalCost":"infinite"},"external":{"ONE()":"2804","SWAP_FEE_BPS()":"434","allowance(address,address)":"3210","approve(address,uint256)":"24411","assetInfos(uint256)":"9363","assetLiquidity(uint256)":"infinite","balanceOf(address)":"2755","baseAsset()":"2869","burn(address)":"infinite","computeTotalValuation()":"infinite","decimals()":"368","factory()":"2847","getAmountOut(address,address,uint256)":"infinite","getAssetReserve(address)":"infinite","getAssets()":"infinite","getDeviation()":"infinite","getReserves()":"infinite","getWeights()":"infinite","isRebalanceNeeded()":"infinite","liquidity()":"infinite","mint(address,uint256[])":"infinite","name()":"infinite","performRebalanceIfNeeded()":"infinite","periphery()":"2649","rebalanceWeights(address)":"infinite","rebalancer()":"2280","swap(address,address,uint256,address)":"infinite","symbol()":"infinite","totalSupply()":"2386","transfer(address,uint256)":"51246","transferFrom(address,address,uint256)":"75631","trigger()":"2650","unitPrice()":"infinite"},"internal":{"_calculateAmountsToAdd(uint256,uint256[] memory)":"infinite","_calculateLiquidity(uint256,uint256)":"infinite","_calculateTotalAddedLiquidity(uint256[] memory)":"infinite","_computeTotalValuation()":"infinite","_convertBaseToToken(address,uint256)":"infinite","_convertTokenToBase(address,uint256)":"infinite","_getTargetWeight(address)":"infinite","_performRebalanceIfNeeded()":"infinite","initializeAssets(address[] memory,uint256[] memory)":"infinite","max(uint8,uint8)":"infinite","min(uint8,uint8)":"infinite"}},"methodIdentifiers":{"ONE()":"c2ee3a08","SWAP_FEE_BPS()":"67a6c440","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","assetInfos(uint256)":"d14ef46d","assetLiquidity(uint256)":"cf8fa764","balanceOf(address)":"70a08231","baseAsset()":"cdf456e1","burn(address)":"89afcb44","computeTotalValuation()":"36bf6e39","decimals()":"313ce567","factory()":"c45a0155","getAmountOut(address,address,uint256)":"4aa06652","getAssetReserve(address)":"b2b55d70","getAssets()":"67e4ac2c","getDeviation()":"89ab3532","getReserves()":"0902f1ac","getWeights()":"22acb867","isRebalanceNeeded()":"8a77c8dc","liquidity()":"1a686502","mint(address,uint256[])":"de836ebd","name()":"06fdde03","performRebalanceIfNeeded()":"f47b45e8","periphery()":"77aace1a","rebalanceWeights(address)":"0723c999","rebalancer()":"01d22ccd","swap(address,address,uint256,address)":"6e81221c","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","trigger()":"7fec8d38","unitPrice()":"e73faa2d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_trigger\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_periphery\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesBurned\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesMinted\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"RebalancePerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsAdded\",\"type\":\"uint256[]\"}],\"name\":\"WeightsRebalanced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetInfos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetIndex\",\"type\":\"uint256\"}],\"name\":\"assetLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computeTotalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVal\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"valuations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeviation\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"directions\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deviations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRebalanceNeeded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsToAdd\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsToRemove\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periphery\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"toSend\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trigger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"assetLiquidity(uint256)\":{\"details\":\"Returns the liquidity of a specific asset in the pool.\",\"params\":{\"assetIndex\":\"The index of the asset.\"},\"returns\":{\"_0\":\"The liquidity of the asset.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address)\":{\"details\":\"Burns the pool tokens and transfers the underlying assets to the specified address.\",\"params\":{\"to\":\"The address to transfer the underlying assets to.\"}},\"computeTotalValuation()\":{\"details\":\"Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\",\"returns\":{\"totalVal\":\"The total valuation of the pool.\",\"valuations\":\"An array of individual valuations.\"}},\"constructor\":{\"details\":\"Initializes a new instance of the BaluniV1Pool contract.\",\"params\":{\"_assets\":\"An array of addresses representing the assets in the pool.\",\"_periphery\":\"The address of the periphery contract.\",\"_rebalancer\":\"The address of the rebalancer contract.\",\"_trigger\":\"The trigger value for rebalancing the pool.\",\"_weights\":\"An array of weights corresponding to the assets in the pool.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAmountOut(address,address,uint256)\":{\"details\":\"Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\",\"params\":{\"amount\":\"The amount of `fromToken` being swapped.\",\"fromToken\":\"The address of the token being swapped from.\",\"toToken\":\"The address of the token being swapped to.\"},\"returns\":{\"_0\":\"The amount of `toToken` that will be received.\"}},\"getAssetReserve(address)\":{\"details\":\"Returns the reserve amount of the specified asset.\",\"params\":{\"asset\":\"The address of the asset.\"},\"returns\":{\"_0\":\"The reserve amount of the asset.\"}},\"getAssets()\":{\"details\":\"Retrieves the list of assets in the pool.\",\"returns\":{\"_0\":\"An array of addresses representing the assets.\"}},\"getDeviation()\":{\"details\":\"Returns the deviation between the current weights and target weights of the assets in the pool.\",\"returns\":{\"directions\":\"An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\"}},\"getReserves()\":{\"details\":\"Returns an array of reserves for each asset in the pool.\",\"returns\":{\"_0\":\"An array of reserves.\"}},\"getWeights()\":{\"details\":\"Retrieves the list of weights associated with the assets in the pool.\",\"returns\":{\"_0\":\"An array of uint256 values representing the weights.\"}},\"isRebalanceNeeded()\":{\"details\":\"Checks if rebalancing is needed for the pool.\",\"returns\":{\"_0\":\"A boolean value indicating whether rebalancing is needed or not.\"}},\"liquidity()\":{\"details\":\"Returns the total liquidity of the pool.\",\"returns\":{\"_0\":\"The total liquidity of the pool.\"}},\"mint(address,uint256[])\":{\"details\":\"Mints new tokens and adds them to the specified address.\",\"params\":{\"to\":\"The address to which the new tokens will be minted.\"},\"returns\":{\"_0\":\"The amount of tokens minted.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"performRebalanceIfNeeded()\":{\"details\":\"Performs rebalance\"},\"rebalanceWeights(address)\":{\"details\":\"Rebalances the weights of the pool by calculating the amounts to add for each token, transferring the calculated amounts from the user to the pool, minting the total added liquidity, updating the reserves, and emitting an event to indicate the rebalancing of weights.\",\"params\":{\"receiver\":\"The address to receive the minted liquidity tokens.\"}},\"swap(address,address,uint256,address)\":{\"details\":\"Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`. Requirements: - `fromToken` and `toToken` must be different tokens. - `amount` must be greater than zero. - Sufficient liquidity of `toToken` must be available in the contract. Emits a `Swap` event with the details of the swap. Updates the reserves after the swap.\",\"params\":{\"amount\":\"The amount of `fromToken` to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"receiver\":\"The address to receive the swapped tokens.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"toSend\":\"The amount of `toToken` received after the swap.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"unitPrice()\":{\"details\":\"Returns the unit price of the pool.\",\"returns\":{\"_0\":\"The unit price of the pool.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address)\":{\"notice\":\"This function can only be called by the periphery contract.The pool tokens must have a balance greater than 0.The total supply of pool tokens must be greater than 0.The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.The function checks if the pool has sufficient liquidity before performing any transfers.If any transfer fails, the function reverts the entire operation.After the transfers, the function updates the reserves of the pool.Emits a `Burn` event with the address and share of pool tokens burned.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1Pool.sol\":\"BaluniV1Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/BaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './interfaces/IBaluniV1Rebalancer.sol';\\r\\nimport './interfaces/IBaluniV1Router.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\\r\\n\\r\\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\\r\\n\\r\\ncontract BaluniV1Pool is ERC20, ReentrancyGuard {\\r\\n    AssetInfo[] public assetInfos;\\r\\n    uint256 public trigger;\\r\\n    uint256 public ONE;\\r\\n    address public periphery;\\r\\n    address public factory;\\r\\n    uint256 public constant SWAP_FEE_BPS = 30; // 0.3%\\r\\n    address public baseAsset;\\r\\n    address public rebalancer;\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n    }\\r\\n\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes a new instance of the BaluniV1Pool contract.\\r\\n     * @param _rebalancer The address of the rebalancer contract.\\r\\n     * @param _assets An array of addresses representing the assets in the pool.\\r\\n     * @param _weights An array of weights corresponding to the assets in the pool.\\r\\n     * @param _trigger The trigger value for rebalancing the pool.\\r\\n     * @param _periphery The address of the periphery contract.\\r\\n     */\\r\\n    constructor(\\r\\n        address _rebalancer,\\r\\n        address[] memory _assets,\\r\\n        uint256[] memory _weights,\\r\\n        uint256 _trigger,\\r\\n        address _periphery\\r\\n    ) ERC20('Baluni LP', 'BALUNI-LP') {\\r\\n        periphery = _periphery;\\r\\n        factory = msg.sender;\\r\\n        rebalancer = _rebalancer;\\r\\n        ONE = 1e18;\\r\\n\\r\\n        initializeAssets(_assets, _weights);\\r\\n\\r\\n        trigger = _trigger;\\r\\n\\r\\n        baseAsset = IBaluniV1Rebalancer(_rebalancer).USDC();\\r\\n        //baseAsset = IBaluniV1Rebalancer(_rebalancer).WNATIVE();\\r\\n\\r\\n        // Ensure the sum of weights equals 10000\\r\\n        uint256 totalWeight = 0;\\r\\n        for (uint256 i = 0; i < _weights.length; i++) {\\r\\n            totalWeight += _weights[i];\\r\\n        }\\r\\n        require(totalWeight == 10000, 'Invalid weights');\\r\\n    }\\r\\n\\r\\n    modifier onlyPeriphery() {\\r\\n        require(msg.sender == periphery, 'Only Periphery');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the assets and their weights for the pool.\\r\\n     * @param _assets The array of asset addresses.\\r\\n     * @param _weights The array of weights corresponding to each asset.\\r\\n     */\\r\\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal {\\r\\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n        for (uint256 i = 0; i < _assets.length; i++) {\\r\\n            require(_assets[i] != address(0), 'Invalid asset address');\\r\\n            require(_weights[i] > 0, 'Invalid weight');\\r\\n\\r\\n            assetInfos.push(AssetInfo({asset: _assets[i], weight: _weights[i]}));\\r\\n\\r\\n            IERC20 asset = IERC20(_assets[i]);\\r\\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\\r\\n                asset.approve(address(rebalancer), type(uint256).max);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\\r\\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\\r\\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\\r\\n     * @param receiver The address to receive the minted liquidity tokens.\\r\\n     */\\r\\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation();\\r\\n\\r\\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations);\\r\\n\\r\\n        // Calculate total added liquidity before minting\\r\\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\\r\\n\\r\\n        uint baseDecimal = IERC20Metadata(baseAsset).decimals();\\r\\n\\r\\n        totalAddedLiquidity *= 10 ** 18 - baseDecimal;\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\\r\\n            if (amountsToAdd[i] > 0) {\\r\\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _mint(receiver, totalAddedLiquidity);\\r\\n\\r\\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - `fromToken` and `toToken` must be different tokens.\\r\\n     * - `amount` must be greater than zero.\\r\\n     * - Sufficient liquidity of `toToken` must be available in the contract.\\r\\n     *\\r\\n     * Emits a `Swap` event with the details of the swap.\\r\\n     *\\r\\n     * Updates the reserves after the swap.\\r\\n     *\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of `fromToken` to swap.\\r\\n     * @param receiver The address to receive the swapped tokens.\\r\\n     * @return toSend The amount of `toToken` received after the swap.\\r\\n     */\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external nonReentrant returns (uint256 toSend) {\\r\\n        require(fromToken != toToken, 'Cannot swap the same token');\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n        uint256 receivedAmount = getAmountOut(fromToken, toToken, amount);\\r\\n        require(getAssetReserve(toToken) >= receivedAmount, 'Insufficient Liquidity');\\r\\n\\r\\n        uint256 fee = (receivedAmount * SWAP_FEE_BPS) / 10000;\\r\\n        toSend = receivedAmount - fee;\\r\\n\\r\\n        require(toSend > 0, 'Amount to send must be greater than 0');\\r\\n\\r\\n        emit Swap(receiver, fromToken, toToken, amount, toSend);\\r\\n\\r\\n        return toSend;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Mints new tokens and adds them to the specified address.\\r\\n     * @param to The address to which the new tokens will be minted.\\r\\n     * @return The amount of tokens minted.\\r\\n     */\\r\\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        uint256 totalValue = 0;\\r\\n        uint256[] memory _reserves = getReserves();\\r\\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\\r\\n        require(assetInfos.length > 0, 'No assets');\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n\\r\\n            uint256 valuation = _convertTokenToBase(asset, amounts[i]);\\r\\n            totalValue += valuation;\\r\\n        }\\r\\n\\r\\n        require(totalValue > 0, 'Total value must be greater than 0');\\r\\n\\r\\n        uint256 toMint;\\r\\n\\r\\n        if (totalSupply == 0) {\\r\\n            toMint = totalValue;\\r\\n        } else {\\r\\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\\r\\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\\r\\n            toMint = (((totalValue) * totalSupply) / totalLiquidity);\\r\\n        }\\r\\n        require(toMint != 0, 'Mint qty is 0');\\r\\n\\r\\n        _mint(to, toMint);\\r\\n        emit Mint(to, toMint);\\r\\n\\r\\n        return toMint;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\\r\\n     * @param to The address to transfer the underlying assets to.\\r\\n     * @notice This function can only be called by the periphery contract.\\r\\n     * @notice The pool tokens must have a balance greater than 0.\\r\\n     * @notice The total supply of pool tokens must be greater than 0.\\r\\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\\r\\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\\r\\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\\r\\n     * @notice If any transfer fails, the function reverts the entire operation.\\r\\n     * @notice After the transfers, the function updates the reserves of the pool.\\r\\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\\r\\n     */\\r\\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\\r\\n        uint256 share = balanceOf(address(this));\\r\\n        require(share > 0, 'Share must be greater than 0');\\r\\n\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        require(totalSupply > 0, 'No liquidity');\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n        uint256 fee = (share * SWAP_FEE_BPS) / 10000;\\r\\n        uint256 shareAfterFee = share - fee;\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\\r\\n                address(this),\\r\\n                assetInfos[i].asset\\r\\n            );\\r\\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\\r\\n        }\\r\\n\\r\\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient BALUNI liquidity');\\r\\n\\r\\n        bool feeTransferSuccess = IERC20(address(this)).transfer(IBaluniV1Rebalancer(rebalancer).treasury(), fee);\\r\\n        require(feeTransferSuccess, 'Fee transfer failed');\\r\\n\\r\\n        _burn(address(this), shareAfterFee);\\r\\n\\r\\n        emit Burn(to, shareAfterFee);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\\r\\n     * @param fromToken The address of the token being swapped from.\\r\\n     * @param toToken The address of the token being swapped to.\\r\\n     * @param amount The amount of `fromToken` being swapped.\\r\\n     * @return The amount of `toToken` that will be received.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\\r\\n        return IBaluniV1Rebalancer(rebalancer).convert(fromToken, toToken, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance\\r\\n     */\\r\\n    function performRebalanceIfNeeded()\\r\\n        external\\r\\n        onlyPeriphery\\r\\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove)\\r\\n    {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        return _performRebalanceIfNeeded();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\\r\\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\\r\\n     */\\r\\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\\r\\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n\\r\\n        directions = new bool[](numAssets);\\r\\n        deviations = new uint256[](numAssets);\\r\\n\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\\r\\n            uint256 targetWeight = assetInfos[i].weight;\\r\\n\\r\\n            if (currentWeight > targetWeight) {\\r\\n                deviations[i] = currentWeight - targetWeight;\\r\\n                directions[i] = true;\\r\\n            } else {\\r\\n                deviations[i] = targetWeight - currentWeight;\\r\\n                directions[i] = false;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return (directions, deviations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the liquidity of a specific asset in the pool.\\r\\n     * @param assetIndex The index of the asset.\\r\\n     * @return The liquidity of the asset.\\r\\n     */\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\\r\\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\\r\\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\\r\\n        return usdValuations[assetIndex];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\\r\\n     * @return totalVal The total valuation of the pool.\\r\\n     * @return valuations An array of individual valuations.\\r\\n     */\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\\r\\n        (totalVal, valuations) = _computeTotalValuation();\\r\\n        return (totalVal, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the total liquidity of the pool.\\r\\n     * @return The total liquidity of the pool.\\r\\n     */\\r\\n    function liquidity() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        return totalVal;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the unit price of the pool.\\r\\n     * @return The unit price of the pool.\\r\\n     */\\r\\n    function unitPrice() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        if (totalSupply == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        return (totalVal * ONE) / totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of reserves for each asset in the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves() public view returns (uint256[] memory) {\\r\\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve amount of the specified asset.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve amount of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address asset) public view returns (uint256) {\\r\\n        return IBaluniV1PoolPeriphery(periphery).getAssetReserve(address(this), asset);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of assets in the pool.\\r\\n     * @return An array of addresses representing the assets.\\r\\n     */\\r\\n    function getAssets() external view returns (address[] memory) {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n        }\\r\\n        return assets;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of weights associated with the assets in the pool.\\r\\n     * @return An array of uint256 values representing the weights.\\r\\n     */\\r\\n    function getWeights() external view returns (uint256[] memory) {\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n        }\\r\\n        return weights;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the assets in the pool.\\r\\n     * @return totalValuation The total valuation of the assets.\\r\\n     * @return valuations An array of valuations for each asset in the pool.\\r\\n     */\\r\\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n        valuations = new uint256[](numAssets);\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n            uint256 assetReserve = getAssetReserve(address(asset));\\r\\n\\r\\n            if ((address(asset) == baseAsset)) {\\r\\n                valuations[i] = assetReserve;\\r\\n            } else {\\r\\n                uint256 valuation = _convertTokenToBase(address(asset), assetReserve);\\r\\n                valuations[i] = valuation;\\r\\n            }\\r\\n            totalValuation += valuations[i];\\r\\n        }\\r\\n        return (totalValuation, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed.\\r\\n     * This function retrieves the assets and weights from the `assetInfos` array,\\r\\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\\r\\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\\r\\n     * @notice This function should only be called internally.\\r\\n     */\\r\\n    function _performRebalanceIfNeeded() internal returns (uint256[] memory, uint256[] memory) {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n        }\\r\\n\\r\\n        uint256[] memory balances = getReserves();\\r\\n\\r\\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n\\r\\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\\r\\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\\r\\n            } else {\\r\\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        emit RebalancePerformed(msg.sender, assets);\\r\\n\\r\\n        return (amountsToAdd, amountsToRemove);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the total added liquidity based on the amounts to add.\\r\\n     * @param amountsToAdd An array of amounts to add for each asset.\\r\\n     * @return totalAddedLiquidity The total added liquidity.\\r\\n     */\\r\\n    function _calculateTotalAddedLiquidity(\\r\\n        uint256[] memory amountsToAdd\\r\\n    ) internal view returns (uint256 totalAddedLiquidity) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            totalAddedLiquidity += amountsToAdd[i];\\r\\n        }\\r\\n        return totalAddedLiquidity;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\\r\\n     * @param totalValuation The total valuation of the pool.\\r\\n     * @param valuations An array of current valuations for each asset.\\r\\n     * @return amountsToAdd An array of amounts to add to each asset.\\r\\n     */\\r\\n    function _calculateAmountsToAdd(\\r\\n        uint256 totalValuation,\\r\\n        uint256[] memory valuations\\r\\n    ) internal view returns (uint256[] memory amountsToAdd) {\\r\\n        amountsToAdd = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\\r\\n            if (valuations[i] < targetValuation) {\\r\\n                amountsToAdd[i] = targetValuation - valuations[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return amountsToAdd;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\\r\\n     * @param index The index of the asset in the assetInfos array.\\r\\n     * @param amountToAdd The amount of native tokens to add as liquidity.\\r\\n     */\\r\\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\\r\\n        if (assetInfos[index].asset == baseAsset) return amountToAdd;\\r\\n\\r\\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\\r\\n        require(tokenAmount > 0, 'Invalid token amount to add');\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified amount of native token to the corresponding token amount.\\r\\n     * @param toToken The address of the native token to convert from.\\r\\n     * @param amount The amount of native token to convert.\\r\\n     * @return The corresponding token amount.\\r\\n     */\\r\\n    function _convertBaseToToken(address toToken, uint256 amount) internal view returns (uint256) {\\r\\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(baseAsset, toToken, amount);\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the maximum of two uint8 values.\\r\\n     * @param a The first uint8 value.\\r\\n     * @param b The second uint8 value.\\r\\n     * @return The maximum value between a and b.\\r\\n     */\\r\\n    function max(uint8 a, uint8 b) private pure returns (uint8) {\\r\\n        return a >= b ? a : b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the minimum of two uint8 values.\\r\\n     * @param a The first uint8 value.\\r\\n     * @param b The second uint8 value.\\r\\n     * @return The minimum value between a and b.\\r\\n     */\\r\\n    function min(uint8 a, uint8 b) private pure returns (uint8) {\\r\\n        return a <= b ? a : b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified token to the native token using the rebalancer contract.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param amount The amount of tokens to convert.\\r\\n     * @return scaledAmount The converted amount of tokens.\\r\\n     */\\r\\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 scaledAmount) {\\r\\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(fromToken, baseAsset, amount);\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    // return true if one of the deviation overcome the trigger\\r\\n    /**\\r\\n     * @dev Checks if rebalancing is needed for the pool.\\r\\n     * @return A boolean value indicating whether rebalancing is needed or not.\\r\\n     */\\r\\n    function isRebalanceNeeded() public view returns (bool) {\\r\\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\\r\\n        for (uint256 i = 0; i < deviations.length; i++) {\\r\\n            if (directions[i] && deviations[i] > trigger) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function _getTargetWeight(address _token) internal view returns (uint256) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            if (assetInfos[i].asset == _token) {\\r\\n                return assetInfos[i].weight;\\r\\n            }\\r\\n        }\\r\\n        return 0;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x09f746eb5080ee915eabf3249e2fc5f1c0e10b9101b1875cb0d20b86a90e5f7c\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1PoolPeriphery\\r\\n * @dev Interface for the BaluniV1PoolPeriphery contract.\\r\\n */\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    /**\\r\\n     * @dev Initializes the contract by setting the pool factory address.\\r\\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\\r\\n     */\\r\\n    function initialize(address _poolFactory) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Reinitializes the contract by setting the pool factory address.\\r\\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\\r\\n     * @param version The version number.\\r\\n     */\\r\\n    function reinitialize(address _poolFactory, uint64 version) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps tokens in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @param receiver The address of the receiver.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs batch swaps between multiple token pairs.\\r\\n     * @param fromTokens An array of addresses representing the tokens to swap from.\\r\\n     * @param toTokens An array of addresses representing the tokens to swap to.\\r\\n     * @param amounts An array of amounts representing the amounts to swap.\\r\\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\\r\\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\\r\\n     */\\r\\n    function batchSwap(\\r\\n        address[] calldata fromTokens,\\r\\n        address[] calldata toTokens,\\r\\n        uint256[] calldata amounts,\\r\\n        address[] calldata receivers\\r\\n    ) external returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances weights in a pool.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function rebalanceWeights(address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Adds liquidity to a BaluniV1Pool.\\r\\n     * @param amounts An array of amounts for each asset to add as liquidity.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function addLiquidity(uint256[] calldata amounts, address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Removes liquidity from a BaluniV1Pool.\\r\\n     * @param share The amount of liquidity tokens to remove.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed for the given tokens.\\r\\n     * @param poolAddress The address of the token pool to rebalance.\\r\\n     */\\r\\n    function performRebalanceIfNeeded(address poolAddress) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the given token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsContainingToken(address token) external view returns (address[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the version of the contract.\\r\\n     * @return The version string.\\r\\n     */\\r\\n    function getVersion() external view returns (uint64);\\r\\n\\r\\n    /**\\r\\n     * @dev Changes the address of the pool factory contract.\\r\\n     * Can only be called by the contract owner.\\r\\n     * @param _poolFactory The new address of the pool factory contract.\\r\\n     */\\r\\n    function changePoolFactory(address _poolFactory) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserves of the pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve of a specific asset in a pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x6de73abdbc224bb8113efb2ee8f983026c305b104518c3ccbabb3fa96d5302f6\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n    struct RebalanceVars {\\r\\n        uint256 length;\\r\\n        uint256 totalValue;\\r\\n        uint256 finalUsdBalance;\\r\\n        uint256 overweightVaultsLength;\\r\\n        uint256 underweightVaultsLength;\\r\\n        uint256 totalActiveWeight;\\r\\n        uint256 amountOut;\\r\\n        uint256[] overweightVaults;\\r\\n        uint256[] overweightAmounts;\\r\\n        uint256[] underweightVaults;\\r\\n        uint256[] underweightAmounts;\\r\\n        uint256[] balances;\\r\\n    }\\r\\n\\r\\n    // Variables\\r\\n    function baluniRouter() external view returns (address);\\r\\n\\r\\n    function USDC() external view returns (address);\\r\\n\\r\\n    function WNATIVE() external view returns (address);\\r\\n\\r\\n    function _1InchSpotAgg() external view returns (address);\\r\\n\\r\\n    function treasury() external view returns (address);\\r\\n\\r\\n    // Functions\\r\\n    function rebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        address baseAsset\\r\\n    ) external;\\r\\n\\r\\n    function checkRebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address baseAsset\\r\\n    ) external view returns (RebalanceVars memory);\\r\\n\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x62bba659626c136099395a066049f73bac4042792e8980aa32e1e9d05ab30f18\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n    struct Call {\\r\\n        address to;\\r\\n        uint256 value;\\r\\n        bytes data;\\r\\n    }\\r\\n\\r\\n    // Variables\\r\\n    function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTokens() external view returns (address[] memory);\\r\\n\\r\\n    function USDC() external view returns (IERC20);\\r\\n\\r\\n    function WNATIVE() external view returns (address);\\r\\n\\r\\n    function oracle() external view returns (address);\\r\\n\\r\\n    function uniswapRouter() external view returns (address);\\r\\n\\r\\n    function uniswapFactory() external view returns (address);\\r\\n\\r\\n    function baluniFactory() external view returns (address);\\r\\n\\r\\n    function baluniPeriphery() external view returns (address);\\r\\n\\r\\n    function agentFactory() external view returns (address);\\r\\n\\r\\n    function marketOracle() external view returns (address);\\r\\n\\r\\n    function rebalancer() external view returns (address);\\r\\n\\r\\n    function treasury() external view returns (address);\\r\\n\\r\\n    // Functions\\r\\n    function initialize(\\r\\n        address _usdc,\\r\\n        address _wnative,\\r\\n        address _1inchSpotAgg,\\r\\n        address _uniRouter,\\r\\n        address _uniFactory,\\r\\n        address _rebalancer\\r\\n    ) external;\\r\\n\\r\\n    function reinitialize(\\r\\n        address _usdc,\\r\\n        address _wnative,\\r\\n        address _1inchSpotAgg,\\r\\n        address _uniRouter,\\r\\n        address _uniFactory,\\r\\n        address _rebalancer,\\r\\n        uint64 version\\r\\n    ) external;\\r\\n\\r\\n    function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n    function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n    function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n    function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n    function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n    function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n    function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n    function liquidate(address token) external;\\r\\n\\r\\n    function liquidateAll() external;\\r\\n\\r\\n    function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n    function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n    function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n    function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n    function callRebalance(\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        uint256 limit,\\r\\n        address baseAsset\\r\\n    ) external;\\r\\n\\r\\n    function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n    function calculateTokenShare(\\r\\n        uint256 totalBaluni,\\r\\n        uint256 totalERC20Balance,\\r\\n        uint256 baluniAmount,\\r\\n        uint256 tokenDecimals\\r\\n    ) external pure returns (uint256);\\r\\n\\r\\n    function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n    function totalValuation() external view returns (uint256);\\r\\n\\r\\n    function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n    function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n    function getVersion() external view returns (uint64);\\r\\n\\r\\n    function unitPrice() external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x22f26eeb4b0b0e9d2a8f95fc5072c3d3bfd43bc55a2368c333fd91cebf5195ce\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1159,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1165,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1167,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1169,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1171,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":2049,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_status","offset":0,"slot":"5","type":"t_uint256"},{"astId":2232,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"assetInfos","offset":0,"slot":"6","type":"t_array(t_struct(AssetInfo)2252_storage)dyn_storage"},{"astId":2234,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"trigger","offset":0,"slot":"7","type":"t_uint256"},{"astId":2236,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"ONE","offset":0,"slot":"8","type":"t_uint256"},{"astId":2238,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"periphery","offset":0,"slot":"9","type":"t_address"},{"astId":2240,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"factory","offset":0,"slot":"10","type":"t_address"},{"astId":2245,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"baseAsset","offset":0,"slot":"11","type":"t_address"},{"astId":2247,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"rebalancer","offset":0,"slot":"12","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(AssetInfo)2252_storage)dyn_storage":{"base":"t_struct(AssetInfo)2252_storage","encoding":"dynamic_array","label":"struct BaluniV1Pool.AssetInfo[]","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AssetInfo)2252_storage":{"encoding":"inplace","label":"struct BaluniV1Pool.AssetInfo","members":[{"astId":2249,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"asset","offset":0,"slot":"0","type":"t_address"},{"astId":2251,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"weight","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"burn(address)":{"notice":"This function can only be called by the periphery contract.The pool tokens must have a balance greater than 0.The total supply of pool tokens must be greater than 0.The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.The function checks if the pool has sufficient liquidity before performing any transfers.If any transfer fails, the function reverts the entire operation.After the transfers, the function updates the reserves of the pool.Emits a `Burn` event with the address and share of pool tokens burned."}},"version":1}}},"contracts/BaluniV1PoolFactory.sol":{"BaluniV1PoolFactory":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"},{"indexed":false,"internalType":"address","name":"rebalancer","type":"address"}],"name":"PoolCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allPools","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newPeriphery","type":"address"}],"name":"changePeriphery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"trigger","type":"uint256"}],"name":"createPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllPools","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"getPoolAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset1","type":"address"},{"internalType":"address","name":"asset2","type":"address"}],"name":"getPoolByAssets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsByAsset","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rebalancer","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"periphery","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_pool","type":"address"}],"name":"poolExist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rebalancer","type":"address"},{"internalType":"uint64","name":"_version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"changePeriphery(address)":{"details":"Changes the address of the periphery contract.","params":{"_newPeriphery":"The new address of the periphery contract."}},"createPool(address[],uint256[],uint256)":{"details":"Creates a new BaluniV1Pool contract and registers it in the factory.","params":{"assets":"The array of asset addresses to be included in the pool.","trigger":"The trigger value for rebalancing the pool.","weights":"The array of weights corresponding to each asset in the pool."},"returns":{"_0":"The address of the newly created pool."}},"getAllPools()":{"details":"Retrieves all the pools created by the factory.","returns":{"_0":"An array of pool addresses."}},"getPoolAssets(address)":{"details":"Retrieves the assets of a specific pool.","params":{"poolAddress":"The address of the pool."},"returns":{"_0":"An array of asset addresses."}},"getPoolByAssets(address,address)":{"details":"Retrieves the pool address based on the given assets.","params":{"asset1":"The address of the first asset.","asset2":"The address of the second asset."},"returns":{"_0":"The address of the pool."}},"getPoolsByAsset(address)":{"details":"Returns an array of pool addresses that contain the specified token.","params":{"token":"The address of the token to search for."},"returns":{"_0":"An array of pool addresses."}},"getPoolsCount()":{"details":"Retrieves the number of pools created by the factory.","returns":{"_0":"The count of pools."}},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a0806040523460295730608052613f34908161002e82396080518181816107a401526108800152f35b5f80fdfe60806040818152600480361015610014575f80fd5b5f3560e01c92836301d22ccd14611022575082632d5e94a7146107435782633069873b14610b1a57826341d1de9714610add5782634276b97b14610a5c5782634f1ef2861461080857826352d1902d14610791578263531aa03e14610743578263715018a6146106dc57826377aace1a146106b457826389345efb146106865782638da5cb5b146106525782638f2248bc14610565578263ad3cb1cc146104e5578263b4340e6a14610370578263b4ac686014610353578263c4d66de81461020257508163d88ff1f41461016e57508063e9b31cff1461012b5763f2fde38b146100fc575f80fd5b3461012757602036600319011261012757610125610118611045565b6101206112e8565b611277565b005b5f80fd5b3461012757602036600319011261012757610144611045565b61014c6112e8565b600380546001600160a01b0319166001600160a01b0392909216919091179055005b34610127575f3660031901126101275780515f8054808352818052602080840194927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56392915b8282106101e2576101de86866101cc828b0383611071565b51918291602083526020830190611106565b0390f35b83546001600160a01b0316875295860195600193840193909101906101b4565b346101275760203660031901126101275761021b611045565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0091825460ff81861c16159267ffffffffffffffff82168015908161034b575b6001149081610341575b159081610338575b5061032a575067ffffffffffffffff19811660011784558261030b575b50610294611320565b61029c611320565b6102a4611320565b6102ad33611277565b60018060a01b03166bffffffffffffffffffffffff60a01b60025416176002556102d357005b805460ff60401b1916905551600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b68ffffffffffffffffff1916680100000000000000011783558461028b565b855163f92ee8a960e01b8152fd5b9050158761026e565b303b159150610266565b85915061025c565b5034610127575f366003190112610127576020905f549051908152f35b3461012757602036600319011261012757610389611045565b905f549161039683611245565b925f926001600160a01b039284919084165b8383106103fd575b505050506103bd82611245565b925f5b8381106103dc578551602080825281906101de90820188611106565b80836103ea6001938561115e565b51166103f6828861115e565b52016103c0565b8461040d849794989695986110bf565b90549060031b1c16908851976319f92b0b60e21b89525f898581865afa9889156104db575f996104b7575b505f5b89518110156104a9578287610450838d61115e565b51161461045f5760010161043b565b5093919094959750610471828961115e565b525f19811461049657600101945b865186146104915760010191926103a8565b6103b0565b601182634e487b7160e01b5f525260245ffd5b50939691509394965061047f565b6104d49199503d805f833e6104cc8183611071565b810190611172565b978a610438565b8a513d5f823e3d90fd5b9034610127575f366003190112610127578051918183019083821067ffffffffffffffff83111761055257508152600582526020820191640352e302e360dc1b83528151928391602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b604190634e487b7160e01b5f525260245ffd5b903461012757806003193601126101275761057e611045565b916024359267ffffffffffffffff90818516809503610127577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00928354928660ff85881c16918215610645575b505061063757600280546001600160a01b0319166001600160a01b03841617905568ffffffffffffffffff1983168617600160401b1760ff60401b1916845584518681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b845163f92ee8a960e01b8152fd5b85161015905086886105cb565b5034610127575f366003190112610127575f80516020613edf8339815191525490516001600160a01b039091168152602090f35b5034610127576020366003190112610127576020906106ab6106a6611045565b6111fc565b90519015158152f35b5034610127575f3660031901126101275760035490516001600160a01b039091168152602090f35b34610127575f366003190112610127576106f46112e8565b5f80516020613edf83398151915280546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b503461012757806003193601126101275760209061075f611045565b61076761105b565b6001600160a01b039182165f90815260018552838120918316815290845282902054915191168152f35b9034610127575f366003190112610127577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036107fb57602090517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b5163703e46dd60e11b8152fd5b816003193601126101275761081b611045565b602492833567ffffffffffffffff81116101275736602382011215610127578084013561084781611142565b9361085484519586611071565b818552602091828601933689838301011161012757815f928a8693018737870101526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116308114908115610a2e575b50610a1e576108b96112e8565b81169484516352d1902d60e01b8152838189818a5afa5f91816109ef575b506108f25750505050505191634c9c8ce360e01b8352820152fd5b9087878794938b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc918281036109da5750853b156109c6575080546001600160a01b031916821790558451907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a28251156109ac5750505f6101259581925190845af4913d156109a2573d61099461098b82611142565b92519283611071565b81525f81943d92013e611361565b5060609250611361565b94509450505050346109ba57005b63b398979f60e01b8152fd5b8651634c9c8ce360e01b8152808501849052fd5b8751632a87526960e21b815280860191909152fd5b9091508481813d8311610a17575b610a078183611071565b810103126101275751908a6108d7565b503d6109fd565b845163703e46dd60e11b81528790fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54161415896108ac565b34610127576020366003190112610127575f6001600160a01b03610a7e611045565b168351928380926319f92b0b60e21b82525afa908115610ad357916101de925f92610ab7575b5051918291602083526020830190611106565b610acc9192503d805f833e6104cc8183611071565b9083610aa4565b82513d5f823e3d90fd5b346101275760203660031901126101275735905f5482101561012757610b046020926110bf565b905491519160018060a01b039160031b1c168152f35b346101275760603660031901126101275767ffffffffffffffff91813583811161012757366023820112156101275780830135936024610b59866110a7565b92610b6685519485611071565b868452602096828886019160051b83010191368311610127578301905b8282106110035750505080358281116101275736602382011215610127578086013590610baf826110a7565b90610bbc87519283611071565b8282528882019260051b81018401908336831161012757858b9201905b838210610ff45750506003546001600160a01b0396604495935090871691508115610fbe576001948589511115610f7e578851855103610f31575f865b610e43575b5050866002541693895194612b1a8087019387851090851117610e3157908695949392916113c58739825260a08d8301528c610c5a60a084018c611106565b8381038d8501529151808352910193905f888f5b838310610e1a57505050604435606084015250506080015203905ff08015610e10578316955f54600160401b811015610dfe5790610cb582848a9897969594015f556110bf565b81549060031b908689831b921b1916179055815f905b610d1d575b505050507f93de7d9de9f3e05ba87a0170fcbb71af623439caf5e5079587b9d38c5da9b0d191610d0f9160025416855192839287845287840190611106565b90888301520390a251908152f35b9091929394958651821015610df65750828101808211610de45783929190835b610d4f575b5082018896959493610ccb565b879391929351811015610ddb57819087610d69858b61115e565b51165f52818c52895f2088610d7e838c61115e565b51165f528c52895f206bffffffffffffffffffffffff60a01b908c8282541617905588610dab838c61115e565b51165f52828d528a5f2089610dc0878d61115e565b51165f528d528b8b5f20918254161790550181939291610d3d565b92919092610d42565b84601184634e487b7160e01b5f52525ffd5b959493610cd0565b83604183634e487b7160e01b5f52525ffd5b85513d5f823e3d90fd5b84518852899850968701969093019201888f610c6e565b8860418e634e487b7160e01b5f52525ffd5b8951811015610f2c57868101808211610f1a57879291908b8f8c8f875b610e73575b505050505082019091610c16565b909192939495968451861015610f0d575084610ea39183610e94898861115e565b51165f528d85525f209461115e565b51165f5252898c5f205416610ec2578792919083018b8f8c8f87610e60565b8b5162461bcd60e51b8152808e018f90526021818b01527f506f6f6c20616c72656164792065786973747320666f7220746869732070616981850152603960f91b6064820152608490fd5b9695945090839291610e65565b8860118e634e487b7160e01b5f52525ffd5b610c1b565b895162461bcd60e51b8152808c018d90526022818901527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608490fd5b60648b8d89818e519362461bcd60e51b85528401528201527f4174206c656173742074776f20617373657473206172652072657175697265646044820152fd5b885162461bcd60e51b8152808b018c90526011818801527014195c9a5c1a195c9e481b9bdd081cd95d607a1b6044820152606490fd5b81358152908201908201610bd9565b81356001600160a01b0381168103610127578152908801908801610b83565b34610127575f366003190112610127576002546001600160a01b03168152602090f35b600435906001600160a01b038216820361012757565b602435906001600160a01b038216820361012757565b90601f8019910116810190811067ffffffffffffffff82111761109357604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116110935760051b60200190565b5f548110156110f2575f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301905f90565b634e487b7160e01b5f52603260045260245ffd5b9081518082526020808093019301915f5b828110611125575050505090565b83516001600160a01b031685529381019392810192600101611117565b67ffffffffffffffff811161109357601f01601f191660200190565b80518210156110f25760209160051b010190565b60209081818403126101275780519067ffffffffffffffff821161012757019180601f840112156101275782516111a8816110a7565b936111b66040519586611071565b818552838086019260051b820101928311610127578301905b8282106111dd575050505090565b81516001600160a01b03811681036101275781529083019083016111cf565b5f905f54915b828110611210575050505f90565b611219816110bf565b905460039190911b1c6001600160a01b039081169083161461123d57600101611202565b505050600190565b9061124f826110a7565b61125c6040519182611071565b828152809261126d601f19916110a7565b0190602036910137565b6001600160a01b039081169081156112d0575f80516020613edf83398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b604051631e4fbdf760e01b81525f6004820152602490fd5b5f80516020613edf833981519152546001600160a01b0316330361130857565b60405163118cdaa760e01b8152336004820152602490fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c161561134f57565b604051631afcd79f60e31b8152600490fd5b90611388575080511561137657805190602001fd5b604051630a12f52160e11b8152600490fd5b815115806113bb575b611399575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561139156fe6080806040523461043957612b1a803803809161001c82856108fe565b8339810160a0828203126104395761003382610921565b60208301519091906001600160401b0381116104395783019181601f840112156104395782519261006384610935565b9361007160405195866108fe565b80855260208086019160051b8301019184831161043957602001905b8282106108cb5750505060408401516001600160401b0381116104395784019180601f840112156104395782516100c381610935565b936100d160405195866108fe565b81855260208086019260051b82010192831161043957602001905b8282106108bb57505050610107608060608601519501610921565b604051610113816108e3565b6009815268042616c756e69204c560bc1b602082015260405190610136826108e3565b6009825268042414c554e492d4c560bc1b60208301528051906001600160401b0382116104965760035490600182811c921680156108b1575b60208310146107925781601f849311610843575b50602090601f83116001146107bb575f926107b0575b50508160011b915f199060031b1c1916176003555b8051906001600160401b0382116104965760045490600182811c921680156107a6575b60208310146107925781601f849311610724575b50602090601f83116001146106a0575f92610695575b50508160011b915f199060031b1c1916176004555b6001600555600980546001600160a01b03199081166001600160a01b0393841617909155600a8054821633179055600c8054909116918316919091179055670de0b6b3a76400006008558251825103610645575f5b8351811015610525576001600160a01b03610280828661094c565b5116156104e057610291818461094c565b51156104aa576001600160a01b036102a9828661094c565b51166102b5828561094c565b5160408051929083018084116001600160401b0390911117610496576040830160405282526020820152600654680100000000000000008110156104965760018101806006558110156104825760065f5281517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f60019290921b91820180546001600160a01b039283166001600160a01b03199091161790556020909201517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4090910155610383828661094c565b511660018060a01b03600c5416604051636eb1769f60e11b8152306004820152816024820152602081604481865afa908115610445575f91610450575b50156103d1575b5050600101610265565b5f916044602092604051948593849263095ea7b360e01b84526004840152811960248401525af1801561044557610409575b806103c7565b6020813d60201161043d575b81610422602093836108fe565b81010312610439575180151503610439575f610403565b5f80fd5b3d9150610415565b6040513d5f823e3d90fd5b90506020813d60201161047a575b8161046b602093836108fe565b8101031261043957515f6103c0565b3d915061045e565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206173736574206164647265737300000000000000000000006044820152606490fd5b5060078490556040516389a3027160e01b815290602090829060049082906001600160a01b03165afa908115610445575f9161060b575b50600b80546001600160a01b0319166001600160a01b03929092169190911790555f90815b81518310156105bd57610594838361094c565b5181018091116105a957600190920191610581565b634e487b7160e01b5f52601160045260245ffd5b612710036105d4576040516121b990816109618239f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207765696768747360881b6044820152606490fd5b90506020813d60201161063d575b81610626602093836108fe565b810103126104395761063790610921565b8261055c565b3d9150610619565b60405162461bcd60e51b815260206004820152602260248201527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608490fd5b015190505f806101fb565b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9350601f198516905b81811061070c57509084600195949392106106f4575b505050811b01600455610210565b01515f1960f88460031b161c191690555f80806106e6565b929360206001819287860151815501950193016106d0565b60045f529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81019160208510610788575b90601f859493920160051c01905b81811061077a57506101e5565b5f815584935060010161076d565b909150819061075f565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101d1565b015190505f80610199565b60035f90815293507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91905b601f1984168510610828576001945083601f19811610610810575b505050811b016003556101ae565b01515f1960f88460031b161c191690555f8080610802565b818101518355602094850194600190930192909101906107e7565b60035f529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c810191602085106108a7575b90601f859493920160051c01905b8181106108995750610183565b5f815584935060010161088c565b909150819061087e565b91607f169161016f565b81518152602091820191016100ec565b602080916108d884610921565b81520191019061008d565b604081019081106001600160401b0382111761049657604052565b601f909101601f19168101906001600160401b0382119082101761049657604052565b51906001600160a01b038216820361043957565b6001600160401b0381116104965760051b60200190565b80518210156104825760209160051b01019056fe6080604081815260049182361015610015575f80fd5b5f905f3560e01c90816301d22ccd1461188e5750806306fdde03146117995780630723c9991461156f5780630902f1ac1461153f578063095ea7b31461149657806318160ddd146114785780631a6865021461145457806322acb867146113f757806323b872dd14611316578063313ce567146112fb57806336bf6e39146112c75780634aa06652146112ac57806367a6c4401461129157806367e4ac2c1461122e5780636e81221c1461101557806370a0823114610fdf57806377aace1a14610fb75780637fec8d3814610f9957806389ab353214610f2f57806389afcb4414610b055780638a77c8dc14610ae057806395d89b41146109e1578063a9059cbb146109b1578063b2b55d701461098c578063c2ee3a081461096e578063c45a015514610946578063cdf456e11461091e578063cf8fa764146108a6578063d14ef46d1461085a578063dd62ed3e14610811578063de836ebd14610547578063e73faa2d146105245763f47b45e81461018c575f80fd5b3461041f576003195f3682011261041f576009546001600160a01b0394908516916101b8338414611a45565b6101c86101c3611d9c565b611a82565b600654936101d585611af9565b936101df86611af9565b976101e987611af9565b926101f388611af9565b946101fd89611af9565b9a6102078a611af9565b995f5b81811061046b57505061021b611b3f565b84600c54169160075486600b5416843b1561041f578e51633c2fddc560e21b815260e0818e01528d99909687958695919061025a9060e4880190611907565b9b60249c828882030160248901526102719161196f565b9086820301604487015261028491611907565b92606485015280608485015260a484015260c483015203815a5f948591f1801561046157610434575b50600654600954909690831692825b888110610329578c8c6103258d8d7f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8845160208152806103013394602083019061196f565b0390a26103178351948486958652850190611907565b908382036020850152611907565b0390f35b81610334828c611b2b565b51168c5180916370a0823160e01b82528786830152818960209485935afa91821561042a578f908a94938f91938d948a926103e9575b505094849160019661037c8487611b2b565b526103878386611b2b565b516103928484611b2b565b5110156103cc57506103be906103b7836103b0816103c49798611b2b565b5192611b2b565b5190611ac5565b92611b2b565b525b016102bc565b936103e393506103b7836103b0816103be95611b2b565b526103c6565b9450955050505082813d8311610423575b61040481836119f7565b8101031261041f57888e828a8f60019651919681935061036a565b5f80fd5b503d6103fa565b8e513d88823e3d90fd5b905067ffffffffffffffff811161044e5788525f806102ad565b604186634e487b7160e01b5f525260245ffd5b8a513d5f823e3d90fd5b85610475826119ab565b505416610482828d611b2b565b52600161048e826119ab565b50015461049b8285611b2b565b52856104a7828d611b2b565b5116908d5180926370a0823160e01b8252898d83015281602460209384935afa90811561051a575f916104eb575b50600192506104e4828b611b2b565b520161020a565b905082813d8311610513575b61050181836119f7565b8101031261041f57600191515f6104d5565b503d6104f7565b8f513d5f823e3d90fd5b823461041f575f36600319011261041f57602090610540611e37565b9051908152f35b50503461041f578060031936011261041f576105616118db565b9060249182359367ffffffffffffffff851161041f573660238601121561041f57848101359061059082611a2d565b9161059d855193846119f7565b808352602096868885019260051b8201019136831161041f5787899201905b8382106108025750506009546001600160a01b039492506105e1915084163314611a45565b6002545f916105ee611b3f565b90600654915182036107c057811561079257905f915b81831061075957505050811561070c57806106925750945b8515610660575050847f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885916106518685612008565b8451938685521692a251908152f35b845162461bcd60e51b8152918201879052600d908201526c04d696e7420717479206973203609c1b6044820152606490fd5b61069a611e62565b509182156106bb576106b592916106b091611ae6565b611c97565b9461061c565b865162461bcd60e51b81528085018a90526026818a01527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608490fd5b855162461bcd60e51b81528084018990526022818901527f546f74616c2076616c7565206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608490fd5b9091936107896001916107838961076f896119ab565b50541661077c8987611b2b565b519061213f565b90611e2a565b94019190610604565b875162461bcd60e51b81528086018b90526009818b0152684e6f2061737365747360b81b6044820152606490fd5b875162461bcd60e51b81528086018b90526017818b01527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152606490fd5b813581529082019082016105bc565b823461041f578060031936011261041f5760209061082d6118db565b6108356118f1565b9060018060a01b038091165f5260018452825f2091165f528252805f20549051908152f35b82843461041f57602036600319011261041f573560065481101561041f57610881906119ab565b50805460019091015491516001600160a01b0390911681526020810191909152604090f35b82843461041f57602036600319011261041f578035906108c4611e62565b80929150518310156108e5576020846108dd8585611b2b565b519051908152f35b606490602085519162461bcd60e51b83528201526013602482015272092dcecc2d8d2c840c2e6e6cae840d2dcc8caf606b1b6044820152fd5b823461041f575f36600319011261041f57600b5490516001600160a01b039091168152602090f35b823461041f575f36600319011261041f57600a5490516001600160a01b039091168152602090f35b823461041f575f36600319011261041f576020906008549051908152f35b823461041f57602036600319011261041f576020906105406109ac6118db565b611df2565b823461041f578060031936011261041f576020906109da6109d06118db565b602435903361207d565b5160018152f35b50503461041f575f36600319011261041f578051905f9280549060018260011c9160018416938415610ad6575b6020948585108114610ac357848852908115610aa15750600114610a48575b6103258686610a3e828b03836119f7565b51918291826118b1565b5f9081529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610a8e575050508261032594610a3e92820101945f610a2d565b8054868501880152928601928101610a71565b60ff191687860152505050151560051b8301019250610a3e826103255f610a2d565b602283634e487b7160e01b5f525260245ffd5b92607f1692610a0e565b823461041f575f36600319011261041f57602090610afc611d9c565b90519015158152f35b50503461041f576020908160031936011261041f57610b226118db565b6009546001600160a01b0390811691610b3c338414611a45565b305f525f8552835f2054958615610eec57600254968715610eba57600654610b6381611af9565b98601e8302838104601e03610ea757612710610b8191048094611ac5565b965f5b838110610dec5750505050305f525f875284865f205410610da957818785600c54168851928380926361d027b360e01b82525afa908115610d9f579088915f91610d65575b50875163a9059cbb60e01b81526001600160a01b03909116848201908152602081019390935291829081906040015b03815f305af1908115610d5b575f91610d25575b5015610cec573015610cd657305f525f8652845f205490848210610cab575083927fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59261032596958893305f525f855203865f205584600254036002555f86518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853092a385519485521692a251928284938452830190611907565b855163391434e360e21b81523091810191825260208201929092526040810185905281906060010390fd5b6024905f865191634b637e8f60e11b8352820152fd5b845162461bcd60e51b81529081018690526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b90508681813d8311610d54575b610d3c81836119f7565b8101031261041f5751801515810361041f575f610c0c565b503d610d32565b86513d5f823e3d90fd5b82819392503d8311610d98575b610d7c81836119f7565b8101031261041f5751848116810361041f578790610bf8610bc9565b503d610d72565b87513d5f823e3d90fd5b855162461bcd60e51b8152808301889052601d60248201527f496e73756666696369656e742042414c554e49206c69717569646974790000006044820152606490fd5b610e2e8b89610dfa846119ab565b50548d5163a3e113fb60e01b8152308b8201908152929091166001600160a01b031660208301529283918291604090910190565b0381865afa908115610e9d578a8593928f925f91610e63575b506103be6001956106b0610e5c948794611ae6565b5201610b84565b94505050508b82813d8311610e96575b610e7d81836119f7565b8101031261041f5790518391908d908b906103be610e47565b503d610e73565b8b513d5f823e3d90fd5b601185634e487b7160e01b5f525260245ffd5b855162461bcd60e51b8152808301889052600c60248201526b4e6f206c697175696469747960a01b6044820152606490fd5b845162461bcd60e51b8152908101869052601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b823461041f575f36600319011261041f57610f48611cb5565b8251928391818301918352835180925260608301916020809501945f5b828110610f8057858061032587878382036020850152611907565b8651151585529581019587955093810193600101610f65565b823461041f575f36600319011261041f576020906007549051908152f35b823461041f575f36600319011261041f5760095490516001600160a01b039091168152602090f35b823461041f57602036600319011261041f576020906001600160a01b036110046118db565b165f525f8252805f20549051908152f35b82843461041f57608036600319011261041f576110306118db565b916110396118f1565b604435936001600160a01b0391606435838116919082900361041f5760026005541461121e576002600555838116938316928484146111db5787156111985790611087888261108f94611c14565b918291611df2565b1061115c57601e8102818104601e148215171561114957906127106110b5920490611ac5565b9485156110f857507fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628460209781519081528789820152a4600160055551908152f35b608490602086519162461bcd60e51b8352820152602560248201527f416d6f756e7420746f2073656e64206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152fd5b601187634e487b7160e01b5f525260245ffd5b845162461bcd60e51b81526020818801526016602482015275496e73756666696369656e74204c697175696469747960501b6044820152606490fd5b855162461bcd60e51b8152602081890181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606490fd5b855162461bcd60e51b8152602081890152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152606490fd5b8451633ee5aeb560e01b81528690fd5b823461041f575f36600319011261041f5760065461124b81611af9565b905f5b81811061126a578351602080825281906103259082018661196f565b806112766001926119ab565b50828060a01b0390541661128a8286611b2b565b520161124e565b823461041f575f36600319011261041f5760209051601e8152f35b823461041f576020906105406112c13661193a565b91611c14565b823461041f575f36600319011261041f576103256112e3611e62565b83929192519384938452806020850152830190611907565b823461041f575f36600319011261041f576020905160128152f35b82843461041f576113263661193a565b6001600160a01b0383165f81815260016020818152888320338452905290879020549295939493908301611363575b6020876109da88888861207d565b8583106113cb5781156113b557331561139f57505f908152600160209081528682203383528152908690209185900390915582906109da611355565b6024905f885191634a1406b160e11b8352820152fd5b6024905f88519163e602df0560e01b8352820152fd5b8651637dc7a0d960e11b8152339181019182526020820193909352604081018690528291506060010390fd5b823461041f575f36600319011261041f5760065461141481611af9565b905f5b8181106114335783516020808252819061032590820186611907565b80600161144081936119ab565b50015461144d8286611b2b565b5201611417565b823461041f575f36600319011261041f57602090611470611e62565b509051908152f35b823461041f575f36600319011261041f576020906002549051908152f35b50503461041f578060031936011261041f576114b06118db565b602435903315611529576001600160a01b03169081156115135760209350335f5260018452825f20825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8251634a1406b160e11b81525f81860152602490fd5b825163e602df0560e01b81525f81860152602490fd5b823461041f575f36600319011261041f576103259061155c611b3f565b9051918291602083526020830190611907565b50503461041f576020908160031936011261041f5761158c6118db565b9260018060a01b03926115a484600954163314611a45565b6115af6101c3611d9c565b6115b7611e62565b929094600654956115c787611af9565b945f5b8881106117445750505081835f925f5b89811061171d5750600b541687519485809263313ce56760e01b82525afa928315610d5b575f936116e4575b5060ff670de0b6b3a7640000931683039283116116d157506116319161162b91611ae6565b94611af9565b925f5b835181101561167a578061164a60019286611b2b565b51611656575b01611634565b61166a6116638287611b2b565b5182611ef6565b6116748288611b2b565b52611650565b50610325919261168a8688612008565b7fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e8251858152806116bf339488830190611907565b0390a251928284938452830190611907565b601190634e487b7160e01b5f525260245ffd5b9092508381813d8311611716575b6116fc81836119f7565b8101031261041f575160ff8116810361041f57915f611606565b503d6116f2565b93611739919350600192506117328589611b2b565b5190611e2a565b9201839185916115da565b80612710611760600161175781956119ab565b50015486611ae6565b048061176c8386611b2b565b511061177a575b50016115ca565b611788906103b78386611b2b565b611792828a611b2b565b525f611773565b50503461041f575f36600319011261041f578051905f9260035460018160011c91600181168015611884575b6020948585108214611871575083875290811561185157506001146117f7575b505050610a3e826103259403836119f7565b60035f9081529295507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061183e575050508261032594610a3e92820101946117e5565b8054868501880152928601928101611822565b60ff1916868501525050151560051b8301019250610a3e826103256117e5565b602290634e487b7160e01b5f525260245ffd5b92607f16926117c5565b3461041f575f36600319011261041f57600c546001600160a01b03168152602090f35b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361041f57565b602435906001600160a01b038216820361041f57565b9081518082526020808093019301915f5b828110611926575050505090565b835185529381019392810192600101611918565b606090600319011261041f576001600160a01b0390600435828116810361041f5791602435908116810361041f579060443590565b9081518082526020808093019301915f5b82811061198e575050505090565b83516001600160a01b031685529381019392810192600101611980565b6006548110156119e35760065f5260011b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01905f90565b634e487b7160e01b5f52603260045260245ffd5b90601f8019910116810190811067ffffffffffffffff821117611a1957604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff8111611a195760051b60200190565b15611a4c57565b60405162461bcd60e51b815260206004820152600e60248201526d4f6e6c792050657269706865727960901b6044820152606490fd5b15611a8957565b60405162461bcd60e51b8152602060048201526014602482015273149958985b185b98d9481b9bdd081b995959195960621b6044820152606490fd5b91908203918211611ad257565b634e487b7160e01b5f52601160045260245ffd5b81810292918115918404141715611ad257565b90611b0382611a2d565b611b1060405191826119f7565b8281528092611b21601f1991611a2d565b0190602036910137565b80518210156119e35760209160051b010190565b600954604051630fa6707960e21b8152306004820152905f90829060249082906001600160a01b03165afa908115611c09575f91611b7b575090565b90503d805f833e611b8c81836119f7565b810190602090818184031261041f5780519067ffffffffffffffff821161041f57019180601f8401121561041f578251611bc581611a2d565b93611bd360405195866119f7565b818552838086019260051b82010192831161041f578301905b828210611bfa575050505090565b81518152908301908301611bec565b6040513d5f823e3d90fd5b600c5460405163248391ff60e01b81526001600160a01b0392831660048201529282166024840152604483019390935290916020918391168180606481015b03915afa908115611c09575f91611c68575090565b90506020813d602011611c8f575b81611c83602093836119f7565b8101031261041f575190565b3d9150611c76565b8115611ca1570490565b634e487b7160e01b5f52601260045260245ffd5b611cbd611e62565b919060065490611ccc82611a2d565b91611cda60405193846119f7565b808352601f19611ce982611a2d565b01366020850137611cf981611af9565b945f5b828110611d0b57505050509190565b611d158183611b2b565b519061271091828102928184041490151715611ad257611d3785600193611c97565b611d40826119ab565b50830154839181811115611d755790611d5891611ac5565b611d62838b611b2b565b52611d6d8288611b2b565b525b01611cfc565b90611d809250611ac5565b611d8a828a611b2b565b525f611d968288611b2b565b52611d6f565b611da4611cb5565b5f5b8151811015611deb57611db98184611b2b565b51151580611dd6575b611dce57600101611da6565b505050600190565b50611de18183611b2b565b5160075410611dc2565b5050505f90565b60095460405163a3e113fb60e01b81523060048201526001600160a01b03928316602482015291602091839116818060448101611c53565b91908201809211611ad257565b611e3f611e62565b506002548015611e5c576106b0611e599260085490611ae6565b90565b50505f90565b600654905f611e7083611af9565b600b5490935f916001600160a01b03908116905b828410611e9357505050509190565b90919293611ed260019183611ea7886119ab565b505416611eb381611df2565b90868103611edc5750611ec6888b611b2b565b525b611732878a611b2b565b9401929190611e84565b90611ee69161213f565b611ef0888b611b2b565b52611ec8565b611eff816119ab565b5054600b546001600160a01b0390811692909182168314612002579181611f6f9492611f2c6020956119ab565b50541690600c5416916040519586948593849363248391ff60e01b85526004850160409194939294606082019560018060a01b0380921683521660208201520152565b03915afa908115611c09575f91611fd0575b508015611f8b5790565b60405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152606490fd5b90506020813d602011611ffa575b81611feb602093836119f7565b8101031261041f57515f611f81565b3d9150611fde565b50505090565b6001600160a01b0316908115612065577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826120495f94600254611e2a565b60025584845283825260408420818154019055604051908152a3565b60405163ec442f0560e01b81525f6004820152602490fd5b916001600160a01b03808416928315612127571692831561206557825f525f60205260405f2054908282106120f55750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b604051634b637e8f60e11b81525f6004820152602490fd5b600c54600b5460405163248391ff60e01b81526001600160a01b03938416600482015290831660248201526044810193909352602091839116818060648101611c5356fea2646970667358221220184aa282213110066a9558ca1cae88e104122e88c8cc0a50dc05a3c65cc0fac464736f6c634300081900339016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300a2646970667358221220fbb4d5b3677983dfbadd67a4e138d852df49a891c81e3de50ed54a5eb236685c64736f6c63430008190033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x29 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH2 0x3F34 SWAP1 DUP2 PUSH2 0x2E DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x7A4 ADD MSTORE PUSH2 0x880 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP3 DUP4 PUSH4 0x1D22CCD EQ PUSH2 0x1022 JUMPI POP DUP3 PUSH4 0x2D5E94A7 EQ PUSH2 0x743 JUMPI DUP3 PUSH4 0x3069873B EQ PUSH2 0xB1A JUMPI DUP3 PUSH4 0x41D1DE97 EQ PUSH2 0xADD JUMPI DUP3 PUSH4 0x4276B97B EQ PUSH2 0xA5C JUMPI DUP3 PUSH4 0x4F1EF286 EQ PUSH2 0x808 JUMPI DUP3 PUSH4 0x52D1902D EQ PUSH2 0x791 JUMPI DUP3 PUSH4 0x531AA03E EQ PUSH2 0x743 JUMPI DUP3 PUSH4 0x715018A6 EQ PUSH2 0x6DC JUMPI DUP3 PUSH4 0x77AACE1A EQ PUSH2 0x6B4 JUMPI DUP3 PUSH4 0x89345EFB EQ PUSH2 0x686 JUMPI DUP3 PUSH4 0x8DA5CB5B EQ PUSH2 0x652 JUMPI DUP3 PUSH4 0x8F2248BC EQ PUSH2 0x565 JUMPI DUP3 PUSH4 0xAD3CB1CC EQ PUSH2 0x4E5 JUMPI DUP3 PUSH4 0xB4340E6A EQ PUSH2 0x370 JUMPI DUP3 PUSH4 0xB4AC6860 EQ PUSH2 0x353 JUMPI DUP3 PUSH4 0xC4D66DE8 EQ PUSH2 0x202 JUMPI POP DUP2 PUSH4 0xD88FF1F4 EQ PUSH2 0x16E JUMPI POP DUP1 PUSH4 0xE9B31CFF EQ PUSH2 0x12B JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xFC JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x125 PUSH2 0x118 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x1277 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x144 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI DUP1 MLOAD PUSH0 DUP1 SLOAD DUP1 DUP4 MSTORE DUP2 DUP1 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP5 SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP3 SWAP2 JUMPDEST DUP3 DUP3 LT PUSH2 0x1E2 JUMPI PUSH2 0x1DE DUP7 DUP7 PUSH2 0x1CC DUP3 DUP12 SUB DUP4 PUSH2 0x1071 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1106 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x21B PUSH2 0x1045 JUMP JUMPDEST SWAP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP2 DUP3 SLOAD PUSH1 0xFF DUP2 DUP7 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x34B JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x341 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x338 JUMPI JUMPDEST POP PUSH2 0x32A JUMPI POP PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR DUP5 SSTORE DUP3 PUSH2 0x30B JUMPI JUMPDEST POP PUSH2 0x294 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x29C PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x2A4 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x2AD CALLER PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x2D3 JUMPI STOP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND SWAP1 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR DUP4 SSTORE DUP5 PUSH2 0x28B JUMP JUMPDEST DUP6 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST SWAP1 POP ISZERO DUP8 PUSH2 0x26E JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x266 JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x25C JUMP JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 SWAP1 PUSH0 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x389 PUSH2 0x1045 JUMP JUMPDEST SWAP1 PUSH0 SLOAD SWAP2 PUSH2 0x396 DUP4 PUSH2 0x1245 JUMP JUMPDEST SWAP3 PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP5 SWAP2 SWAP1 DUP5 AND JUMPDEST DUP4 DUP4 LT PUSH2 0x3FD JUMPI JUMPDEST POP POP POP POP PUSH2 0x3BD DUP3 PUSH2 0x1245 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3DC JUMPI DUP6 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x1DE SWAP1 DUP3 ADD DUP9 PUSH2 0x1106 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x3EA PUSH1 0x1 SWAP4 DUP6 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH2 0x3F6 DUP3 DUP9 PUSH2 0x115E JUMP JUMPDEST MSTORE ADD PUSH2 0x3C0 JUMP JUMPDEST DUP5 PUSH2 0x40D DUP5 SWAP8 SWAP5 SWAP9 SWAP7 SWAP6 SWAP9 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP9 MLOAD SWAP8 PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP10 MSTORE PUSH0 DUP10 DUP6 DUP2 DUP7 GAS STATICCALL SWAP9 DUP10 ISZERO PUSH2 0x4DB JUMPI PUSH0 SWAP10 PUSH2 0x4B7 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x4A9 JUMPI DUP3 DUP8 PUSH2 0x450 DUP4 DUP14 PUSH2 0x115E JUMP JUMPDEST MLOAD AND EQ PUSH2 0x45F JUMPI PUSH1 0x1 ADD PUSH2 0x43B JUMP JUMPDEST POP SWAP4 SWAP2 SWAP1 SWAP5 SWAP6 SWAP8 POP PUSH2 0x471 DUP3 DUP10 PUSH2 0x115E JUMP JUMPDEST MSTORE PUSH0 NOT DUP2 EQ PUSH2 0x496 JUMPI PUSH1 0x1 ADD SWAP5 JUMPDEST DUP7 MLOAD DUP7 EQ PUSH2 0x491 JUMPI PUSH1 0x1 ADD SWAP2 SWAP3 PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x11 DUP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP4 SWAP7 SWAP2 POP SWAP4 SWAP5 SWAP7 POP PUSH2 0x47F JUMP JUMPDEST PUSH2 0x4D4 SWAP2 SWAP10 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4CC DUP2 DUP4 PUSH2 0x1071 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1172 JUMP JUMPDEST SWAP8 DUP11 PUSH2 0x438 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI DUP1 MLOAD SWAP2 DUP2 DUP4 ADD SWAP1 DUP4 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x552 JUMPI POP DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP4 MSTORE DUP2 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x20 DUP4 MSTORE MLOAD DUP1 SWAP2 DUP2 PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 CALLVALUE PUSH2 0x127 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x127 JUMPI PUSH2 0x57E PUSH2 0x1045 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0x127 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP3 DUP4 SLOAD SWAP3 DUP7 PUSH1 0xFF DUP6 DUP9 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x645 JUMPI JUMPDEST POP POP PUSH2 0x637 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP7 OR PUSH1 0x1 PUSH1 0x40 SHL OR PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP5 SSTORE DUP5 MLOAD DUP7 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST DUP5 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP6 AND LT ISZERO SWAP1 POP DUP7 DUP9 PUSH2 0x5CB JUMP JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x6AB PUSH2 0x6A6 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x11FC JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x6F4 PUSH2 0x12E8 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x75F PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x767 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP6 MSTORE DUP4 DUP2 KECCAK256 SWAP2 DUP4 AND DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST SWAP1 CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x7FB JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x127 JUMPI PUSH2 0x81B PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x127 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP1 DUP5 ADD CALLDATALOAD PUSH2 0x847 DUP2 PUSH2 0x1142 JUMP JUMPDEST SWAP4 PUSH2 0x854 DUP5 MLOAD SWAP6 DUP7 PUSH2 0x1071 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP7 ADD SWAP4 CALLDATASIZE DUP10 DUP4 DUP4 ADD ADD GT PUSH2 0x127 JUMPI DUP2 PUSH0 SWAP3 DUP11 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP8 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND ADDRESS DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xA2E JUMPI JUMPDEST POP PUSH2 0xA1E JUMPI PUSH2 0x8B9 PUSH2 0x12E8 JUMP JUMPDEST DUP2 AND SWAP5 DUP5 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP4 DUP2 DUP10 DUP2 DUP11 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x9EF JUMPI JUMPDEST POP PUSH2 0x8F2 JUMPI POP POP POP POP POP MLOAD SWAP2 PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP8 DUP8 DUP8 SWAP5 SWAP4 DUP12 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0x9DA JUMPI POP DUP6 EXTCODESIZE ISZERO PUSH2 0x9C6 JUMPI POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE DUP5 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP3 MLOAD ISZERO PUSH2 0x9AC JUMPI POP POP PUSH0 PUSH2 0x125 SWAP6 DUP2 SWAP3 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x9A2 JUMPI RETURNDATASIZE PUSH2 0x994 PUSH2 0x98B DUP3 PUSH2 0x1142 JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0x1071 JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1361 JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x1361 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP CALLVALUE PUSH2 0x9BA JUMPI STOP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP5 SWAP1 MSTORE REVERT JUMPDEST DUP8 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xA17 JUMPI JUMPDEST PUSH2 0xA07 DUP2 DUP4 PUSH2 0x1071 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x127 JUMPI MLOAD SWAP1 DUP11 PUSH2 0x8D7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x9FD JUMP JUMPDEST DUP5 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE DUP8 SWAP1 REVERT JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO DUP10 PUSH2 0x8AC JUMP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA7E PUSH2 0x1045 JUMP JUMPDEST AND DUP4 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xAD3 JUMPI SWAP2 PUSH2 0x1DE SWAP3 PUSH0 SWAP3 PUSH2 0xAB7 JUMPI JUMPDEST POP MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0xACC SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4CC DUP2 DUP4 PUSH2 0x1071 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0xAA4 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI CALLDATALOAD SWAP1 PUSH0 SLOAD DUP3 LT ISZERO PUSH2 0x127 JUMPI PUSH2 0xB04 PUSH1 0x20 SWAP3 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP2 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x127 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP1 DUP4 ADD CALLDATALOAD SWAP4 PUSH1 0x24 PUSH2 0xB59 DUP7 PUSH2 0x10A7 JUMP JUMPDEST SWAP3 PUSH2 0xB66 DUP6 MLOAD SWAP5 DUP6 PUSH2 0x1071 JUMP JUMPDEST DUP7 DUP5 MSTORE PUSH1 0x20 SWAP7 DUP3 DUP9 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x127 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1003 JUMPI POP POP POP DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x127 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP1 DUP7 ADD CALLDATALOAD SWAP1 PUSH2 0xBAF DUP3 PUSH2 0x10A7 JUMP JUMPDEST SWAP1 PUSH2 0xBBC DUP8 MLOAD SWAP3 DUP4 PUSH2 0x1071 JUMP JUMPDEST DUP3 DUP3 MSTORE DUP9 DUP3 ADD SWAP3 PUSH1 0x5 SHL DUP2 ADD DUP5 ADD SWAP1 DUP4 CALLDATASIZE DUP4 GT PUSH2 0x127 JUMPI DUP6 DUP12 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xFF4 JUMPI POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 PUSH1 0x44 SWAP6 SWAP4 POP SWAP1 DUP8 AND SWAP2 POP DUP2 ISZERO PUSH2 0xFBE JUMPI PUSH1 0x1 SWAP5 DUP6 DUP10 MLOAD GT ISZERO PUSH2 0xF7E JUMPI DUP9 MLOAD DUP6 MLOAD SUB PUSH2 0xF31 JUMPI PUSH0 DUP7 JUMPDEST PUSH2 0xE43 JUMPI JUMPDEST POP POP DUP7 PUSH1 0x2 SLOAD AND SWAP4 DUP10 MLOAD SWAP5 PUSH2 0x2B1A DUP1 DUP8 ADD SWAP4 DUP8 DUP6 LT SWAP1 DUP6 GT OR PUSH2 0xE31 JUMPI SWAP1 DUP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x13C5 DUP8 CODECOPY DUP3 MSTORE PUSH1 0xA0 DUP14 DUP4 ADD MSTORE DUP13 PUSH2 0xC5A PUSH1 0xA0 DUP5 ADD DUP13 PUSH2 0x1106 JUMP JUMPDEST DUP4 DUP2 SUB DUP14 DUP6 ADD MSTORE SWAP2 MLOAD DUP1 DUP4 MSTORE SWAP2 ADD SWAP4 SWAP1 PUSH0 DUP9 DUP16 JUMPDEST DUP4 DUP4 LT PUSH2 0xE1A JUMPI POP POP POP PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE POP POP PUSH1 0x80 ADD MSTORE SUB SWAP1 PUSH0 CREATE DUP1 ISZERO PUSH2 0xE10 JUMPI DUP4 AND SWAP6 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xDFE JUMPI SWAP1 PUSH2 0xCB5 DUP3 DUP5 DUP11 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 ADD PUSH0 SSTORE PUSH2 0x10BF JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP7 DUP10 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP2 PUSH0 SWAP1 JUMPDEST PUSH2 0xD1D JUMPI JUMPDEST POP POP POP POP PUSH32 0x93DE7D9DE9F3E05BA87A0170FCBB71AF623439CAF5E5079587B9D38C5DA9B0D1 SWAP2 PUSH2 0xD0F SWAP2 PUSH1 0x2 SLOAD AND DUP6 MLOAD SWAP3 DUP4 SWAP3 DUP8 DUP5 MSTORE DUP8 DUP5 ADD SWAP1 PUSH2 0x1106 JUMP JUMPDEST SWAP1 DUP9 DUP4 ADD MSTORE SUB SWAP1 LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP7 MLOAD DUP3 LT ISZERO PUSH2 0xDF6 JUMPI POP DUP3 DUP2 ADD DUP1 DUP3 GT PUSH2 0xDE4 JUMPI DUP4 SWAP3 SWAP2 SWAP1 DUP4 JUMPDEST PUSH2 0xD4F JUMPI JUMPDEST POP DUP3 ADD DUP9 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0xCCB JUMP JUMPDEST DUP8 SWAP4 SWAP2 SWAP3 SWAP4 MLOAD DUP2 LT ISZERO PUSH2 0xDDB JUMPI DUP2 SWAP1 DUP8 PUSH2 0xD69 DUP6 DUP12 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP2 DUP13 MSTORE DUP10 PUSH0 KECCAK256 DUP9 PUSH2 0xD7E DUP4 DUP13 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP13 MSTORE DUP10 PUSH0 KECCAK256 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP1 DUP13 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE DUP9 PUSH2 0xDAB DUP4 DUP13 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP3 DUP14 MSTORE DUP11 PUSH0 KECCAK256 DUP10 PUSH2 0xDC0 DUP8 DUP14 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP14 MSTORE DUP12 DUP12 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE ADD DUP2 SWAP4 SWAP3 SWAP2 PUSH2 0xD3D JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0xD42 JUMP JUMPDEST DUP5 PUSH1 0x11 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST SWAP6 SWAP5 SWAP4 PUSH2 0xCD0 JUMP JUMPDEST DUP4 PUSH1 0x41 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP9 MSTORE DUP10 SWAP9 POP SWAP7 DUP8 ADD SWAP7 SWAP1 SWAP4 ADD SWAP3 ADD DUP9 DUP16 PUSH2 0xC6E JUMP JUMPDEST DUP9 PUSH1 0x41 DUP15 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0xF2C JUMPI DUP7 DUP2 ADD DUP1 DUP3 GT PUSH2 0xF1A JUMPI DUP8 SWAP3 SWAP2 SWAP1 DUP12 DUP16 DUP13 DUP16 DUP8 JUMPDEST PUSH2 0xE73 JUMPI JUMPDEST POP POP POP POP POP DUP3 ADD SWAP1 SWAP2 PUSH2 0xC16 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 DUP5 MLOAD DUP7 LT ISZERO PUSH2 0xF0D JUMPI POP DUP5 PUSH2 0xEA3 SWAP2 DUP4 PUSH2 0xE94 DUP10 DUP9 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP14 DUP6 MSTORE PUSH0 KECCAK256 SWAP5 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE MSTORE DUP10 DUP13 PUSH0 KECCAK256 SLOAD AND PUSH2 0xEC2 JUMPI DUP8 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP12 DUP16 DUP13 DUP16 DUP8 PUSH2 0xE60 JUMP JUMPDEST DUP12 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP15 ADD DUP16 SWAP1 MSTORE PUSH1 0x21 DUP2 DUP12 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792065786973747320666F72207468697320706169 DUP2 DUP6 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP7 SWAP6 SWAP5 POP SWAP1 DUP4 SWAP3 SWAP2 PUSH2 0xE65 JUMP JUMPDEST DUP9 PUSH1 0x11 DUP15 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST PUSH2 0xC1B JUMP JUMPDEST DUP10 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP13 ADD DUP14 SWAP1 MSTORE PUSH1 0x22 DUP2 DUP10 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP12 DUP14 DUP10 DUP2 DUP15 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F2061737365747320617265207265717569726564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP9 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP12 ADD DUP13 SWAP1 MSTORE PUSH1 0x11 DUP2 DUP9 ADD MSTORE PUSH17 0x14195C9A5C1A195C9E481B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0xBD9 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x127 JUMPI DUP2 MSTORE SWAP1 DUP9 ADD SWAP1 DUP9 ADD PUSH2 0xB83 JUMP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x127 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x127 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1093 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1093 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x10F2 JUMPI PUSH0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1125 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1117 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1093 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x10F2 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x127 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x127 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP3 MLOAD PUSH2 0x11A8 DUP2 PUSH2 0x10A7 JUMP JUMPDEST SWAP4 PUSH2 0x11B6 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1071 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x127 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x11DD JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x127 JUMPI DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x11CF JUMP JUMPDEST PUSH0 SWAP1 PUSH0 SLOAD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1210 JUMPI POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1219 DUP2 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND EQ PUSH2 0x123D JUMPI PUSH1 0x1 ADD PUSH2 0x1202 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x124F DUP3 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x125C PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1071 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x126D PUSH1 0x1F NOT SWAP2 PUSH2 0x10A7 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x12D0 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1308 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x134F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1388 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x1376 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x13BB JUMPI JUMPDEST PUSH2 0x1399 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1391 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x439 JUMPI PUSH2 0x2B1A DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x8FE JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH2 0x439 JUMPI PUSH2 0x33 DUP3 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP4 ADD SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD SWAP3 PUSH2 0x63 DUP5 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0x71 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP5 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8CB JUMPI POP POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP5 ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD PUSH2 0xC3 DUP2 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0xD1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8BB JUMPI POP POP POP PUSH2 0x107 PUSH1 0x80 PUSH1 0x60 DUP7 ADD MLOAD SWAP6 ADD PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 DUP2 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x136 DUP3 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8B1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x843 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7BB JUMPI PUSH0 SWAP3 PUSH2 0x7B0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x7A6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x724 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x6A0 JUMPI PUSH0 SWAP3 PUSH2 0x695 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND CALLER OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE DUP3 MLOAD DUP3 MLOAD SUB PUSH2 0x645 JUMPI PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x525 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x280 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND ISZERO PUSH2 0x4E0 JUMPI PUSH2 0x291 DUP2 DUP5 PUSH2 0x94C JUMP JUMPDEST MLOAD ISZERO PUSH2 0x4AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A9 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH2 0x2B5 DUP3 DUP6 PUSH2 0x94C JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 DUP4 ADD DUP1 DUP5 GT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 DUP4 ADD PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x496 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x6 SSTORE DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x6 PUSH0 MSTORE DUP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 SWAP1 SWAP2 ADD SSTORE PUSH2 0x383 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x450 JUMPI JUMPDEST POP ISZERO PUSH2 0x3D1 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x265 JUMP JUMPDEST PUSH0 SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP2 NOT PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x445 JUMPI PUSH2 0x409 JUMPI JUMPDEST DUP1 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x43D JUMPI JUMPDEST DUP2 PUSH2 0x422 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x439 JUMPI PUSH0 PUSH2 0x403 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x47A JUMPI JUMPDEST DUP2 PUSH2 0x46B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD PUSH0 PUSH2 0x3C0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x45E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x7 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x89A30271 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x60B JUMPI JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH0 SWAP1 DUP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x594 DUP4 DUP4 PUSH2 0x94C JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5A9 JUMPI PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x581 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2710 SUB PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH2 0x21B9 SWAP1 DUP2 PUSH2 0x961 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x63D JUMPI JUMPDEST DUP2 PUSH2 0x626 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI PUSH2 0x637 SWAP1 PUSH2 0x921 JUMP JUMPDEST DUP3 PUSH2 0x55C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x70C JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x6F4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x210 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x6E6 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x4 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x788 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x77A JUMPI POP PUSH2 0x1E5 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x76D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D1 JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x828 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x810 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x1AE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x802 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x3 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x8A7 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x899 JUMPI POP PUSH2 0x183 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x88C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16F JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xEC JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x8D8 DUP5 PUSH2 0x921 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x439 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x496 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1D22CCD EQ PUSH2 0x188E JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1799 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x156F JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x153F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1496 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1478 JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x1454 JUMPI DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x13F7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1316 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x12FB JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x12C7 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x12AC JUMPI DUP1 PUSH4 0x67A6C440 EQ PUSH2 0x1291 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x122E JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x1015 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xFDF JUMPI DUP1 PUSH4 0x77AACE1A EQ PUSH2 0xFB7 JUMPI DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0xF99 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0xF2F JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0xB05 JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0xAE0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x9E1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0x98C JUMPI DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0x96E JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x946 JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x91E JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0x8A6 JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0x85A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x811 JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x524 JUMPI PUSH4 0xF47B45E8 EQ PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x3 NOT PUSH0 CALLDATASIZE DUP3 ADD SLT PUSH2 0x41F JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 DUP6 AND SWAP2 PUSH2 0x1B8 CALLER DUP5 EQ PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1C3 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP4 PUSH2 0x1D5 DUP6 PUSH2 0x1AF9 JUMP JUMPDEST SWAP4 PUSH2 0x1DF DUP7 PUSH2 0x1AF9 JUMP JUMPDEST SWAP8 PUSH2 0x1E9 DUP8 PUSH2 0x1AF9 JUMP JUMPDEST SWAP3 PUSH2 0x1F3 DUP9 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 PUSH2 0x1FD DUP10 PUSH2 0x1AF9 JUMP JUMPDEST SWAP11 PUSH2 0x207 DUP11 PUSH2 0x1AF9 JUMP JUMPDEST SWAP10 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x46B JUMPI POP POP PUSH2 0x21B PUSH2 0x1B3F JUMP JUMPDEST DUP5 PUSH1 0xC SLOAD AND SWAP2 PUSH1 0x7 SLOAD DUP7 PUSH1 0xB SLOAD AND DUP5 EXTCODESIZE ISZERO PUSH2 0x41F JUMPI DUP15 MLOAD PUSH4 0x3C2FDDC5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xE0 DUP2 DUP15 ADD MSTORE DUP14 SWAP10 SWAP1 SWAP7 DUP8 SWAP6 DUP7 SWAP6 SWAP2 SWAP1 PUSH2 0x25A SWAP1 PUSH1 0xE4 DUP9 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST SWAP12 PUSH1 0x24 SWAP13 DUP3 DUP9 DUP3 SUB ADD PUSH1 0x24 DUP10 ADD MSTORE PUSH2 0x271 SWAP2 PUSH2 0x196F JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB ADD PUSH1 0x44 DUP8 ADD MSTORE PUSH2 0x284 SWAP2 PUSH2 0x1907 JUMP JUMPDEST SWAP3 PUSH1 0x64 DUP6 ADD MSTORE DUP1 PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC4 DUP4 ADD MSTORE SUB DUP2 GAS PUSH0 SWAP5 DUP6 SWAP2 CALL DUP1 ISZERO PUSH2 0x461 JUMPI PUSH2 0x434 JUMPI JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x9 SLOAD SWAP1 SWAP7 SWAP1 DUP4 AND SWAP3 DUP3 JUMPDEST DUP9 DUP2 LT PUSH2 0x329 JUMPI DUP13 DUP13 PUSH2 0x325 DUP14 DUP14 PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP5 MLOAD PUSH1 0x20 DUP2 MSTORE DUP1 PUSH2 0x301 CALLER SWAP5 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x196F JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x317 DUP4 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1907 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 PUSH2 0x334 DUP3 DUP13 PUSH2 0x1B2B JUMP JUMPDEST MLOAD AND DUP13 MLOAD DUP1 SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP8 DUP7 DUP4 ADD MSTORE DUP2 DUP10 PUSH1 0x20 SWAP5 DUP6 SWAP4 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x42A JUMPI DUP16 SWAP1 DUP11 SWAP5 SWAP4 DUP16 SWAP2 SWAP4 DUP14 SWAP5 DUP11 SWAP3 PUSH2 0x3E9 JUMPI JUMPDEST POP POP SWAP5 DUP5 SWAP2 PUSH1 0x1 SWAP7 PUSH2 0x37C DUP5 DUP8 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x387 DUP4 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MLOAD PUSH2 0x392 DUP5 DUP5 PUSH2 0x1B2B JUMP JUMPDEST MLOAD LT ISZERO PUSH2 0x3CC JUMPI POP PUSH2 0x3BE SWAP1 PUSH2 0x3B7 DUP4 PUSH2 0x3B0 DUP2 PUSH2 0x3C4 SWAP8 SWAP9 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP3 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST SWAP3 PUSH2 0x1B2B JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x2BC JUMP JUMPDEST SWAP4 PUSH2 0x3E3 SWAP4 POP PUSH2 0x3B7 DUP4 PUSH2 0x3B0 DUP2 PUSH2 0x3BE SWAP6 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x3C6 JUMP JUMPDEST SWAP5 POP SWAP6 POP POP POP POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x423 JUMPI JUMPDEST PUSH2 0x404 DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI DUP9 DUP15 DUP3 DUP11 DUP16 PUSH1 0x1 SWAP7 MLOAD SWAP2 SWAP7 DUP2 SWAP4 POP PUSH2 0x36A JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3FA JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x44E JUMPI DUP9 MSTORE PUSH0 DUP1 PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x475 DUP3 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD AND PUSH2 0x482 DUP3 DUP14 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH2 0x48E DUP3 PUSH2 0x19AB JUMP JUMPDEST POP ADD SLOAD PUSH2 0x49B DUP3 DUP6 PUSH2 0x1B2B JUMP JUMPDEST MSTORE DUP6 PUSH2 0x4A7 DUP3 DUP14 PUSH2 0x1B2B JUMP JUMPDEST MLOAD AND SWAP1 DUP14 MLOAD DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP10 DUP14 DUP4 ADD MSTORE DUP2 PUSH1 0x24 PUSH1 0x20 SWAP4 DUP5 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x51A JUMPI PUSH0 SWAP2 PUSH2 0x4EB JUMPI JUMPDEST POP PUSH1 0x1 SWAP3 POP PUSH2 0x4E4 DUP3 DUP12 PUSH2 0x1B2B JUMP JUMPDEST MSTORE ADD PUSH2 0x20A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x513 JUMPI JUMPDEST PUSH2 0x501 DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH0 PUSH2 0x4D5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4F7 JUMP JUMPDEST DUP16 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x540 PUSH2 0x1E37 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH2 0x561 PUSH2 0x18DB JUMP JUMPDEST SWAP1 PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x41F JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x41F JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP1 PUSH2 0x590 DUP3 PUSH2 0x1A2D JUMP JUMPDEST SWAP2 PUSH2 0x59D DUP6 MLOAD SWAP4 DUP5 PUSH2 0x19F7 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP7 DUP9 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x41F JUMPI DUP8 DUP10 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x802 JUMPI POP POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP3 POP PUSH2 0x5E1 SWAP2 POP DUP5 AND CALLER EQ PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP2 PUSH2 0x5EE PUSH2 0x1B3F JUMP JUMPDEST SWAP1 PUSH1 0x6 SLOAD SWAP2 MLOAD DUP3 SUB PUSH2 0x7C0 JUMPI DUP2 ISZERO PUSH2 0x792 JUMPI SWAP1 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x759 JUMPI POP POP POP DUP2 ISZERO PUSH2 0x70C JUMPI DUP1 PUSH2 0x692 JUMPI POP SWAP5 JUMPDEST DUP6 ISZERO PUSH2 0x660 JUMPI POP POP DUP5 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP2 PUSH2 0x651 DUP7 DUP6 PUSH2 0x2008 JUMP JUMPDEST DUP5 MLOAD SWAP4 DUP7 DUP6 MSTORE AND SWAP3 LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x4D696E7420717479206973203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x69A PUSH2 0x1E62 JUMP JUMPDEST POP SWAP2 DUP3 ISZERO PUSH2 0x6BB JUMPI PUSH2 0x6B5 SWAP3 SWAP2 PUSH2 0x6B0 SWAP2 PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x1C97 JUMP JUMPDEST SWAP5 PUSH2 0x61C JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP11 SWAP1 MSTORE PUSH1 0x26 DUP2 DUP11 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP10 SWAP1 MSTORE PUSH1 0x22 DUP2 DUP10 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP4 PUSH2 0x789 PUSH1 0x1 SWAP2 PUSH2 0x783 DUP10 PUSH2 0x76F DUP10 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD AND PUSH2 0x77C DUP10 DUP8 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x213F JUMP JUMPDEST SWAP1 PUSH2 0x1E2A JUMP JUMPDEST SWAP5 ADD SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP12 SWAP1 MSTORE PUSH1 0x9 DUP2 DUP12 ADD MSTORE PUSH9 0x4E6F20617373657473 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP12 SWAP1 MSTORE PUSH1 0x17 DUP2 DUP12 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0x5BC JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x82D PUSH2 0x18DB JUMP JUMPDEST PUSH2 0x835 PUSH2 0x18F1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x41F JUMPI PUSH2 0x881 SWAP1 PUSH2 0x19AB JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x8C4 PUSH2 0x1E62 JUMP JUMPDEST DUP1 SWAP3 SWAP2 POP MLOAD DUP4 LT ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x20 DUP5 PUSH2 0x8DD DUP6 DUP6 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840C2E6E6CAE840D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0xB SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0xA SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x540 PUSH2 0x9AC PUSH2 0x18DB JUMP JUMPDEST PUSH2 0x1DF2 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x9DA PUSH2 0x9D0 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x207D JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0xAD6 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP2 EQ PUSH2 0xAC3 JUMPI DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xAA1 JUMPI POP PUSH1 0x1 EQ PUSH2 0xA48 JUMPI JUMPDEST PUSH2 0x325 DUP7 DUP7 PUSH2 0xA3E DUP3 DUP12 SUB DUP4 PUSH2 0x19F7 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18B1 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xA8E JUMPI POP POP POP DUP3 PUSH2 0x325 SWAP5 PUSH2 0xA3E SWAP3 DUP3 ADD ADD SWAP5 PUSH0 PUSH2 0xA2D JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xA71 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xA3E DUP3 PUSH2 0x325 PUSH0 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x22 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xA0E JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0xAFC PUSH2 0x1D9C JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH2 0xB22 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH2 0xB3C CALLER DUP5 EQ PUSH2 0x1A45 JUMP JUMPDEST ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE DUP4 PUSH0 KECCAK256 SLOAD SWAP6 DUP7 ISZERO PUSH2 0xEEC JUMPI PUSH1 0x2 SLOAD SWAP7 DUP8 ISZERO PUSH2 0xEBA JUMPI PUSH1 0x6 SLOAD PUSH2 0xB63 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP9 PUSH1 0x1E DUP4 MUL DUP4 DUP2 DIV PUSH1 0x1E SUB PUSH2 0xEA7 JUMPI PUSH2 0x2710 PUSH2 0xB81 SWAP2 DIV DUP1 SWAP5 PUSH2 0x1AC5 JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xDEC JUMPI POP POP POP POP ADDRESS PUSH0 MSTORE PUSH0 DUP8 MSTORE DUP5 DUP7 PUSH0 KECCAK256 SLOAD LT PUSH2 0xDA9 JUMPI DUP2 DUP8 DUP6 PUSH1 0xC SLOAD AND DUP9 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x61D027B3 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xD9F JUMPI SWAP1 DUP9 SWAP2 PUSH0 SWAP2 PUSH2 0xD65 JUMPI JUMPDEST POP DUP8 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB DUP2 PUSH0 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xD5B JUMPI PUSH0 SWAP2 PUSH2 0xD25 JUMPI JUMPDEST POP ISZERO PUSH2 0xCEC JUMPI ADDRESS ISZERO PUSH2 0xCD6 JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP5 PUSH0 KECCAK256 SLOAD SWAP1 DUP5 DUP3 LT PUSH2 0xCAB JUMPI POP DUP4 SWAP3 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 PUSH2 0x325 SWAP7 SWAP6 DUP9 SWAP4 ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE SUB DUP7 PUSH0 KECCAK256 SSTORE DUP5 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 DUP7 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 ADDRESS SWAP3 LOG3 DUP6 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST DUP6 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP7 MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xD54 JUMPI JUMPDEST PUSH2 0xD3C DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x41F JUMPI PUSH0 PUSH2 0xC0C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xD32 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xD98 JUMPI JUMPDEST PUSH2 0xD7C DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0x41F JUMPI DUP8 SWAP1 PUSH2 0xBF8 PUSH2 0xBC9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xD72 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xE2E DUP12 DUP10 PUSH2 0xDFA DUP5 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD DUP14 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP12 DUP3 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE9D JUMPI DUP11 DUP6 SWAP4 SWAP3 DUP16 SWAP3 PUSH0 SWAP2 PUSH2 0xE63 JUMPI JUMPDEST POP PUSH2 0x3BE PUSH1 0x1 SWAP6 PUSH2 0x6B0 PUSH2 0xE5C SWAP5 DUP8 SWAP5 PUSH2 0x1AE6 JUMP JUMPDEST MSTORE ADD PUSH2 0xB84 JUMP JUMPDEST SWAP5 POP POP POP POP DUP12 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE96 JUMPI JUMPDEST PUSH2 0xE7D DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI SWAP1 MLOAD DUP4 SWAP2 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH2 0x3BE PUSH2 0xE47 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE73 JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH2 0xF48 PUSH2 0x1CB5 JUMP JUMPDEST DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP2 DUP4 ADD SWAP2 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 PUSH1 0x20 DUP1 SWAP6 ADD SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0xF80 JUMPI DUP6 DUP1 PUSH2 0x325 DUP8 DUP8 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1907 JUMP JUMPDEST DUP7 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP6 DUP2 ADD SWAP6 DUP8 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 ADD PUSH2 0xF65 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1004 PUSH2 0x18DB JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH2 0x1030 PUSH2 0x18DB JUMP JUMPDEST SWAP2 PUSH2 0x1039 PUSH2 0x18F1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x41F JUMPI PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x121E JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP4 DUP2 AND SWAP4 DUP4 AND SWAP3 DUP5 DUP5 EQ PUSH2 0x11DB JUMPI DUP8 ISZERO PUSH2 0x1198 JUMPI SWAP1 PUSH2 0x1087 DUP9 DUP3 PUSH2 0x108F SWAP5 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 DUP3 SWAP2 PUSH2 0x1DF2 JUMP JUMPDEST LT PUSH2 0x115C JUMPI PUSH1 0x1E DUP2 MUL DUP2 DUP2 DIV PUSH1 0x1E EQ DUP3 ISZERO OR ISZERO PUSH2 0x1149 JUMPI SWAP1 PUSH2 0x2710 PUSH2 0x10B5 SWAP3 DIV SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST SWAP5 DUP6 ISZERO PUSH2 0x10F8 JUMPI POP PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP5 PUSH1 0x20 SWAP8 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP8 DUP10 DUP3 ADD MSTORE LOG4 PUSH1 0x1 PUSH1 0x5 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F2073656E64206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x11 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74204C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP10 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP10 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP7 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x6 SLOAD PUSH2 0x124B DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x126A JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x325 SWAP1 DUP3 ADD DUP7 PUSH2 0x196F JUMP JUMPDEST DUP1 PUSH2 0x1276 PUSH1 0x1 SWAP3 PUSH2 0x19AB JUMP JUMPDEST POP DUP3 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND PUSH2 0x128A DUP3 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MSTORE ADD PUSH2 0x124E JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1E DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x540 PUSH2 0x12C1 CALLDATASIZE PUSH2 0x193A JUMP JUMPDEST SWAP2 PUSH2 0x1C14 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH2 0x325 PUSH2 0x12E3 PUSH2 0x1E62 JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x41F JUMPI PUSH2 0x1326 CALLDATASIZE PUSH2 0x193A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE DUP9 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 MSTORE SWAP1 DUP8 SWAP1 KECCAK256 SLOAD SWAP3 SWAP6 SWAP4 SWAP5 SWAP4 SWAP1 DUP4 ADD PUSH2 0x1363 JUMPI JUMPDEST PUSH1 0x20 DUP8 PUSH2 0x9DA DUP9 DUP9 DUP9 PUSH2 0x207D JUMP JUMPDEST DUP6 DUP4 LT PUSH2 0x13CB JUMPI DUP2 ISZERO PUSH2 0x13B5 JUMPI CALLER ISZERO PUSH2 0x139F JUMPI POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 SWAP2 DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0x9DA PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x6 SLOAD PUSH2 0x1414 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1433 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x325 SWAP1 DUP3 ADD DUP7 PUSH2 0x1907 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x1440 DUP2 SWAP4 PUSH2 0x19AB JUMP JUMPDEST POP ADD SLOAD PUSH2 0x144D DUP3 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MSTORE ADD PUSH2 0x1417 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1470 PUSH2 0x1E62 JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH2 0x14B0 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x1529 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1513 JUMPI PUSH1 0x20 SWAP4 POP CALLER PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 DUP2 DUP7 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP2 DUP7 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH2 0x325 SWAP1 PUSH2 0x155C PUSH2 0x1B3F JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH2 0x158C PUSH2 0x18DB JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x15A4 DUP5 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x15AF PUSH2 0x1C3 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0x15B7 PUSH2 0x1E62 JUMP JUMPDEST SWAP3 SWAP1 SWAP5 PUSH1 0x6 SLOAD SWAP6 PUSH2 0x15C7 DUP8 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x1744 JUMPI POP POP POP DUP2 DUP4 PUSH0 SWAP3 PUSH0 JUMPDEST DUP10 DUP2 LT PUSH2 0x171D JUMPI POP PUSH1 0xB SLOAD AND DUP8 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xD5B JUMPI PUSH0 SWAP4 PUSH2 0x16E4 JUMPI JUMPDEST POP PUSH1 0xFF PUSH8 0xDE0B6B3A7640000 SWAP4 AND DUP4 SUB SWAP3 DUP4 GT PUSH2 0x16D1 JUMPI POP PUSH2 0x1631 SWAP2 PUSH2 0x162B SWAP2 PUSH2 0x1AE6 JUMP JUMPDEST SWAP5 PUSH2 0x1AF9 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x167A JUMPI DUP1 PUSH2 0x164A PUSH1 0x1 SWAP3 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MLOAD PUSH2 0x1656 JUMPI JUMPDEST ADD PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x166A PUSH2 0x1663 DUP3 DUP8 PUSH2 0x1B2B JUMP JUMPDEST MLOAD DUP3 PUSH2 0x1EF6 JUMP JUMPDEST PUSH2 0x1674 DUP3 DUP9 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x1650 JUMP JUMPDEST POP PUSH2 0x325 SWAP2 SWAP3 PUSH2 0x168A DUP7 DUP9 PUSH2 0x2008 JUMP JUMPDEST PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP3 MLOAD DUP6 DUP2 MSTORE DUP1 PUSH2 0x16BF CALLER SWAP5 DUP9 DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST SUB SWAP1 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP3 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1716 JUMPI JUMPDEST PUSH2 0x16FC DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x41F JUMPI SWAP2 PUSH0 PUSH2 0x1606 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x16F2 JUMP JUMPDEST SWAP4 PUSH2 0x1739 SWAP2 SWAP4 POP PUSH1 0x1 SWAP3 POP PUSH2 0x1732 DUP6 DUP10 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1E2A JUMP JUMPDEST SWAP3 ADD DUP4 SWAP2 DUP6 SWAP2 PUSH2 0x15DA JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH2 0x1760 PUSH1 0x1 PUSH2 0x1757 DUP2 SWAP6 PUSH2 0x19AB JUMP JUMPDEST POP ADD SLOAD DUP7 PUSH2 0x1AE6 JUMP JUMPDEST DIV DUP1 PUSH2 0x176C DUP4 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MLOAD LT PUSH2 0x177A JUMPI JUMPDEST POP ADD PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x1788 SWAP1 PUSH2 0x3B7 DUP4 DUP7 PUSH2 0x1B2B JUMP JUMPDEST PUSH2 0x1792 DUP3 DUP11 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x1773 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x1884 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP3 EQ PUSH2 0x1871 JUMPI POP DUP4 DUP8 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1851 JUMPI POP PUSH1 0x1 EQ PUSH2 0x17F7 JUMPI JUMPDEST POP POP POP PUSH2 0xA3E DUP3 PUSH2 0x325 SWAP5 SUB DUP4 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x183E JUMPI POP POP POP DUP3 PUSH2 0x325 SWAP5 PUSH2 0xA3E SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0x17E5 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x1822 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xA3E DUP3 PUSH2 0x325 PUSH2 0x17E5 JUMP JUMPDEST PUSH1 0x22 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x17C5 JUMP JUMPDEST CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x40 SWAP3 DUP2 DUP4 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x41F JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x41F JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1926 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x41F JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x41F JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x198E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x19E3 JUMPI PUSH1 0x6 PUSH0 MSTORE PUSH1 0x1 SHL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1A19 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A19 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1A4C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4F6E6C7920506572697068657279 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A89 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1AD2 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1AD2 JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x1B03 DUP3 PUSH2 0x1A2D JUMP JUMPDEST PUSH2 0x1B10 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x19F7 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1B21 PUSH1 0x1F NOT SWAP2 PUSH2 0x1A2D JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x19E3 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xFA67079 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH0 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1C09 JUMPI PUSH0 SWAP2 PUSH2 0x1B7B JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x1B8C DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x41F JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x41F JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x41F JUMPI DUP3 MLOAD PUSH2 0x1BC5 DUP2 PUSH2 0x1A2D JUMP JUMPDEST SWAP4 PUSH2 0x1BD3 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x19F7 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x41F JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1BFA JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1C09 JUMPI PUSH0 SWAP2 PUSH2 0x1C68 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1C8F JUMPI JUMPDEST DUP2 PUSH2 0x1C83 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1C76 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1CA1 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1CBD PUSH2 0x1E62 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x6 SLOAD SWAP1 PUSH2 0x1CCC DUP3 PUSH2 0x1A2D JUMP JUMPDEST SWAP2 PUSH2 0x1CDA PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x19F7 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x1CE9 DUP3 PUSH2 0x1A2D JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH2 0x1CF9 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1D0B JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x1D15 DUP2 DUP4 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1AD2 JUMPI PUSH2 0x1D37 DUP6 PUSH1 0x1 SWAP4 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x1D40 DUP3 PUSH2 0x19AB JUMP JUMPDEST POP DUP4 ADD SLOAD DUP4 SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x1D75 JUMPI SWAP1 PUSH2 0x1D58 SWAP2 PUSH2 0x1AC5 JUMP JUMPDEST PUSH2 0x1D62 DUP4 DUP12 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x1D6D DUP3 DUP9 PUSH2 0x1B2B JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x1CFC JUMP JUMPDEST SWAP1 PUSH2 0x1D80 SWAP3 POP PUSH2 0x1AC5 JUMP JUMPDEST PUSH2 0x1D8A DUP3 DUP11 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x1D96 DUP3 DUP9 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0x1DA4 PUSH2 0x1CB5 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1DEB JUMPI PUSH2 0x1DB9 DUP2 DUP5 PUSH2 0x1B2B JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x1DD6 JUMPI JUMPDEST PUSH2 0x1DCE JUMPI PUSH1 0x1 ADD PUSH2 0x1DA6 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x1DE1 DUP2 DUP4 PUSH2 0x1B2B JUMP JUMPDEST MLOAD PUSH1 0x7 SLOAD LT PUSH2 0x1DC2 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x44 DUP2 ADD PUSH2 0x1C53 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1AD2 JUMPI JUMP JUMPDEST PUSH2 0x1E3F PUSH2 0x1E62 JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x1E5C JUMPI PUSH2 0x6B0 PUSH2 0x1E59 SWAP3 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH0 PUSH2 0x1E70 DUP4 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP4 PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x1E93 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x1ED2 PUSH1 0x1 SWAP2 DUP4 PUSH2 0x1EA7 DUP9 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD AND PUSH2 0x1EB3 DUP2 PUSH2 0x1DF2 JUMP JUMPDEST SWAP1 DUP7 DUP2 SUB PUSH2 0x1EDC JUMPI POP PUSH2 0x1EC6 DUP9 DUP12 PUSH2 0x1B2B JUMP JUMPDEST MSTORE JUMPDEST PUSH2 0x1732 DUP8 DUP11 PUSH2 0x1B2B JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 PUSH2 0x1EE6 SWAP2 PUSH2 0x213F JUMP JUMPDEST PUSH2 0x1EF0 DUP9 DUP12 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x1EC8 JUMP JUMPDEST PUSH2 0x1EFF DUP2 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 SWAP2 DUP3 AND DUP4 EQ PUSH2 0x2002 JUMPI SWAP2 DUP2 PUSH2 0x1F6F SWAP5 SWAP3 PUSH2 0x1F2C PUSH1 0x20 SWAP6 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD AND SWAP1 PUSH1 0xC SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0x248391FF PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1C09 JUMPI PUSH0 SWAP2 PUSH2 0x1FD0 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x1F8B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1FFA JUMPI JUMPDEST DUP2 PUSH2 0x1FEB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD PUSH0 PUSH2 0x1F81 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1FDE JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2065 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x2049 PUSH0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2127 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2065 JUMPI DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x20F5 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD PUSH2 0x1C53 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR BLOBBASEFEE LOG2 DUP3 0x21 BALANCE LT MOD PUSH11 0x9558CA1CAE88E104122E88 0xC8 0xCC EXP POP 0xDC SDIV LOG3 0xC6 TLOAD 0xC0 STATICCALL 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xB4 0xD5 0xB3 PUSH8 0x7983DFBADD67A4E1 CODESIZE 0xD8 MSTORE 0xDF BLOBHASH 0xA8 SWAP2 0xC8 0x1E RETURNDATASIZE 0xE5 0xE 0xD5 BLOBBASEFEE MCOPY 0xB2 CALLDATASIZE PUSH9 0x5C64736F6C63430008 NOT STOP CALLER ","sourceMap":"1731:4718:16:-:0;;;;;;;1171:4:2;1163:13;;1731:4718:16;;;;;;1163:13:2;1731:4718:16;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4187,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_13183":{"entryPoint":4165,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_address_dyn_fromMemory":{"entryPoint":4466,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":4358,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_address_dyn":{"entryPoint":4677,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":4263,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":4418,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4209,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkInitializing":{"entryPoint":4896,"id":370,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":4840,"id":122,"parameterSlots":0,"returnSlots":0},"fun_poolExist":{"entryPoint":4604,"id":4463,"parameterSlots":1,"returnSlots":1},"fun_transferOwnership_inner":{"entryPoint":4727,"id":null,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":4961,"id":1967,"parameterSlots":3,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":4446,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_address_dyn":{"entryPoint":4287,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{"468":[{"length":32,"start":1956},{"length":32,"start":2176}]},"linkReferences":{},"object":"60806040818152600480361015610014575f80fd5b5f3560e01c92836301d22ccd14611022575082632d5e94a7146107435782633069873b14610b1a57826341d1de9714610add5782634276b97b14610a5c5782634f1ef2861461080857826352d1902d14610791578263531aa03e14610743578263715018a6146106dc57826377aace1a146106b457826389345efb146106865782638da5cb5b146106525782638f2248bc14610565578263ad3cb1cc146104e5578263b4340e6a14610370578263b4ac686014610353578263c4d66de81461020257508163d88ff1f41461016e57508063e9b31cff1461012b5763f2fde38b146100fc575f80fd5b3461012757602036600319011261012757610125610118611045565b6101206112e8565b611277565b005b5f80fd5b3461012757602036600319011261012757610144611045565b61014c6112e8565b600380546001600160a01b0319166001600160a01b0392909216919091179055005b34610127575f3660031901126101275780515f8054808352818052602080840194927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56392915b8282106101e2576101de86866101cc828b0383611071565b51918291602083526020830190611106565b0390f35b83546001600160a01b0316875295860195600193840193909101906101b4565b346101275760203660031901126101275761021b611045565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0091825460ff81861c16159267ffffffffffffffff82168015908161034b575b6001149081610341575b159081610338575b5061032a575067ffffffffffffffff19811660011784558261030b575b50610294611320565b61029c611320565b6102a4611320565b6102ad33611277565b60018060a01b03166bffffffffffffffffffffffff60a01b60025416176002556102d357005b805460ff60401b1916905551600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b68ffffffffffffffffff1916680100000000000000011783558461028b565b855163f92ee8a960e01b8152fd5b9050158761026e565b303b159150610266565b85915061025c565b5034610127575f366003190112610127576020905f549051908152f35b3461012757602036600319011261012757610389611045565b905f549161039683611245565b925f926001600160a01b039284919084165b8383106103fd575b505050506103bd82611245565b925f5b8381106103dc578551602080825281906101de90820188611106565b80836103ea6001938561115e565b51166103f6828861115e565b52016103c0565b8461040d849794989695986110bf565b90549060031b1c16908851976319f92b0b60e21b89525f898581865afa9889156104db575f996104b7575b505f5b89518110156104a9578287610450838d61115e565b51161461045f5760010161043b565b5093919094959750610471828961115e565b525f19811461049657600101945b865186146104915760010191926103a8565b6103b0565b601182634e487b7160e01b5f525260245ffd5b50939691509394965061047f565b6104d49199503d805f833e6104cc8183611071565b810190611172565b978a610438565b8a513d5f823e3d90fd5b9034610127575f366003190112610127578051918183019083821067ffffffffffffffff83111761055257508152600582526020820191640352e302e360dc1b83528151928391602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b604190634e487b7160e01b5f525260245ffd5b903461012757806003193601126101275761057e611045565b916024359267ffffffffffffffff90818516809503610127577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00928354928660ff85881c16918215610645575b505061063757600280546001600160a01b0319166001600160a01b03841617905568ffffffffffffffffff1983168617600160401b1760ff60401b1916845584518681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b845163f92ee8a960e01b8152fd5b85161015905086886105cb565b5034610127575f366003190112610127575f80516020613edf8339815191525490516001600160a01b039091168152602090f35b5034610127576020366003190112610127576020906106ab6106a6611045565b6111fc565b90519015158152f35b5034610127575f3660031901126101275760035490516001600160a01b039091168152602090f35b34610127575f366003190112610127576106f46112e8565b5f80516020613edf83398151915280546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b503461012757806003193601126101275760209061075f611045565b61076761105b565b6001600160a01b039182165f90815260018552838120918316815290845282902054915191168152f35b9034610127575f366003190112610127577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036107fb57602090517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b5163703e46dd60e11b8152fd5b816003193601126101275761081b611045565b602492833567ffffffffffffffff81116101275736602382011215610127578084013561084781611142565b9361085484519586611071565b818552602091828601933689838301011161012757815f928a8693018737870101526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116308114908115610a2e575b50610a1e576108b96112e8565b81169484516352d1902d60e01b8152838189818a5afa5f91816109ef575b506108f25750505050505191634c9c8ce360e01b8352820152fd5b9087878794938b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc918281036109da5750853b156109c6575080546001600160a01b031916821790558451907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a28251156109ac5750505f6101259581925190845af4913d156109a2573d61099461098b82611142565b92519283611071565b81525f81943d92013e611361565b5060609250611361565b94509450505050346109ba57005b63b398979f60e01b8152fd5b8651634c9c8ce360e01b8152808501849052fd5b8751632a87526960e21b815280860191909152fd5b9091508481813d8311610a17575b610a078183611071565b810103126101275751908a6108d7565b503d6109fd565b845163703e46dd60e11b81528790fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54161415896108ac565b34610127576020366003190112610127575f6001600160a01b03610a7e611045565b168351928380926319f92b0b60e21b82525afa908115610ad357916101de925f92610ab7575b5051918291602083526020830190611106565b610acc9192503d805f833e6104cc8183611071565b9083610aa4565b82513d5f823e3d90fd5b346101275760203660031901126101275735905f5482101561012757610b046020926110bf565b905491519160018060a01b039160031b1c168152f35b346101275760603660031901126101275767ffffffffffffffff91813583811161012757366023820112156101275780830135936024610b59866110a7565b92610b6685519485611071565b868452602096828886019160051b83010191368311610127578301905b8282106110035750505080358281116101275736602382011215610127578086013590610baf826110a7565b90610bbc87519283611071565b8282528882019260051b81018401908336831161012757858b9201905b838210610ff45750506003546001600160a01b0396604495935090871691508115610fbe576001948589511115610f7e578851855103610f31575f865b610e43575b5050866002541693895194612b1a8087019387851090851117610e3157908695949392916113c58739825260a08d8301528c610c5a60a084018c611106565b8381038d8501529151808352910193905f888f5b838310610e1a57505050604435606084015250506080015203905ff08015610e10578316955f54600160401b811015610dfe5790610cb582848a9897969594015f556110bf565b81549060031b908689831b921b1916179055815f905b610d1d575b505050507f93de7d9de9f3e05ba87a0170fcbb71af623439caf5e5079587b9d38c5da9b0d191610d0f9160025416855192839287845287840190611106565b90888301520390a251908152f35b9091929394958651821015610df65750828101808211610de45783929190835b610d4f575b5082018896959493610ccb565b879391929351811015610ddb57819087610d69858b61115e565b51165f52818c52895f2088610d7e838c61115e565b51165f528c52895f206bffffffffffffffffffffffff60a01b908c8282541617905588610dab838c61115e565b51165f52828d528a5f2089610dc0878d61115e565b51165f528d528b8b5f20918254161790550181939291610d3d565b92919092610d42565b84601184634e487b7160e01b5f52525ffd5b959493610cd0565b83604183634e487b7160e01b5f52525ffd5b85513d5f823e3d90fd5b84518852899850968701969093019201888f610c6e565b8860418e634e487b7160e01b5f52525ffd5b8951811015610f2c57868101808211610f1a57879291908b8f8c8f875b610e73575b505050505082019091610c16565b909192939495968451861015610f0d575084610ea39183610e94898861115e565b51165f528d85525f209461115e565b51165f5252898c5f205416610ec2578792919083018b8f8c8f87610e60565b8b5162461bcd60e51b8152808e018f90526021818b01527f506f6f6c20616c72656164792065786973747320666f7220746869732070616981850152603960f91b6064820152608490fd5b9695945090839291610e65565b8860118e634e487b7160e01b5f52525ffd5b610c1b565b895162461bcd60e51b8152808c018d90526022818901527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608490fd5b60648b8d89818e519362461bcd60e51b85528401528201527f4174206c656173742074776f20617373657473206172652072657175697265646044820152fd5b885162461bcd60e51b8152808b018c90526011818801527014195c9a5c1a195c9e481b9bdd081cd95d607a1b6044820152606490fd5b81358152908201908201610bd9565b81356001600160a01b0381168103610127578152908801908801610b83565b34610127575f366003190112610127576002546001600160a01b03168152602090f35b600435906001600160a01b038216820361012757565b602435906001600160a01b038216820361012757565b90601f8019910116810190811067ffffffffffffffff82111761109357604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116110935760051b60200190565b5f548110156110f2575f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301905f90565b634e487b7160e01b5f52603260045260245ffd5b9081518082526020808093019301915f5b828110611125575050505090565b83516001600160a01b031685529381019392810192600101611117565b67ffffffffffffffff811161109357601f01601f191660200190565b80518210156110f25760209160051b010190565b60209081818403126101275780519067ffffffffffffffff821161012757019180601f840112156101275782516111a8816110a7565b936111b66040519586611071565b818552838086019260051b820101928311610127578301905b8282106111dd575050505090565b81516001600160a01b03811681036101275781529083019083016111cf565b5f905f54915b828110611210575050505f90565b611219816110bf565b905460039190911b1c6001600160a01b039081169083161461123d57600101611202565b505050600190565b9061124f826110a7565b61125c6040519182611071565b828152809261126d601f19916110a7565b0190602036910137565b6001600160a01b039081169081156112d0575f80516020613edf83398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b604051631e4fbdf760e01b81525f6004820152602490fd5b5f80516020613edf833981519152546001600160a01b0316330361130857565b60405163118cdaa760e01b8152336004820152602490fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c161561134f57565b604051631afcd79f60e31b8152600490fd5b90611388575080511561137657805190602001fd5b604051630a12f52160e11b8152600490fd5b815115806113bb575b611399575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561139156fe6080806040523461043957612b1a803803809161001c82856108fe565b8339810160a0828203126104395761003382610921565b60208301519091906001600160401b0381116104395783019181601f840112156104395782519261006384610935565b9361007160405195866108fe565b80855260208086019160051b8301019184831161043957602001905b8282106108cb5750505060408401516001600160401b0381116104395784019180601f840112156104395782516100c381610935565b936100d160405195866108fe565b81855260208086019260051b82010192831161043957602001905b8282106108bb57505050610107608060608601519501610921565b604051610113816108e3565b6009815268042616c756e69204c560bc1b602082015260405190610136826108e3565b6009825268042414c554e492d4c560bc1b60208301528051906001600160401b0382116104965760035490600182811c921680156108b1575b60208310146107925781601f849311610843575b50602090601f83116001146107bb575f926107b0575b50508160011b915f199060031b1c1916176003555b8051906001600160401b0382116104965760045490600182811c921680156107a6575b60208310146107925781601f849311610724575b50602090601f83116001146106a0575f92610695575b50508160011b915f199060031b1c1916176004555b6001600555600980546001600160a01b03199081166001600160a01b0393841617909155600a8054821633179055600c8054909116918316919091179055670de0b6b3a76400006008558251825103610645575f5b8351811015610525576001600160a01b03610280828661094c565b5116156104e057610291818461094c565b51156104aa576001600160a01b036102a9828661094c565b51166102b5828561094c565b5160408051929083018084116001600160401b0390911117610496576040830160405282526020820152600654680100000000000000008110156104965760018101806006558110156104825760065f5281517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f60019290921b91820180546001600160a01b039283166001600160a01b03199091161790556020909201517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4090910155610383828661094c565b511660018060a01b03600c5416604051636eb1769f60e11b8152306004820152816024820152602081604481865afa908115610445575f91610450575b50156103d1575b5050600101610265565b5f916044602092604051948593849263095ea7b360e01b84526004840152811960248401525af1801561044557610409575b806103c7565b6020813d60201161043d575b81610422602093836108fe565b81010312610439575180151503610439575f610403565b5f80fd5b3d9150610415565b6040513d5f823e3d90fd5b90506020813d60201161047a575b8161046b602093836108fe565b8101031261043957515f6103c0565b3d915061045e565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206173736574206164647265737300000000000000000000006044820152606490fd5b5060078490556040516389a3027160e01b815290602090829060049082906001600160a01b03165afa908115610445575f9161060b575b50600b80546001600160a01b0319166001600160a01b03929092169190911790555f90815b81518310156105bd57610594838361094c565b5181018091116105a957600190920191610581565b634e487b7160e01b5f52601160045260245ffd5b612710036105d4576040516121b990816109618239f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207765696768747360881b6044820152606490fd5b90506020813d60201161063d575b81610626602093836108fe565b810103126104395761063790610921565b8261055c565b3d9150610619565b60405162461bcd60e51b815260206004820152602260248201527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608490fd5b015190505f806101fb565b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9350601f198516905b81811061070c57509084600195949392106106f4575b505050811b01600455610210565b01515f1960f88460031b161c191690555f80806106e6565b929360206001819287860151815501950193016106d0565b60045f529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81019160208510610788575b90601f859493920160051c01905b81811061077a57506101e5565b5f815584935060010161076d565b909150819061075f565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101d1565b015190505f80610199565b60035f90815293507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91905b601f1984168510610828576001945083601f19811610610810575b505050811b016003556101ae565b01515f1960f88460031b161c191690555f8080610802565b818101518355602094850194600190930192909101906107e7565b60035f529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c810191602085106108a7575b90601f859493920160051c01905b8181106108995750610183565b5f815584935060010161088c565b909150819061087e565b91607f169161016f565b81518152602091820191016100ec565b602080916108d884610921565b81520191019061008d565b604081019081106001600160401b0382111761049657604052565b601f909101601f19168101906001600160401b0382119082101761049657604052565b51906001600160a01b038216820361043957565b6001600160401b0381116104965760051b60200190565b80518210156104825760209160051b01019056fe6080604081815260049182361015610015575f80fd5b5f905f3560e01c90816301d22ccd1461188e5750806306fdde03146117995780630723c9991461156f5780630902f1ac1461153f578063095ea7b31461149657806318160ddd146114785780631a6865021461145457806322acb867146113f757806323b872dd14611316578063313ce567146112fb57806336bf6e39146112c75780634aa06652146112ac57806367a6c4401461129157806367e4ac2c1461122e5780636e81221c1461101557806370a0823114610fdf57806377aace1a14610fb75780637fec8d3814610f9957806389ab353214610f2f57806389afcb4414610b055780638a77c8dc14610ae057806395d89b41146109e1578063a9059cbb146109b1578063b2b55d701461098c578063c2ee3a081461096e578063c45a015514610946578063cdf456e11461091e578063cf8fa764146108a6578063d14ef46d1461085a578063dd62ed3e14610811578063de836ebd14610547578063e73faa2d146105245763f47b45e81461018c575f80fd5b3461041f576003195f3682011261041f576009546001600160a01b0394908516916101b8338414611a45565b6101c86101c3611d9c565b611a82565b600654936101d585611af9565b936101df86611af9565b976101e987611af9565b926101f388611af9565b946101fd89611af9565b9a6102078a611af9565b995f5b81811061046b57505061021b611b3f565b84600c54169160075486600b5416843b1561041f578e51633c2fddc560e21b815260e0818e01528d99909687958695919061025a9060e4880190611907565b9b60249c828882030160248901526102719161196f565b9086820301604487015261028491611907565b92606485015280608485015260a484015260c483015203815a5f948591f1801561046157610434575b50600654600954909690831692825b888110610329578c8c6103258d8d7f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8845160208152806103013394602083019061196f565b0390a26103178351948486958652850190611907565b908382036020850152611907565b0390f35b81610334828c611b2b565b51168c5180916370a0823160e01b82528786830152818960209485935afa91821561042a578f908a94938f91938d948a926103e9575b505094849160019661037c8487611b2b565b526103878386611b2b565b516103928484611b2b565b5110156103cc57506103be906103b7836103b0816103c49798611b2b565b5192611b2b565b5190611ac5565b92611b2b565b525b016102bc565b936103e393506103b7836103b0816103be95611b2b565b526103c6565b9450955050505082813d8311610423575b61040481836119f7565b8101031261041f57888e828a8f60019651919681935061036a565b5f80fd5b503d6103fa565b8e513d88823e3d90fd5b905067ffffffffffffffff811161044e5788525f806102ad565b604186634e487b7160e01b5f525260245ffd5b8a513d5f823e3d90fd5b85610475826119ab565b505416610482828d611b2b565b52600161048e826119ab565b50015461049b8285611b2b565b52856104a7828d611b2b565b5116908d5180926370a0823160e01b8252898d83015281602460209384935afa90811561051a575f916104eb575b50600192506104e4828b611b2b565b520161020a565b905082813d8311610513575b61050181836119f7565b8101031261041f57600191515f6104d5565b503d6104f7565b8f513d5f823e3d90fd5b823461041f575f36600319011261041f57602090610540611e37565b9051908152f35b50503461041f578060031936011261041f576105616118db565b9060249182359367ffffffffffffffff851161041f573660238601121561041f57848101359061059082611a2d565b9161059d855193846119f7565b808352602096868885019260051b8201019136831161041f5787899201905b8382106108025750506009546001600160a01b039492506105e1915084163314611a45565b6002545f916105ee611b3f565b90600654915182036107c057811561079257905f915b81831061075957505050811561070c57806106925750945b8515610660575050847f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885916106518685612008565b8451938685521692a251908152f35b845162461bcd60e51b8152918201879052600d908201526c04d696e7420717479206973203609c1b6044820152606490fd5b61069a611e62565b509182156106bb576106b592916106b091611ae6565b611c97565b9461061c565b865162461bcd60e51b81528085018a90526026818a01527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608490fd5b855162461bcd60e51b81528084018990526022818901527f546f74616c2076616c7565206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608490fd5b9091936107896001916107838961076f896119ab565b50541661077c8987611b2b565b519061213f565b90611e2a565b94019190610604565b875162461bcd60e51b81528086018b90526009818b0152684e6f2061737365747360b81b6044820152606490fd5b875162461bcd60e51b81528086018b90526017818b01527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152606490fd5b813581529082019082016105bc565b823461041f578060031936011261041f5760209061082d6118db565b6108356118f1565b9060018060a01b038091165f5260018452825f2091165f528252805f20549051908152f35b82843461041f57602036600319011261041f573560065481101561041f57610881906119ab565b50805460019091015491516001600160a01b0390911681526020810191909152604090f35b82843461041f57602036600319011261041f578035906108c4611e62565b80929150518310156108e5576020846108dd8585611b2b565b519051908152f35b606490602085519162461bcd60e51b83528201526013602482015272092dcecc2d8d2c840c2e6e6cae840d2dcc8caf606b1b6044820152fd5b823461041f575f36600319011261041f57600b5490516001600160a01b039091168152602090f35b823461041f575f36600319011261041f57600a5490516001600160a01b039091168152602090f35b823461041f575f36600319011261041f576020906008549051908152f35b823461041f57602036600319011261041f576020906105406109ac6118db565b611df2565b823461041f578060031936011261041f576020906109da6109d06118db565b602435903361207d565b5160018152f35b50503461041f575f36600319011261041f578051905f9280549060018260011c9160018416938415610ad6575b6020948585108114610ac357848852908115610aa15750600114610a48575b6103258686610a3e828b03836119f7565b51918291826118b1565b5f9081529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610a8e575050508261032594610a3e92820101945f610a2d565b8054868501880152928601928101610a71565b60ff191687860152505050151560051b8301019250610a3e826103255f610a2d565b602283634e487b7160e01b5f525260245ffd5b92607f1692610a0e565b823461041f575f36600319011261041f57602090610afc611d9c565b90519015158152f35b50503461041f576020908160031936011261041f57610b226118db565b6009546001600160a01b0390811691610b3c338414611a45565b305f525f8552835f2054958615610eec57600254968715610eba57600654610b6381611af9565b98601e8302838104601e03610ea757612710610b8191048094611ac5565b965f5b838110610dec5750505050305f525f875284865f205410610da957818785600c54168851928380926361d027b360e01b82525afa908115610d9f579088915f91610d65575b50875163a9059cbb60e01b81526001600160a01b03909116848201908152602081019390935291829081906040015b03815f305af1908115610d5b575f91610d25575b5015610cec573015610cd657305f525f8652845f205490848210610cab575083927fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59261032596958893305f525f855203865f205584600254036002555f86518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853092a385519485521692a251928284938452830190611907565b855163391434e360e21b81523091810191825260208201929092526040810185905281906060010390fd5b6024905f865191634b637e8f60e11b8352820152fd5b845162461bcd60e51b81529081018690526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b90508681813d8311610d54575b610d3c81836119f7565b8101031261041f5751801515810361041f575f610c0c565b503d610d32565b86513d5f823e3d90fd5b82819392503d8311610d98575b610d7c81836119f7565b8101031261041f5751848116810361041f578790610bf8610bc9565b503d610d72565b87513d5f823e3d90fd5b855162461bcd60e51b8152808301889052601d60248201527f496e73756666696369656e742042414c554e49206c69717569646974790000006044820152606490fd5b610e2e8b89610dfa846119ab565b50548d5163a3e113fb60e01b8152308b8201908152929091166001600160a01b031660208301529283918291604090910190565b0381865afa908115610e9d578a8593928f925f91610e63575b506103be6001956106b0610e5c948794611ae6565b5201610b84565b94505050508b82813d8311610e96575b610e7d81836119f7565b8101031261041f5790518391908d908b906103be610e47565b503d610e73565b8b513d5f823e3d90fd5b601185634e487b7160e01b5f525260245ffd5b855162461bcd60e51b8152808301889052600c60248201526b4e6f206c697175696469747960a01b6044820152606490fd5b845162461bcd60e51b8152908101869052601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b823461041f575f36600319011261041f57610f48611cb5565b8251928391818301918352835180925260608301916020809501945f5b828110610f8057858061032587878382036020850152611907565b8651151585529581019587955093810193600101610f65565b823461041f575f36600319011261041f576020906007549051908152f35b823461041f575f36600319011261041f5760095490516001600160a01b039091168152602090f35b823461041f57602036600319011261041f576020906001600160a01b036110046118db565b165f525f8252805f20549051908152f35b82843461041f57608036600319011261041f576110306118db565b916110396118f1565b604435936001600160a01b0391606435838116919082900361041f5760026005541461121e576002600555838116938316928484146111db5787156111985790611087888261108f94611c14565b918291611df2565b1061115c57601e8102818104601e148215171561114957906127106110b5920490611ac5565b9485156110f857507fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628460209781519081528789820152a4600160055551908152f35b608490602086519162461bcd60e51b8352820152602560248201527f416d6f756e7420746f2073656e64206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152fd5b601187634e487b7160e01b5f525260245ffd5b845162461bcd60e51b81526020818801526016602482015275496e73756666696369656e74204c697175696469747960501b6044820152606490fd5b855162461bcd60e51b8152602081890181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606490fd5b855162461bcd60e51b8152602081890152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152606490fd5b8451633ee5aeb560e01b81528690fd5b823461041f575f36600319011261041f5760065461124b81611af9565b905f5b81811061126a578351602080825281906103259082018661196f565b806112766001926119ab565b50828060a01b0390541661128a8286611b2b565b520161124e565b823461041f575f36600319011261041f5760209051601e8152f35b823461041f576020906105406112c13661193a565b91611c14565b823461041f575f36600319011261041f576103256112e3611e62565b83929192519384938452806020850152830190611907565b823461041f575f36600319011261041f576020905160128152f35b82843461041f576113263661193a565b6001600160a01b0383165f81815260016020818152888320338452905290879020549295939493908301611363575b6020876109da88888861207d565b8583106113cb5781156113b557331561139f57505f908152600160209081528682203383528152908690209185900390915582906109da611355565b6024905f885191634a1406b160e11b8352820152fd5b6024905f88519163e602df0560e01b8352820152fd5b8651637dc7a0d960e11b8152339181019182526020820193909352604081018690528291506060010390fd5b823461041f575f36600319011261041f5760065461141481611af9565b905f5b8181106114335783516020808252819061032590820186611907565b80600161144081936119ab565b50015461144d8286611b2b565b5201611417565b823461041f575f36600319011261041f57602090611470611e62565b509051908152f35b823461041f575f36600319011261041f576020906002549051908152f35b50503461041f578060031936011261041f576114b06118db565b602435903315611529576001600160a01b03169081156115135760209350335f5260018452825f20825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8251634a1406b160e11b81525f81860152602490fd5b825163e602df0560e01b81525f81860152602490fd5b823461041f575f36600319011261041f576103259061155c611b3f565b9051918291602083526020830190611907565b50503461041f576020908160031936011261041f5761158c6118db565b9260018060a01b03926115a484600954163314611a45565b6115af6101c3611d9c565b6115b7611e62565b929094600654956115c787611af9565b945f5b8881106117445750505081835f925f5b89811061171d5750600b541687519485809263313ce56760e01b82525afa928315610d5b575f936116e4575b5060ff670de0b6b3a7640000931683039283116116d157506116319161162b91611ae6565b94611af9565b925f5b835181101561167a578061164a60019286611b2b565b51611656575b01611634565b61166a6116638287611b2b565b5182611ef6565b6116748288611b2b565b52611650565b50610325919261168a8688612008565b7fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e8251858152806116bf339488830190611907565b0390a251928284938452830190611907565b601190634e487b7160e01b5f525260245ffd5b9092508381813d8311611716575b6116fc81836119f7565b8101031261041f575160ff8116810361041f57915f611606565b503d6116f2565b93611739919350600192506117328589611b2b565b5190611e2a565b9201839185916115da565b80612710611760600161175781956119ab565b50015486611ae6565b048061176c8386611b2b565b511061177a575b50016115ca565b611788906103b78386611b2b565b611792828a611b2b565b525f611773565b50503461041f575f36600319011261041f578051905f9260035460018160011c91600181168015611884575b6020948585108214611871575083875290811561185157506001146117f7575b505050610a3e826103259403836119f7565b60035f9081529295507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061183e575050508261032594610a3e92820101946117e5565b8054868501880152928601928101611822565b60ff1916868501525050151560051b8301019250610a3e826103256117e5565b602290634e487b7160e01b5f525260245ffd5b92607f16926117c5565b3461041f575f36600319011261041f57600c546001600160a01b03168152602090f35b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361041f57565b602435906001600160a01b038216820361041f57565b9081518082526020808093019301915f5b828110611926575050505090565b835185529381019392810192600101611918565b606090600319011261041f576001600160a01b0390600435828116810361041f5791602435908116810361041f579060443590565b9081518082526020808093019301915f5b82811061198e575050505090565b83516001600160a01b031685529381019392810192600101611980565b6006548110156119e35760065f5260011b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01905f90565b634e487b7160e01b5f52603260045260245ffd5b90601f8019910116810190811067ffffffffffffffff821117611a1957604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff8111611a195760051b60200190565b15611a4c57565b60405162461bcd60e51b815260206004820152600e60248201526d4f6e6c792050657269706865727960901b6044820152606490fd5b15611a8957565b60405162461bcd60e51b8152602060048201526014602482015273149958985b185b98d9481b9bdd081b995959195960621b6044820152606490fd5b91908203918211611ad257565b634e487b7160e01b5f52601160045260245ffd5b81810292918115918404141715611ad257565b90611b0382611a2d565b611b1060405191826119f7565b8281528092611b21601f1991611a2d565b0190602036910137565b80518210156119e35760209160051b010190565b600954604051630fa6707960e21b8152306004820152905f90829060249082906001600160a01b03165afa908115611c09575f91611b7b575090565b90503d805f833e611b8c81836119f7565b810190602090818184031261041f5780519067ffffffffffffffff821161041f57019180601f8401121561041f578251611bc581611a2d565b93611bd360405195866119f7565b818552838086019260051b82010192831161041f578301905b828210611bfa575050505090565b81518152908301908301611bec565b6040513d5f823e3d90fd5b600c5460405163248391ff60e01b81526001600160a01b0392831660048201529282166024840152604483019390935290916020918391168180606481015b03915afa908115611c09575f91611c68575090565b90506020813d602011611c8f575b81611c83602093836119f7565b8101031261041f575190565b3d9150611c76565b8115611ca1570490565b634e487b7160e01b5f52601260045260245ffd5b611cbd611e62565b919060065490611ccc82611a2d565b91611cda60405193846119f7565b808352601f19611ce982611a2d565b01366020850137611cf981611af9565b945f5b828110611d0b57505050509190565b611d158183611b2b565b519061271091828102928184041490151715611ad257611d3785600193611c97565b611d40826119ab565b50830154839181811115611d755790611d5891611ac5565b611d62838b611b2b565b52611d6d8288611b2b565b525b01611cfc565b90611d809250611ac5565b611d8a828a611b2b565b525f611d968288611b2b565b52611d6f565b611da4611cb5565b5f5b8151811015611deb57611db98184611b2b565b51151580611dd6575b611dce57600101611da6565b505050600190565b50611de18183611b2b565b5160075410611dc2565b5050505f90565b60095460405163a3e113fb60e01b81523060048201526001600160a01b03928316602482015291602091839116818060448101611c53565b91908201809211611ad257565b611e3f611e62565b506002548015611e5c576106b0611e599260085490611ae6565b90565b50505f90565b600654905f611e7083611af9565b600b5490935f916001600160a01b03908116905b828410611e9357505050509190565b90919293611ed260019183611ea7886119ab565b505416611eb381611df2565b90868103611edc5750611ec6888b611b2b565b525b611732878a611b2b565b9401929190611e84565b90611ee69161213f565b611ef0888b611b2b565b52611ec8565b611eff816119ab565b5054600b546001600160a01b0390811692909182168314612002579181611f6f9492611f2c6020956119ab565b50541690600c5416916040519586948593849363248391ff60e01b85526004850160409194939294606082019560018060a01b0380921683521660208201520152565b03915afa908115611c09575f91611fd0575b508015611f8b5790565b60405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152606490fd5b90506020813d602011611ffa575b81611feb602093836119f7565b8101031261041f57515f611f81565b3d9150611fde565b50505090565b6001600160a01b0316908115612065577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826120495f94600254611e2a565b60025584845283825260408420818154019055604051908152a3565b60405163ec442f0560e01b81525f6004820152602490fd5b916001600160a01b03808416928315612127571692831561206557825f525f60205260405f2054908282106120f55750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b604051634b637e8f60e11b81525f6004820152602490fd5b600c54600b5460405163248391ff60e01b81526001600160a01b03938416600482015290831660248201526044810193909352602091839116818060648101611c5356fea2646970667358221220184aa282213110066a9558ca1cae88e104122e88c8cc0a50dc05a3c65cc0fac464736f6c634300081900339016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300a2646970667358221220fbb4d5b3677983dfbadd67a4e138d852df49a891c81e3de50ed54a5eb236685c64736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP3 DUP4 PUSH4 0x1D22CCD EQ PUSH2 0x1022 JUMPI POP DUP3 PUSH4 0x2D5E94A7 EQ PUSH2 0x743 JUMPI DUP3 PUSH4 0x3069873B EQ PUSH2 0xB1A JUMPI DUP3 PUSH4 0x41D1DE97 EQ PUSH2 0xADD JUMPI DUP3 PUSH4 0x4276B97B EQ PUSH2 0xA5C JUMPI DUP3 PUSH4 0x4F1EF286 EQ PUSH2 0x808 JUMPI DUP3 PUSH4 0x52D1902D EQ PUSH2 0x791 JUMPI DUP3 PUSH4 0x531AA03E EQ PUSH2 0x743 JUMPI DUP3 PUSH4 0x715018A6 EQ PUSH2 0x6DC JUMPI DUP3 PUSH4 0x77AACE1A EQ PUSH2 0x6B4 JUMPI DUP3 PUSH4 0x89345EFB EQ PUSH2 0x686 JUMPI DUP3 PUSH4 0x8DA5CB5B EQ PUSH2 0x652 JUMPI DUP3 PUSH4 0x8F2248BC EQ PUSH2 0x565 JUMPI DUP3 PUSH4 0xAD3CB1CC EQ PUSH2 0x4E5 JUMPI DUP3 PUSH4 0xB4340E6A EQ PUSH2 0x370 JUMPI DUP3 PUSH4 0xB4AC6860 EQ PUSH2 0x353 JUMPI DUP3 PUSH4 0xC4D66DE8 EQ PUSH2 0x202 JUMPI POP DUP2 PUSH4 0xD88FF1F4 EQ PUSH2 0x16E JUMPI POP DUP1 PUSH4 0xE9B31CFF EQ PUSH2 0x12B JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xFC JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x125 PUSH2 0x118 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x1277 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x144 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI DUP1 MLOAD PUSH0 DUP1 SLOAD DUP1 DUP4 MSTORE DUP2 DUP1 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP5 SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP3 SWAP2 JUMPDEST DUP3 DUP3 LT PUSH2 0x1E2 JUMPI PUSH2 0x1DE DUP7 DUP7 PUSH2 0x1CC DUP3 DUP12 SUB DUP4 PUSH2 0x1071 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1106 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x21B PUSH2 0x1045 JUMP JUMPDEST SWAP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP2 DUP3 SLOAD PUSH1 0xFF DUP2 DUP7 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x34B JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x341 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x338 JUMPI JUMPDEST POP PUSH2 0x32A JUMPI POP PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR DUP5 SSTORE DUP3 PUSH2 0x30B JUMPI JUMPDEST POP PUSH2 0x294 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x29C PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x2A4 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x2AD CALLER PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x2D3 JUMPI STOP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND SWAP1 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR DUP4 SSTORE DUP5 PUSH2 0x28B JUMP JUMPDEST DUP6 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST SWAP1 POP ISZERO DUP8 PUSH2 0x26E JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x266 JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x25C JUMP JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 SWAP1 PUSH0 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x389 PUSH2 0x1045 JUMP JUMPDEST SWAP1 PUSH0 SLOAD SWAP2 PUSH2 0x396 DUP4 PUSH2 0x1245 JUMP JUMPDEST SWAP3 PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP5 SWAP2 SWAP1 DUP5 AND JUMPDEST DUP4 DUP4 LT PUSH2 0x3FD JUMPI JUMPDEST POP POP POP POP PUSH2 0x3BD DUP3 PUSH2 0x1245 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3DC JUMPI DUP6 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x1DE SWAP1 DUP3 ADD DUP9 PUSH2 0x1106 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x3EA PUSH1 0x1 SWAP4 DUP6 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH2 0x3F6 DUP3 DUP9 PUSH2 0x115E JUMP JUMPDEST MSTORE ADD PUSH2 0x3C0 JUMP JUMPDEST DUP5 PUSH2 0x40D DUP5 SWAP8 SWAP5 SWAP9 SWAP7 SWAP6 SWAP9 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP9 MLOAD SWAP8 PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP10 MSTORE PUSH0 DUP10 DUP6 DUP2 DUP7 GAS STATICCALL SWAP9 DUP10 ISZERO PUSH2 0x4DB JUMPI PUSH0 SWAP10 PUSH2 0x4B7 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x4A9 JUMPI DUP3 DUP8 PUSH2 0x450 DUP4 DUP14 PUSH2 0x115E JUMP JUMPDEST MLOAD AND EQ PUSH2 0x45F JUMPI PUSH1 0x1 ADD PUSH2 0x43B JUMP JUMPDEST POP SWAP4 SWAP2 SWAP1 SWAP5 SWAP6 SWAP8 POP PUSH2 0x471 DUP3 DUP10 PUSH2 0x115E JUMP JUMPDEST MSTORE PUSH0 NOT DUP2 EQ PUSH2 0x496 JUMPI PUSH1 0x1 ADD SWAP5 JUMPDEST DUP7 MLOAD DUP7 EQ PUSH2 0x491 JUMPI PUSH1 0x1 ADD SWAP2 SWAP3 PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x11 DUP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP4 SWAP7 SWAP2 POP SWAP4 SWAP5 SWAP7 POP PUSH2 0x47F JUMP JUMPDEST PUSH2 0x4D4 SWAP2 SWAP10 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4CC DUP2 DUP4 PUSH2 0x1071 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1172 JUMP JUMPDEST SWAP8 DUP11 PUSH2 0x438 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI DUP1 MLOAD SWAP2 DUP2 DUP4 ADD SWAP1 DUP4 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x552 JUMPI POP DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP4 MSTORE DUP2 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x20 DUP4 MSTORE MLOAD DUP1 SWAP2 DUP2 PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 CALLVALUE PUSH2 0x127 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x127 JUMPI PUSH2 0x57E PUSH2 0x1045 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0x127 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP3 DUP4 SLOAD SWAP3 DUP7 PUSH1 0xFF DUP6 DUP9 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x645 JUMPI JUMPDEST POP POP PUSH2 0x637 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP7 OR PUSH1 0x1 PUSH1 0x40 SHL OR PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP5 SSTORE DUP5 MLOAD DUP7 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST DUP5 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP6 AND LT ISZERO SWAP1 POP DUP7 DUP9 PUSH2 0x5CB JUMP JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x6AB PUSH2 0x6A6 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x11FC JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH2 0x6F4 PUSH2 0x12E8 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x127 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x75F PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x767 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP6 MSTORE DUP4 DUP2 KECCAK256 SWAP2 DUP4 AND DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST SWAP1 CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x7FB JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x127 JUMPI PUSH2 0x81B PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x127 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP1 DUP5 ADD CALLDATALOAD PUSH2 0x847 DUP2 PUSH2 0x1142 JUMP JUMPDEST SWAP4 PUSH2 0x854 DUP5 MLOAD SWAP6 DUP7 PUSH2 0x1071 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP7 ADD SWAP4 CALLDATASIZE DUP10 DUP4 DUP4 ADD ADD GT PUSH2 0x127 JUMPI DUP2 PUSH0 SWAP3 DUP11 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP8 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND ADDRESS DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xA2E JUMPI JUMPDEST POP PUSH2 0xA1E JUMPI PUSH2 0x8B9 PUSH2 0x12E8 JUMP JUMPDEST DUP2 AND SWAP5 DUP5 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP4 DUP2 DUP10 DUP2 DUP11 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x9EF JUMPI JUMPDEST POP PUSH2 0x8F2 JUMPI POP POP POP POP POP MLOAD SWAP2 PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP8 DUP8 DUP8 SWAP5 SWAP4 DUP12 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0x9DA JUMPI POP DUP6 EXTCODESIZE ISZERO PUSH2 0x9C6 JUMPI POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE DUP5 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP3 MLOAD ISZERO PUSH2 0x9AC JUMPI POP POP PUSH0 PUSH2 0x125 SWAP6 DUP2 SWAP3 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x9A2 JUMPI RETURNDATASIZE PUSH2 0x994 PUSH2 0x98B DUP3 PUSH2 0x1142 JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0x1071 JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1361 JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x1361 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP CALLVALUE PUSH2 0x9BA JUMPI STOP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP5 SWAP1 MSTORE REVERT JUMPDEST DUP8 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xA17 JUMPI JUMPDEST PUSH2 0xA07 DUP2 DUP4 PUSH2 0x1071 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x127 JUMPI MLOAD SWAP1 DUP11 PUSH2 0x8D7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x9FD JUMP JUMPDEST DUP5 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE DUP8 SWAP1 REVERT JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO DUP10 PUSH2 0x8AC JUMP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA7E PUSH2 0x1045 JUMP JUMPDEST AND DUP4 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xAD3 JUMPI SWAP2 PUSH2 0x1DE SWAP3 PUSH0 SWAP3 PUSH2 0xAB7 JUMPI JUMPDEST POP MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0xACC SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4CC DUP2 DUP4 PUSH2 0x1071 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0xAA4 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI CALLDATALOAD SWAP1 PUSH0 SLOAD DUP3 LT ISZERO PUSH2 0x127 JUMPI PUSH2 0xB04 PUSH1 0x20 SWAP3 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP2 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x127 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP1 DUP4 ADD CALLDATALOAD SWAP4 PUSH1 0x24 PUSH2 0xB59 DUP7 PUSH2 0x10A7 JUMP JUMPDEST SWAP3 PUSH2 0xB66 DUP6 MLOAD SWAP5 DUP6 PUSH2 0x1071 JUMP JUMPDEST DUP7 DUP5 MSTORE PUSH1 0x20 SWAP7 DUP3 DUP9 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x127 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1003 JUMPI POP POP POP DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x127 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP1 DUP7 ADD CALLDATALOAD SWAP1 PUSH2 0xBAF DUP3 PUSH2 0x10A7 JUMP JUMPDEST SWAP1 PUSH2 0xBBC DUP8 MLOAD SWAP3 DUP4 PUSH2 0x1071 JUMP JUMPDEST DUP3 DUP3 MSTORE DUP9 DUP3 ADD SWAP3 PUSH1 0x5 SHL DUP2 ADD DUP5 ADD SWAP1 DUP4 CALLDATASIZE DUP4 GT PUSH2 0x127 JUMPI DUP6 DUP12 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xFF4 JUMPI POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 PUSH1 0x44 SWAP6 SWAP4 POP SWAP1 DUP8 AND SWAP2 POP DUP2 ISZERO PUSH2 0xFBE JUMPI PUSH1 0x1 SWAP5 DUP6 DUP10 MLOAD GT ISZERO PUSH2 0xF7E JUMPI DUP9 MLOAD DUP6 MLOAD SUB PUSH2 0xF31 JUMPI PUSH0 DUP7 JUMPDEST PUSH2 0xE43 JUMPI JUMPDEST POP POP DUP7 PUSH1 0x2 SLOAD AND SWAP4 DUP10 MLOAD SWAP5 PUSH2 0x2B1A DUP1 DUP8 ADD SWAP4 DUP8 DUP6 LT SWAP1 DUP6 GT OR PUSH2 0xE31 JUMPI SWAP1 DUP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x13C5 DUP8 CODECOPY DUP3 MSTORE PUSH1 0xA0 DUP14 DUP4 ADD MSTORE DUP13 PUSH2 0xC5A PUSH1 0xA0 DUP5 ADD DUP13 PUSH2 0x1106 JUMP JUMPDEST DUP4 DUP2 SUB DUP14 DUP6 ADD MSTORE SWAP2 MLOAD DUP1 DUP4 MSTORE SWAP2 ADD SWAP4 SWAP1 PUSH0 DUP9 DUP16 JUMPDEST DUP4 DUP4 LT PUSH2 0xE1A JUMPI POP POP POP PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE POP POP PUSH1 0x80 ADD MSTORE SUB SWAP1 PUSH0 CREATE DUP1 ISZERO PUSH2 0xE10 JUMPI DUP4 AND SWAP6 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xDFE JUMPI SWAP1 PUSH2 0xCB5 DUP3 DUP5 DUP11 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 ADD PUSH0 SSTORE PUSH2 0x10BF JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP7 DUP10 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP2 PUSH0 SWAP1 JUMPDEST PUSH2 0xD1D JUMPI JUMPDEST POP POP POP POP PUSH32 0x93DE7D9DE9F3E05BA87A0170FCBB71AF623439CAF5E5079587B9D38C5DA9B0D1 SWAP2 PUSH2 0xD0F SWAP2 PUSH1 0x2 SLOAD AND DUP6 MLOAD SWAP3 DUP4 SWAP3 DUP8 DUP5 MSTORE DUP8 DUP5 ADD SWAP1 PUSH2 0x1106 JUMP JUMPDEST SWAP1 DUP9 DUP4 ADD MSTORE SUB SWAP1 LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP7 MLOAD DUP3 LT ISZERO PUSH2 0xDF6 JUMPI POP DUP3 DUP2 ADD DUP1 DUP3 GT PUSH2 0xDE4 JUMPI DUP4 SWAP3 SWAP2 SWAP1 DUP4 JUMPDEST PUSH2 0xD4F JUMPI JUMPDEST POP DUP3 ADD DUP9 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0xCCB JUMP JUMPDEST DUP8 SWAP4 SWAP2 SWAP3 SWAP4 MLOAD DUP2 LT ISZERO PUSH2 0xDDB JUMPI DUP2 SWAP1 DUP8 PUSH2 0xD69 DUP6 DUP12 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP2 DUP13 MSTORE DUP10 PUSH0 KECCAK256 DUP9 PUSH2 0xD7E DUP4 DUP13 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP13 MSTORE DUP10 PUSH0 KECCAK256 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP1 DUP13 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE DUP9 PUSH2 0xDAB DUP4 DUP13 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP3 DUP14 MSTORE DUP11 PUSH0 KECCAK256 DUP10 PUSH2 0xDC0 DUP8 DUP14 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP14 MSTORE DUP12 DUP12 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE ADD DUP2 SWAP4 SWAP3 SWAP2 PUSH2 0xD3D JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0xD42 JUMP JUMPDEST DUP5 PUSH1 0x11 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST SWAP6 SWAP5 SWAP4 PUSH2 0xCD0 JUMP JUMPDEST DUP4 PUSH1 0x41 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP9 MSTORE DUP10 SWAP9 POP SWAP7 DUP8 ADD SWAP7 SWAP1 SWAP4 ADD SWAP3 ADD DUP9 DUP16 PUSH2 0xC6E JUMP JUMPDEST DUP9 PUSH1 0x41 DUP15 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0xF2C JUMPI DUP7 DUP2 ADD DUP1 DUP3 GT PUSH2 0xF1A JUMPI DUP8 SWAP3 SWAP2 SWAP1 DUP12 DUP16 DUP13 DUP16 DUP8 JUMPDEST PUSH2 0xE73 JUMPI JUMPDEST POP POP POP POP POP DUP3 ADD SWAP1 SWAP2 PUSH2 0xC16 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 DUP5 MLOAD DUP7 LT ISZERO PUSH2 0xF0D JUMPI POP DUP5 PUSH2 0xEA3 SWAP2 DUP4 PUSH2 0xE94 DUP10 DUP9 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP14 DUP6 MSTORE PUSH0 KECCAK256 SWAP5 PUSH2 0x115E JUMP JUMPDEST MLOAD AND PUSH0 MSTORE MSTORE DUP10 DUP13 PUSH0 KECCAK256 SLOAD AND PUSH2 0xEC2 JUMPI DUP8 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP12 DUP16 DUP13 DUP16 DUP8 PUSH2 0xE60 JUMP JUMPDEST DUP12 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP15 ADD DUP16 SWAP1 MSTORE PUSH1 0x21 DUP2 DUP12 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792065786973747320666F72207468697320706169 DUP2 DUP6 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP7 SWAP6 SWAP5 POP SWAP1 DUP4 SWAP3 SWAP2 PUSH2 0xE65 JUMP JUMPDEST DUP9 PUSH1 0x11 DUP15 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST PUSH2 0xC1B JUMP JUMPDEST DUP10 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP13 ADD DUP14 SWAP1 MSTORE PUSH1 0x22 DUP2 DUP10 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP12 DUP14 DUP10 DUP2 DUP15 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F2061737365747320617265207265717569726564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP9 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP12 ADD DUP13 SWAP1 MSTORE PUSH1 0x11 DUP2 DUP9 ADD MSTORE PUSH17 0x14195C9A5C1A195C9E481B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0xBD9 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x127 JUMPI DUP2 MSTORE SWAP1 DUP9 ADD SWAP1 DUP9 ADD PUSH2 0xB83 JUMP JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x127 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x127 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1093 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1093 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x10F2 JUMPI PUSH0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1125 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1117 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1093 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x10F2 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x127 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x127 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x127 JUMPI DUP3 MLOAD PUSH2 0x11A8 DUP2 PUSH2 0x10A7 JUMP JUMPDEST SWAP4 PUSH2 0x11B6 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1071 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x127 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x11DD JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x127 JUMPI DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x11CF JUMP JUMPDEST PUSH0 SWAP1 PUSH0 SLOAD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1210 JUMPI POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1219 DUP2 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND EQ PUSH2 0x123D JUMPI PUSH1 0x1 ADD PUSH2 0x1202 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x124F DUP3 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x125C PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1071 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x126D PUSH1 0x1F NOT SWAP2 PUSH2 0x10A7 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x12D0 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3EDF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1308 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x134F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1388 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x1376 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x13BB JUMPI JUMPDEST PUSH2 0x1399 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1391 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x439 JUMPI PUSH2 0x2B1A DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x8FE JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH2 0x439 JUMPI PUSH2 0x33 DUP3 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP4 ADD SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD SWAP3 PUSH2 0x63 DUP5 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0x71 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP5 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8CB JUMPI POP POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP5 ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD PUSH2 0xC3 DUP2 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0xD1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8BB JUMPI POP POP POP PUSH2 0x107 PUSH1 0x80 PUSH1 0x60 DUP7 ADD MLOAD SWAP6 ADD PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 DUP2 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x136 DUP3 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8B1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x843 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7BB JUMPI PUSH0 SWAP3 PUSH2 0x7B0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x7A6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x724 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x6A0 JUMPI PUSH0 SWAP3 PUSH2 0x695 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND CALLER OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE DUP3 MLOAD DUP3 MLOAD SUB PUSH2 0x645 JUMPI PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x525 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x280 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND ISZERO PUSH2 0x4E0 JUMPI PUSH2 0x291 DUP2 DUP5 PUSH2 0x94C JUMP JUMPDEST MLOAD ISZERO PUSH2 0x4AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A9 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH2 0x2B5 DUP3 DUP6 PUSH2 0x94C JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 DUP4 ADD DUP1 DUP5 GT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 DUP4 ADD PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x496 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x6 SSTORE DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x6 PUSH0 MSTORE DUP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 SWAP1 SWAP2 ADD SSTORE PUSH2 0x383 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x450 JUMPI JUMPDEST POP ISZERO PUSH2 0x3D1 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x265 JUMP JUMPDEST PUSH0 SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP2 NOT PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x445 JUMPI PUSH2 0x409 JUMPI JUMPDEST DUP1 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x43D JUMPI JUMPDEST DUP2 PUSH2 0x422 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x439 JUMPI PUSH0 PUSH2 0x403 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x47A JUMPI JUMPDEST DUP2 PUSH2 0x46B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD PUSH0 PUSH2 0x3C0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x45E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x7 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x89A30271 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x60B JUMPI JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH0 SWAP1 DUP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x594 DUP4 DUP4 PUSH2 0x94C JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5A9 JUMPI PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x581 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2710 SUB PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH2 0x21B9 SWAP1 DUP2 PUSH2 0x961 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x63D JUMPI JUMPDEST DUP2 PUSH2 0x626 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI PUSH2 0x637 SWAP1 PUSH2 0x921 JUMP JUMPDEST DUP3 PUSH2 0x55C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x70C JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x6F4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x210 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x6E6 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x4 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x788 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x77A JUMPI POP PUSH2 0x1E5 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x76D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D1 JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x828 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x810 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x1AE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x802 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x3 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x8A7 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x899 JUMPI POP PUSH2 0x183 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x88C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16F JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xEC JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x8D8 DUP5 PUSH2 0x921 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x439 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x496 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1D22CCD EQ PUSH2 0x188E JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1799 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x156F JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x153F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1496 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1478 JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x1454 JUMPI DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x13F7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1316 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x12FB JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x12C7 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x12AC JUMPI DUP1 PUSH4 0x67A6C440 EQ PUSH2 0x1291 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x122E JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x1015 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xFDF JUMPI DUP1 PUSH4 0x77AACE1A EQ PUSH2 0xFB7 JUMPI DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0xF99 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0xF2F JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0xB05 JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0xAE0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x9E1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0x98C JUMPI DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0x96E JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x946 JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x91E JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0x8A6 JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0x85A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x811 JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x524 JUMPI PUSH4 0xF47B45E8 EQ PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x3 NOT PUSH0 CALLDATASIZE DUP3 ADD SLT PUSH2 0x41F JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 DUP6 AND SWAP2 PUSH2 0x1B8 CALLER DUP5 EQ PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1C3 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP4 PUSH2 0x1D5 DUP6 PUSH2 0x1AF9 JUMP JUMPDEST SWAP4 PUSH2 0x1DF DUP7 PUSH2 0x1AF9 JUMP JUMPDEST SWAP8 PUSH2 0x1E9 DUP8 PUSH2 0x1AF9 JUMP JUMPDEST SWAP3 PUSH2 0x1F3 DUP9 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 PUSH2 0x1FD DUP10 PUSH2 0x1AF9 JUMP JUMPDEST SWAP11 PUSH2 0x207 DUP11 PUSH2 0x1AF9 JUMP JUMPDEST SWAP10 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x46B JUMPI POP POP PUSH2 0x21B PUSH2 0x1B3F JUMP JUMPDEST DUP5 PUSH1 0xC SLOAD AND SWAP2 PUSH1 0x7 SLOAD DUP7 PUSH1 0xB SLOAD AND DUP5 EXTCODESIZE ISZERO PUSH2 0x41F JUMPI DUP15 MLOAD PUSH4 0x3C2FDDC5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xE0 DUP2 DUP15 ADD MSTORE DUP14 SWAP10 SWAP1 SWAP7 DUP8 SWAP6 DUP7 SWAP6 SWAP2 SWAP1 PUSH2 0x25A SWAP1 PUSH1 0xE4 DUP9 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST SWAP12 PUSH1 0x24 SWAP13 DUP3 DUP9 DUP3 SUB ADD PUSH1 0x24 DUP10 ADD MSTORE PUSH2 0x271 SWAP2 PUSH2 0x196F JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB ADD PUSH1 0x44 DUP8 ADD MSTORE PUSH2 0x284 SWAP2 PUSH2 0x1907 JUMP JUMPDEST SWAP3 PUSH1 0x64 DUP6 ADD MSTORE DUP1 PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC4 DUP4 ADD MSTORE SUB DUP2 GAS PUSH0 SWAP5 DUP6 SWAP2 CALL DUP1 ISZERO PUSH2 0x461 JUMPI PUSH2 0x434 JUMPI JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x9 SLOAD SWAP1 SWAP7 SWAP1 DUP4 AND SWAP3 DUP3 JUMPDEST DUP9 DUP2 LT PUSH2 0x329 JUMPI DUP13 DUP13 PUSH2 0x325 DUP14 DUP14 PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP5 MLOAD PUSH1 0x20 DUP2 MSTORE DUP1 PUSH2 0x301 CALLER SWAP5 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x196F JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x317 DUP4 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1907 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 PUSH2 0x334 DUP3 DUP13 PUSH2 0x1B2B JUMP JUMPDEST MLOAD AND DUP13 MLOAD DUP1 SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP8 DUP7 DUP4 ADD MSTORE DUP2 DUP10 PUSH1 0x20 SWAP5 DUP6 SWAP4 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x42A JUMPI DUP16 SWAP1 DUP11 SWAP5 SWAP4 DUP16 SWAP2 SWAP4 DUP14 SWAP5 DUP11 SWAP3 PUSH2 0x3E9 JUMPI JUMPDEST POP POP SWAP5 DUP5 SWAP2 PUSH1 0x1 SWAP7 PUSH2 0x37C DUP5 DUP8 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x387 DUP4 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MLOAD PUSH2 0x392 DUP5 DUP5 PUSH2 0x1B2B JUMP JUMPDEST MLOAD LT ISZERO PUSH2 0x3CC JUMPI POP PUSH2 0x3BE SWAP1 PUSH2 0x3B7 DUP4 PUSH2 0x3B0 DUP2 PUSH2 0x3C4 SWAP8 SWAP9 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP3 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST SWAP3 PUSH2 0x1B2B JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x2BC JUMP JUMPDEST SWAP4 PUSH2 0x3E3 SWAP4 POP PUSH2 0x3B7 DUP4 PUSH2 0x3B0 DUP2 PUSH2 0x3BE SWAP6 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x3C6 JUMP JUMPDEST SWAP5 POP SWAP6 POP POP POP POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x423 JUMPI JUMPDEST PUSH2 0x404 DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI DUP9 DUP15 DUP3 DUP11 DUP16 PUSH1 0x1 SWAP7 MLOAD SWAP2 SWAP7 DUP2 SWAP4 POP PUSH2 0x36A JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3FA JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x44E JUMPI DUP9 MSTORE PUSH0 DUP1 PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x475 DUP3 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD AND PUSH2 0x482 DUP3 DUP14 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH2 0x48E DUP3 PUSH2 0x19AB JUMP JUMPDEST POP ADD SLOAD PUSH2 0x49B DUP3 DUP6 PUSH2 0x1B2B JUMP JUMPDEST MSTORE DUP6 PUSH2 0x4A7 DUP3 DUP14 PUSH2 0x1B2B JUMP JUMPDEST MLOAD AND SWAP1 DUP14 MLOAD DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE DUP10 DUP14 DUP4 ADD MSTORE DUP2 PUSH1 0x24 PUSH1 0x20 SWAP4 DUP5 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x51A JUMPI PUSH0 SWAP2 PUSH2 0x4EB JUMPI JUMPDEST POP PUSH1 0x1 SWAP3 POP PUSH2 0x4E4 DUP3 DUP12 PUSH2 0x1B2B JUMP JUMPDEST MSTORE ADD PUSH2 0x20A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x513 JUMPI JUMPDEST PUSH2 0x501 DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH0 PUSH2 0x4D5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4F7 JUMP JUMPDEST DUP16 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x540 PUSH2 0x1E37 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH2 0x561 PUSH2 0x18DB JUMP JUMPDEST SWAP1 PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x41F JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x41F JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP1 PUSH2 0x590 DUP3 PUSH2 0x1A2D JUMP JUMPDEST SWAP2 PUSH2 0x59D DUP6 MLOAD SWAP4 DUP5 PUSH2 0x19F7 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP7 DUP9 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x41F JUMPI DUP8 DUP10 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x802 JUMPI POP POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP3 POP PUSH2 0x5E1 SWAP2 POP DUP5 AND CALLER EQ PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP2 PUSH2 0x5EE PUSH2 0x1B3F JUMP JUMPDEST SWAP1 PUSH1 0x6 SLOAD SWAP2 MLOAD DUP3 SUB PUSH2 0x7C0 JUMPI DUP2 ISZERO PUSH2 0x792 JUMPI SWAP1 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x759 JUMPI POP POP POP DUP2 ISZERO PUSH2 0x70C JUMPI DUP1 PUSH2 0x692 JUMPI POP SWAP5 JUMPDEST DUP6 ISZERO PUSH2 0x660 JUMPI POP POP DUP5 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP2 PUSH2 0x651 DUP7 DUP6 PUSH2 0x2008 JUMP JUMPDEST DUP5 MLOAD SWAP4 DUP7 DUP6 MSTORE AND SWAP3 LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x4D696E7420717479206973203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x69A PUSH2 0x1E62 JUMP JUMPDEST POP SWAP2 DUP3 ISZERO PUSH2 0x6BB JUMPI PUSH2 0x6B5 SWAP3 SWAP2 PUSH2 0x6B0 SWAP2 PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x1C97 JUMP JUMPDEST SWAP5 PUSH2 0x61C JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP11 SWAP1 MSTORE PUSH1 0x26 DUP2 DUP11 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP10 SWAP1 MSTORE PUSH1 0x22 DUP2 DUP10 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP4 PUSH2 0x789 PUSH1 0x1 SWAP2 PUSH2 0x783 DUP10 PUSH2 0x76F DUP10 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD AND PUSH2 0x77C DUP10 DUP8 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x213F JUMP JUMPDEST SWAP1 PUSH2 0x1E2A JUMP JUMPDEST SWAP5 ADD SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP12 SWAP1 MSTORE PUSH1 0x9 DUP2 DUP12 ADD MSTORE PUSH9 0x4E6F20617373657473 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP12 SWAP1 MSTORE PUSH1 0x17 DUP2 DUP12 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0x5BC JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x82D PUSH2 0x18DB JUMP JUMPDEST PUSH2 0x835 PUSH2 0x18F1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x41F JUMPI PUSH2 0x881 SWAP1 PUSH2 0x19AB JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x8C4 PUSH2 0x1E62 JUMP JUMPDEST DUP1 SWAP3 SWAP2 POP MLOAD DUP4 LT ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x20 DUP5 PUSH2 0x8DD DUP6 DUP6 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840C2E6E6CAE840D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0xB SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0xA SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x540 PUSH2 0x9AC PUSH2 0x18DB JUMP JUMPDEST PUSH2 0x1DF2 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x9DA PUSH2 0x9D0 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x207D JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0xAD6 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP2 EQ PUSH2 0xAC3 JUMPI DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xAA1 JUMPI POP PUSH1 0x1 EQ PUSH2 0xA48 JUMPI JUMPDEST PUSH2 0x325 DUP7 DUP7 PUSH2 0xA3E DUP3 DUP12 SUB DUP4 PUSH2 0x19F7 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x18B1 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xA8E JUMPI POP POP POP DUP3 PUSH2 0x325 SWAP5 PUSH2 0xA3E SWAP3 DUP3 ADD ADD SWAP5 PUSH0 PUSH2 0xA2D JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xA71 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xA3E DUP3 PUSH2 0x325 PUSH0 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x22 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xA0E JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0xAFC PUSH2 0x1D9C JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH2 0xB22 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH2 0xB3C CALLER DUP5 EQ PUSH2 0x1A45 JUMP JUMPDEST ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE DUP4 PUSH0 KECCAK256 SLOAD SWAP6 DUP7 ISZERO PUSH2 0xEEC JUMPI PUSH1 0x2 SLOAD SWAP7 DUP8 ISZERO PUSH2 0xEBA JUMPI PUSH1 0x6 SLOAD PUSH2 0xB63 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP9 PUSH1 0x1E DUP4 MUL DUP4 DUP2 DIV PUSH1 0x1E SUB PUSH2 0xEA7 JUMPI PUSH2 0x2710 PUSH2 0xB81 SWAP2 DIV DUP1 SWAP5 PUSH2 0x1AC5 JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xDEC JUMPI POP POP POP POP ADDRESS PUSH0 MSTORE PUSH0 DUP8 MSTORE DUP5 DUP7 PUSH0 KECCAK256 SLOAD LT PUSH2 0xDA9 JUMPI DUP2 DUP8 DUP6 PUSH1 0xC SLOAD AND DUP9 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x61D027B3 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xD9F JUMPI SWAP1 DUP9 SWAP2 PUSH0 SWAP2 PUSH2 0xD65 JUMPI JUMPDEST POP DUP8 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB DUP2 PUSH0 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xD5B JUMPI PUSH0 SWAP2 PUSH2 0xD25 JUMPI JUMPDEST POP ISZERO PUSH2 0xCEC JUMPI ADDRESS ISZERO PUSH2 0xCD6 JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP5 PUSH0 KECCAK256 SLOAD SWAP1 DUP5 DUP3 LT PUSH2 0xCAB JUMPI POP DUP4 SWAP3 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 PUSH2 0x325 SWAP7 SWAP6 DUP9 SWAP4 ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE SUB DUP7 PUSH0 KECCAK256 SSTORE DUP5 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 DUP7 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 ADDRESS SWAP3 LOG3 DUP6 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST DUP6 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP7 MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xD54 JUMPI JUMPDEST PUSH2 0xD3C DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x41F JUMPI PUSH0 PUSH2 0xC0C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xD32 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xD98 JUMPI JUMPDEST PUSH2 0xD7C DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0x41F JUMPI DUP8 SWAP1 PUSH2 0xBF8 PUSH2 0xBC9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xD72 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xE2E DUP12 DUP10 PUSH2 0xDFA DUP5 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD DUP14 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP12 DUP3 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE9D JUMPI DUP11 DUP6 SWAP4 SWAP3 DUP16 SWAP3 PUSH0 SWAP2 PUSH2 0xE63 JUMPI JUMPDEST POP PUSH2 0x3BE PUSH1 0x1 SWAP6 PUSH2 0x6B0 PUSH2 0xE5C SWAP5 DUP8 SWAP5 PUSH2 0x1AE6 JUMP JUMPDEST MSTORE ADD PUSH2 0xB84 JUMP JUMPDEST SWAP5 POP POP POP POP DUP12 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE96 JUMPI JUMPDEST PUSH2 0xE7D DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI SWAP1 MLOAD DUP4 SWAP2 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH2 0x3BE PUSH2 0xE47 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE73 JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH2 0xF48 PUSH2 0x1CB5 JUMP JUMPDEST DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP2 DUP4 ADD SWAP2 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 PUSH1 0x20 DUP1 SWAP6 ADD SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0xF80 JUMPI DUP6 DUP1 PUSH2 0x325 DUP8 DUP8 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1907 JUMP JUMPDEST DUP7 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP6 DUP2 ADD SWAP6 DUP8 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 ADD PUSH2 0xF65 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1004 PUSH2 0x18DB JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH2 0x1030 PUSH2 0x18DB JUMP JUMPDEST SWAP2 PUSH2 0x1039 PUSH2 0x18F1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x41F JUMPI PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x121E JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP4 DUP2 AND SWAP4 DUP4 AND SWAP3 DUP5 DUP5 EQ PUSH2 0x11DB JUMPI DUP8 ISZERO PUSH2 0x1198 JUMPI SWAP1 PUSH2 0x1087 DUP9 DUP3 PUSH2 0x108F SWAP5 PUSH2 0x1C14 JUMP JUMPDEST SWAP2 DUP3 SWAP2 PUSH2 0x1DF2 JUMP JUMPDEST LT PUSH2 0x115C JUMPI PUSH1 0x1E DUP2 MUL DUP2 DUP2 DIV PUSH1 0x1E EQ DUP3 ISZERO OR ISZERO PUSH2 0x1149 JUMPI SWAP1 PUSH2 0x2710 PUSH2 0x10B5 SWAP3 DIV SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST SWAP5 DUP6 ISZERO PUSH2 0x10F8 JUMPI POP PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP5 PUSH1 0x20 SWAP8 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP8 DUP10 DUP3 ADD MSTORE LOG4 PUSH1 0x1 PUSH1 0x5 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F2073656E64206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x11 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74204C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP10 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP10 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP7 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x6 SLOAD PUSH2 0x124B DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x126A JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x325 SWAP1 DUP3 ADD DUP7 PUSH2 0x196F JUMP JUMPDEST DUP1 PUSH2 0x1276 PUSH1 0x1 SWAP3 PUSH2 0x19AB JUMP JUMPDEST POP DUP3 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND PUSH2 0x128A DUP3 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MSTORE ADD PUSH2 0x124E JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1E DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x540 PUSH2 0x12C1 CALLDATASIZE PUSH2 0x193A JUMP JUMPDEST SWAP2 PUSH2 0x1C14 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH2 0x325 PUSH2 0x12E3 PUSH2 0x1E62 JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x41F JUMPI PUSH2 0x1326 CALLDATASIZE PUSH2 0x193A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE DUP9 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 MSTORE SWAP1 DUP8 SWAP1 KECCAK256 SLOAD SWAP3 SWAP6 SWAP4 SWAP5 SWAP4 SWAP1 DUP4 ADD PUSH2 0x1363 JUMPI JUMPDEST PUSH1 0x20 DUP8 PUSH2 0x9DA DUP9 DUP9 DUP9 PUSH2 0x207D JUMP JUMPDEST DUP6 DUP4 LT PUSH2 0x13CB JUMPI DUP2 ISZERO PUSH2 0x13B5 JUMPI CALLER ISZERO PUSH2 0x139F JUMPI POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 SWAP2 DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0x9DA PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x6 SLOAD PUSH2 0x1414 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1433 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x325 SWAP1 DUP3 ADD DUP7 PUSH2 0x1907 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x1440 DUP2 SWAP4 PUSH2 0x19AB JUMP JUMPDEST POP ADD SLOAD PUSH2 0x144D DUP3 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MSTORE ADD PUSH2 0x1417 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1470 PUSH2 0x1E62 JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH2 0x14B0 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x1529 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1513 JUMPI PUSH1 0x20 SWAP4 POP CALLER PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 DUP2 DUP7 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP2 DUP7 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH2 0x325 SWAP1 PUSH2 0x155C PUSH2 0x1B3F JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x41F JUMPI PUSH2 0x158C PUSH2 0x18DB JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x15A4 DUP5 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x15AF PUSH2 0x1C3 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0x15B7 PUSH2 0x1E62 JUMP JUMPDEST SWAP3 SWAP1 SWAP5 PUSH1 0x6 SLOAD SWAP6 PUSH2 0x15C7 DUP8 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP9 DUP2 LT PUSH2 0x1744 JUMPI POP POP POP DUP2 DUP4 PUSH0 SWAP3 PUSH0 JUMPDEST DUP10 DUP2 LT PUSH2 0x171D JUMPI POP PUSH1 0xB SLOAD AND DUP8 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP3 MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xD5B JUMPI PUSH0 SWAP4 PUSH2 0x16E4 JUMPI JUMPDEST POP PUSH1 0xFF PUSH8 0xDE0B6B3A7640000 SWAP4 AND DUP4 SUB SWAP3 DUP4 GT PUSH2 0x16D1 JUMPI POP PUSH2 0x1631 SWAP2 PUSH2 0x162B SWAP2 PUSH2 0x1AE6 JUMP JUMPDEST SWAP5 PUSH2 0x1AF9 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x167A JUMPI DUP1 PUSH2 0x164A PUSH1 0x1 SWAP3 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MLOAD PUSH2 0x1656 JUMPI JUMPDEST ADD PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x166A PUSH2 0x1663 DUP3 DUP8 PUSH2 0x1B2B JUMP JUMPDEST MLOAD DUP3 PUSH2 0x1EF6 JUMP JUMPDEST PUSH2 0x1674 DUP3 DUP9 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x1650 JUMP JUMPDEST POP PUSH2 0x325 SWAP2 SWAP3 PUSH2 0x168A DUP7 DUP9 PUSH2 0x2008 JUMP JUMPDEST PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP3 MLOAD DUP6 DUP2 MSTORE DUP1 PUSH2 0x16BF CALLER SWAP5 DUP9 DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST SUB SWAP1 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1907 JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP3 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1716 JUMPI JUMPDEST PUSH2 0x16FC DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x41F JUMPI SWAP2 PUSH0 PUSH2 0x1606 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x16F2 JUMP JUMPDEST SWAP4 PUSH2 0x1739 SWAP2 SWAP4 POP PUSH1 0x1 SWAP3 POP PUSH2 0x1732 DUP6 DUP10 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1E2A JUMP JUMPDEST SWAP3 ADD DUP4 SWAP2 DUP6 SWAP2 PUSH2 0x15DA JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH2 0x1760 PUSH1 0x1 PUSH2 0x1757 DUP2 SWAP6 PUSH2 0x19AB JUMP JUMPDEST POP ADD SLOAD DUP7 PUSH2 0x1AE6 JUMP JUMPDEST DIV DUP1 PUSH2 0x176C DUP4 DUP7 PUSH2 0x1B2B JUMP JUMPDEST MLOAD LT PUSH2 0x177A JUMPI JUMPDEST POP ADD PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x1788 SWAP1 PUSH2 0x3B7 DUP4 DUP7 PUSH2 0x1B2B JUMP JUMPDEST PUSH2 0x1792 DUP3 DUP11 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x1773 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x1884 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP3 EQ PUSH2 0x1871 JUMPI POP DUP4 DUP8 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1851 JUMPI POP PUSH1 0x1 EQ PUSH2 0x17F7 JUMPI JUMPDEST POP POP POP PUSH2 0xA3E DUP3 PUSH2 0x325 SWAP5 SUB DUP4 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x183E JUMPI POP POP POP DUP3 PUSH2 0x325 SWAP5 PUSH2 0xA3E SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0x17E5 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x1822 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xA3E DUP3 PUSH2 0x325 PUSH2 0x17E5 JUMP JUMPDEST PUSH1 0x22 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x17C5 JUMP JUMPDEST CALLVALUE PUSH2 0x41F JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x40 SWAP3 DUP2 DUP4 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x41F JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x41F JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1926 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x41F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x41F JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x41F JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x198E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x19E3 JUMPI PUSH1 0x6 PUSH0 MSTORE PUSH1 0x1 SHL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1A19 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A19 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1A4C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4F6E6C7920506572697068657279 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A89 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1AD2 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1AD2 JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x1B03 DUP3 PUSH2 0x1A2D JUMP JUMPDEST PUSH2 0x1B10 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x19F7 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1B21 PUSH1 0x1F NOT SWAP2 PUSH2 0x1A2D JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x19E3 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xFA67079 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH0 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1C09 JUMPI PUSH0 SWAP2 PUSH2 0x1B7B JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x1B8C DUP2 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x41F JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x41F JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x41F JUMPI DUP3 MLOAD PUSH2 0x1BC5 DUP2 PUSH2 0x1A2D JUMP JUMPDEST SWAP4 PUSH2 0x1BD3 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x19F7 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x41F JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1BFA JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1C09 JUMPI PUSH0 SWAP2 PUSH2 0x1C68 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1C8F JUMPI JUMPDEST DUP2 PUSH2 0x1C83 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1C76 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1CA1 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1CBD PUSH2 0x1E62 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x6 SLOAD SWAP1 PUSH2 0x1CCC DUP3 PUSH2 0x1A2D JUMP JUMPDEST SWAP2 PUSH2 0x1CDA PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x19F7 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x1CE9 DUP3 PUSH2 0x1A2D JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH2 0x1CF9 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1D0B JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x1D15 DUP2 DUP4 PUSH2 0x1B2B JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1AD2 JUMPI PUSH2 0x1D37 DUP6 PUSH1 0x1 SWAP4 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x1D40 DUP3 PUSH2 0x19AB JUMP JUMPDEST POP DUP4 ADD SLOAD DUP4 SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x1D75 JUMPI SWAP1 PUSH2 0x1D58 SWAP2 PUSH2 0x1AC5 JUMP JUMPDEST PUSH2 0x1D62 DUP4 DUP12 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x1D6D DUP3 DUP9 PUSH2 0x1B2B JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x1CFC JUMP JUMPDEST SWAP1 PUSH2 0x1D80 SWAP3 POP PUSH2 0x1AC5 JUMP JUMPDEST PUSH2 0x1D8A DUP3 DUP11 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x1D96 DUP3 DUP9 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0x1DA4 PUSH2 0x1CB5 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1DEB JUMPI PUSH2 0x1DB9 DUP2 DUP5 PUSH2 0x1B2B JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x1DD6 JUMPI JUMPDEST PUSH2 0x1DCE JUMPI PUSH1 0x1 ADD PUSH2 0x1DA6 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x1DE1 DUP2 DUP4 PUSH2 0x1B2B JUMP JUMPDEST MLOAD PUSH1 0x7 SLOAD LT PUSH2 0x1DC2 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x44 DUP2 ADD PUSH2 0x1C53 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1AD2 JUMPI JUMP JUMPDEST PUSH2 0x1E3F PUSH2 0x1E62 JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x1E5C JUMPI PUSH2 0x6B0 PUSH2 0x1E59 SWAP3 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH0 PUSH2 0x1E70 DUP4 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP4 PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x1E93 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x1ED2 PUSH1 0x1 SWAP2 DUP4 PUSH2 0x1EA7 DUP9 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD AND PUSH2 0x1EB3 DUP2 PUSH2 0x1DF2 JUMP JUMPDEST SWAP1 DUP7 DUP2 SUB PUSH2 0x1EDC JUMPI POP PUSH2 0x1EC6 DUP9 DUP12 PUSH2 0x1B2B JUMP JUMPDEST MSTORE JUMPDEST PUSH2 0x1732 DUP8 DUP11 PUSH2 0x1B2B JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 PUSH2 0x1EE6 SWAP2 PUSH2 0x213F JUMP JUMPDEST PUSH2 0x1EF0 DUP9 DUP12 PUSH2 0x1B2B JUMP JUMPDEST MSTORE PUSH2 0x1EC8 JUMP JUMPDEST PUSH2 0x1EFF DUP2 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 SWAP2 DUP3 AND DUP4 EQ PUSH2 0x2002 JUMPI SWAP2 DUP2 PUSH2 0x1F6F SWAP5 SWAP3 PUSH2 0x1F2C PUSH1 0x20 SWAP6 PUSH2 0x19AB JUMP JUMPDEST POP SLOAD AND SWAP1 PUSH1 0xC SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0x248391FF PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1C09 JUMPI PUSH0 SWAP2 PUSH2 0x1FD0 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x1F8B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1FFA JUMPI JUMPDEST DUP2 PUSH2 0x1FEB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x19F7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x41F JUMPI MLOAD PUSH0 PUSH2 0x1F81 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1FDE JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2065 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x2049 PUSH0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2127 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2065 JUMPI DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x20F5 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD PUSH2 0x1C53 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR BLOBBASEFEE LOG2 DUP3 0x21 BALANCE LT MOD PUSH11 0x9558CA1CAE88E104122E88 0xC8 0xCC EXP POP 0xDC SDIV LOG3 0xC6 TLOAD 0xC0 STATICCALL 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xB4 0xD5 0xB3 PUSH8 0x7983DFBADD67A4E1 CODESIZE 0xD8 MSTORE 0xDF BLOBHASH 0xA8 SWAP2 0xC8 0x1E RETURNDATASIZE 0xE5 0xE 0xD5 BLOBBASEFEE MCOPY 0xB2 CALLDATASIZE PUSH9 0x5C64736F6C63430008 NOT STOP CALLER ","sourceMap":"1731:4718:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;2357:1:0;1731:4718:16;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;:::-;1731:4718:16;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;:::i;:::-;2303:62:0;;:::i;:::-;6195:25:16;1731:4718;;-1:-1:-1;;;;;;1731:4718:16;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;:::i;:::-;8837:64:1;;1731:4718:16;;;;;;;;4301:16:1;1731:4718:16;;;;4726:16:1;;:34;;;;1731:4718:16;4805:1:1;4790:16;:50;;;;1731:4718:16;4855:13:1;:30;;;;1731:4718:16;4851:91:1;;;-1:-1:-1;;;1731:4718:16;;4805:1:1;1731:4718:16;;;;4979:67:1;;1731:4718:16;6893:76:1;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;6961:1;2176:10:16;6961:1:1;:::i;:::-;1731:4718:16;;;;;;;;;2194:24;1731:4718;;;2194:24;1731:4718;5066:101:1;;1731:4718:16;5066:101:1;1731:4718:16;;-1:-1:-1;;;;1731:4718:16;;;;-1:-1:-1;1731:4718:16;;5142:14:1;;1731:4718:16;;5142:14:1;1731:4718:16;4979:67:1;-1:-1:-1;;1731:4718:16;;;;;4979:67:1;;;4851:91;1731:4718:16;;-1:-1:-1;;;4908:23:1;;;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:1;;4726:34;;;-1:-1:-1;4726:34:1;;1731:4718:16;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;:::i;:::-;;;;5338:30;;;;:::i;:::-;5375:17;1731:4718;;-1:-1:-1;;;;;1731:4718:16;;;5406:13;1731:4718;;5421:19;;;;;;5401:411;5846:20;;;;;;;:::i;:::-;5878:13;1731:4718;5893:9;;;;;;1731:4718;;;;;;;;;;;;;;:::i;5904:3::-;5930:8;;;1731:4718;5930:8;;;:::i;:::-;1731:4718;;5918:20;;;;:::i;:::-;1731:4718;;5878:13;;5442:3;5489:11;;;;;;;;;;:::i;:::-;1731:4718;;;;;;;;;;;;;;5536:16;;1731:4718;5536:16;;;;;;;;;;;1731:4718;5536:16;;;5442:3;5568:13;1731:4718;5602:3;1731:4718;;5583:17;;;;;5622:9;;;;;;:::i;:::-;1731:4718;;5622:18;5618:115;;1731:4718;;5568:13;;5618:115;5655:28;;;;;;;;;;;;:::i;:::-;1731:4718;-1:-1:-1;;1731:4718:16;;;;;;5716:5;5563:179;1731:4718;;5756:21;;5752:53;;1731:4718;;5406:13;;;;5752:53;5790:5;;1731:4718;;;;;;;;;;;;5583:17;;;;;;;;;;;;5536:16;;;;;;;1731:4718;5536:16;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;1731:4718;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;8837:64:1;1731:4718:16;;;;;;;;;;6431:44:1;;;;;1731:4718:16;6427:105:1;;;;2328:24:16;1731:4718;;-1:-1:-1;;;;;;1731:4718:16;-1:-1:-1;;;;;1731:4718:16;;;;;-1:-1:-1;;1731:4718:16;;;;-1:-1:-1;;;1731:4718:16;-1:-1:-1;;;;1731:4718:16;;;;;;;;6656:20:1;;1731:4718:16;;6656:20:1;1731:4718:16;6427:105:1;1731:4718:16;;-1:-1:-1;;;6498:23:1;;;6431:44;1731:4718:16;;6450:25:1;;;-1:-1:-1;6431:44:1;;;;1731:4718:16;;;;;;;-1:-1:-1;;1731:4718:16;;;;-1:-1:-1;;;;;;;;;;;1731:4718:16;;;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;1948:24;1731:4718;;;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;2303:62:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1731:4718:16;;-1:-1:-1;;;;;;1731:4718:16;;;;;;;-1:-1:-1;;;;;1731:4718:16;3975:40:0;1731:4718:16;;3975:40:0;1731:4718:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;5111:6:2;-1:-1:-1;;;;;1731:4718:16;5102:4:2;5094:23;5090:145;;1731:4718:16;;;1327:66:6;1731:4718:16;;;5090:145:2;1731:4718:16;-1:-1:-1;;;5195:29:2;;;1731:4718:16;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4688:6:2;1731:4718:16;;4679:4:2;4671:23;;;:120;;;;1731:4718:16;4654:251:2;;;2303:62:0;;:::i;:::-;1731:4718:16;;;;;;;;6151:52:2;;;;;;;;;1731:4718:16;;6151:52:2;;;1731:4718:16;-1:-1:-1;6147:437:2;;1731:4718:16;;;;;;2320:47:6;;;;6513:60:2;;;;1731:4718:16;6513:60:2;6147:437;1327:66:6;;;;;;;;6245:40:2;;;;6241:120;;2263:29:6;;;:34;2259:119;;-1:-1:-1;1731:4718:16;;-1:-1:-1;;;;;;1731:4718:16;;;;;;;;2922:27:6;-1:-1:-1;;2922:27:6;1731:4718:16;;2964:15:6;:11;;4255:25:11;;1731:4718:16;4297:55:11;4255:25;;;;;;;;;1731:4718:16;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;4297:55:11;:::i;1731:4718:16:-;-1:-1:-1;1731:4718:16;;-1:-1:-1;4297:55:11;:::i;2960:148:6:-;6648:9;;;;;;;;6644:70;;1731:4718:16;6644:70:6;-1:-1:-1;;;6684:19:6;;;2259:119;1731:4718:16;;-1:-1:-1;;;2320:47:6;;;;;1731:4718:16;;;2320:47:6;6241:120:2;1731:4718:16;;-1:-1:-1;;;6312:34:2;;;;;1731:4718:16;;;;6312:34:2;6151:52;;;;;;;;;;;;;;;;;:::i;:::-;;;1731:4718:16;;;;;6151:52:2;;;;;;;;;4654:251;1731:4718:16;;-1:-1:-1;;;4865:29:2;;1731:4718:16;;4865:29:2;4671:120;1731:4718:16;;;1327:66:6;1731:4718:16;;4749:42:2;;4671:120;;;1731:4718:16;;;;;;-1:-1:-1;;1731:4718:16;;;;;-1:-1:-1;;;;;1731:4718:16;;:::i;:::-;;;;;;;;;;;4632:16;;;;;;;;;;1731:4718;4632:16;1731:4718;4632:16;;;1731:4718;;;;;;;;;;;;;;:::i;4632:16::-;;;;;;;1731:4718;4632:16;;;;;;:::i;:::-;;;;;;1731:4718;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;;;1819:25;;;;;;1731:4718;1819:25;;:::i;:::-;1731:4718;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2956:9:16;1731:4718;-1:-1:-1;;;;;1731:4718:16;;;;-1:-1:-1;1731:4718:16;;;;-1:-1:-1;2956:23:16;;1731:4718;;;;;;;3016:17;1731:4718;;;;;;;3085:31;1731:4718;;;3169:13;1731:4718;;;3164:227;1731:4718;;;3439:10;1731:4718;;;;;3422:65;;;;;;;;;;;;;;;;;;;;;;;;;1731:4718;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:4718:16;;;;;;-1:-1:-1;;1731:4718:16;;;3422:65;;-1:-1:-1;3422:65:16;;;;;1731:4718;;;;;-1:-1:-1;;;1731:4718:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2956:9;1731:4718;;;;;;;;;;;;;3581:13;1731:4718;3576:226;1731:4718;;;3576:226;1731:4718;;;;3815:44;1731:4718;;;3439:10;1731:4718;;;;;;;;;;;;;;;:::i;:::-;;;;;;3815:44;;;1731:4718;;;;;3615:3;1731:4718;;;;;;;;3596:17;;;;;1731:4718;;;;;;;;;3634:17;;;;;1731:4718;;;3629:166;3615:3;;1731:4718;3581:13;;;;;;;3672:3;1731:4718;;;;;;3653:17;;;;;3696:9;;;;;;;:::i;:::-;1731:4718;;;;;;;;;;3707:9;;;;;:::i;:::-;1731:4718;;;;;;;;;;;;;;;;;;;;;3750:9;;;;;:::i;:::-;1731:4718;;;;;;;;;;3761:9;;;;;:::i;:::-;1731:4718;;;;;;;;;;;;;;;;;;3634:17;;;;;;3653;;;;;;;1731:4718;;;;;;;;;;;;3596:17;;;;;;1731:4718;;;;;;;;;;;;3422:65;1731:4718;;;;;;;;;;;;;;;;-1:-1:-1;1731:4718:16;;;;;;;;;;;;;3422:65;1731:4718;;;;;;;;;;;3203:3;1731:4718;;3184:17;;;;;1731:4718;;;;;;;;3222:17;;;;;;;;;1731:4718;;;3217:167;3203:3;;;;;;1731:4718;3169:13;;;;3260:3;1731:4718;;;;;;;;;3241:17;;;;;3300:9;;3311;3300;;;;;;:::i;:::-;1731:4718;;;;;;;;;3311:9;;:::i;:::-;1731:4718;;;;;;;;;;;;;3260:3;;3222:17;;1731:4718;;3222:17;;;;3260:3;3222:17;;1731:4718;;;-1:-1:-1;;;1731:4718:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:4718:16;;;;;;;3241:17;;;;;;;;;;;1731:4718;;;;;;;;;;;;3184:17;;;1731:4718;;;-1:-1:-1;;;1731:4718:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:4718:16;;;;;;;;;;;;;-1:-1:-1;;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;1918:25;1731:4718;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;-1:-1:-1;;;;;1731:4718:16;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1731:4718:16;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:4718:16;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:4718:16;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1731:4718:16;;;;;;;;;;;;;;;;6232:214;6319:1;1731:4718;6319:1;1731:4718;6302:120;6322:19;;;;;;6428:12;;;6319:1;6232:214;:::o;6343:3::-;6361:11;;;:::i;:::-;1731:4718;;;;;;;;-1:-1:-1;;;;;1731:4718:16;;;;;;6361:20;6357:58;;1731:4718;;6307:13;;6357:58;6394:11;;;1731:4718;6394:11;:::o;1731:4718::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;3405:215:0:-;-1:-1:-1;;;;;1731:4718:16;;;;3489:22:0;;3485:91;;-1:-1:-1;;;;;;;;;;;1731:4718:16;;-1:-1:-1;;;;;;1731:4718:16;;;;;;;;3975:40:0;-1:-1:-1;;3975:40:0;3405:215::o;3485:91::-;1731:4718:16;;-1:-1:-1;;;3534:31:0;;3509:1;3534:31;;;1731:4718:16;;;3534:31:0;2658:162;-1:-1:-1;;;;;;;;;;;1731:4718:16;-1:-1:-1;;;;;1731:4718:16;966:10:3;2717:23:0;2713:101;;2658:162::o;2713:101::-;1731:4718:16;;-1:-1:-1;;;2763:40:0;;966:10:3;2763:40:0;;;1731:4718:16;;;2763:40:0;7084:141:1;1731:4718:16;8837:64:1;1731:4718:16;;;;7150:18:1;7146:73;;7084:141::o;7146:73::-;1731:4718:16;;-1:-1:-1;;;7191:17:1;;;;;4625:582:11;;4797:8;;-1:-1:-1;1731:4718:16;;5874:21:11;:17;;6046:142;;;;;;5870:383;1731:4718:16;;-1:-1:-1;;;6225:17:11;;;;;4793:408;1731:4718:16;;5045:22:11;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;1731:4718:16;;-1:-1:-1;;;5121:24:11;;-1:-1:-1;;;;;1731:4718:16;;;5121:24:11;;;1731:4718:16;;;5121:24:11;5045:49;5071:18;;;:23;5045:49;"},"gasEstimates":{"creation":{"codeDepositCost":"3236000","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"657","allPools(uint256)":"6662","changePeriphery(address)":"infinite","createPool(address[],uint256[],uint256)":"infinite","getAllPools()":"infinite","getPool(address,address)":"2732","getPoolAssets(address)":"infinite","getPoolByAssets(address,address)":"2600","getPoolsByAsset(address)":"infinite","getPoolsCount()":"2596","initialize(address)":"infinite","owner()":"infinite","periphery()":"2486","poolExist(address)":"infinite","proxiableUUID()":"infinite","rebalancer()":"2272","reinitialize(address,uint64)":"50171","renounceOwnership()":"infinite","transferOwnership(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","allPools(uint256)":"41d1de97","changePeriphery(address)":"e9b31cff","createPool(address[],uint256[],uint256)":"3069873b","getAllPools()":"d88ff1f4","getPool(address,address)":"531aa03e","getPoolAssets(address)":"4276b97b","getPoolByAssets(address,address)":"2d5e94a7","getPoolsByAsset(address)":"b4340e6a","getPoolsCount()":"b4ac6860","initialize(address)":"c4d66de8","owner()":"8da5cb5b","periphery()":"77aace1a","poolExist(address)":"89345efb","proxiableUUID()":"52d1902d","rebalancer()":"01d22ccd","reinitialize(address,uint64)":"8f2248bc","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rebalancer\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newPeriphery\",\"type\":\"address\"}],\"name\":\"changePeriphery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"trigger\",\"type\":\"uint256\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"getPoolAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"}],\"name\":\"getPoolByAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsByAsset\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periphery\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"poolExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"changePeriphery(address)\":{\"details\":\"Changes the address of the periphery contract.\",\"params\":{\"_newPeriphery\":\"The new address of the periphery contract.\"}},\"createPool(address[],uint256[],uint256)\":{\"details\":\"Creates a new BaluniV1Pool contract and registers it in the factory.\",\"params\":{\"assets\":\"The array of asset addresses to be included in the pool.\",\"trigger\":\"The trigger value for rebalancing the pool.\",\"weights\":\"The array of weights corresponding to each asset in the pool.\"},\"returns\":{\"_0\":\"The address of the newly created pool.\"}},\"getAllPools()\":{\"details\":\"Retrieves all the pools created by the factory.\",\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getPoolAssets(address)\":{\"details\":\"Retrieves the assets of a specific pool.\",\"params\":{\"poolAddress\":\"The address of the pool.\"},\"returns\":{\"_0\":\"An array of asset addresses.\"}},\"getPoolByAssets(address,address)\":{\"details\":\"Retrieves the pool address based on the given assets.\",\"params\":{\"asset1\":\"The address of the first asset.\",\"asset2\":\"The address of the second asset.\"},\"returns\":{\"_0\":\"The address of the pool.\"}},\"getPoolsByAsset(address)\":{\"details\":\"Returns an array of pool addresses that contain the specified token.\",\"params\":{\"token\":\"The address of the token to search for.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getPoolsCount()\":{\"details\":\"Retrieves the number of pools created by the factory.\",\"returns\":{\"_0\":\"The count of pools.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1PoolFactory.sol\":\"BaluniV1PoolFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/BaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './interfaces/IBaluniV1Rebalancer.sol';\\r\\nimport './interfaces/IBaluniV1Router.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\\r\\n\\r\\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\\r\\n\\r\\ncontract BaluniV1Pool is ERC20, ReentrancyGuard {\\r\\n    AssetInfo[] public assetInfos;\\r\\n    uint256 public trigger;\\r\\n    uint256 public ONE;\\r\\n    address public periphery;\\r\\n    address public factory;\\r\\n    uint256 public constant SWAP_FEE_BPS = 30; // 0.3%\\r\\n    address public baseAsset;\\r\\n    address public rebalancer;\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n    }\\r\\n\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes a new instance of the BaluniV1Pool contract.\\r\\n     * @param _rebalancer The address of the rebalancer contract.\\r\\n     * @param _assets An array of addresses representing the assets in the pool.\\r\\n     * @param _weights An array of weights corresponding to the assets in the pool.\\r\\n     * @param _trigger The trigger value for rebalancing the pool.\\r\\n     * @param _periphery The address of the periphery contract.\\r\\n     */\\r\\n    constructor(\\r\\n        address _rebalancer,\\r\\n        address[] memory _assets,\\r\\n        uint256[] memory _weights,\\r\\n        uint256 _trigger,\\r\\n        address _periphery\\r\\n    ) ERC20('Baluni LP', 'BALUNI-LP') {\\r\\n        periphery = _periphery;\\r\\n        factory = msg.sender;\\r\\n        rebalancer = _rebalancer;\\r\\n        ONE = 1e18;\\r\\n\\r\\n        initializeAssets(_assets, _weights);\\r\\n\\r\\n        trigger = _trigger;\\r\\n\\r\\n        baseAsset = IBaluniV1Rebalancer(_rebalancer).USDC();\\r\\n        //baseAsset = IBaluniV1Rebalancer(_rebalancer).WNATIVE();\\r\\n\\r\\n        // Ensure the sum of weights equals 10000\\r\\n        uint256 totalWeight = 0;\\r\\n        for (uint256 i = 0; i < _weights.length; i++) {\\r\\n            totalWeight += _weights[i];\\r\\n        }\\r\\n        require(totalWeight == 10000, 'Invalid weights');\\r\\n    }\\r\\n\\r\\n    modifier onlyPeriphery() {\\r\\n        require(msg.sender == periphery, 'Only Periphery');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the assets and their weights for the pool.\\r\\n     * @param _assets The array of asset addresses.\\r\\n     * @param _weights The array of weights corresponding to each asset.\\r\\n     */\\r\\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal {\\r\\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n        for (uint256 i = 0; i < _assets.length; i++) {\\r\\n            require(_assets[i] != address(0), 'Invalid asset address');\\r\\n            require(_weights[i] > 0, 'Invalid weight');\\r\\n\\r\\n            assetInfos.push(AssetInfo({asset: _assets[i], weight: _weights[i]}));\\r\\n\\r\\n            IERC20 asset = IERC20(_assets[i]);\\r\\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\\r\\n                asset.approve(address(rebalancer), type(uint256).max);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\\r\\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\\r\\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\\r\\n     * @param receiver The address to receive the minted liquidity tokens.\\r\\n     */\\r\\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation();\\r\\n\\r\\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations);\\r\\n\\r\\n        // Calculate total added liquidity before minting\\r\\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\\r\\n\\r\\n        uint baseDecimal = IERC20Metadata(baseAsset).decimals();\\r\\n\\r\\n        totalAddedLiquidity *= 10 ** 18 - baseDecimal;\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\\r\\n            if (amountsToAdd[i] > 0) {\\r\\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _mint(receiver, totalAddedLiquidity);\\r\\n\\r\\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - `fromToken` and `toToken` must be different tokens.\\r\\n     * - `amount` must be greater than zero.\\r\\n     * - Sufficient liquidity of `toToken` must be available in the contract.\\r\\n     *\\r\\n     * Emits a `Swap` event with the details of the swap.\\r\\n     *\\r\\n     * Updates the reserves after the swap.\\r\\n     *\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of `fromToken` to swap.\\r\\n     * @param receiver The address to receive the swapped tokens.\\r\\n     * @return toSend The amount of `toToken` received after the swap.\\r\\n     */\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external nonReentrant returns (uint256 toSend) {\\r\\n        require(fromToken != toToken, 'Cannot swap the same token');\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n        uint256 receivedAmount = getAmountOut(fromToken, toToken, amount);\\r\\n        require(getAssetReserve(toToken) >= receivedAmount, 'Insufficient Liquidity');\\r\\n\\r\\n        uint256 fee = (receivedAmount * SWAP_FEE_BPS) / 10000;\\r\\n        toSend = receivedAmount - fee;\\r\\n\\r\\n        require(toSend > 0, 'Amount to send must be greater than 0');\\r\\n\\r\\n        emit Swap(receiver, fromToken, toToken, amount, toSend);\\r\\n\\r\\n        return toSend;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Mints new tokens and adds them to the specified address.\\r\\n     * @param to The address to which the new tokens will be minted.\\r\\n     * @return The amount of tokens minted.\\r\\n     */\\r\\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        uint256 totalValue = 0;\\r\\n        uint256[] memory _reserves = getReserves();\\r\\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\\r\\n        require(assetInfos.length > 0, 'No assets');\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n\\r\\n            uint256 valuation = _convertTokenToBase(asset, amounts[i]);\\r\\n            totalValue += valuation;\\r\\n        }\\r\\n\\r\\n        require(totalValue > 0, 'Total value must be greater than 0');\\r\\n\\r\\n        uint256 toMint;\\r\\n\\r\\n        if (totalSupply == 0) {\\r\\n            toMint = totalValue;\\r\\n        } else {\\r\\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\\r\\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\\r\\n            toMint = (((totalValue) * totalSupply) / totalLiquidity);\\r\\n        }\\r\\n        require(toMint != 0, 'Mint qty is 0');\\r\\n\\r\\n        _mint(to, toMint);\\r\\n        emit Mint(to, toMint);\\r\\n\\r\\n        return toMint;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\\r\\n     * @param to The address to transfer the underlying assets to.\\r\\n     * @notice This function can only be called by the periphery contract.\\r\\n     * @notice The pool tokens must have a balance greater than 0.\\r\\n     * @notice The total supply of pool tokens must be greater than 0.\\r\\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\\r\\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\\r\\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\\r\\n     * @notice If any transfer fails, the function reverts the entire operation.\\r\\n     * @notice After the transfers, the function updates the reserves of the pool.\\r\\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\\r\\n     */\\r\\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\\r\\n        uint256 share = balanceOf(address(this));\\r\\n        require(share > 0, 'Share must be greater than 0');\\r\\n\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        require(totalSupply > 0, 'No liquidity');\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n        uint256 fee = (share * SWAP_FEE_BPS) / 10000;\\r\\n        uint256 shareAfterFee = share - fee;\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\\r\\n                address(this),\\r\\n                assetInfos[i].asset\\r\\n            );\\r\\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\\r\\n        }\\r\\n\\r\\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient BALUNI liquidity');\\r\\n\\r\\n        bool feeTransferSuccess = IERC20(address(this)).transfer(IBaluniV1Rebalancer(rebalancer).treasury(), fee);\\r\\n        require(feeTransferSuccess, 'Fee transfer failed');\\r\\n\\r\\n        _burn(address(this), shareAfterFee);\\r\\n\\r\\n        emit Burn(to, shareAfterFee);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\\r\\n     * @param fromToken The address of the token being swapped from.\\r\\n     * @param toToken The address of the token being swapped to.\\r\\n     * @param amount The amount of `fromToken` being swapped.\\r\\n     * @return The amount of `toToken` that will be received.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\\r\\n        return IBaluniV1Rebalancer(rebalancer).convert(fromToken, toToken, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance\\r\\n     */\\r\\n    function performRebalanceIfNeeded()\\r\\n        external\\r\\n        onlyPeriphery\\r\\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove)\\r\\n    {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        return _performRebalanceIfNeeded();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\\r\\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\\r\\n     */\\r\\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\\r\\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n\\r\\n        directions = new bool[](numAssets);\\r\\n        deviations = new uint256[](numAssets);\\r\\n\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\\r\\n            uint256 targetWeight = assetInfos[i].weight;\\r\\n\\r\\n            if (currentWeight > targetWeight) {\\r\\n                deviations[i] = currentWeight - targetWeight;\\r\\n                directions[i] = true;\\r\\n            } else {\\r\\n                deviations[i] = targetWeight - currentWeight;\\r\\n                directions[i] = false;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return (directions, deviations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the liquidity of a specific asset in the pool.\\r\\n     * @param assetIndex The index of the asset.\\r\\n     * @return The liquidity of the asset.\\r\\n     */\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\\r\\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\\r\\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\\r\\n        return usdValuations[assetIndex];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\\r\\n     * @return totalVal The total valuation of the pool.\\r\\n     * @return valuations An array of individual valuations.\\r\\n     */\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\\r\\n        (totalVal, valuations) = _computeTotalValuation();\\r\\n        return (totalVal, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the total liquidity of the pool.\\r\\n     * @return The total liquidity of the pool.\\r\\n     */\\r\\n    function liquidity() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        return totalVal;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the unit price of the pool.\\r\\n     * @return The unit price of the pool.\\r\\n     */\\r\\n    function unitPrice() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        if (totalSupply == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        return (totalVal * ONE) / totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of reserves for each asset in the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves() public view returns (uint256[] memory) {\\r\\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve amount of the specified asset.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve amount of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address asset) public view returns (uint256) {\\r\\n        return IBaluniV1PoolPeriphery(periphery).getAssetReserve(address(this), asset);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of assets in the pool.\\r\\n     * @return An array of addresses representing the assets.\\r\\n     */\\r\\n    function getAssets() external view returns (address[] memory) {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n        }\\r\\n        return assets;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of weights associated with the assets in the pool.\\r\\n     * @return An array of uint256 values representing the weights.\\r\\n     */\\r\\n    function getWeights() external view returns (uint256[] memory) {\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n        }\\r\\n        return weights;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the assets in the pool.\\r\\n     * @return totalValuation The total valuation of the assets.\\r\\n     * @return valuations An array of valuations for each asset in the pool.\\r\\n     */\\r\\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n        valuations = new uint256[](numAssets);\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n            uint256 assetReserve = getAssetReserve(address(asset));\\r\\n\\r\\n            if ((address(asset) == baseAsset)) {\\r\\n                valuations[i] = assetReserve;\\r\\n            } else {\\r\\n                uint256 valuation = _convertTokenToBase(address(asset), assetReserve);\\r\\n                valuations[i] = valuation;\\r\\n            }\\r\\n            totalValuation += valuations[i];\\r\\n        }\\r\\n        return (totalValuation, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed.\\r\\n     * This function retrieves the assets and weights from the `assetInfos` array,\\r\\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\\r\\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\\r\\n     * @notice This function should only be called internally.\\r\\n     */\\r\\n    function _performRebalanceIfNeeded() internal returns (uint256[] memory, uint256[] memory) {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n        }\\r\\n\\r\\n        uint256[] memory balances = getReserves();\\r\\n\\r\\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n\\r\\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\\r\\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\\r\\n            } else {\\r\\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        emit RebalancePerformed(msg.sender, assets);\\r\\n\\r\\n        return (amountsToAdd, amountsToRemove);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the total added liquidity based on the amounts to add.\\r\\n     * @param amountsToAdd An array of amounts to add for each asset.\\r\\n     * @return totalAddedLiquidity The total added liquidity.\\r\\n     */\\r\\n    function _calculateTotalAddedLiquidity(\\r\\n        uint256[] memory amountsToAdd\\r\\n    ) internal view returns (uint256 totalAddedLiquidity) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            totalAddedLiquidity += amountsToAdd[i];\\r\\n        }\\r\\n        return totalAddedLiquidity;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\\r\\n     * @param totalValuation The total valuation of the pool.\\r\\n     * @param valuations An array of current valuations for each asset.\\r\\n     * @return amountsToAdd An array of amounts to add to each asset.\\r\\n     */\\r\\n    function _calculateAmountsToAdd(\\r\\n        uint256 totalValuation,\\r\\n        uint256[] memory valuations\\r\\n    ) internal view returns (uint256[] memory amountsToAdd) {\\r\\n        amountsToAdd = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\\r\\n            if (valuations[i] < targetValuation) {\\r\\n                amountsToAdd[i] = targetValuation - valuations[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return amountsToAdd;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\\r\\n     * @param index The index of the asset in the assetInfos array.\\r\\n     * @param amountToAdd The amount of native tokens to add as liquidity.\\r\\n     */\\r\\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\\r\\n        if (assetInfos[index].asset == baseAsset) return amountToAdd;\\r\\n\\r\\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\\r\\n        require(tokenAmount > 0, 'Invalid token amount to add');\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified amount of native token to the corresponding token amount.\\r\\n     * @param toToken The address of the native token to convert from.\\r\\n     * @param amount The amount of native token to convert.\\r\\n     * @return The corresponding token amount.\\r\\n     */\\r\\n    function _convertBaseToToken(address toToken, uint256 amount) internal view returns (uint256) {\\r\\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(baseAsset, toToken, amount);\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the maximum of two uint8 values.\\r\\n     * @param a The first uint8 value.\\r\\n     * @param b The second uint8 value.\\r\\n     * @return The maximum value between a and b.\\r\\n     */\\r\\n    function max(uint8 a, uint8 b) private pure returns (uint8) {\\r\\n        return a >= b ? a : b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the minimum of two uint8 values.\\r\\n     * @param a The first uint8 value.\\r\\n     * @param b The second uint8 value.\\r\\n     * @return The minimum value between a and b.\\r\\n     */\\r\\n    function min(uint8 a, uint8 b) private pure returns (uint8) {\\r\\n        return a <= b ? a : b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified token to the native token using the rebalancer contract.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param amount The amount of tokens to convert.\\r\\n     * @return scaledAmount The converted amount of tokens.\\r\\n     */\\r\\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 scaledAmount) {\\r\\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(fromToken, baseAsset, amount);\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    // return true if one of the deviation overcome the trigger\\r\\n    /**\\r\\n     * @dev Checks if rebalancing is needed for the pool.\\r\\n     * @return A boolean value indicating whether rebalancing is needed or not.\\r\\n     */\\r\\n    function isRebalanceNeeded() public view returns (bool) {\\r\\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\\r\\n        for (uint256 i = 0; i < deviations.length; i++) {\\r\\n            if (directions[i] && deviations[i] > trigger) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function _getTargetWeight(address _token) internal view returns (uint256) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            if (assetInfos[i].asset == _token) {\\r\\n                return assetInfos[i].weight;\\r\\n            }\\r\\n        }\\r\\n        return 0;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x09f746eb5080ee915eabf3249e2fc5f1c0e10b9101b1875cb0d20b86a90e5f7c\",\"license\":\"GNU AGPLv3\"},\"contracts/BaluniV1PoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './BaluniV1Pool.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\n\\r\\ncontract BaluniV1PoolFactory is Initializable, UUPSUpgradeable, OwnableUpgradeable {\\r\\n  address[] public allPools;\\r\\n  mapping(address => mapping(address => address)) public getPool;\\r\\n\\r\\n  address public rebalancer;\\r\\n  address public periphery;\\r\\n\\r\\n  event PoolCreated(address indexed pool, address[] assets, address rebalancer);\\r\\n\\r\\n  function initialize(address _rebalancer) public initializer {\\r\\n    __UUPSUpgradeable_init();\\r\\n    __Ownable_init(msg.sender);\\r\\n    rebalancer = _rebalancer;\\r\\n  }\\r\\n\\r\\n  function reinitialize(address _rebalancer, uint64 _version) public reinitializer(_version) {\\r\\n    rebalancer = _rebalancer;\\r\\n  }\\r\\n\\r\\n  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n  /**\\r\\n   * @dev Creates a new BaluniV1Pool contract and registers it in the factory.\\r\\n   * @param assets The array of asset addresses to be included in the pool.\\r\\n   * @param weights The array of weights corresponding to each asset in the pool.\\r\\n   * @param trigger The trigger value for rebalancing the pool.\\r\\n   * @return The address of the newly created pool.\\r\\n   */\\r\\n  function createPool(address[] memory assets, uint256[] memory weights, uint256 trigger) external returns (address) {\\r\\n    require(periphery != address(0), 'Periphery not set');\\r\\n    require(assets.length > 1, 'At least two assets are required');\\r\\n    require(assets.length == weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n    for (uint256 i = 0; i < assets.length; i++) {\\r\\n      for (uint256 j = i + 1; j < assets.length; j++) {\\r\\n        require(address(getPool[assets[i]][assets[j]]) == address(0), 'Pool already exists for this pair');\\r\\n      }\\r\\n    }\\r\\n\\r\\n    BaluniV1Pool newPool = new BaluniV1Pool(rebalancer, assets, weights, trigger, periphery);\\r\\n\\r\\n    address poolAddress = address(newPool);\\r\\n\\r\\n    allPools.push(poolAddress);\\r\\n    for (uint256 i = 0; i < assets.length; i++) {\\r\\n      for (uint256 j = i + 1; j < assets.length; j++) {\\r\\n        getPool[assets[i]][assets[j]] = poolAddress;\\r\\n        getPool[assets[j]][assets[i]] = poolAddress;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    emit PoolCreated(poolAddress, assets, rebalancer);\\r\\n\\r\\n    return poolAddress;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves all the pools created by the factory.\\r\\n   * @return An array of pool addresses.\\r\\n   */\\r\\n  function getAllPools() external view returns (address[] memory) {\\r\\n    return allPools;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves the number of pools created by the factory.\\r\\n   * @return The count of pools.\\r\\n   */\\r\\n  function getPoolsCount() external view returns (uint256) {\\r\\n    return allPools.length;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves the assets of a specific pool.\\r\\n   * @param poolAddress The address of the pool.\\r\\n   * @return An array of asset addresses.\\r\\n   */\\r\\n  function getPoolAssets(address poolAddress) external view returns (address[] memory) {\\r\\n    BaluniV1Pool pool = BaluniV1Pool(poolAddress);\\r\\n    return pool.getAssets();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves the pool address based on the given assets.\\r\\n   * @param asset1 The address of the first asset.\\r\\n   * @param asset2 The address of the second asset.\\r\\n   * @return The address of the pool.\\r\\n   */\\r\\n  function getPoolByAssets(address asset1, address asset2) external view returns (address) {\\r\\n    return address(getPool[asset1][asset2]);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns an array of pool addresses that contain the specified token.\\r\\n   * @param token The address of the token to search for.\\r\\n   * @return An array of pool addresses.\\r\\n   */\\r\\n  function getPoolsByAsset(address token) external view returns (address[] memory) {\\r\\n    address[] memory pools = new address[](allPools.length);\\r\\n    uint256 count = 0;\\r\\n\\r\\n    for (uint256 i = 0; i < allPools.length; i++) {\\r\\n      BaluniV1Pool pool = BaluniV1Pool(allPools[i]);\\r\\n      address[] memory assets = pool.getAssets();\\r\\n\\r\\n      for (uint256 j = 0; j < assets.length; j++) {\\r\\n        if (assets[j] == token) {\\r\\n          pools[count] = address(pool);\\r\\n          count++;\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n\\r\\n      if (count == pools.length) {\\r\\n        break;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    address[] memory result = new address[](count);\\r\\n    for (uint256 i = 0; i < count; i++) {\\r\\n      result[i] = pools[i];\\r\\n    }\\r\\n\\r\\n    return result;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Changes the address of the periphery contract.\\r\\n   * @param _newPeriphery The new address of the periphery contract.\\r\\n   */\\r\\n  function changePeriphery(address _newPeriphery) external onlyOwner {\\r\\n    periphery = _newPeriphery;\\r\\n  }\\r\\n\\r\\n  function poolExist(address _pool) external view returns (bool) {\\r\\n    for (uint256 i = 0; i < allPools.length; i++) {\\r\\n      if (allPools[i] == _pool) {\\r\\n        return true;\\r\\n      }\\r\\n    }\\r\\n    return false;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xa8e6121f55010cdfc0eb044b9bafc81c33f6b1c44cba7aa529855fc0f592dc4d\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1PoolPeriphery\\r\\n * @dev Interface for the BaluniV1PoolPeriphery contract.\\r\\n */\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    /**\\r\\n     * @dev Initializes the contract by setting the pool factory address.\\r\\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\\r\\n     */\\r\\n    function initialize(address _poolFactory) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Reinitializes the contract by setting the pool factory address.\\r\\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\\r\\n     * @param version The version number.\\r\\n     */\\r\\n    function reinitialize(address _poolFactory, uint64 version) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps tokens in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @param receiver The address of the receiver.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs batch swaps between multiple token pairs.\\r\\n     * @param fromTokens An array of addresses representing the tokens to swap from.\\r\\n     * @param toTokens An array of addresses representing the tokens to swap to.\\r\\n     * @param amounts An array of amounts representing the amounts to swap.\\r\\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\\r\\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\\r\\n     */\\r\\n    function batchSwap(\\r\\n        address[] calldata fromTokens,\\r\\n        address[] calldata toTokens,\\r\\n        uint256[] calldata amounts,\\r\\n        address[] calldata receivers\\r\\n    ) external returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances weights in a pool.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function rebalanceWeights(address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Adds liquidity to a BaluniV1Pool.\\r\\n     * @param amounts An array of amounts for each asset to add as liquidity.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function addLiquidity(uint256[] calldata amounts, address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Removes liquidity from a BaluniV1Pool.\\r\\n     * @param share The amount of liquidity tokens to remove.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed for the given tokens.\\r\\n     * @param poolAddress The address of the token pool to rebalance.\\r\\n     */\\r\\n    function performRebalanceIfNeeded(address poolAddress) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the given token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsContainingToken(address token) external view returns (address[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the version of the contract.\\r\\n     * @return The version string.\\r\\n     */\\r\\n    function getVersion() external view returns (uint64);\\r\\n\\r\\n    /**\\r\\n     * @dev Changes the address of the pool factory contract.\\r\\n     * Can only be called by the contract owner.\\r\\n     * @param _poolFactory The new address of the pool factory contract.\\r\\n     */\\r\\n    function changePoolFactory(address _poolFactory) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserves of the pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve of a specific asset in a pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x6de73abdbc224bb8113efb2ee8f983026c305b104518c3ccbabb3fa96d5302f6\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n    struct RebalanceVars {\\r\\n        uint256 length;\\r\\n        uint256 totalValue;\\r\\n        uint256 finalUsdBalance;\\r\\n        uint256 overweightVaultsLength;\\r\\n        uint256 underweightVaultsLength;\\r\\n        uint256 totalActiveWeight;\\r\\n        uint256 amountOut;\\r\\n        uint256[] overweightVaults;\\r\\n        uint256[] overweightAmounts;\\r\\n        uint256[] underweightVaults;\\r\\n        uint256[] underweightAmounts;\\r\\n        uint256[] balances;\\r\\n    }\\r\\n\\r\\n    // Variables\\r\\n    function baluniRouter() external view returns (address);\\r\\n\\r\\n    function USDC() external view returns (address);\\r\\n\\r\\n    function WNATIVE() external view returns (address);\\r\\n\\r\\n    function _1InchSpotAgg() external view returns (address);\\r\\n\\r\\n    function treasury() external view returns (address);\\r\\n\\r\\n    // Functions\\r\\n    function rebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        address baseAsset\\r\\n    ) external;\\r\\n\\r\\n    function checkRebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address baseAsset\\r\\n    ) external view returns (RebalanceVars memory);\\r\\n\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x62bba659626c136099395a066049f73bac4042792e8980aa32e1e9d05ab30f18\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n    struct Call {\\r\\n        address to;\\r\\n        uint256 value;\\r\\n        bytes data;\\r\\n    }\\r\\n\\r\\n    // Variables\\r\\n    function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTokens() external view returns (address[] memory);\\r\\n\\r\\n    function USDC() external view returns (IERC20);\\r\\n\\r\\n    function WNATIVE() external view returns (address);\\r\\n\\r\\n    function oracle() external view returns (address);\\r\\n\\r\\n    function uniswapRouter() external view returns (address);\\r\\n\\r\\n    function uniswapFactory() external view returns (address);\\r\\n\\r\\n    function baluniFactory() external view returns (address);\\r\\n\\r\\n    function baluniPeriphery() external view returns (address);\\r\\n\\r\\n    function agentFactory() external view returns (address);\\r\\n\\r\\n    function marketOracle() external view returns (address);\\r\\n\\r\\n    function rebalancer() external view returns (address);\\r\\n\\r\\n    function treasury() external view returns (address);\\r\\n\\r\\n    // Functions\\r\\n    function initialize(\\r\\n        address _usdc,\\r\\n        address _wnative,\\r\\n        address _1inchSpotAgg,\\r\\n        address _uniRouter,\\r\\n        address _uniFactory,\\r\\n        address _rebalancer\\r\\n    ) external;\\r\\n\\r\\n    function reinitialize(\\r\\n        address _usdc,\\r\\n        address _wnative,\\r\\n        address _1inchSpotAgg,\\r\\n        address _uniRouter,\\r\\n        address _uniFactory,\\r\\n        address _rebalancer,\\r\\n        uint64 version\\r\\n    ) external;\\r\\n\\r\\n    function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n    function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n    function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n    function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n    function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n    function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n    function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n    function liquidate(address token) external;\\r\\n\\r\\n    function liquidateAll() external;\\r\\n\\r\\n    function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n    function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n    function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n    function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n    function callRebalance(\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        uint256 limit,\\r\\n        address baseAsset\\r\\n    ) external;\\r\\n\\r\\n    function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n    function calculateTokenShare(\\r\\n        uint256 totalBaluni,\\r\\n        uint256 totalERC20Balance,\\r\\n        uint256 baluniAmount,\\r\\n        uint256 tokenDecimals\\r\\n    ) external pure returns (uint256);\\r\\n\\r\\n    function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n    function totalValuation() external view returns (uint256);\\r\\n\\r\\n    function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n    function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n    function getVersion() external view returns (uint64);\\r\\n\\r\\n    function unitPrice() external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x22f26eeb4b0b0e9d2a8f95fc5072c3d3bfd43bc55a2368c333fd91cebf5195ce\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3987,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"allPools","offset":0,"slot":"0","type":"t_array(t_address)dyn_storage"},{"astId":3993,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"getPool","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_address))"},{"astId":3995,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"rebalancer","offset":0,"slot":"2","type":"t_address"},{"astId":3997,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"periphery","offset":0,"slot":"3","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_mapping(t_address,t_address))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => address))","numberOfBytes":"32","value":"t_mapping(t_address,t_address)"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/I1inchSpotAgg.sol":{"I1inchSpotAgg":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"contract IERC20","name":"dstToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRate","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRateToEth","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRate(address,address,bool)":"802431fb","getRateToEth(address,bool)":"7de4fd10"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"dstToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRateToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/I1inchSpotAgg.sol\":\"I1inchSpotAgg\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Agent.sol":{"IBaluniV1Agent":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct IBaluniV1Agent.Call[]","name":"calls","type":"tuple[]"},{"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"execute((address,uint256,bytes)[],address[])":"eedc3c50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IBaluniV1Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Agent.sol\":\"IBaluniV1Agent\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"IBaluniV1PoolPeriphery":{"abi":[{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"addLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"fromTokens","type":"address[]"},{"internalType":"address[]","name":"toTokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address[]","name":"receivers","type":"address[]"}],"name":"batchSwap","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_poolFactory","type":"address"}],"name":"changePoolFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsContainingToken","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_poolFactory","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"performRebalanceIfNeeded","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_poolFactory","type":"address"},{"internalType":"uint64","name":"version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"share","type":"uint256"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"removeLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the BaluniV1PoolPeriphery contract.","kind":"dev","methods":{"addLiquidity(uint256[],address,address)":{"details":"Adds liquidity to a BaluniV1Pool.","params":{"amounts":"An array of amounts for each asset to add as liquidity.","poolAddress":"The address of the pool.","receiver":"The address of the receiver."}},"batchSwap(address[],address[],uint256[],address[])":{"details":"Performs batch swaps between multiple token pairs.","params":{"amounts":"An array of amounts representing the amounts to swap.","fromTokens":"An array of addresses representing the tokens to swap from.","receivers":"An array of addresses representing the receivers of the swapped tokens.","toTokens":"An array of addresses representing the tokens to swap to."},"returns":{"_0":"An array of amounts representing the amounts of tokens received after the swaps."}},"changePoolFactory(address)":{"details":"Changes the address of the pool factory contract. Can only be called by the contract owner.","params":{"_poolFactory":"The new address of the pool factory contract."}},"getAmountOut(address,address,uint256)":{"details":"Gets the amount of tokens received after a swap in a BaluniV1Pool.","params":{"amount":"The amount of tokens to swap.","fromToken":"The address of the token to swap from.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of tokens received after the swap."}},"getAssetReserve(address,address)":{"details":"Returns the reserve of a specific asset in a pool.","params":{"asset":"The address of the asset.","pool":"The address of the pool."},"returns":{"_0":"The reserve of the asset."}},"getPoolsContainingToken(address)":{"details":"Returns an array of pool addresses that contain the given token.","params":{"token":"The address of the token to search for."},"returns":{"_0":"An array of pool addresses."}},"getReserves(address)":{"details":"Returns the reserves of the pool.","params":{"pool":"The address of the pool."},"returns":{"_0":"An array of reserves."}},"getVersion()":{"details":"Returns the version of the contract.","returns":{"_0":"The version string."}},"initialize(address)":{"details":"Initializes the contract by setting the pool factory address.","params":{"_poolFactory":"The address of the BaluniV1PoolFactory contract."}},"performRebalanceIfNeeded(address)":{"details":"Performs rebalance if needed for the given tokens.","params":{"poolAddress":"The address of the token pool to rebalance."}},"rebalanceWeights(address,address)":{"details":"Rebalances weights in a pool.","params":{"poolAddress":"The address of the pool.","receiver":"The address of the receiver."}},"reinitialize(address,uint64)":{"details":"Reinitializes the contract by setting the pool factory address.","params":{"_poolFactory":"The address of the BaluniV1PoolFactory contract.","version":"The version number."}},"removeLiquidity(uint256,address,address)":{"details":"Removes liquidity from a BaluniV1Pool.","params":{"poolAddress":"The address of the pool.","receiver":"The address of the receiver.","share":"The amount of liquidity tokens to remove."}},"swap(address,address,uint256,address)":{"details":"Swaps tokens in a BaluniV1Pool.","params":{"amount":"The amount of tokens to swap.","fromToken":"The address of the token to swap from.","receiver":"The address of the receiver.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of tokens received after the swap."}}},"title":"IBaluniV1PoolPeriphery","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addLiquidity(uint256[],address,address)":"ec0cd2eb","batchSwap(address[],address[],uint256[],address[])":"e74e9b06","changePoolFactory(address)":"72591be5","getAmountOut(address,address,uint256)":"4aa06652","getAssetReserve(address,address)":"a3e113fb","getPoolsContainingToken(address)":"ae3cce1c","getReserves(address)":"3e99c1e4","getVersion()":"0d8e6e2c","initialize(address)":"c4d66de8","performRebalanceIfNeeded(address)":"5568081a","rebalanceWeights(address,address)":"ad414263","reinitialize(address,uint64)":"8f2248bc","removeLiquidity(uint256,address,address)":"f31abcc4","swap(address,address,uint256,address)":"6e81221c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"fromTokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"toTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"}],\"name\":\"changePoolFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsContainingToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the BaluniV1PoolPeriphery contract.\",\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256[],address,address)\":{\"details\":\"Adds liquidity to a BaluniV1Pool.\",\"params\":{\"amounts\":\"An array of amounts for each asset to add as liquidity.\",\"poolAddress\":\"The address of the pool.\",\"receiver\":\"The address of the receiver.\"}},\"batchSwap(address[],address[],uint256[],address[])\":{\"details\":\"Performs batch swaps between multiple token pairs.\",\"params\":{\"amounts\":\"An array of amounts representing the amounts to swap.\",\"fromTokens\":\"An array of addresses representing the tokens to swap from.\",\"receivers\":\"An array of addresses representing the receivers of the swapped tokens.\",\"toTokens\":\"An array of addresses representing the tokens to swap to.\"},\"returns\":{\"_0\":\"An array of amounts representing the amounts of tokens received after the swaps.\"}},\"changePoolFactory(address)\":{\"details\":\"Changes the address of the pool factory contract. Can only be called by the contract owner.\",\"params\":{\"_poolFactory\":\"The new address of the pool factory contract.\"}},\"getAmountOut(address,address,uint256)\":{\"details\":\"Gets the amount of tokens received after a swap in a BaluniV1Pool.\",\"params\":{\"amount\":\"The amount of tokens to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of tokens received after the swap.\"}},\"getAssetReserve(address,address)\":{\"details\":\"Returns the reserve of a specific asset in a pool.\",\"params\":{\"asset\":\"The address of the asset.\",\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"The reserve of the asset.\"}},\"getPoolsContainingToken(address)\":{\"details\":\"Returns an array of pool addresses that contain the given token.\",\"params\":{\"token\":\"The address of the token to search for.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getReserves(address)\":{\"details\":\"Returns the reserves of the pool.\",\"params\":{\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"An array of reserves.\"}},\"getVersion()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"The version string.\"}},\"initialize(address)\":{\"details\":\"Initializes the contract by setting the pool factory address.\",\"params\":{\"_poolFactory\":\"The address of the BaluniV1PoolFactory contract.\"}},\"performRebalanceIfNeeded(address)\":{\"details\":\"Performs rebalance if needed for the given tokens.\",\"params\":{\"poolAddress\":\"The address of the token pool to rebalance.\"}},\"rebalanceWeights(address,address)\":{\"details\":\"Rebalances weights in a pool.\",\"params\":{\"poolAddress\":\"The address of the pool.\",\"receiver\":\"The address of the receiver.\"}},\"reinitialize(address,uint64)\":{\"details\":\"Reinitializes the contract by setting the pool factory address.\",\"params\":{\"_poolFactory\":\"The address of the BaluniV1PoolFactory contract.\",\"version\":\"The version number.\"}},\"removeLiquidity(uint256,address,address)\":{\"details\":\"Removes liquidity from a BaluniV1Pool.\",\"params\":{\"poolAddress\":\"The address of the pool.\",\"receiver\":\"The address of the receiver.\",\"share\":\"The amount of liquidity tokens to remove.\"}},\"swap(address,address,uint256,address)\":{\"details\":\"Swaps tokens in a BaluniV1Pool.\",\"params\":{\"amount\":\"The amount of tokens to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"receiver\":\"The address of the receiver.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of tokens received after the swap.\"}}},\"title\":\"IBaluniV1PoolPeriphery\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":\"IBaluniV1PoolPeriphery\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1PoolPeriphery\\r\\n * @dev Interface for the BaluniV1PoolPeriphery contract.\\r\\n */\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    /**\\r\\n     * @dev Initializes the contract by setting the pool factory address.\\r\\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\\r\\n     */\\r\\n    function initialize(address _poolFactory) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Reinitializes the contract by setting the pool factory address.\\r\\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\\r\\n     * @param version The version number.\\r\\n     */\\r\\n    function reinitialize(address _poolFactory, uint64 version) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps tokens in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @param receiver The address of the receiver.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs batch swaps between multiple token pairs.\\r\\n     * @param fromTokens An array of addresses representing the tokens to swap from.\\r\\n     * @param toTokens An array of addresses representing the tokens to swap to.\\r\\n     * @param amounts An array of amounts representing the amounts to swap.\\r\\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\\r\\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\\r\\n     */\\r\\n    function batchSwap(\\r\\n        address[] calldata fromTokens,\\r\\n        address[] calldata toTokens,\\r\\n        uint256[] calldata amounts,\\r\\n        address[] calldata receivers\\r\\n    ) external returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances weights in a pool.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function rebalanceWeights(address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Adds liquidity to a BaluniV1Pool.\\r\\n     * @param amounts An array of amounts for each asset to add as liquidity.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function addLiquidity(uint256[] calldata amounts, address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Removes liquidity from a BaluniV1Pool.\\r\\n     * @param share The amount of liquidity tokens to remove.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed for the given tokens.\\r\\n     * @param poolAddress The address of the token pool to rebalance.\\r\\n     */\\r\\n    function performRebalanceIfNeeded(address poolAddress) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the given token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsContainingToken(address token) external view returns (address[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the version of the contract.\\r\\n     * @return The version string.\\r\\n     */\\r\\n    function getVersion() external view returns (uint64);\\r\\n\\r\\n    /**\\r\\n     * @dev Changes the address of the pool factory contract.\\r\\n     * Can only be called by the contract owner.\\r\\n     * @param _poolFactory The new address of the pool factory contract.\\r\\n     */\\r\\n    function changePoolFactory(address _poolFactory) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserves of the pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve of a specific asset in a pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x6de73abdbc224bb8113efb2ee8f983026c305b104518c3ccbabb3fa96d5302f6\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"IBaluniV1Rebalancer":{"abi":[{"inputs":[],"name":"USDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_1InchSpotAgg","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baluniRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"checkRebalance","outputs":[{"components":[{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"uint256","name":"totalValue","type":"uint256"},{"internalType":"uint256","name":"finalUsdBalance","type":"uint256"},{"internalType":"uint256","name":"overweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"underweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"totalActiveWeight","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256[]","name":"overweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"overweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"}],"internalType":"struct IBaluniV1Rebalancer.RebalanceVars","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"rebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"USDC()":"89a30271","WNATIVE()":"b381cf40","_1InchSpotAgg()":"eb06b29d","baluniRouter()":"39b65140","checkRebalance(uint256[],address[],uint256[],uint256,address,address)":"997146f5","convert(address,address,uint256)":"248391ff","rebalance(uint256[],address[],uint256[],uint256,address,address,address)":"f0bf7714","treasury()":"61d027b3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_1InchSpotAgg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baluniRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"checkRebalance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalUsdBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalActiveWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IBaluniV1Rebalancer.RebalanceVars\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Rebalancer.sol\":\"IBaluniV1Rebalancer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n    struct RebalanceVars {\\r\\n        uint256 length;\\r\\n        uint256 totalValue;\\r\\n        uint256 finalUsdBalance;\\r\\n        uint256 overweightVaultsLength;\\r\\n        uint256 underweightVaultsLength;\\r\\n        uint256 totalActiveWeight;\\r\\n        uint256 amountOut;\\r\\n        uint256[] overweightVaults;\\r\\n        uint256[] overweightAmounts;\\r\\n        uint256[] underweightVaults;\\r\\n        uint256[] underweightAmounts;\\r\\n        uint256[] balances;\\r\\n    }\\r\\n\\r\\n    // Variables\\r\\n    function baluniRouter() external view returns (address);\\r\\n\\r\\n    function USDC() external view returns (address);\\r\\n\\r\\n    function WNATIVE() external view returns (address);\\r\\n\\r\\n    function _1InchSpotAgg() external view returns (address);\\r\\n\\r\\n    function treasury() external view returns (address);\\r\\n\\r\\n    // Functions\\r\\n    function rebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        address baseAsset\\r\\n    ) external;\\r\\n\\r\\n    function checkRebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address baseAsset\\r\\n    ) external view returns (RebalanceVars memory);\\r\\n\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x62bba659626c136099395a066049f73bac4042792e8980aa32e1e9d05ab30f18\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Router.sol":{"IBaluniV1Router":{"abi":[{"inputs":[],"name":"USDC","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_BPS_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_MAX_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"agentFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baluniFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baluniPeriphery","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"totalBaluni","type":"uint256"},{"internalType":"uint256","name":"totalERC20Balance","type":"uint256"},{"internalType":"uint256","name":"baluniAmount","type":"uint256"},{"internalType":"uint256","name":"tokenDecimals","type":"uint256"}],"name":"calculateTokenShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"callRebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_agentFactory","type":"address"}],"name":"changeAgentFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"changeBpsFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_marketOracle","type":"address"}],"name":"changeMarketOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRebalancer","type":"address"}],"name":"changeRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newTreasury","type":"address"}],"name":"changeTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct IBaluniV1Agent.Call[]","name":"calls","type":"tuple[]"},{"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fetchMarketPrices","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getAgentAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getUSDCShareValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_usdc","type":"address"},{"internalType":"address","name":"_wnative","type":"address"},{"internalType":"address","name":"_1inchSpotAgg","type":"address"},{"internalType":"address","name":"_uniRouter","type":"address"},{"internalType":"address","name":"_uniFactory","type":"address"},{"internalType":"address","name":"_rebalancer","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_marketOracle","type":"address"}],"name":"initializeMarketOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"liquidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidateAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"marketOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"balAmountToMint","type":"uint256"}],"name":"mintWithUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_usdc","type":"address"},{"internalType":"address","name":"_wnative","type":"address"},{"internalType":"address","name":"_1inchSpotAgg","type":"address"},{"internalType":"address","name":"_uniRouter","type":"address"},{"internalType":"address","name":"_uniFactory","type":"address"},{"internalType":"address","name":"_rebalancer","type":"address"},{"internalType":"uint64","name":"version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"balAmountToMint","type":"uint256"}],"name":"requiredUSDCtoMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"token","type":"address"}],"name":"tokenValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"USDC()":"89a30271","WNATIVE()":"b381cf40","_BPS_BASE()":"85377188","_BPS_FEE()":"b9f5e617","_MAX_BPS_FEE()":"34decfc9","agentFactory()":"7df107ea","baluniFactory()":"196b7a5f","baluniPeriphery()":"060b5e82","burnERC20(uint256)":"1a168da2","burnUSDC(uint256)":"fe0a4dd1","calculateTokenShare(uint256,uint256,uint256,uint256)":"fe330a51","callRebalance(address[],uint256[],address,address,uint256,address)":"599f69f7","changeAgentFactory(address)":"0a38abab","changeBpsFee(uint256)":"06497cb9","changeMarketOracle(address)":"35aa0efa","changeRebalancer(address)":"0918281b","changeTreasury(address)":"b14f2a39","execute((address,uint256,bytes)[],address[])":"eedc3c50","fetchMarketPrices()":"8d483df1","getAgentAddress(address)":"27d54a92","getTokens()":"aa6ca808","getUSDCShareValue(uint256)":"71ddcfb8","getVersion()":"0d8e6e2c","initialize(address,address,address,address,address,address)":"cc2a9a5b","initializeMarketOracle(address)":"980d24f9","liquidate(address)":"2f865568","liquidateAll()":"3c2066a9","marketOracle()":"60961528","mintWithUSDC(uint256)":"0cfc7386","oracle()":"7dc0d1d0","rebalancer()":"01d22ccd","reinitialize(address,address,address,address,address,address,uint64)":"b0d60ba0","requiredUSDCtoMint(uint256)":"aa95d893","tokenValuation(uint256,address)":"2bdd955a","totalValuation()":"295b9300","treasury()":"61d027b3","uniswapFactory()":"8bdb2afa","uniswapRouter()":"735de9f7","unitPrice()":"e73faa2d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BPS_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MAX_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agentFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baluniFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baluniPeriphery\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBaluni\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalERC20Balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baluniAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"}],\"name\":\"calculateTokenShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"callRebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentFactory\",\"type\":\"address\"}],\"name\":\"changeAgentFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"changeBpsFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketOracle\",\"type\":\"address\"}],\"name\":\"changeMarketOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRebalancer\",\"type\":\"address\"}],\"name\":\"changeRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"}],\"name\":\"changeTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IBaluniV1Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchMarketPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAgentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getUSDCShareValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wnative\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_1inchSpotAgg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketOracle\",\"type\":\"address\"}],\"name\":\"initializeMarketOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmountToMint\",\"type\":\"uint256\"}],\"name\":\"mintWithUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wnative\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_1inchSpotAgg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmountToMint\",\"type\":\"uint256\"}],\"name\":\"requiredUSDCtoMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Router.sol\":\"IBaluniV1Router\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n    struct Call {\\r\\n        address to;\\r\\n        uint256 value;\\r\\n        bytes data;\\r\\n    }\\r\\n\\r\\n    // Variables\\r\\n    function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTokens() external view returns (address[] memory);\\r\\n\\r\\n    function USDC() external view returns (IERC20);\\r\\n\\r\\n    function WNATIVE() external view returns (address);\\r\\n\\r\\n    function oracle() external view returns (address);\\r\\n\\r\\n    function uniswapRouter() external view returns (address);\\r\\n\\r\\n    function uniswapFactory() external view returns (address);\\r\\n\\r\\n    function baluniFactory() external view returns (address);\\r\\n\\r\\n    function baluniPeriphery() external view returns (address);\\r\\n\\r\\n    function agentFactory() external view returns (address);\\r\\n\\r\\n    function marketOracle() external view returns (address);\\r\\n\\r\\n    function rebalancer() external view returns (address);\\r\\n\\r\\n    function treasury() external view returns (address);\\r\\n\\r\\n    // Functions\\r\\n    function initialize(\\r\\n        address _usdc,\\r\\n        address _wnative,\\r\\n        address _1inchSpotAgg,\\r\\n        address _uniRouter,\\r\\n        address _uniFactory,\\r\\n        address _rebalancer\\r\\n    ) external;\\r\\n\\r\\n    function reinitialize(\\r\\n        address _usdc,\\r\\n        address _wnative,\\r\\n        address _1inchSpotAgg,\\r\\n        address _uniRouter,\\r\\n        address _uniFactory,\\r\\n        address _rebalancer,\\r\\n        uint64 version\\r\\n    ) external;\\r\\n\\r\\n    function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n    function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n    function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n    function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n    function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n    function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n    function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n    function liquidate(address token) external;\\r\\n\\r\\n    function liquidateAll() external;\\r\\n\\r\\n    function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n    function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n    function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n    function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n    function callRebalance(\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        uint256 limit,\\r\\n        address baseAsset\\r\\n    ) external;\\r\\n\\r\\n    function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n    function calculateTokenShare(\\r\\n        uint256 totalBaluni,\\r\\n        uint256 totalERC20Balance,\\r\\n        uint256 baluniAmount,\\r\\n        uint256 tokenDecimals\\r\\n    ) external pure returns (uint256);\\r\\n\\r\\n    function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n    function totalValuation() external view returns (uint256);\\r\\n\\r\\n    function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n    function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n    function getVersion() external view returns (uint64);\\r\\n\\r\\n    function unitPrice() external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x22f26eeb4b0b0e9d2a8f95fc5072c3d3bfd43bc55a2368c333fd91cebf5195ce\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}