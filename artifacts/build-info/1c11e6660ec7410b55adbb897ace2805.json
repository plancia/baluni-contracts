{"id":"1c11e6660ec7410b55adbb897ace2805","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/interfaces/IBaluniV1DCAVault.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1DCAVault {\r\n    function baseAsset() external view returns (address);\r\n    function quoteAsset() external view returns (address);\r\n    function registry() external view returns (address);\r\n    function lastDeposit() external view returns (uint256);\r\n    function deposit(uint256 amount, address to) external;\r\n    function withdraw(uint256 shares, address to) external;\r\n    function pause() external;\r\n    function unpause() external;\r\n    function totalValuation() external view returns (uint256);\r\n    function unitPrice() external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Oracle.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Oracle {\r\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\r\n\r\n    function convertScaled(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) external view returns (uint256 valuation);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Registry.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\n/**\r\n * @title IBaluniV1Registry\r\n * @dev Interface for the BaluniV1Registry contract.\r\n */\r\ninterface IBaluniV1Registry {\r\n    function setUniswapFactory(address _uniswapFactory) external;\r\n\r\n    function setUniswapRouter(address _uniswapRouter) external;\r\n\r\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\r\n\r\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\r\n\r\n    function setBaluniSwapper(address _baluniSwapper) external;\r\n\r\n    function setBaluniOracle(address _baluniOracle) external;\r\n\r\n    function setBaluniPoolRegistry(address _baluniPoolRegistry) external;\r\n\r\n    function setBaluniVaultRegistry(address _baluniPoolRegistry) external;\r\n\r\n    function setBaluniRebalancer(address _baluniRebalancer) external;\r\n\r\n    function setBaluniRouter(address _baluniRouter) external;\r\n\r\n    function setBaluniRegistry(address _baluniRegistry) external;\r\n\r\n    function setWNATIVE(address _WNATIVE) external;\r\n\r\n    function setUSDC(address _USDC) external;\r\n\r\n    function setTreasury(address _treasury) external;\r\n\r\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\r\n\r\n    function setBPS_FEE(uint256 __BPS_FEE) external;\r\n\r\n    function getUniswapFactory() external view returns (address);\r\n\r\n    function getUniswapRouter() external view returns (address);\r\n\r\n    function getBaluniSwapper() external view returns (address);\r\n\r\n    function getBaluniOracle() external view returns (address);\r\n\r\n    function getBaluniAgentFactory() external view returns (address);\r\n\r\n    function getBaluniPoolPeriphery() external view returns (address);\r\n\r\n    function getBaluniVaultRegistry() external view returns (address);\r\n\r\n    function getBaluniPoolRegistry() external view returns (address);\r\n\r\n    function getBaluniRebalancer() external view returns (address);\r\n\r\n    function getBaluniRouter() external view returns (address);\r\n\r\n    function getBaluniRegistry() external view returns (address);\r\n\r\n    function getWNATIVE() external view returns (address);\r\n\r\n    function getUSDC() external view returns (address);\r\n\r\n    function get1inchSpotAgg() external view returns (address);\r\n\r\n    function getBPS_FEE() external view returns (uint256);\r\n\r\n    function getMAX_BPS_FEE() external view returns (uint256);\r\n\r\n    function getBPS_BASE() external view returns (uint256);\r\n\r\n    function getTreasury() external view returns (address);\r\n\r\n    function setStaticOracle(address _staticOracle) external;\r\n\r\n    function getStaticOracle() external view returns (address);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Swapper.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Swapper {\r\n    function singleSwap(\r\n        address token0,\r\n        address token1,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external returns (uint256 amountOut);\r\n    function multiHopSwap(\r\n        address token0,\r\n        address token1,\r\n        address token2,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external returns (uint256 amountOut);\r\n}\r\n"},"contracts/registry/BaluniV1DCAVaultRegistry.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\nimport '../interfaces/IBaluniV1Registry.sol';\r\nimport '../interfaces/IBaluniV1DCAVault.sol';\r\n\r\ncontract BaluniV1DCAVaultRegistry is Initializable, UUPSUpgradeable, OwnableUpgradeable {\r\n    address[] public allVaults;\r\n\r\n    IBaluniV1Registry public registry;\r\n\r\n    mapping(address => mapping(address => address)) public getVault;\r\n\r\n    event vaultCreated(address indexed vault, address[] assets);\r\n\r\n    function initialize(address _register) public initializer {\r\n        __UUPSUpgradeable_init();\r\n        __Ownable_init(msg.sender);\r\n        registry = IBaluniV1Registry(_register);\r\n    }\r\n\r\n    function reinitialize(address _register, uint64 _version) public reinitializer(_version) {\r\n        registry = IBaluniV1Registry(_register);\r\n    }\r\n\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n    function addVault(address vaultAddress) external onlyOwner {\r\n        require(vaultAddress != address(0), 'BaluniV1VaultFactory: INVALID_vault_ADDRESS');\r\n        allVaults.push(vaultAddress);\r\n        address baseAsset = IBaluniV1DCAVault(vaultAddress).baseAsset();\r\n        address quoteAsset = IBaluniV1DCAVault(vaultAddress).quoteAsset();\r\n\r\n        getVault[baseAsset][quoteAsset] = vaultAddress;\r\n        getVault[quoteAsset][baseAsset] = vaultAddress;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves all the vaults created by the factory.\r\n     * @return An array of vault addresses.\r\n     */\r\n    function getAllVaults() external view returns (address[] memory) {\r\n        return allVaults;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the number of vaults created by the factory.\r\n     * @return The count of vaults.\r\n     */\r\n    function getVaultsCount() external view returns (uint256) {\r\n        return allVaults.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the assets of a specific vault.\r\n     * @param vaultAddress The address of the vault.\r\n     * @return An array of asset addresses.\r\n     */\r\n    function getVaultAsset(address vaultAddress) external view returns (address[] memory) {\r\n        address[] memory assets = new address[](2);\r\n        assets[0] = IBaluniV1DCAVault(vaultAddress).baseAsset();\r\n        assets[1] = IBaluniV1DCAVault(vaultAddress).quoteAsset();\r\n        return assets;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the vault address based on the given assets.\r\n     * @param asset1 The address of the first asset.\r\n     * @param asset2 The address of the second asset.\r\n     * @return The address of the vault.\r\n     */\r\n    function getVaultType1ByAssets(address asset1, address asset2) external view returns (address) {\r\n        return getVault[asset1][asset2];\r\n    }\r\n\r\n    function getVaultsByAsset(address token) external view returns (address[] memory) {\r\n        address[] memory vaults = new address[](allVaults.length);\r\n        uint256 count = 0;\r\n\r\n        for (uint256 i = 0; i < allVaults.length; i++) {\r\n            IBaluniV1DCAVault vault = IBaluniV1DCAVault(allVaults[i]);\r\n            address asset = vault.baseAsset();\r\n\r\n            if (asset == token) {\r\n                vaults[count] = address(vault);\r\n                count++;\r\n                break;\r\n            }\r\n\r\n            if (count == vaults.length) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        address[] memory result = new address[](count);\r\n        for (uint256 i = 0; i < count; i++) {\r\n            result[i] = vaults[i];\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function vaultExist(address _vault) external view returns (bool) {\r\n        for (uint256 i = 0; i < allVaults.length; i++) {\r\n            if (allVaults[i] == _vault) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function removeVault(address _vault) external onlyOwner {\r\n        for (uint256 i = 0; i < allVaults.length; i++) {\r\n            if (allVaults[i] == _vault) {\r\n                allVaults[i] = allVaults[allVaults.length - 1];\r\n                getVault[IBaluniV1DCAVault(_vault).quoteAsset()][IBaluniV1DCAVault(_vault).baseAsset()] = address(0);\r\n                getVault[IBaluniV1DCAVault(_vault).baseAsset()][IBaluniV1DCAVault(_vault).quoteAsset()] = address(0);\r\n                allVaults.pop();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n"},"contracts/vaults/BaluniV1DCAVault.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol';\r\n\r\nimport '../interfaces/IBaluniV1Registry.sol';\r\nimport '../interfaces/IBaluniV1Swapper.sol';\r\nimport '../interfaces/IBaluniV1Oracle.sol';\r\n\r\ncontract BaluniV1DCAVault is\r\n    Initializable,\r\n    UUPSUpgradeable,\r\n    OwnableUpgradeable,\r\n    ERC20Upgradeable,\r\n    ReentrancyGuardUpgradeable,\r\n    PausableUpgradeable\r\n{\r\n    address public baseAsset;\r\n    address public quoteAsset;\r\n\r\n    IBaluniV1Registry private _registry;\r\n\r\n    uint256 public lastDeposit;\r\n    uint256 public lastInvestedBlock;\r\n    uint256 public maxPerSwap;\r\n    uint256 public swapDuration;\r\n    uint256 public reinvestDuration;\r\n\r\n    mapping(address => bool) public executors;\r\n\r\n    event ExecuteTrade(address indexed sender, uint256 amountIn, uint256 amountOut);\r\n\r\n    /**\r\n     * @dev Initializes the BaluniV1DCA contract.\r\n     * @param _name The name of the token.\r\n     * @param _symbol The symbol of the token.\r\n     * @param _baseAsset The address of the base asset.\r\n     * @param _quoteAsset The address of the quote asset.\r\n     * @param _registryAddress The address of the registry contract.\r\n     * @param _reinvestDuration The duration between reinvestments.\r\n     */\r\n    function initialize(\r\n        string memory _name,\r\n        string memory _symbol,\r\n        address _baseAsset,\r\n        address _quoteAsset,\r\n        address _registryAddress,\r\n        uint256 _reinvestDuration\r\n    ) external initializer {\r\n        __Ownable_init(msg.sender);\r\n        __ERC20_init(_name, _symbol);\r\n        __UUPSUpgradeable_init();\r\n        __ReentrancyGuard_init();\r\n        __Pausable_init();\r\n\r\n        baseAsset = _baseAsset;\r\n        quoteAsset = _quoteAsset;\r\n        _registry = IBaluniV1Registry(_registryAddress);\r\n\r\n        swapDuration = 360 * _reinvestDuration;\r\n        reinvestDuration = _reinvestDuration;\r\n        lastInvestedBlock = block.number;\r\n        maxPerSwap = 10000 * 10 ** ERC20Upgradeable(_baseAsset).decimals();\r\n    }\r\n\r\n    function reinitialize(\r\n        string memory _name,\r\n        string memory _symbol,\r\n        address _baseAsset,\r\n        address _quoteAsset,\r\n        address _registryAddress,\r\n        uint256 _reinvestDuration,\r\n        uint64 _version\r\n    ) external reinitializer(_version) {\r\n        __Ownable_init(msg.sender);\r\n        __ERC20_init(_name, _symbol);\r\n        __UUPSUpgradeable_init();\r\n        __ReentrancyGuard_init();\r\n        __Pausable_init();\r\n\r\n        baseAsset = _baseAsset;\r\n        quoteAsset = _quoteAsset;\r\n        _registry = IBaluniV1Registry(_registryAddress);\r\n\r\n        swapDuration = 360 * _reinvestDuration;\r\n        reinvestDuration = _reinvestDuration;\r\n        lastInvestedBlock = block.number;\r\n        maxPerSwap = 10000 * 10 ** ERC20Upgradeable(_baseAsset).decimals();\r\n    }\r\n\r\n    modifier onlyExecutor() {\r\n        require(executors[msg.sender], 'executor: wut?');\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to authorize an upgrade to a new implementation contract.\r\n     * @param newImplementation The address of the new implementation contract.\r\n     * @notice This function can only be called by the contract owner.\r\n     */\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n    /**\r\n     * @dev Deposits assetA into the pool.\r\n     * @param amount The amount of assetA to deposit.\r\n     * @param to The address to receive pool tokens.\r\n     */\r\n    function deposit(uint256 amount, address to) external nonReentrant whenNotPaused {\r\n        require(amount > 0, 'Amount must be greater than zero');\r\n\r\n        IERC20(baseAsset).transferFrom(msg.sender, address(this), amount);\r\n\r\n        address baluniRouter = _registry.getBaluniRouter();\r\n        address treasury = _registry.getTreasury();\r\n\r\n        uint hairCut = _haircut(amount);\r\n        uint hairCut2 = _haircut(hairCut);\r\n\r\n        IERC20(baseAsset).transfer(baluniRouter, hairCut - hairCut2);\r\n        IERC20(baseAsset).transfer(treasury, hairCut2);\r\n\r\n        uint256 amountAfter = amount - hairCut;\r\n        uint8 baseDecimal = IERC20Metadata(baseAsset).decimals();\r\n\r\n        // scale up amount\r\n        uint256 amountScaled = amountAfter * 10 ** (18 - baseDecimal);\r\n        _mint(to, amountScaled);\r\n\r\n        lastDeposit += amountAfter;\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraws assetA and assetB from the pool.\r\n     * @param shares The amount of pool tokens to redeem.\r\n     * @param to The address to receive assetA and assetB.\r\n     */\r\n    function withdraw(uint256 shares, address to) external nonReentrant whenNotPaused {\r\n        require(shares > 0, 'Shares must be greater than zero');\r\n        require(balanceOf(msg.sender) >= shares, 'Insufficient balance');\r\n\r\n        uint8 quoteDecimal = IERC20Metadata(quoteAsset).decimals();\r\n        uint256 quoteBalance = IERC20(quoteAsset).balanceOf(address(this));\r\n        uint256 baseBalance = IERC20(baseAsset).balanceOf(address(this));\r\n\r\n        // scale up totalDeposit and accumualteAssetB\r\n        quoteBalance *= 10 ** (18 - quoteDecimal);\r\n\r\n        uint256 withdrawAmountA = (shares * baseBalance) / totalSupply();\r\n        uint256 withdrawAmountB = (shares * quoteBalance) / totalSupply();\r\n\r\n        _burn(msg.sender, shares);\r\n\r\n        // scale down totalDeposit and accumualteAssetB\r\n        withdrawAmountB /= 10 ** (18 - quoteDecimal);\r\n\r\n        uint256 amountToSend = withdrawAmountA;\r\n\r\n        uint hairCut = _haircut(amountToSend);\r\n        IERC20(baseAsset).transfer(to, amountToSend - hairCut);\r\n\r\n        uint hairCut2 = _haircut(hairCut);\r\n        address baluniRouter = _registry.getBaluniRouter();\r\n        address treasury = _registry.getTreasury();\r\n        IERC20(baseAsset).transfer(baluniRouter, hairCut - hairCut2);\r\n        IERC20(baseAsset).transfer(treasury, hairCut2);\r\n\r\n        hairCut = _haircut(withdrawAmountB);\r\n        IERC20(quoteAsset).transfer(to, withdrawAmountB - hairCut);\r\n        hairCut2 = _haircut(hairCut);\r\n        IERC20(baseAsset).transfer(baluniRouter, hairCut - hairCut2);\r\n        IERC20(baseAsset).transfer(treasury, hairCut2);\r\n\r\n        lastDeposit -= amountToSend;\r\n    }\r\n\r\n    function systemDeposit() external onlyExecutor nonReentrant whenNotPaused {\r\n        require((block.number - lastInvestedBlock) > reinvestDuration, 'wait till next reinvest cycle');\r\n\r\n        uint amtToSwap = getAmountToSwap(); // return 1e18\r\n        require(amtToSwap > 0, 'Nothing to swap');\r\n\r\n        IBaluniV1Swapper swapper = IBaluniV1Swapper(_registry.getBaluniSwapper());\r\n        IERC20(baseAsset).approve(address(swapper), amtToSwap);\r\n\r\n        uint256 quoteReceived = swapper.singleSwap(baseAsset, quoteAsset, amtToSwap, address(this));\r\n        lastInvestedBlock = block.number;\r\n\r\n        emit ExecuteTrade(msg.sender, amtToSwap, quoteReceived);\r\n    }\r\n\r\n    function getAmountToSwap() public view returns (uint) {\r\n        uint baseTokenBal = IERC20(baseAsset).balanceOf(address(this));\r\n        uint blockDiff = block.number - lastInvestedBlock;\r\n        uint toSwapQty = (baseTokenBal * blockDiff) / swapDuration;\r\n        return toSwapQty > maxPerSwap ? maxPerSwap : toSwapQty;\r\n    }\r\n\r\n    function canSystemDeposit() public view returns (bool) {\r\n        uint amtToSwap = getAmountToSwap();\r\n        return ((block.number - lastInvestedBlock) > reinvestDuration) && (amtToSwap > 0);\r\n    }\r\n\r\n    /**\r\n     * @dev pause pool, restricting certain operations\r\n     */\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    /**\r\n     * @dev unpause pool, enabling certain operations\r\n     */\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function totalValuation() public view returns (uint256) {\r\n        IBaluniV1Oracle oracle = IBaluniV1Oracle(_registry.getBaluniOracle());\r\n        address USDC = _registry.getUSDC();\r\n        uint256 valuation = 0;\r\n\r\n        uint baseBalance = IERC20(baseAsset).balanceOf(address(this));\r\n        uint balanceQuote = IERC20(quoteAsset).balanceOf(address(this));\r\n\r\n        if (baseBalance == 0 && balanceQuote == 0) return 0;\r\n\r\n        if (baseAsset != USDC) valuation += oracle.convert(baseAsset, USDC, baseBalance);\r\n        valuation += oracle.convert(quoteAsset, baseAsset, balanceQuote);\r\n        valuation += baseBalance;\r\n\r\n        return valuation;\r\n    }\r\n\r\n    function unitPrice() external view returns (uint256) {\r\n        if (totalSupply() == 0) return 0;\r\n\r\n        address USDC = _registry.getUSDC();\r\n        uint8 decimals = IERC20Metadata(USDC).decimals();\r\n        uint256 factor = 10 ** (18 - decimals);\r\n        uint256 valuationScaledUp = totalValuation() * factor;\r\n        uint256 unitPriceScaled = (valuationScaledUp * 1e18) / totalSupply();\r\n        return unitPriceScaled;\r\n    }\r\n\r\n    function registry() external view returns (address) {\r\n        return address(_registry);\r\n    }\r\n\r\n    function setExecutor(address _wallet, bool _allow) external onlyOwner {\r\n        executors[_wallet] = _allow;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the fee amount based on the provided amount using the haircut formula.\r\n     * @param amount The amount to calculate the fee for.\r\n     * @return The fee amount.\r\n     */\r\n    function _haircut(uint256 amount) internal view returns (uint256) {\r\n        uint256 _BPS_FEE = _registry.getBPS_FEE();\r\n        uint256 _BPS_BASE = _registry.getBPS_BASE();\r\n        return (amount * _BPS_FEE) / _BPS_BASE;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":2000},"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":1294,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,1293,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[2048],"IERC1822Proxiable":[1608],"Initializable":[448],"UUPSUpgradeable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1609,"src":"141:88:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":2049,"src":"230:84:2","symbolAliases":[{"foreign":{"id":453,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":449,"src":"315:50:2","symbolAliases":[{"foreign":{"id":455,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":458,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1023:13:2"},"id":459,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":460,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":1608,"src":"1038:17:2"},"id":461,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":630,"linearizedBaseContracts":[630,1608,448],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":468,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":630,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":472,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":630,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":475,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":480,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":480,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":487,"nodeType":"Block","src":"2643:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2653:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2653:13:2"},{"id":486,"nodeType":"PlaceholderStatement","src":"2676:1:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2124:493:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":488,"name":"onlyProxy","nameLocation":"2631:9:2","nodeType":"ModifierDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2640:2:2"},"src":"2622:62:2","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"2914:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":491,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2924:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2924:20:2"},{"id":494,"nodeType":"PlaceholderStatement","src":"2954:1:2"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"2690:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":496,"name":"notDelegated","nameLocation":"2899:12:2","nodeType":"ModifierDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2911:2:2"},"src":"2890:72:2","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"3028:7:2","statements":[]},"id":502,"implemented":true,"kind":"function","modifiers":[{"id":499,"kind":"modifierInvocation","modifierName":{"id":498,"name":"onlyInitializing","nameLocations":["3011:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3011:16:2"},"nodeType":"ModifierInvocation","src":"3011:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2977:22:2","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2999:2:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3028:0:2"},"scope":630,"src":"2968:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"3111:7:2","statements":[]},"id":508,"implemented":true,"kind":"function","modifiers":[{"id":505,"kind":"modifierInvocation","modifierName":{"id":504,"name":"onlyInitializing","nameLocations":["3094:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3094:16:2"},"nodeType":"ModifierInvocation","src":"3094:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3050:32:2","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3082:2:2"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"3111:0:2"},"scope":630,"src":"3041:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1607],"body":{"id":519,"nodeType":"Block","src":"3783:56:2","statements":[{"expression":{"expression":{"id":516,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"3800:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2048_$","typeString":"type(library ERC1967Utils)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3813:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1775,"src":"3800:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":515,"id":518,"nodeType":"Return","src":"3793:39:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"3123:577:2","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":520,"implemented":true,"kind":"function","modifiers":[{"id":512,"kind":"modifierInvocation","modifierName":{"id":511,"name":"notDelegated","nameLocations":["3752:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":496,"src":"3752:12:2"},"nodeType":"ModifierInvocation","src":"3752:12:2"}],"name":"proxiableUUID","nameLocation":"3714:13:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"3727:2:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"3774:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3773:9:2"},"scope":630,"src":"3705:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":539,"nodeType":"Block","src":"4263:109:2","statements":[{"expression":{"arguments":[{"id":531,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4291:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4273:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"4273:36:2"},{"expression":{"arguments":[{"id":535,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4341:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4319:46:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"3845:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":540,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"onlyProxy","nameLocations":["4253:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":488,"src":"4253:9:2"},"nodeType":"ModifierInvocation","src":"4253:9:2"}],"name":"upgradeToAndCall","nameLocation":"4167:16:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"newImplementation","nameLocation":"4192:17:2","nodeType":"VariableDeclaration","scope":540,"src":"4184:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"4224:4:2","nodeType":"VariableDeclaration","scope":540,"src":"4211:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4183:46:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"4263:0:2"},"scope":630,"src":"4158:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"4644:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4679:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":548,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4688:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4671:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"4749:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2048_$","typeString":"type(library ERC1967Utils)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":1806,"src":"4749:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":553,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4785:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4671:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"4654:251:2","trueBody":{"id":559,"nodeType":"Block","src":"4844:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4865:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"RevertStatement","src":"4858:36:2"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4378:216:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4608:11:2","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"4619:2:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4644:0:2"},"scope":630,"src":"4599:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"5080:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":568,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5102:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":570,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5111:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"IfStatement","src":"5090:145:2","trueBody":{"id":575,"nodeType":"Block","src":"5119:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5195:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"RevertStatement","src":"5188:36:2"}]}}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4917:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5037:18:2","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"5055:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"5080:0:2"},"scope":630,"src":"5028:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"5247:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":584,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5633:17:2","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"newImplementation","nameLocation":"5659:17:2","nodeType":"VariableDeclaration","scope":584,"src":"5651:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:27:2"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"5694:0:2"},"scope":630,"src":"5624:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"6137:453:2","statements":[{"clauses":[{"block":{"id":617,"nodeType":"Block","src":"6227:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6245:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":601,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"6253:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2048_$","typeString":"type(library ERC1967Utils)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6266:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1775,"src":"6253:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6245:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"IfStatement","src":"6241:120:2","trueBody":{"id":608,"nodeType":"Block","src":"6287:74:2","statements":[{"errorCall":{"arguments":[{"id":605,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6341:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":604,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6312:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"RevertStatement","src":"6305:41:2"}]}},{"expression":{"arguments":[{"id":613,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6404:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6423:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":610,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"6374:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2048_$","typeString":"type(library ERC1967Utils)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":1867,"src":"6374:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"6374:54:2"}]},"errorName":"","id":618,"nodeType":"TryCatchClause","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"slot","nameLocation":"6221:4:2","nodeType":"VariableDeclaration","scope":618,"src":"6213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6212:14:2"},"src":"6204:235:2"},{"block":{"id":625,"nodeType":"Block","src":"6446:138:2","statements":[{"errorCall":{"arguments":[{"id":622,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":619,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"6513:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2048_$","typeString":"type(library ERC1967Utils)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":1780,"src":"6513:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"RevertStatement","src":"6506:67:2"}]},"errorName":"","id":626,"nodeType":"TryCatchClause","src":"6440:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":593,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6169:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"6151:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$1608_$","typeString":"type(contract IERC1822Proxiable)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$1608","typeString":"contract IERC1822Proxiable"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6188:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":1607,"src":"6151:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":627,"nodeType":"TryStatement","src":"6147:437:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"5701:346:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6061:21:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"newImplementation","nameLocation":"6091:17:2","nodeType":"VariableDeclaration","scope":629,"src":"6083:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6083:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"6123:4:2","nodeType":"VariableDeclaration","scope":629,"src":"6110:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6082:46:2"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"6137:0:2"},"scope":630,"src":"6052:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":631,"src":"986:5606:2","usedErrors":[211,214,475,480,1780,1793,2175,2178],"usedEvents":[219,1759]}],"src":"115:6478:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"ERC20Upgradeable":[1247],"IERC20":[2136],"IERC20Errors":[1650],"IERC20Metadata":[2162],"Initializable":[448]},"id":1248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":2137,"src":"131:70:3","symbolAliases":[{"foreign":{"id":633,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":2163,"src":"202:97:3","symbolAliases":[{"foreign":{"id":635,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"210:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1294,"src":"300:70:3","symbolAliases":[{"foreign":{"id":637,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"308:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1746,"src":"371:83:3","symbolAliases":[{"foreign":{"id":639,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"379:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":449,"src":"455:66:3","symbolAliases":[{"foreign":{"id":641,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"463:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":644,"name":"Initializable","nameLocations":["1614:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1614:13:3"},"id":645,"nodeType":"InheritanceSpecifier","src":"1614:13:3"},{"baseName":{"id":646,"name":"ContextUpgradeable","nameLocations":["1629:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"1629:18:3"},"id":647,"nodeType":"InheritanceSpecifier","src":"1629:18:3"},{"baseName":{"id":648,"name":"IERC20","nameLocations":["1649:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"1649:6:3"},"id":649,"nodeType":"InheritanceSpecifier","src":"1649:6:3"},{"baseName":{"id":650,"name":"IERC20Metadata","nameLocations":["1657:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":2162,"src":"1657:14:3"},"id":651,"nodeType":"InheritanceSpecifier","src":"1657:14:3"},{"baseName":{"id":652,"name":"IERC20Errors","nameLocations":["1673:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1650,"src":"1673:12:3"},"id":653,"nodeType":"InheritanceSpecifier","src":"1673:12:3"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"523:1052:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1247,"linearizedBaseContracts":[1247,1650,2162,2136,1293,448],"name":"ERC20Upgradeable","nameLocation":"1594:16:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Upgradeable.ERC20Storage","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"1692:63:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC20"},"id":671,"members":[{"constant":false,"id":658,"mutability":"mutable","name":"_balances","nameLocation":"1826:9:3","nodeType":"VariableDeclaration","scope":671,"src":"1790:45:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":657,"keyName":"account","keyNameLocation":"1806:7:3","keyType":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"1798:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1790:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"_allowances","nameLocation":"1910:11:3","nodeType":"VariableDeclaration","scope":671,"src":"1846:75:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":663,"keyName":"account","keyNameLocation":"1862:7:3","keyType":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"1854:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1846:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":662,"keyName":"spender","keyNameLocation":"1889:7:3","keyType":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1873:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"_totalSupply","nameLocation":"1940:12:3","nodeType":"VariableDeclaration","scope":671,"src":"1932:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1932:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"_name","nameLocation":"1970:5:3","nodeType":"VariableDeclaration","scope":671,"src":"1963:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":667,"name":"string","nodeType":"ElementaryTypeName","src":"1963:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"_symbol","nameLocation":"1992:7:3","nodeType":"VariableDeclaration","scope":671,"src":"1985:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":669,"name":"string","nodeType":"ElementaryTypeName","src":"1985:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC20Storage","nameLocation":"1767:12:3","nodeType":"StructDefinition","scope":1247,"src":"1760:246:3","visibility":"public"},{"constant":true,"id":674,"mutability":"constant","name":"ERC20StorageLocation","nameLocation":"2146:20:3","nodeType":"VariableDeclaration","scope":1247,"src":"2121:114:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2121:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2169:66:3","typeDescriptions":{"typeIdentifier":"t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1","typeString":"int_const 3743...(69 digits omitted)...2592"},"value":"0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"},"visibility":"private"},{"body":{"id":681,"nodeType":"Block","src":"2316:79:3","statements":[{"AST":{"nativeSrc":"2335:54:3","nodeType":"YulBlock","src":"2335:54:3","statements":[{"nativeSrc":"2349:30:3","nodeType":"YulAssignment","src":"2349:30:3","value":{"name":"ERC20StorageLocation","nativeSrc":"2359:20:3","nodeType":"YulIdentifier","src":"2359:20:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2349:6:3","nodeType":"YulIdentifier","src":"2349:6:3"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":678,"isOffset":false,"isSlot":true,"src":"2349:6:3","suffix":"slot","valueSize":1},{"declaration":674,"isOffset":false,"isSlot":false,"src":"2359:20:3","valueSize":1}],"id":680,"nodeType":"InlineAssembly","src":"2326:63:3"}]},"id":682,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC20Storage","nameLocation":"2251:16:3","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[],"src":"2267:2:3"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"$","nameLocation":"2313:1:3","nodeType":"VariableDeclaration","scope":682,"src":"2292:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":677,"nodeType":"UserDefinedTypeName","pathNode":{"id":676,"name":"ERC20Storage","nameLocations":["2292:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"2292:12:3"},"referencedDeclaration":671,"src":"2292:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"src":"2291:24:3"},"scope":1247,"src":"2242:153:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":697,"nodeType":"Block","src":"2669:55:3","statements":[{"expression":{"arguments":[{"id":693,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"2702:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":694,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"2709:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":692,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2679:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2679:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"2679:38:3"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"2401:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":698,"implemented":true,"kind":"function","modifiers":[{"id":690,"kind":"modifierInvocation","modifierName":{"id":689,"name":"onlyInitializing","nameLocations":["2652:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2652:16:3"},"nodeType":"ModifierInvocation","src":"2652:16:3"}],"name":"__ERC20_init","nameLocation":"2586:12:3","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"name_","nameLocation":"2613:5:3","nodeType":"VariableDeclaration","scope":698,"src":"2599:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":684,"name":"string","nodeType":"ElementaryTypeName","src":"2599:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"symbol_","nameLocation":"2634:7:3","nodeType":"VariableDeclaration","scope":698,"src":"2620:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":686,"name":"string","nodeType":"ElementaryTypeName","src":"2620:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2598:44:3"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[],"src":"2669:0:3"},"scope":1247,"src":"2577:147:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":725,"nodeType":"Block","src":"2832:114:3","statements":[{"assignments":[709],"declarations":[{"constant":false,"id":709,"mutability":"mutable","name":"$","nameLocation":"2863:1:3","nodeType":"VariableDeclaration","scope":725,"src":"2842:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":708,"nodeType":"UserDefinedTypeName","pathNode":{"id":707,"name":"ERC20Storage","nameLocations":["2842:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"2842:12:3"},"referencedDeclaration":671,"src":"2842:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":712,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":710,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"2867:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2867:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2842:43:3"},{"expression":{"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":713,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"2895:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2897:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":668,"src":"2895:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":716,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"2905:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2895:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":718,"nodeType":"ExpressionStatement","src":"2895:15:3"},{"expression":{"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":719,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"2920:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2922:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":670,"src":"2920:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":722,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"2932:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2920:19:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":724,"nodeType":"ExpressionStatement","src":"2920:19:3"}]},"id":726,"implemented":true,"kind":"function","modifiers":[{"id":705,"kind":"modifierInvocation","modifierName":{"id":704,"name":"onlyInitializing","nameLocations":["2815:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2815:16:3"},"nodeType":"ModifierInvocation","src":"2815:16:3"}],"name":"__ERC20_init_unchained","nameLocation":"2739:22:3","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"name_","nameLocation":"2776:5:3","nodeType":"VariableDeclaration","scope":726,"src":"2762:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":699,"name":"string","nodeType":"ElementaryTypeName","src":"2762:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"symbol_","nameLocation":"2797:7:3","nodeType":"VariableDeclaration","scope":726,"src":"2783:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":701,"name":"string","nodeType":"ElementaryTypeName","src":"2783:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2761:44:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"2832:0:3"},"scope":1247,"src":"2730:216:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2149],"body":{"id":741,"nodeType":"Block","src":"3071:84:3","statements":[{"assignments":[734],"declarations":[{"constant":false,"id":734,"mutability":"mutable","name":"$","nameLocation":"3102:1:3","nodeType":"VariableDeclaration","scope":741,"src":"3081:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":733,"nodeType":"UserDefinedTypeName","pathNode":{"id":732,"name":"ERC20Storage","nameLocations":["3081:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"3081:12:3"},"referencedDeclaration":671,"src":"3081:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":737,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":735,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3106:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3106:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3081:43:3"},{"expression":{"expression":{"id":738,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"3141:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":668,"src":"3141:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":731,"id":740,"nodeType":"Return","src":"3134:14:3"}]},"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"2952:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":742,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3020:4:3","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"3024:2:3"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"3056:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":729,"name":"string","nodeType":"ElementaryTypeName","src":"3056:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3055:15:3"},"scope":1247,"src":"3011:144:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2155],"body":{"id":757,"nodeType":"Block","src":"3330:86:3","statements":[{"assignments":[750],"declarations":[{"constant":false,"id":750,"mutability":"mutable","name":"$","nameLocation":"3361:1:3","nodeType":"VariableDeclaration","scope":757,"src":"3340:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":749,"nodeType":"UserDefinedTypeName","pathNode":{"id":748,"name":"ERC20Storage","nameLocations":["3340:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"3340:12:3"},"referencedDeclaration":671,"src":"3340:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":753,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":751,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3365:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3340:43:3"},{"expression":{"expression":{"id":754,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3400:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3402:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":670,"src":"3400:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":747,"id":756,"nodeType":"Return","src":"3393:16:3"}]},"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"3161:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":758,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3277:6:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"3283:2:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":758,"src":"3315:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"3315:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3314:15:3"},"scope":1247,"src":"3268:148:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2161],"body":{"id":766,"nodeType":"Block","src":"4105:26:3","statements":[{"expression":{"hexValue":"3138","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4122:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":763,"id":765,"nodeType":"Return","src":"4115:9:3"}]},"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"3422:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":767,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"4058:8:3","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"4066:2:3"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"4098:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":761,"name":"uint8","nodeType":"ElementaryTypeName","src":"4098:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4097:7:3"},"scope":1247,"src":"4049:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2085],"body":{"id":782,"nodeType":"Block","src":"4252:91:3","statements":[{"assignments":[775],"declarations":[{"constant":false,"id":775,"mutability":"mutable","name":"$","nameLocation":"4283:1:3","nodeType":"VariableDeclaration","scope":782,"src":"4262:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":774,"nodeType":"UserDefinedTypeName","pathNode":{"id":773,"name":"ERC20Storage","nameLocations":["4262:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"4262:12:3"},"referencedDeclaration":671,"src":"4262:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":778,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":776,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4287:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4262:43:3"},{"expression":{"expression":{"id":779,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"4322:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4324:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"4322:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":772,"id":781,"nodeType":"Return","src":"4315:21:3"}]},"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"4137:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":783,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"4200:11:3","nodeType":"FunctionDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[],"src":"4211:2:3"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"4243:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"4243:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4242:9:3"},"scope":1247,"src":"4191:152:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2093],"body":{"id":802,"nodeType":"Block","src":"4475:97:3","statements":[{"assignments":[793],"declarations":[{"constant":false,"id":793,"mutability":"mutable","name":"$","nameLocation":"4506:1:3","nodeType":"VariableDeclaration","scope":802,"src":"4485:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":792,"nodeType":"UserDefinedTypeName","pathNode":{"id":791,"name":"ERC20Storage","nameLocations":["4485:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"4485:12:3"},"referencedDeclaration":671,"src":"4485:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":796,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":794,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4510:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4510:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4485:43:3"},{"expression":{"baseExpression":{"expression":{"id":797,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"4545:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4547:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"4545:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":800,"indexExpression":{"id":799,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4557:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4545:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":790,"id":801,"nodeType":"Return","src":"4538:27:3"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"4349:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":803,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4410:9:3","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"account","nameLocation":"4428:7:3","nodeType":"VariableDeclaration","scope":803,"src":"4420:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"4420:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:17:3"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":803,"src":"4466:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"4466:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4465:9:3"},"scope":1247,"src":"4401:171:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2103],"body":{"id":826,"nodeType":"Block","src":"4842:103:3","statements":[{"assignments":[814],"declarations":[{"constant":false,"id":814,"mutability":"mutable","name":"owner","nameLocation":"4860:5:3","nodeType":"VariableDeclaration","scope":826,"src":"4852:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"4852:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":817,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":815,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"4868:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4868:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4852:28:3"},{"expression":{"arguments":[{"id":819,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4900:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"4907:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"4911:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":818,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"4890:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4890:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"ExpressionStatement","src":"4890:27:3"},{"expression":{"hexValue":"74727565","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4934:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":812,"id":825,"nodeType":"Return","src":"4927:11:3"}]},"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"4578:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":827,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4776:8:3","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"to","nameLocation":"4793:2:3","nodeType":"VariableDeclaration","scope":827,"src":"4785:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"4785:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"value","nameLocation":"4805:5:3","nodeType":"VariableDeclaration","scope":827,"src":"4797:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"4797:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4784:27:3"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":827,"src":"4836:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":810,"name":"bool","nodeType":"ElementaryTypeName","src":"4836:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4835:6:3"},"scope":1247,"src":"4767:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2113],"body":{"id":850,"nodeType":"Block","src":"5092:106:3","statements":[{"assignments":[839],"declarations":[{"constant":false,"id":839,"mutability":"mutable","name":"$","nameLocation":"5123:1:3","nodeType":"VariableDeclaration","scope":850,"src":"5102:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":838,"nodeType":"UserDefinedTypeName","pathNode":{"id":837,"name":"ERC20Storage","nameLocations":["5102:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"5102:12:3"},"referencedDeclaration":671,"src":"5102:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":842,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":840,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5127:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5127:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5102:43:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":843,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5162:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5164:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":664,"src":"5162:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":846,"indexExpression":{"id":845,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"5176:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":848,"indexExpression":{"id":847,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"5183:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":836,"id":849,"nodeType":"Return","src":"5155:36:3"}]},"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"4951:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":851,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"5012:9:3","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"owner","nameLocation":"5030:5:3","nodeType":"VariableDeclaration","scope":851,"src":"5022:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"5022:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"spender","nameLocation":"5045:7:3","nodeType":"VariableDeclaration","scope":851,"src":"5037:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"5037:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5021:32:3"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"5083:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"5083:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5082:9:3"},"scope":1247,"src":"5003:195:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2123],"body":{"id":874,"nodeType":"Block","src":"5584:107:3","statements":[{"assignments":[862],"declarations":[{"constant":false,"id":862,"mutability":"mutable","name":"owner","nameLocation":"5602:5:3","nodeType":"VariableDeclaration","scope":874,"src":"5594:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"5594:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":865,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":863,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5610:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5594:28:3"},{"expression":{"arguments":[{"id":867,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5641:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"5648:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"5657:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":866,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1130,"src":"5632:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"ExpressionStatement","src":"5632:31:3"},{"expression":{"hexValue":"74727565","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5680:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":860,"id":873,"nodeType":"Return","src":"5673:11:3"}]},"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"5204:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":875,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5514:7:3","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"spender","nameLocation":"5530:7:3","nodeType":"VariableDeclaration","scope":875,"src":"5522:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"5522:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"value","nameLocation":"5547:5:3","nodeType":"VariableDeclaration","scope":875,"src":"5539:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"5539:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5521:32:3"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":875,"src":"5578:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":858,"name":"bool","nodeType":"ElementaryTypeName","src":"5578:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5577:6:3"},"scope":1247,"src":"5505:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2135],"body":{"id":906,"nodeType":"Block","src":"6344:151:3","statements":[{"assignments":[888],"declarations":[{"constant":false,"id":888,"mutability":"mutable","name":"spender","nameLocation":"6362:7:3","nodeType":"VariableDeclaration","scope":906,"src":"6354:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"6354:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":891,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":889,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"6372:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6372:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6354:30:3"},{"expression":{"arguments":[{"id":893,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6410:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":894,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"6416:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6425:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":892,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"6394:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6394:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":897,"nodeType":"ExpressionStatement","src":"6394:37:3"},{"expression":{"arguments":[{"id":899,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6451:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":900,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"6457:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6461:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":898,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"6441:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6441:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":903,"nodeType":"ExpressionStatement","src":"6441:26:3"},{"expression":{"hexValue":"74727565","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6484:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":886,"id":905,"nodeType":"Return","src":"6477:11:3"}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"5697:549:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":907,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6260:12:3","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"from","nameLocation":"6281:4:3","nodeType":"VariableDeclaration","scope":907,"src":"6273:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"6273:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":880,"mutability":"mutable","name":"to","nameLocation":"6295:2:3","nodeType":"VariableDeclaration","scope":907,"src":"6287:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"6287:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"value","nameLocation":"6307:5:3","nodeType":"VariableDeclaration","scope":907,"src":"6299:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"6299:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6272:41:3"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":907,"src":"6338:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":884,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6337:6:3"},"scope":1247,"src":"6251:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":953,"nodeType":"Block","src":"6937:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6951:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6967:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6959:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"6959:7:3","typeDescriptions":{}}},"id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6959:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6951:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":931,"nodeType":"IfStatement","src":"6947:86:3","trueBody":{"id":930,"nodeType":"Block","src":"6971:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7019:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7011:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"7011:7:3","typeDescriptions":{}}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":923,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"6992:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6992:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":929,"nodeType":"RevertStatement","src":"6985:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":932,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7046:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7060:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7052:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"7052:7:3","typeDescriptions":{}}},"id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7052:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7046:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":946,"nodeType":"IfStatement","src":"7042:86:3","trueBody":{"id":945,"nodeType":"Block","src":"7064:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7114:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7106:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"7106:7:3","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":938,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"7085:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7085:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"RevertStatement","src":"7078:39:3"}]}},{"expression":{"arguments":[{"id":948,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"7145:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":949,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7151:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"7155:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":947,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"7137:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7137:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"ExpressionStatement","src":"7137:24:3"}]},"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"6501:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":954,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6877:9:3","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"from","nameLocation":"6895:4:3","nodeType":"VariableDeclaration","scope":954,"src":"6887:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"6887:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"to","nameLocation":"6909:2:3","nodeType":"VariableDeclaration","scope":954,"src":"6901:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"6901:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"value","nameLocation":"6921:5:3","nodeType":"VariableDeclaration","scope":954,"src":"6913:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"6913:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6886:41:3"},"returnParameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"6937:0:3"},"scope":1247,"src":"6868:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1045,"nodeType":"Block","src":"7558:1095:3","statements":[{"assignments":[966],"declarations":[{"constant":false,"id":966,"mutability":"mutable","name":"$","nameLocation":"7589:1:3","nodeType":"VariableDeclaration","scope":1045,"src":"7568:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":965,"nodeType":"UserDefinedTypeName","pathNode":{"id":964,"name":"ERC20Storage","nameLocations":["7568:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"7568:12:3"},"referencedDeclaration":671,"src":"7568:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":969,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":967,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"7593:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7568:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":970,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7625:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7641:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7633:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"7633:7:3","typeDescriptions":{}}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7633:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7625:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1012,"nodeType":"Block","src":"7801:366:3","statements":[{"assignments":[984],"declarations":[{"constant":false,"id":984,"mutability":"mutable","name":"fromBalance","nameLocation":"7823:11:3","nodeType":"VariableDeclaration","scope":1012,"src":"7815:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"7815:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":989,"initialValue":{"baseExpression":{"expression":{"id":985,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"7837:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7839:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"7837:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":988,"indexExpression":{"id":987,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7849:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7837:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7815:39:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7872:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7886:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7872:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1000,"nodeType":"IfStatement","src":"7868:115:3","trueBody":{"id":999,"nodeType":"Block","src":"7893:90:3","statements":[{"errorCall":{"arguments":[{"id":994,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7943:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7949:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7962:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":993,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"7918:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7918:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":998,"nodeType":"RevertStatement","src":"7911:57:3"}]}},{"id":1011,"nodeType":"UncheckedBlock","src":"7996:161:3","statements":[{"expression":{"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1001,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8103:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8105:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"8103:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1005,"indexExpression":{"id":1003,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"8115:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8103:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1006,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"8123:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8137:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8123:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8103:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1010,"nodeType":"ExpressionStatement","src":"8103:39:3"}]}]},"id":1013,"nodeType":"IfStatement","src":"7621:546:3","trueBody":{"id":982,"nodeType":"Block","src":"7645:150:3","statements":[{"expression":{"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":976,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"7761:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7763:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"7761:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7779:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7761:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ExpressionStatement","src":"7761:23:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1014,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8181:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8195:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8187:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"8187:7:3","typeDescriptions":{}}},"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8187:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8181:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1037,"nodeType":"Block","src":"8398:208:3","statements":[{"id":1036,"nodeType":"UncheckedBlock","src":"8412:184:3","statements":[{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1028,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8557:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8559:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"8557:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1032,"indexExpression":{"id":1030,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8569:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8557:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8576:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8557:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1035,"nodeType":"ExpressionStatement","src":"8557:24:3"}]}]},"id":1038,"nodeType":"IfStatement","src":"8177:429:3","trueBody":{"id":1027,"nodeType":"Block","src":"8199:193:3","statements":[{"id":1026,"nodeType":"UncheckedBlock","src":"8213:169:3","statements":[{"expression":{"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1020,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8344:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8346:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"8344:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8362:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8344:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1025,"nodeType":"ExpressionStatement","src":"8344:23:3"}]}]}},{"eventCall":{"arguments":[{"id":1040,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"8630:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8636:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8640:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1039,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"8621:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8621:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"EmitStatement","src":"8616:30:3"}]},"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"7174:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7492:7:3","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"from","nameLocation":"7508:4:3","nodeType":"VariableDeclaration","scope":1046,"src":"7500:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"7500:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"to","nameLocation":"7522:2:3","nodeType":"VariableDeclaration","scope":1046,"src":"7514:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"7514:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"value","nameLocation":"7534:5:3","nodeType":"VariableDeclaration","scope":1046,"src":"7526:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"7526:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7499:41:3"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"7558:0:3"},"scope":1247,"src":"7483:1170:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1078,"nodeType":"Block","src":"9052:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"9066:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9077:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"9077:7:3","typeDescriptions":{}}},"id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9077:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9066:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1068,"nodeType":"IfStatement","src":"9062:91:3","trueBody":{"id":1067,"nodeType":"Block","src":"9089:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9139:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9131:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"9131:7:3","typeDescriptions":{}}},"id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9131:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1060,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"9110:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9110:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1066,"nodeType":"RevertStatement","src":"9103:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9170:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"9170:7:3","typeDescriptions":{}}},"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9170:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"9182:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"9191:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1069,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"9162:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9162:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"ExpressionStatement","src":"9162:35:3"}]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"8659:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9005:5:3","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"account","nameLocation":"9019:7:3","nodeType":"VariableDeclaration","scope":1079,"src":"9011:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"9011:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"value","nameLocation":"9036:5:3","nodeType":"VariableDeclaration","scope":1079,"src":"9028:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"9028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9010:32:3"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"9052:0:3"},"scope":1247,"src":"8996:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1111,"nodeType":"Block","src":"9578:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1087,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9592:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9611:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9603:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"9603:7:3","typeDescriptions":{}}},"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9603:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9592:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1101,"nodeType":"IfStatement","src":"9588:89:3","trueBody":{"id":1100,"nodeType":"Block","src":"9615:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9663:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"9655:7:3","typeDescriptions":{}}},"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9655:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1093,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"9636:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9636:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"RevertStatement","src":"9629:37:3"}]}},{"expression":{"arguments":[{"id":1103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9694:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9711:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9703:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"9703:7:3","typeDescriptions":{}}},"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9703:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"9715:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1102,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"9686:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9686:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1110,"nodeType":"ExpressionStatement","src":"9686:35:3"}]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"9210:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1112,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9531:5:3","nodeType":"FunctionDefinition","parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"account","nameLocation":"9545:7:3","nodeType":"VariableDeclaration","scope":1112,"src":"9537:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"9537:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"value","nameLocation":"9562:5:3","nodeType":"VariableDeclaration","scope":1112,"src":"9554:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"9554:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9536:32:3"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[],"src":"9578:0:3"},"scope":1247,"src":"9522:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1129,"nodeType":"Block","src":"10338:54:3","statements":[{"expression":{"arguments":[{"id":1123,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"10357:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1124,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"10364:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"10373:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10380:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1122,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1198,"src":"10348:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10348:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1128,"nodeType":"ExpressionStatement","src":"10348:37:3"}]},"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"9734:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10273:8:3","nodeType":"FunctionDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"owner","nameLocation":"10290:5:3","nodeType":"VariableDeclaration","scope":1130,"src":"10282:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"10282:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"spender","nameLocation":"10305:7:3","nodeType":"VariableDeclaration","scope":1130,"src":"10297:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"10297:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"value","nameLocation":"10322:5:3","nodeType":"VariableDeclaration","scope":1130,"src":"10314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"10314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10281:47:3"},"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[],"src":"10338:0:3"},"scope":1247,"src":"10264:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1197,"nodeType":"Block","src":"11322:389:3","statements":[{"assignments":[1144],"declarations":[{"constant":false,"id":1144,"mutability":"mutable","name":"$","nameLocation":"11353:1:3","nodeType":"VariableDeclaration","scope":1197,"src":"11332:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1143,"nodeType":"UserDefinedTypeName","pathNode":{"id":1142,"name":"ERC20Storage","nameLocations":["11332:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"11332:12:3"},"referencedDeclaration":671,"src":"11332:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1147,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1145,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"11357:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11357:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11332:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1148,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11389:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11406:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11398:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"11398:7:3","typeDescriptions":{}}},"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11398:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11389:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1162,"nodeType":"IfStatement","src":"11385:89:3","trueBody":{"id":1161,"nodeType":"Block","src":"11410:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11460:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11452:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"11452:7:3","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11452:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1154,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"11431:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11431:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1160,"nodeType":"RevertStatement","src":"11424:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1163,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11487:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11506:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11498:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"11498:7:3","typeDescriptions":{}}},"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11498:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11487:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1177,"nodeType":"IfStatement","src":"11483:90:3","trueBody":{"id":1176,"nodeType":"Block","src":"11510:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11559:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11551:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:3","typeDescriptions":{}}},"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11551:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1169,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"11531:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11531:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1175,"nodeType":"RevertStatement","src":"11524:38:3"}]}},{"expression":{"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"11582:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11584:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":664,"src":"11582:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1183,"indexExpression":{"id":1180,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11596:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11582:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1184,"indexExpression":{"id":1181,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11603:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11582:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"11614:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11582:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1187,"nodeType":"ExpressionStatement","src":"11582:37:3"},{"condition":{"id":1188,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"11633:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"11629:76:3","trueBody":{"id":1195,"nodeType":"Block","src":"11644:61:3","statements":[{"eventCall":{"arguments":[{"id":1190,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11672:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1191,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11679:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"11688:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"11663:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11663:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1194,"nodeType":"EmitStatement","src":"11658:36:3"}]}}]},"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"10398:821:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"11233:8:3","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"owner","nameLocation":"11250:5:3","nodeType":"VariableDeclaration","scope":1198,"src":"11242:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"11242:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"spender","nameLocation":"11265:7:3","nodeType":"VariableDeclaration","scope":1198,"src":"11257:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"11257:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"value","nameLocation":"11282:5:3","nodeType":"VariableDeclaration","scope":1198,"src":"11274:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"11274:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"emitEvent","nameLocation":"11294:9:3","nodeType":"VariableDeclaration","scope":1198,"src":"11289:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1138,"name":"bool","nodeType":"ElementaryTypeName","src":"11289:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11241:63:3"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"11322:0:3"},"scope":1247,"src":"11224:487:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1245,"nodeType":"Block","src":"12082:388:3","statements":[{"assignments":[1209],"declarations":[{"constant":false,"id":1209,"mutability":"mutable","name":"currentAllowance","nameLocation":"12100:16:3","nodeType":"VariableDeclaration","scope":1245,"src":"12092:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"12092:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1214,"initialValue":{"arguments":[{"id":1211,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"12129:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1212,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12136:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1210,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"12119:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12119:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12092:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1215,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12158:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12183:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"12183:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1216,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12178:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12178:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12192:3:3","memberName":"max","nodeType":"MemberAccess","src":"12178:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12158:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1244,"nodeType":"IfStatement","src":"12154:310:3","trueBody":{"id":1243,"nodeType":"Block","src":"12197:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12215:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12234:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12215:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1232,"nodeType":"IfStatement","src":"12211:130:3","trueBody":{"id":1231,"nodeType":"Block","src":"12241:100:3","statements":[{"errorCall":{"arguments":[{"id":1226,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12293:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1227,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12302:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12320:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1225,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"12266:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1230,"nodeType":"RevertStatement","src":"12259:67:3"}]}},{"id":1242,"nodeType":"UncheckedBlock","src":"12354:100:3","statements":[{"expression":{"arguments":[{"id":1234,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"12391:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1235,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12398:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12407:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12426:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12407:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12433:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1233,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1198,"src":"12382:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1241,"nodeType":"ExpressionStatement","src":"12382:57:3"}]}]}}]},"documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"11717:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"12002:15:3","nodeType":"FunctionDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"owner","nameLocation":"12026:5:3","nodeType":"VariableDeclaration","scope":1246,"src":"12018:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"12018:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"spender","nameLocation":"12041:7:3","nodeType":"VariableDeclaration","scope":1246,"src":"12033:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"12033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1205,"mutability":"mutable","name":"value","nameLocation":"12058:5:3","nodeType":"VariableDeclaration","scope":1246,"src":"12050:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"12050:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12017:47:3"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[],"src":"12082:0:3"},"scope":1247,"src":"11993:477:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1248,"src":"1576:10896:3","usedErrors":[211,214,1620,1625,1630,1639,1644,1649],"usedEvents":[219,2070,2079]}],"src":"105:12368:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"Initializable":[448]},"id":1294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1249,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":449,"src":"126:63:4","symbolAliases":[{"foreign":{"id":1250,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1253,"name":"Initializable","nameLocations":["728:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:4"},"id":1254,"nodeType":"InheritanceSpecifier","src":"728:13:4"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"191:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1293,"linearizedBaseContracts":[1293,448],"name":"ContextUpgradeable","nameLocation":"706:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1259,"nodeType":"Block","src":"800:7:4","statements":[]},"id":1260,"implemented":true,"kind":"function","modifiers":[{"id":1257,"kind":"modifierInvocation","modifierName":{"id":1256,"name":"onlyInitializing","nameLocations":["783:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:4"},"nodeType":"ModifierInvocation","src":"783:16:4"}],"name":"__Context_init","nameLocation":"757:14:4","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[],"src":"771:2:4"},"returnParameters":{"id":1258,"nodeType":"ParameterList","parameters":[],"src":"800:0:4"},"scope":1293,"src":"748:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1265,"nodeType":"Block","src":"875:7:4","statements":[]},"id":1266,"implemented":true,"kind":"function","modifiers":[{"id":1263,"kind":"modifierInvocation","modifierName":{"id":1262,"name":"onlyInitializing","nameLocations":["858:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:4"},"nodeType":"ModifierInvocation","src":"858:16:4"}],"name":"__Context_init_unchained","nameLocation":"822:24:4","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"846:2:4"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[],"src":"875:0:4"},"scope":1293,"src":"813:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1274,"nodeType":"Block","src":"949:34:4","statements":[{"expression":{"expression":{"id":1271,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:4","memberName":"sender","nodeType":"MemberAccess","src":"966:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1270,"id":1273,"nodeType":"Return","src":"959:17:4"}]},"id":1275,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:4","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[],"src":"906:2:4"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"940:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:4"},"scope":1293,"src":"887:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"1056:32:4","statements":[{"expression":{"expression":{"id":1280,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:4","memberName":"data","nodeType":"MemberAccess","src":"1073:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1279,"id":1282,"nodeType":"Return","src":"1066:15:4"}]},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:4","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"1006:2:4"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1284,"src":"1040:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1277,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:4"},"scope":1293,"src":"989:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1291,"nodeType":"Block","src":"1166:25:4","statements":[{"expression":{"hexValue":"30","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1288,"id":1290,"nodeType":"Return","src":"1176:8:4"}]},"id":1292,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:4","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[],"src":"1123:2:4"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1292,"src":"1157:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:4"},"scope":1293,"src":"1094:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1294,"src":"688:505:4","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"Initializable":[448],"PausableUpgradeable":[1469]},"id":1470,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1295,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":1297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1470,"sourceUnit":1294,"src":"128:67:5","symbolAliases":[{"foreign":{"id":1296,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"136:18:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1470,"sourceUnit":449,"src":"196:63:5","symbolAliases":[{"foreign":{"id":1298,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1301,"name":"Initializable","nameLocations":["742:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"742:13:5"},"id":1302,"nodeType":"InheritanceSpecifier","src":"742:13:5"},{"baseName":{"id":1303,"name":"ContextUpgradeable","nameLocations":["757:18:5"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"757:18:5"},"id":1304,"nodeType":"InheritanceSpecifier","src":"757:18:5"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1300,"nodeType":"StructuredDocumentation","src":"261:439:5","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1469,"linearizedBaseContracts":[1469,1293,448],"name":"PausableUpgradeable","nameLocation":"719:19:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PausableUpgradeable.PausableStorage","documentation":{"id":1305,"nodeType":"StructuredDocumentation","src":"782:66:5","text":"@custom:storage-location erc7201:openzeppelin.storage.Pausable"},"id":1308,"members":[{"constant":false,"id":1307,"mutability":"mutable","name":"_paused","nameLocation":"891:7:5","nodeType":"VariableDeclaration","scope":1308,"src":"886:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1306,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PausableStorage","nameLocation":"860:15:5","nodeType":"StructDefinition","scope":1469,"src":"853:52:5","visibility":"public"},{"constant":true,"id":1311,"mutability":"constant","name":"PausableStorageLocation","nameLocation":"1048:23:5","nodeType":"VariableDeclaration","scope":1469,"src":"1023:117:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1023:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1074:66:5","typeDescriptions":{"typeIdentifier":"t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1","typeString":"int_const 9289...(69 digits omitted)...6832"},"value":"0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"},"visibility":"private"},{"body":{"id":1318,"nodeType":"Block","src":"1227:82:5","statements":[{"AST":{"nativeSrc":"1246:57:5","nodeType":"YulBlock","src":"1246:57:5","statements":[{"nativeSrc":"1260:33:5","nodeType":"YulAssignment","src":"1260:33:5","value":{"name":"PausableStorageLocation","nativeSrc":"1270:23:5","nodeType":"YulIdentifier","src":"1270:23:5"},"variableNames":[{"name":"$.slot","nativeSrc":"1260:6:5","nodeType":"YulIdentifier","src":"1260:6:5"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1315,"isOffset":false,"isSlot":true,"src":"1260:6:5","suffix":"slot","valueSize":1},{"declaration":1311,"isOffset":false,"isSlot":false,"src":"1270:23:5","valueSize":1}],"id":1317,"nodeType":"InlineAssembly","src":"1237:66:5"}]},"id":1319,"implemented":true,"kind":"function","modifiers":[],"name":"_getPausableStorage","nameLocation":"1156:19:5","nodeType":"FunctionDefinition","parameters":{"id":1312,"nodeType":"ParameterList","parameters":[],"src":"1175:2:5"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"$","nameLocation":"1224:1:5","nodeType":"VariableDeclaration","scope":1319,"src":"1200:25:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1314,"nodeType":"UserDefinedTypeName","pathNode":{"id":1313,"name":"PausableStorage","nameLocations":["1200:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1308,"src":"1200:15:5"},"referencedDeclaration":1308,"src":"1200:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"src":"1199:27:5"},"scope":1469,"src":"1147:162:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"1315:73:5","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1324,"name":"Paused","nameLocation":"1399:6:5","nodeType":"EventDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1414:7:5","nodeType":"VariableDeclaration","scope":1324,"src":"1406:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:17:5"},"src":"1393:30:5"},{"anonymous":false,"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"1429:70:5","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1329,"name":"Unpaused","nameLocation":"1510:8:5","nodeType":"EventDefinition","parameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1527:7:5","nodeType":"VariableDeclaration","scope":1329,"src":"1519:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:17:5"},"src":"1504:32:5"},{"documentation":{"id":1330,"nodeType":"StructuredDocumentation","src":"1542:76:5","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1332,"name":"EnforcedPause","nameLocation":"1629:13:5","nodeType":"ErrorDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[],"src":"1642:2:5"},"src":"1623:22:5"},{"documentation":{"id":1333,"nodeType":"StructuredDocumentation","src":"1651:80:5","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1335,"name":"ExpectedPause","nameLocation":"1742:13:5","nodeType":"ErrorDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[],"src":"1755:2:5"},"src":"1736:22:5"},{"body":{"id":1344,"nodeType":"Block","src":"1889:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1341,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"1899:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1899:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1343,"nodeType":"ExpressionStatement","src":"1899:27:5"}]},"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"1764:67:5","text":" @dev Initializes the contract in unpaused state."},"id":1345,"implemented":true,"kind":"function","modifiers":[{"id":1339,"kind":"modifierInvocation","modifierName":{"id":1338,"name":"onlyInitializing","nameLocations":["1872:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1872:16:5"},"nodeType":"ModifierInvocation","src":"1872:16:5"}],"name":"__Pausable_init","nameLocation":"1845:15:5","nodeType":"FunctionDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[],"src":"1860:2:5"},"returnParameters":{"id":1340,"nodeType":"ParameterList","parameters":[],"src":"1889:0:5"},"scope":1469,"src":"1836:97:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1362,"nodeType":"Block","src":"2002:93:5","statements":[{"assignments":[1352],"declarations":[{"constant":false,"id":1352,"mutability":"mutable","name":"$","nameLocation":"2036:1:5","nodeType":"VariableDeclaration","scope":1362,"src":"2012:25:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1351,"nodeType":"UserDefinedTypeName","pathNode":{"id":1350,"name":"PausableStorage","nameLocations":["2012:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1308,"src":"2012:15:5"},"referencedDeclaration":1308,"src":"2012:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1355,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1353,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"2040:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1308_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2040:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2012:49:5"},{"expression":{"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1356,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"2071:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2073:7:5","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1307,"src":"2071:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2083:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2071:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1361,"nodeType":"ExpressionStatement","src":"2071:17:5"}]},"id":1363,"implemented":true,"kind":"function","modifiers":[{"id":1348,"kind":"modifierInvocation","modifierName":{"id":1347,"name":"onlyInitializing","nameLocations":["1985:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1985:16:5"},"nodeType":"ModifierInvocation","src":"1985:16:5"}],"name":"__Pausable_init_unchained","nameLocation":"1948:25:5","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[],"src":"1973:2:5"},"returnParameters":{"id":1349,"nodeType":"ParameterList","parameters":[],"src":"2002:0:5"},"scope":1469,"src":"1939:156:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1370,"nodeType":"Block","src":"2306:47:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1366,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2316:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1368,"nodeType":"ExpressionStatement","src":"2316:19:5"},{"id":1369,"nodeType":"PlaceholderStatement","src":"2345:1:5"}]},"documentation":{"id":1364,"nodeType":"StructuredDocumentation","src":"2101:175:5","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1371,"name":"whenNotPaused","nameLocation":"2290:13:5","nodeType":"ModifierDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[],"src":"2303:2:5"},"src":"2281:72:5","virtual":false,"visibility":"internal"},{"body":{"id":1378,"nodeType":"Block","src":"2553:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1374,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"2563:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1376,"nodeType":"ExpressionStatement","src":"2563:16:5"},{"id":1377,"nodeType":"PlaceholderStatement","src":"2589:1:5"}]},"documentation":{"id":1372,"nodeType":"StructuredDocumentation","src":"2359:167:5","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1379,"name":"whenPaused","nameLocation":"2540:10:5","nodeType":"ModifierDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[],"src":"2550:2:5"},"src":"2531:66:5","virtual":false,"visibility":"internal"},{"body":{"id":1394,"nodeType":"Block","src":"2745:92:5","statements":[{"assignments":[1387],"declarations":[{"constant":false,"id":1387,"mutability":"mutable","name":"$","nameLocation":"2779:1:5","nodeType":"VariableDeclaration","scope":1394,"src":"2755:25:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1386,"nodeType":"UserDefinedTypeName","pathNode":{"id":1385,"name":"PausableStorage","nameLocations":["2755:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1308,"src":"2755:15:5"},"referencedDeclaration":1308,"src":"2755:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1390,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1388,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"2783:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1308_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2755:49:5"},{"expression":{"expression":{"id":1391,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"2821:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2823:7:5","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1307,"src":"2821:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1384,"id":1393,"nodeType":"Return","src":"2814:16:5"}]},"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"2603:84:5","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1395,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"2701:6:5","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[],"src":"2707:2:5"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"2739:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1382,"name":"bool","nodeType":"ElementaryTypeName","src":"2739:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2738:6:5"},"scope":1469,"src":"2692:145:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1406,"nodeType":"Block","src":"2956:77:5","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1399,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"2970:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1405,"nodeType":"IfStatement","src":"2966:61:5","trueBody":{"id":1404,"nodeType":"Block","src":"2980:47:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1401,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"3001:13:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3001:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1403,"nodeType":"RevertStatement","src":"2994:22:5"}]}}]},"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"2843:57:5","text":" @dev Throws if the contract is paused."},"id":1407,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2914:17:5","nodeType":"FunctionDefinition","parameters":{"id":1397,"nodeType":"ParameterList","parameters":[],"src":"2931:2:5"},"returnParameters":{"id":1398,"nodeType":"ParameterList","parameters":[],"src":"2956:0:5"},"scope":1469,"src":"2905:128:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1419,"nodeType":"Block","src":"3153:78:5","statements":[{"condition":{"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3167:9:5","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1411,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"3168:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"3163:62:5","trueBody":{"id":1417,"nodeType":"Block","src":"3178:47:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1414,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"3199:13:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"RevertStatement","src":"3192:22:5"}]}}]},"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"3039:61:5","text":" @dev Throws if the contract is not paused."},"id":1420,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"3114:14:5","nodeType":"FunctionDefinition","parameters":{"id":1409,"nodeType":"ParameterList","parameters":[],"src":"3128:2:5"},"returnParameters":{"id":1410,"nodeType":"ParameterList","parameters":[],"src":"3153:0:5"},"scope":1469,"src":"3105:126:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1443,"nodeType":"Block","src":"3415:127:5","statements":[{"assignments":[1428],"declarations":[{"constant":false,"id":1428,"mutability":"mutable","name":"$","nameLocation":"3449:1:5","nodeType":"VariableDeclaration","scope":1443,"src":"3425:25:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1427,"nodeType":"UserDefinedTypeName","pathNode":{"id":1426,"name":"PausableStorage","nameLocations":["3425:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1308,"src":"3425:15:5"},"referencedDeclaration":1308,"src":"3425:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1431,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1429,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3453:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1308_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3453:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3425:49:5"},{"expression":{"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1432,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"3484:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3486:7:5","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1307,"src":"3484:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3496:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3484:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1437,"nodeType":"ExpressionStatement","src":"3484:16:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1439,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"3522:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3522:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1438,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"3515:6:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3515:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1442,"nodeType":"EmitStatement","src":"3510:25:5"}]},"documentation":{"id":1421,"nodeType":"StructuredDocumentation","src":"3237:124:5","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1444,"implemented":true,"kind":"function","modifiers":[{"id":1424,"kind":"modifierInvocation","modifierName":{"id":1423,"name":"whenNotPaused","nameLocations":["3401:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"3401:13:5"},"nodeType":"ModifierInvocation","src":"3401:13:5"}],"name":"_pause","nameLocation":"3375:6:5","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[],"src":"3381:2:5"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[],"src":"3415:0:5"},"scope":1469,"src":"3366:176:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1467,"nodeType":"Block","src":"3722:130:5","statements":[{"assignments":[1452],"declarations":[{"constant":false,"id":1452,"mutability":"mutable","name":"$","nameLocation":"3756:1:5","nodeType":"VariableDeclaration","scope":1467,"src":"3732:25:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1451,"nodeType":"UserDefinedTypeName","pathNode":{"id":1450,"name":"PausableStorage","nameLocations":["3732:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1308,"src":"3732:15:5"},"referencedDeclaration":1308,"src":"3732:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1455,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1453,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3760:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1308_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3760:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3732:49:5"},{"expression":{"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1456,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"3791:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3793:7:5","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1307,"src":"3791:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3803:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3791:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1461,"nodeType":"ExpressionStatement","src":"3791:17:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1463,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"3832:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3832:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1462,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"3823:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1466,"nodeType":"EmitStatement","src":"3818:27:5"}]},"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"3548:121:5","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1468,"implemented":true,"kind":"function","modifiers":[{"id":1448,"kind":"modifierInvocation","modifierName":{"id":1447,"name":"whenPaused","nameLocations":["3711:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":1379,"src":"3711:10:5"},"nodeType":"ModifierInvocation","src":"3711:10:5"}],"name":"_unpause","nameLocation":"3683:8:5","nodeType":"FunctionDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[],"src":"3691:2:5"},"returnParameters":{"id":1449,"nodeType":"ParameterList","parameters":[],"src":"3722:0:5"},"scope":1469,"src":"3674:178:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1470,"src":"701:3153:5","usedErrors":[211,214,1332,1335],"usedEvents":[219,1324,1329]}],"src":"102:3753:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"Initializable":[448],"ReentrancyGuardUpgradeable":[1598]},"id":1599,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1471,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1473,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1599,"sourceUnit":449,"src":"134:63:6","symbolAliases":[{"foreign":{"id":1472,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"142:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1475,"name":"Initializable","nameLocations":["998:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"998:13:6"},"id":1476,"nodeType":"InheritanceSpecifier","src":"998:13:6"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"199:750:6","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1598,"linearizedBaseContracts":[1598,448],"name":"ReentrancyGuardUpgradeable","nameLocation":"968:26:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1479,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1791:11:6","nodeType":"VariableDeclaration","scope":1598,"src":"1766:40:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"1766:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1805:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1482,"mutability":"constant","name":"ENTERED","nameLocation":"1837:7:6","nodeType":"VariableDeclaration","scope":1598,"src":"1812:36:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1812:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1847:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"canonicalName":"ReentrancyGuardUpgradeable.ReentrancyGuardStorage","documentation":{"id":1483,"nodeType":"StructuredDocumentation","src":"1855:73:6","text":"@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"},"id":1486,"members":[{"constant":false,"id":1485,"mutability":"mutable","name":"_status","nameLocation":"1981:7:6","nodeType":"VariableDeclaration","scope":1486,"src":"1973:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1973:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReentrancyGuardStorage","nameLocation":"1940:22:6","nodeType":"StructDefinition","scope":1598,"src":"1933:62:6","visibility":"public"},{"constant":true,"id":1489,"mutability":"constant","name":"ReentrancyGuardStorageLocation","nameLocation":"2145:30:6","nodeType":"VariableDeclaration","scope":1598,"src":"2120:124:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2120:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2178:66:6","typeDescriptions":{"typeIdentifier":"t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1","typeString":"int_const 7031...(69 digits omitted)...8416"},"value":"0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"},"visibility":"private"},{"body":{"id":1496,"nodeType":"Block","src":"2345:89:6","statements":[{"AST":{"nativeSrc":"2364:64:6","nodeType":"YulBlock","src":"2364:64:6","statements":[{"nativeSrc":"2378:40:6","nodeType":"YulAssignment","src":"2378:40:6","value":{"name":"ReentrancyGuardStorageLocation","nativeSrc":"2388:30:6","nodeType":"YulIdentifier","src":"2388:30:6"},"variableNames":[{"name":"$.slot","nativeSrc":"2378:6:6","nodeType":"YulIdentifier","src":"2378:6:6"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1493,"isOffset":false,"isSlot":true,"src":"2378:6:6","suffix":"slot","valueSize":1},{"declaration":1489,"isOffset":false,"isSlot":false,"src":"2388:30:6","valueSize":1}],"id":1495,"nodeType":"InlineAssembly","src":"2355:73:6"}]},"id":1497,"implemented":true,"kind":"function","modifiers":[],"name":"_getReentrancyGuardStorage","nameLocation":"2260:26:6","nodeType":"FunctionDefinition","parameters":{"id":1490,"nodeType":"ParameterList","parameters":[],"src":"2286:2:6"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"$","nameLocation":"2342:1:6","nodeType":"VariableDeclaration","scope":1497,"src":"2311:32:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1492,"nodeType":"UserDefinedTypeName","pathNode":{"id":1491,"name":"ReentrancyGuardStorage","nameLocations":["2311:22:6"],"nodeType":"IdentifierPath","referencedDeclaration":1486,"src":"2311:22:6"},"referencedDeclaration":1486,"src":"2311:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"src":"2310:34:6"},"scope":1598,"src":"2251:183:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":1498,"nodeType":"StructuredDocumentation","src":"2440:52:6","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1500,"name":"ReentrancyGuardReentrantCall","nameLocation":"2503:28:6","nodeType":"ErrorDefinition","parameters":{"id":1499,"nodeType":"ParameterList","parameters":[],"src":"2531:2:6"},"src":"2497:37:6"},{"body":{"id":1508,"nodeType":"Block","src":"2600:51:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1505,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"2610:32:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2610:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1507,"nodeType":"ExpressionStatement","src":"2610:34:6"}]},"id":1509,"implemented":true,"kind":"function","modifiers":[{"id":1503,"kind":"modifierInvocation","modifierName":{"id":1502,"name":"onlyInitializing","nameLocations":["2583:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2583:16:6"},"nodeType":"ModifierInvocation","src":"2583:16:6"}],"name":"__ReentrancyGuard_init","nameLocation":"2549:22:6","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[],"src":"2571:2:6"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[],"src":"2600:0:6"},"scope":1598,"src":"2540:111:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1526,"nodeType":"Block","src":"2727:113:6","statements":[{"assignments":[1516],"declarations":[{"constant":false,"id":1516,"mutability":"mutable","name":"$","nameLocation":"2768:1:6","nodeType":"VariableDeclaration","scope":1526,"src":"2737:32:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1515,"nodeType":"UserDefinedTypeName","pathNode":{"id":1514,"name":"ReentrancyGuardStorage","nameLocations":["2737:22:6"],"nodeType":"IdentifierPath","referencedDeclaration":1486,"src":"2737:22:6"},"referencedDeclaration":1486,"src":"2737:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1519,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1517,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"2772:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1486_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2737:63:6"},{"expression":{"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1520,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2810:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2812:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1485,"src":"2810:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1523,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"2822:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2810:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1525,"nodeType":"ExpressionStatement","src":"2810:23:6"}]},"id":1527,"implemented":true,"kind":"function","modifiers":[{"id":1512,"kind":"modifierInvocation","modifierName":{"id":1511,"name":"onlyInitializing","nameLocations":["2710:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2710:16:6"},"nodeType":"ModifierInvocation","src":"2710:16:6"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2666:32:6","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[],"src":"2698:2:6"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"2727:0:6"},"scope":1598,"src":"2657:183:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1537,"nodeType":"Block","src":"3241:79:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1530,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"3251:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1532,"nodeType":"ExpressionStatement","src":"3251:21:6"},{"id":1533,"nodeType":"PlaceholderStatement","src":"3282:1:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1534,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"3293:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3293:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1536,"nodeType":"ExpressionStatement","src":"3293:20:6"}]},"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"2846:366:6","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1538,"name":"nonReentrant","nameLocation":"3226:12:6","nodeType":"ModifierDefinition","parameters":{"id":1529,"nodeType":"ParameterList","parameters":[],"src":"3238:2:6"},"src":"3217:103:6","virtual":false,"visibility":"internal"},{"body":{"id":1562,"nodeType":"Block","src":"3365:345:6","statements":[{"assignments":[1543],"declarations":[{"constant":false,"id":1543,"mutability":"mutable","name":"$","nameLocation":"3406:1:6","nodeType":"VariableDeclaration","scope":1562,"src":"3375:32:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1542,"nodeType":"UserDefinedTypeName","pathNode":{"id":1541,"name":"ReentrancyGuardStorage","nameLocations":["3375:22:6"],"nodeType":"IdentifierPath","referencedDeclaration":1486,"src":"3375:22:6"},"referencedDeclaration":1486,"src":"3375:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1546,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1544,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3410:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1486_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3375:63:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1547,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"3526:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3528:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1485,"src":"3526:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1549,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"3539:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3526:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1555,"nodeType":"IfStatement","src":"3522:88:6","trueBody":{"id":1554,"nodeType":"Block","src":"3548:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1551,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"3569:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3569:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1553,"nodeType":"RevertStatement","src":"3562:37:6"}]}},{"expression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1556,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"3684:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3686:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1485,"src":"3684:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1559,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"3696:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3684:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1561,"nodeType":"ExpressionStatement","src":"3684:19:6"}]},"id":1563,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"3335:19:6","nodeType":"FunctionDefinition","parameters":{"id":1539,"nodeType":"ParameterList","parameters":[],"src":"3354:2:6"},"returnParameters":{"id":1540,"nodeType":"ParameterList","parameters":[],"src":"3365:0:6"},"scope":1598,"src":"3326:384:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1578,"nodeType":"Block","src":"3754:245:6","statements":[{"assignments":[1568],"declarations":[{"constant":false,"id":1568,"mutability":"mutable","name":"$","nameLocation":"3795:1:6","nodeType":"VariableDeclaration","scope":1578,"src":"3764:32:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1567,"nodeType":"UserDefinedTypeName","pathNode":{"id":1566,"name":"ReentrancyGuardStorage","nameLocations":["3764:22:6"],"nodeType":"IdentifierPath","referencedDeclaration":1486,"src":"3764:22:6"},"referencedDeclaration":1486,"src":"3764:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1571,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1569,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3799:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1486_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3799:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3764:63:6"},{"expression":{"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1572,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"3969:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3971:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1485,"src":"3969:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1575,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"3981:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3969:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1577,"nodeType":"ExpressionStatement","src":"3969:23:6"}]},"id":1579,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"3725:18:6","nodeType":"FunctionDefinition","parameters":{"id":1564,"nodeType":"ParameterList","parameters":[],"src":"3743:2:6"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[],"src":"3754:0:6"},"scope":1598,"src":"3716:283:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1596,"nodeType":"Block","src":"4242:117:6","statements":[{"assignments":[1587],"declarations":[{"constant":false,"id":1587,"mutability":"mutable","name":"$","nameLocation":"4283:1:6","nodeType":"VariableDeclaration","scope":1596,"src":"4252:32:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1586,"nodeType":"UserDefinedTypeName","pathNode":{"id":1585,"name":"ReentrancyGuardStorage","nameLocations":["4252:22:6"],"nodeType":"IdentifierPath","referencedDeclaration":1486,"src":"4252:22:6"},"referencedDeclaration":1486,"src":"4252:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1590,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1588,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"4287:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1486_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4252:63:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1591,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"4332:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4334:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1485,"src":"4332:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1593,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"4345:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4332:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1584,"id":1595,"nodeType":"Return","src":"4325:27:6"}]},"documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"4005:168:6","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"4187:23:6","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[],"src":"4210:2:6"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1597,"src":"4236:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1582,"name":"bool","nodeType":"ElementaryTypeName","src":"4236:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:6:6"},"scope":1598,"src":"4178:181:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1599,"src":"950:3411:6","usedErrors":[211,214,1500],"usedEvents":[219]}],"src":"109:4253:6"},"id":6},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[1608]},"id":1609,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1600,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1601,"nodeType":"StructuredDocumentation","src":"139:203:7","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":1608,"linearizedBaseContracts":[1608],"name":"IERC1822Proxiable","nameLocation":"353:17:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"377:438:7","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":1607,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:7","nodeType":"FunctionDefinition","parameters":{"id":1603,"nodeType":"ParameterList","parameters":[],"src":"842:2:7"},"returnParameters":{"id":1606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1607,"src":"868:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:7"},"scope":1608,"src":"820:57:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1609,"src":"343:536:7","usedErrors":[],"usedEvents":[]}],"src":"113:767:7"},"id":7},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1745],"IERC20Errors":[1650],"IERC721Errors":[1698]},"id":1746,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1610,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1611,"nodeType":"StructuredDocumentation","src":"138:139:8","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":1650,"linearizedBaseContracts":[1650],"name":"IERC20Errors","nameLocation":"288:12:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"307:309:8","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":1620,"name":"ERC20InsufficientBalance","nameLocation":"627:24:8","nodeType":"ErrorDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"sender","nameLocation":"660:6:8","nodeType":"VariableDeclaration","scope":1620,"src":"652:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1613,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1616,"mutability":"mutable","name":"balance","nameLocation":"676:7:8","nodeType":"VariableDeclaration","scope":1620,"src":"668:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1615,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1618,"mutability":"mutable","name":"needed","nameLocation":"693:6:8","nodeType":"VariableDeclaration","scope":1620,"src":"685:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:8"},"src":"621:80:8"},{"documentation":{"id":1621,"nodeType":"StructuredDocumentation","src":"707:152:8","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":1625,"name":"ERC20InvalidSender","nameLocation":"870:18:8","nodeType":"ErrorDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"sender","nameLocation":"897:6:8","nodeType":"VariableDeclaration","scope":1625,"src":"889:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1622,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:8"},"src":"864:41:8"},{"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"911:159:8","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":1630,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:8","nodeType":"ErrorDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:8","nodeType":"VariableDeclaration","scope":1630,"src":"1102:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1627,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:8"},"src":"1075:45:8"},{"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"1126:345:8","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":1639,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:8","nodeType":"ErrorDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"spender","nameLocation":"1517:7:8","nodeType":"VariableDeclaration","scope":1639,"src":"1509:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:8","nodeType":"VariableDeclaration","scope":1639,"src":"1526:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"needed","nameLocation":"1553:6:8","nodeType":"VariableDeclaration","scope":1639,"src":"1545:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:8"},"src":"1476:85:8"},{"documentation":{"id":1640,"nodeType":"StructuredDocumentation","src":"1567:174:8","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":1644,"name":"ERC20InvalidApprover","nameLocation":"1752:20:8","nodeType":"ErrorDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"approver","nameLocation":"1781:8:8","nodeType":"VariableDeclaration","scope":1644,"src":"1773:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1641,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:8"},"src":"1746:45:8"},{"documentation":{"id":1645,"nodeType":"StructuredDocumentation","src":"1797:195:8","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":1649,"name":"ERC20InvalidSpender","nameLocation":"2003:19:8","nodeType":"ErrorDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"spender","nameLocation":"2031:7:8","nodeType":"VariableDeclaration","scope":1649,"src":"2023:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1646,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:8"},"src":"1997:43:8"}],"scope":1746,"src":"278:1764:8","usedErrors":[1620,1625,1630,1639,1644,1649],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"2044:141:8","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":1698,"linearizedBaseContracts":[1698],"name":"IERC721Errors","nameLocation":"2196:13:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1652,"nodeType":"StructuredDocumentation","src":"2216:219:8","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":1656,"name":"ERC721InvalidOwner","nameLocation":"2446:18:8","nodeType":"ErrorDefinition","parameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"owner","nameLocation":"2473:5:8","nodeType":"VariableDeclaration","scope":1656,"src":"2465:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1653,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:8"},"src":"2440:40:8"},{"documentation":{"id":1657,"nodeType":"StructuredDocumentation","src":"2486:132:8","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":1661,"name":"ERC721NonexistentToken","nameLocation":"2629:22:8","nodeType":"ErrorDefinition","parameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:8","nodeType":"VariableDeclaration","scope":1661,"src":"2652:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1658,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:8"},"src":"2623:46:8"},{"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"2675:289:8","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":1670,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:8","nodeType":"ErrorDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"sender","nameLocation":"3004:6:8","nodeType":"VariableDeclaration","scope":1670,"src":"2996:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1663,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1666,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:8","nodeType":"VariableDeclaration","scope":1670,"src":"3012:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1665,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"owner","nameLocation":"3037:5:8","nodeType":"VariableDeclaration","scope":1670,"src":"3029:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:8"},"src":"2969:75:8"},{"documentation":{"id":1671,"nodeType":"StructuredDocumentation","src":"3050:152:8","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":1675,"name":"ERC721InvalidSender","nameLocation":"3213:19:8","nodeType":"ErrorDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"mutability":"mutable","name":"sender","nameLocation":"3241:6:8","nodeType":"VariableDeclaration","scope":1675,"src":"3233:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1672,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:8"},"src":"3207:42:8"},{"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"3255:159:8","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":1680,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:8","nodeType":"ErrorDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:8","nodeType":"VariableDeclaration","scope":1680,"src":"3447:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:8"},"src":"3419:46:8"},{"documentation":{"id":1681,"nodeType":"StructuredDocumentation","src":"3471:247:8","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":1687,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:8","nodeType":"ErrorDefinition","parameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"operator","nameLocation":"3764:8:8","nodeType":"VariableDeclaration","scope":1687,"src":"3756:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1682,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1685,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:8","nodeType":"VariableDeclaration","scope":1687,"src":"3774:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:8"},"src":"3723:68:8"},{"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"3797:174:8","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":1692,"name":"ERC721InvalidApprover","nameLocation":"3982:21:8","nodeType":"ErrorDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"approver","nameLocation":"4012:8:8","nodeType":"VariableDeclaration","scope":1692,"src":"4004:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:8"},"src":"3976:46:8"},{"documentation":{"id":1693,"nodeType":"StructuredDocumentation","src":"4028:197:8","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":1697,"name":"ERC721InvalidOperator","nameLocation":"4236:21:8","nodeType":"ErrorDefinition","parameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"operator","nameLocation":"4266:8:8","nodeType":"VariableDeclaration","scope":1697,"src":"4258:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:8"},"src":"4230:46:8"}],"scope":1746,"src":"2186:2092:8","usedErrors":[1656,1661,1670,1675,1680,1687,1692,1697],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"4280:143:8","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":1745,"linearizedBaseContracts":[1745],"name":"IERC1155Errors","nameLocation":"4434:14:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"4455:361:8","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":1710,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:8","nodeType":"ErrorDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"sender","nameLocation":"4862:6:8","nodeType":"VariableDeclaration","scope":1710,"src":"4854:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1701,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"balance","nameLocation":"4878:7:8","nodeType":"VariableDeclaration","scope":1710,"src":"4870:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1706,"mutability":"mutable","name":"needed","nameLocation":"4895:6:8","nodeType":"VariableDeclaration","scope":1710,"src":"4887:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:8","nodeType":"VariableDeclaration","scope":1710,"src":"4903:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:8"},"src":"4821:99:8"},{"documentation":{"id":1711,"nodeType":"StructuredDocumentation","src":"4926:152:8","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":1715,"name":"ERC1155InvalidSender","nameLocation":"5089:20:8","nodeType":"ErrorDefinition","parameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"sender","nameLocation":"5118:6:8","nodeType":"VariableDeclaration","scope":1715,"src":"5110:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:8"},"src":"5083:43:8"},{"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"5132:159:8","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":1720,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:8","nodeType":"ErrorDefinition","parameters":{"id":1719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:8","nodeType":"VariableDeclaration","scope":1720,"src":"5325:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1717,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:8"},"src":"5296:47:8"},{"documentation":{"id":1721,"nodeType":"StructuredDocumentation","src":"5349:256:8","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1727,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:8","nodeType":"ErrorDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"operator","nameLocation":"5653:8:8","nodeType":"VariableDeclaration","scope":1727,"src":"5645:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1722,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1725,"mutability":"mutable","name":"owner","nameLocation":"5671:5:8","nodeType":"VariableDeclaration","scope":1727,"src":"5663:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1724,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:8"},"src":"5610:68:8"},{"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"5684:174:8","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1732,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:8","nodeType":"ErrorDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"approver","nameLocation":"5900:8:8","nodeType":"VariableDeclaration","scope":1732,"src":"5892:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:8"},"src":"5863:47:8"},{"documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"5916:197:8","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1737,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:8","nodeType":"ErrorDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"operator","nameLocation":"6155:8:8","nodeType":"VariableDeclaration","scope":1737,"src":"6147:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1734,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:8"},"src":"6118:47:8"},{"documentation":{"id":1738,"nodeType":"StructuredDocumentation","src":"6171:280:8","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1744,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:8","nodeType":"ErrorDefinition","parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:8","nodeType":"VariableDeclaration","scope":1744,"src":"6488:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:8","nodeType":"VariableDeclaration","scope":1744,"src":"6507:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:8"},"src":"6456:73:8"}],"scope":1746,"src":"4424:2107:8","usedErrors":[1710,1715,1720,1727,1732,1737,1744],"usedEvents":[]}],"src":"112:6420:8"},"id":8},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2415],"ERC1967Utils":[2048],"IBeacon":[2058],"StorageSlot":[2525]},"id":2049,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1747,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:9"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":1749,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2049,"sourceUnit":2059,"src":"140:46:9","symbolAliases":[{"foreign":{"id":1748,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"148:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1751,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2049,"sourceUnit":2416,"src":"187:48:9","symbolAliases":[{"foreign":{"id":1750,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"195:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":1753,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2049,"sourceUnit":2526,"src":"236:56:9","symbolAliases":[{"foreign":{"id":1752,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"244:11:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1754,"nodeType":"StructuredDocumentation","src":"294:154:9","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":2048,"linearizedBaseContracts":[2048],"name":"ERC1967Utils","nameLocation":"457:12:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1755,"nodeType":"StructuredDocumentation","src":"660:68:9","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":1759,"name":"Upgraded","nameLocation":"739:8:9","nodeType":"EventDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:9","nodeType":"VariableDeclaration","scope":1759,"src":"748:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:9"},"src":"733:47:9"},{"anonymous":false,"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"786:67:9","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":1766,"name":"AdminChanged","nameLocation":"864:12:9","nodeType":"EventDefinition","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:9","nodeType":"VariableDeclaration","scope":1766,"src":"877:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1764,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:9","nodeType":"VariableDeclaration","scope":1766,"src":"900:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:9"},"src":"858:60:9"},{"anonymous":false,"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"924:59:9","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":1771,"name":"BeaconUpgraded","nameLocation":"994:14:9","nodeType":"EventDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:9","nodeType":"VariableDeclaration","scope":1771,"src":"1009:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:9"},"src":"988:45:9"},{"constant":true,"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"1039:170:9","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":1775,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:9","nodeType":"VariableDeclaration","scope":2048,"src":"1279:114:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:9","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":1776,"nodeType":"StructuredDocumentation","src":"1400:69:9","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":1780,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:9","nodeType":"ErrorDefinition","parameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:9","nodeType":"VariableDeclaration","scope":1780,"src":"1509:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1777,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:9"},"src":"1474:59:9"},{"documentation":{"id":1781,"nodeType":"StructuredDocumentation","src":"1539:60:9","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":1785,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:9","nodeType":"ErrorDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"admin","nameLocation":"1638:5:9","nodeType":"VariableDeclaration","scope":1785,"src":"1630:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1782,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:9"},"src":"1604:41:9"},{"documentation":{"id":1786,"nodeType":"StructuredDocumentation","src":"1651:61:9","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":1790,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:9","nodeType":"ErrorDefinition","parameters":{"id":1789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1788,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:9","nodeType":"VariableDeclaration","scope":1790,"src":"1744:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:9"},"src":"1717:43:9"},{"documentation":{"id":1791,"nodeType":"StructuredDocumentation","src":"1766:82:9","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":1793,"name":"ERC1967NonPayable","nameLocation":"1859:17:9","nodeType":"ErrorDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[],"src":"1876:2:9"},"src":"1853:26:9"},{"body":{"id":1805,"nodeType":"Block","src":"2018:77:9","statements":[{"expression":{"expression":{"arguments":[{"id":1801,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"2062:19:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1799,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"2035:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2525_$","typeString":"type(library StorageSlot)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:9","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"2035:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2421_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2421_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2420,"src":"2035:53:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1798,"id":1804,"nodeType":"Return","src":"2028:60:9"}]},"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"1885:67:9","text":" @dev Returns the current implementation address."},"id":1806,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:9","nodeType":"FunctionDefinition","parameters":{"id":1795,"nodeType":"ParameterList","parameters":[],"src":"1983:2:9"},"returnParameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1806,"src":"2009:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:9"},"scope":2048,"src":"1957:138:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1832,"nodeType":"Block","src":"2249:218:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1812,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"2263:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:9","memberName":"code","nodeType":"MemberAccess","src":"2263:22:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:9","memberName":"length","nodeType":"MemberAccess","src":"2263:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1822,"nodeType":"IfStatement","src":"2259:119:9","trueBody":{"id":1821,"nodeType":"Block","src":"2299:79:9","statements":[{"errorCall":{"arguments":[{"id":1818,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"2349:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1817,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"2320:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1820,"nodeType":"RevertStatement","src":"2313:54:9"}]}},{"expression":{"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1826,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"2414:19:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1823,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"2387:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2525_$","typeString":"type(library StorageSlot)"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:9","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"2387:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2421_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2421_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2420,"src":"2387:53:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1829,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"2443:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1831,"nodeType":"ExpressionStatement","src":"2387:73:9"}]},"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"2101:80:9","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":1833,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:9","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:9","nodeType":"VariableDeclaration","scope":1833,"src":"2214:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:9"},"returnParameters":{"id":1811,"nodeType":"ParameterList","parameters":[],"src":"2249:0:9"},"scope":2048,"src":"2186:281:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1866,"nodeType":"Block","src":"2860:254:9","statements":[{"expression":{"arguments":[{"id":1842,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"2889:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1841,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"2870:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1844,"nodeType":"ExpressionStatement","src":"2870:37:9"},{"eventCall":{"arguments":[{"id":1846,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"2931:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1845,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"2922:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1848,"nodeType":"EmitStatement","src":"2917:32:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1849,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"2964:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:9","memberName":"length","nodeType":"MemberAccess","src":"2964:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1864,"nodeType":"Block","src":"3065:43:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1861,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"3079:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1863,"nodeType":"ExpressionStatement","src":"3079:18:9"}]},"id":1865,"nodeType":"IfStatement","src":"2960:148:9","trueBody":{"id":1860,"nodeType":"Block","src":"2981:78:9","statements":[{"expression":{"arguments":[{"id":1856,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3024:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1857,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"3043:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1853,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"2995:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2415_$","typeString":"type(library Address)"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:9","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"2995:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1859,"nodeType":"ExpressionStatement","src":"2995:53:9"}]}}]},"documentation":{"id":1834,"nodeType":"StructuredDocumentation","src":"2473:301:9","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":1867,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:9","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:9","nodeType":"VariableDeclaration","scope":1867,"src":"2805:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"data","nameLocation":"2845:4:9","nodeType":"VariableDeclaration","scope":1867,"src":"2832:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1837,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:9"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[],"src":"2860:0:9"},"scope":2048,"src":"2779:335:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"3120:145:9","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":1871,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:9","nodeType":"VariableDeclaration","scope":2048,"src":"3335:105:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1869,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:9","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":1883,"nodeType":"Block","src":"3844:68:9","statements":[{"expression":{"expression":{"arguments":[{"id":1879,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"3888:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1877,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"3861:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2525_$","typeString":"type(library StorageSlot)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:9","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"3861:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2421_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2421_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2420,"src":"3861:44:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1876,"id":1882,"nodeType":"Return","src":"3854:51:9"}]},"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"3447:340:9","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":1884,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:9","nodeType":"FunctionDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[],"src":"3809:2:9"},"returnParameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1884,"src":"3835:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:9"},"scope":2048,"src":"3792:120:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1914,"nodeType":"Block","src":"4039:172:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1890,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"4053:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1891,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:9","typeDescriptions":{}}},"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1904,"nodeType":"IfStatement","src":"4049:91:9","trueBody":{"id":1903,"nodeType":"Block","src":"4077:63:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1897,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:9","typeDescriptions":{}}},"id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1896,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"4098:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1902,"nodeType":"RevertStatement","src":"4091:38:9"}]}},{"expression":{"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1908,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"4176:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1905,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"4149:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2525_$","typeString":"type(library StorageSlot)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:9","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"4149:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2421_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2421_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2420,"src":"4149:44:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1911,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"4196:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1913,"nodeType":"ExpressionStatement","src":"4149:55:9"}]},"documentation":{"id":1885,"nodeType":"StructuredDocumentation","src":"3918:71:9","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":1915,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:9","nodeType":"FunctionDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:9","nodeType":"VariableDeclaration","scope":1915,"src":"4013:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1886,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:9"},"returnParameters":{"id":1889,"nodeType":"ParameterList","parameters":[],"src":"4039:0:9"},"scope":2048,"src":"3994:217:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1931,"nodeType":"Block","src":"4379:85:9","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1922,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"4407:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1924,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"4419:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1921,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"4394:12:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1926,"nodeType":"EmitStatement","src":"4389:39:9"},{"expression":{"arguments":[{"id":1928,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"4448:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1927,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"4438:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1930,"nodeType":"ExpressionStatement","src":"4438:19:9"}]},"documentation":{"id":1916,"nodeType":"StructuredDocumentation","src":"4217:109:9","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1932,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:9","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:9","nodeType":"VariableDeclaration","scope":1932,"src":"4352:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1917,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:9"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[],"src":"4379:0:9"},"scope":2048,"src":"4331:133:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"4470:201:9","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1936,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:9","nodeType":"VariableDeclaration","scope":2048,"src":"4741:106:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:9","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1948,"nodeType":"Block","src":"4963:69:9","statements":[{"expression":{"expression":{"arguments":[{"id":1944,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"5007:11:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1942,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"4980:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2525_$","typeString":"type(library StorageSlot)"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:9","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"4980:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2421_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2421_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2420,"src":"4980:45:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1941,"id":1947,"nodeType":"Return","src":"4973:52:9"}]},"documentation":{"id":1937,"nodeType":"StructuredDocumentation","src":"4854:51:9","text":" @dev Returns the current beacon."},"id":1949,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:9","nodeType":"FunctionDefinition","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[],"src":"4928:2:9"},"returnParameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1949,"src":"4954:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:9"},"scope":2048,"src":"4910:122:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1994,"nodeType":"Block","src":"5161:390:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1955,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"5175:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:9","memberName":"code","nodeType":"MemberAccess","src":"5175:14:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:9","memberName":"length","nodeType":"MemberAccess","src":"5175:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1965,"nodeType":"IfStatement","src":"5171:95:9","trueBody":{"id":1964,"nodeType":"Block","src":"5203:63:9","statements":[{"errorCall":{"arguments":[{"id":1961,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"5245:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1960,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"5224:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1963,"nodeType":"RevertStatement","src":"5217:38:9"}]}},{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1969,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"5303:11:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1966,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"5276:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2525_$","typeString":"type(library StorageSlot)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:9","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"5276:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2421_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2421_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2420,"src":"5276:45:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1972,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"5324:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1974,"nodeType":"ExpressionStatement","src":"5276:57:9"},{"assignments":[1976],"declarations":[{"constant":false,"id":1976,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:9","nodeType":"VariableDeclaration","scope":1994,"src":"5344:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1975,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1982,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1978,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"5383:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1977,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"5375:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2058_$","typeString":"type(contract IBeacon)"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2058","typeString":"contract IBeacon"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:9","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2057,"src":"5375:33:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1983,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"5424:20:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:9","memberName":"code","nodeType":"MemberAccess","src":"5424:25:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:9","memberName":"length","nodeType":"MemberAccess","src":"5424:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1993,"nodeType":"IfStatement","src":"5420:125:9","trueBody":{"id":1992,"nodeType":"Block","src":"5463:82:9","statements":[{"errorCall":{"arguments":[{"id":1989,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"5513:20:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1988,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"5484:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1991,"nodeType":"RevertStatement","src":"5477:57:9"}]}}]},"documentation":{"id":1950,"nodeType":"StructuredDocumentation","src":"5038:71:9","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1995,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:9","nodeType":"FunctionDefinition","parameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:9","nodeType":"VariableDeclaration","scope":1995,"src":"5134:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1951,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:9"},"returnParameters":{"id":1954,"nodeType":"ParameterList","parameters":[],"src":"5161:0:9"},"scope":2048,"src":"5114:437:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2032,"nodeType":"Block","src":"6155:254:9","statements":[{"expression":{"arguments":[{"id":2004,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"6176:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2003,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"6165:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2006,"nodeType":"ExpressionStatement","src":"6165:21:9"},{"eventCall":{"arguments":[{"id":2008,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"6216:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2007,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"6201:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2010,"nodeType":"EmitStatement","src":"6196:30:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2011,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"6241:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:9","memberName":"length","nodeType":"MemberAccess","src":"6241:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2030,"nodeType":"Block","src":"6360:43:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2027,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"6374:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2029,"nodeType":"ExpressionStatement","src":"6374:18:9"}]},"id":2031,"nodeType":"IfStatement","src":"6237:166:9","trueBody":{"id":2026,"nodeType":"Block","src":"6258:96:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2019,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"6309:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2018,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6301:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2058_$","typeString":"type(contract IBeacon)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2058","typeString":"contract IBeacon"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:9","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2057,"src":"6301:33:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2023,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"6338:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2015,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"6272:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2415_$","typeString":"type(library Address)"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:9","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"6272:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2025,"nodeType":"ExpressionStatement","src":"6272:71:9"}]}}]},"documentation":{"id":1996,"nodeType":"StructuredDocumentation","src":"5557:514:9","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":2033,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:9","nodeType":"FunctionDefinition","parameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:9","nodeType":"VariableDeclaration","scope":2033,"src":"6108:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1997,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2000,"mutability":"mutable","name":"data","nameLocation":"6140:4:9","nodeType":"VariableDeclaration","scope":2033,"src":"6127:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1999,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:9"},"returnParameters":{"id":2002,"nodeType":"ParameterList","parameters":[],"src":"6155:0:9"},"scope":2048,"src":"6076:333:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2046,"nodeType":"Block","src":"6634:86:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2037,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:9","memberName":"value","nodeType":"MemberAccess","src":"6648:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2045,"nodeType":"IfStatement","src":"6644:70:9","trueBody":{"id":2044,"nodeType":"Block","src":"6663:51:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2041,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"6684:17:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2043,"nodeType":"RevertStatement","src":"6677:26:9"}]}}]},"documentation":{"id":2034,"nodeType":"StructuredDocumentation","src":"6415:178:9","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":2047,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:9","nodeType":"FunctionDefinition","parameters":{"id":2035,"nodeType":"ParameterList","parameters":[],"src":"6623:2:9"},"returnParameters":{"id":2036,"nodeType":"ParameterList","parameters":[],"src":"6634:0:9"},"scope":2048,"src":"6598:122:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2049,"src":"449:6273:9","usedErrors":[1780,1785,1790,1793],"usedEvents":[1759,1766,1771]}],"src":"114:6609:9"},"id":9},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[2058]},"id":2059,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2050,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":2051,"nodeType":"StructuredDocumentation","src":"134:79:10","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":2058,"linearizedBaseContracts":[2058],"name":"IBeacon","nameLocation":"224:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2052,"nodeType":"StructuredDocumentation","src":"238:168:10","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":2057,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:10","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[],"src":"434:2:10"},"returnParameters":{"id":2056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2057,"src":"460:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2054,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:10"},"scope":2058,"src":"411:58:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2059,"src":"214:257:10","usedErrors":[],"usedEvents":[]}],"src":"108:364:10"},"id":10},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2136]},"id":2137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2060,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"132:70:11","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":2136,"linearizedBaseContracts":[2136],"name":"IERC20","nameLocation":"213:6:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2062,"nodeType":"StructuredDocumentation","src":"226:158:11","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2070,"name":"Transfer","nameLocation":"395:8:11","nodeType":"EventDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:11","nodeType":"VariableDeclaration","scope":2070,"src":"404:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2063,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2066,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:11","nodeType":"VariableDeclaration","scope":2070,"src":"426:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2065,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2068,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:11","nodeType":"VariableDeclaration","scope":2070,"src":"446:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:11"},"src":"389:72:11"},{"anonymous":false,"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"467:148:11","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2079,"name":"Approval","nameLocation":"626:8:11","nodeType":"EventDefinition","parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:11","nodeType":"VariableDeclaration","scope":2079,"src":"635:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2075,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:11","nodeType":"VariableDeclaration","scope":2079,"src":"658:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2074,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2077,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:11","nodeType":"VariableDeclaration","scope":2079,"src":"683:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:11"},"src":"620:78:11"},{"documentation":{"id":2080,"nodeType":"StructuredDocumentation","src":"704:65:11","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2085,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:11","nodeType":"FunctionDefinition","parameters":{"id":2081,"nodeType":"ParameterList","parameters":[],"src":"794:2:11"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2085,"src":"820:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2082,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:11"},"scope":2136,"src":"774:55:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2086,"nodeType":"StructuredDocumentation","src":"835:71:11","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2093,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:11","nodeType":"FunctionDefinition","parameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"account","nameLocation":"938:7:11","nodeType":"VariableDeclaration","scope":2093,"src":"930:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2087,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:11"},"returnParameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2093,"src":"970:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:11"},"scope":2136,"src":"911:68:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"985:213:11","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2103,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:11","nodeType":"FunctionDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"to","nameLocation":"1229:2:11","nodeType":"VariableDeclaration","scope":2103,"src":"1221:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2095,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2098,"mutability":"mutable","name":"value","nameLocation":"1241:5:11","nodeType":"VariableDeclaration","scope":2103,"src":"1233:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:11"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2103,"src":"1266:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2100,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:11"},"scope":2136,"src":"1203:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2104,"nodeType":"StructuredDocumentation","src":"1278:264:11","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2113,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:11","nodeType":"FunctionDefinition","parameters":{"id":2109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2106,"mutability":"mutable","name":"owner","nameLocation":"1574:5:11","nodeType":"VariableDeclaration","scope":2113,"src":"1566:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2105,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2108,"mutability":"mutable","name":"spender","nameLocation":"1589:7:11","nodeType":"VariableDeclaration","scope":2113,"src":"1581:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2107,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:11"},"returnParameters":{"id":2112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2113,"src":"1621:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:11"},"scope":2136,"src":"1547:83:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"1636:667:11","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2123,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:11","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"spender","nameLocation":"2333:7:11","nodeType":"VariableDeclaration","scope":2123,"src":"2325:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2115,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"value","nameLocation":"2350:5:11","nodeType":"VariableDeclaration","scope":2123,"src":"2342:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:11"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2123,"src":"2375:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2120,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:11"},"scope":2136,"src":"2308:73:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"2387:297:11","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2135,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:11","nodeType":"FunctionDefinition","parameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"from","nameLocation":"2719:4:11","nodeType":"VariableDeclaration","scope":2135,"src":"2711:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2125,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"to","nameLocation":"2733:2:11","nodeType":"VariableDeclaration","scope":2135,"src":"2725:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2127,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2130,"mutability":"mutable","name":"value","nameLocation":"2745:5:11","nodeType":"VariableDeclaration","scope":2135,"src":"2737:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:11"},"returnParameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"2770:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2132,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:11"},"scope":2136,"src":"2689:87:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2137,"src":"203:2575:11","usedErrors":[],"usedEvents":[2070,2079]}],"src":"106:2673:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2136],"IERC20Metadata":[2162]},"id":2163,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2163,"sourceUnit":2137,"src":"151:37:12","symbolAliases":[{"foreign":{"id":2139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"159:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2142,"name":"IERC20","nameLocations":["305:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"305:6:12"},"id":2143,"nodeType":"InheritanceSpecifier","src":"305:6:12"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2141,"nodeType":"StructuredDocumentation","src":"190:86:12","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":2162,"linearizedBaseContracts":[2162,2136],"name":"IERC20Metadata","nameLocation":"287:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2144,"nodeType":"StructuredDocumentation","src":"318:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2149,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:12","nodeType":"FunctionDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[],"src":"390:2:12"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2149,"src":"416:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2146,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:12"},"scope":2162,"src":"377:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"437:56:12","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2155,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:12","nodeType":"FunctionDefinition","parameters":{"id":2151,"nodeType":"ParameterList","parameters":[],"src":"513:2:12"},"returnParameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2155,"src":"539:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2152,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:12"},"scope":2162,"src":"498:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"560:65:12","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2161,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:12","nodeType":"FunctionDefinition","parameters":{"id":2157,"nodeType":"ParameterList","parameters":[],"src":"647:2:12"},"returnParameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2161,"src":"673:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2158,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:12"},"scope":2162,"src":"630:50:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2163,"src":"277:405:12","usedErrors":[],"usedEvents":[2070,2079]}],"src":"125:558:12"},"id":12},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2415]},"id":2416,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2164,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2165,"nodeType":"StructuredDocumentation","src":"127:67:13","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2415,"linearizedBaseContracts":[2415],"name":"Address","nameLocation":"203:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2166,"nodeType":"StructuredDocumentation","src":"217:94:13","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":2170,"name":"AddressInsufficientBalance","nameLocation":"322:26:13","nodeType":"ErrorDefinition","parameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"account","nameLocation":"357:7:13","nodeType":"VariableDeclaration","scope":2170,"src":"349:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2167,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:13"},"src":"316:50:13"},{"documentation":{"id":2171,"nodeType":"StructuredDocumentation","src":"372:75:13","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2175,"name":"AddressEmptyCode","nameLocation":"458:16:13","nodeType":"ErrorDefinition","parameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"target","nameLocation":"483:6:13","nodeType":"VariableDeclaration","scope":2175,"src":"475:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2172,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:13"},"src":"452:39:13"},{"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"497:89:13","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":2178,"name":"FailedInnerCall","nameLocation":"597:15:13","nodeType":"ErrorDefinition","parameters":{"id":2177,"nodeType":"ParameterList","parameters":[],"src":"612:2:13"},"src":"591:24:13"},{"body":{"id":2218,"nodeType":"Block","src":"1602:260:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2188,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2415","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2415","typeString":"library Address"}],"id":2187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2186,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:13","typeDescriptions":{}}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:13","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2191,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"1640:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2201,"nodeType":"IfStatement","src":"1612:109:13","trueBody":{"id":2200,"nodeType":"Block","src":"1648:73:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2196,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2415","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2415","typeString":"library Address"}],"id":2195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2194,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:13","typeDescriptions":{}}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2193,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"1669:26:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2199,"nodeType":"RevertStatement","src":"1662:48:13"}]}},{"assignments":[2203,null],"declarations":[{"constant":false,"id":2203,"mutability":"mutable","name":"success","nameLocation":"1737:7:13","nodeType":"VariableDeclaration","scope":2218,"src":"1732:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2202,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2210,"initialValue":{"arguments":[{"hexValue":"","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2204,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"1750:9:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:13","memberName":"call","nodeType":"MemberAccess","src":"1750:14:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2206,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"1772:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:13"},{"condition":{"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:13","subExpression":{"id":2211,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"1798:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2217,"nodeType":"IfStatement","src":"1793:63:13","trueBody":{"id":2216,"nodeType":"Block","src":"1807:49:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2213,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"1828:15:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2215,"nodeType":"RevertStatement","src":"1821:24:13"}]}}]},"documentation":{"id":2179,"nodeType":"StructuredDocumentation","src":"621:905:13","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2219,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:13","nodeType":"FunctionDefinition","parameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:13","nodeType":"VariableDeclaration","scope":2219,"src":"1550:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2180,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2183,"mutability":"mutable","name":"amount","nameLocation":"1585:6:13","nodeType":"VariableDeclaration","scope":2219,"src":"1577:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:13"},"returnParameters":{"id":2185,"nodeType":"ParameterList","parameters":[],"src":"1602:0:13"},"scope":2415,"src":"1531:331:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2235,"nodeType":"Block","src":"2794:62:13","statements":[{"expression":{"arguments":[{"id":2230,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"2833:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2231,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"2841:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2229,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2811:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2228,"id":2234,"nodeType":"Return","src":"2804:45:13"}]},"documentation":{"id":2220,"nodeType":"StructuredDocumentation","src":"1868:832:13","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2236,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:13","nodeType":"FunctionDefinition","parameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"target","nameLocation":"2735:6:13","nodeType":"VariableDeclaration","scope":2236,"src":"2727:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2221,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2224,"mutability":"mutable","name":"data","nameLocation":"2756:4:13","nodeType":"VariableDeclaration","scope":2236,"src":"2743:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2223,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:13"},"returnParameters":{"id":2228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2236,"src":"2780:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2226,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:13"},"scope":2415,"src":"2705:151:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2281,"nodeType":"Block","src":"3293:279:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2250,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2415","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2415","typeString":"library Address"}],"id":2249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2248,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:13","typeDescriptions":{}}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:13","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"3331:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2263,"nodeType":"IfStatement","src":"3303:108:13","trueBody":{"id":2262,"nodeType":"Block","src":"3338:73:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2258,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2415","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2415","typeString":"library Address"}],"id":2257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:13","typeDescriptions":{}}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2255,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"3359:26:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2261,"nodeType":"RevertStatement","src":"3352:48:13"}]}},{"assignments":[2265,2267],"declarations":[{"constant":false,"id":2265,"mutability":"mutable","name":"success","nameLocation":"3426:7:13","nodeType":"VariableDeclaration","scope":2281,"src":"3421:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2264,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2267,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:13","nodeType":"VariableDeclaration","scope":2281,"src":"3435:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2266,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2274,"initialValue":{"arguments":[{"id":2272,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"3488:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2268,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"3462:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:13","memberName":"call","nodeType":"MemberAccess","src":"3462:11:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"3481:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:13"},{"expression":{"arguments":[{"id":2276,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"3537:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2277,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"3545:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2278,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"3554:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2275,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"3510:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2247,"id":2280,"nodeType":"Return","src":"3503:62:13"}]},"documentation":{"id":2237,"nodeType":"StructuredDocumentation","src":"2862:313:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2282,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:13","nodeType":"FunctionDefinition","parameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"target","nameLocation":"3219:6:13","nodeType":"VariableDeclaration","scope":2282,"src":"3211:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2238,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"data","nameLocation":"3240:4:13","nodeType":"VariableDeclaration","scope":2282,"src":"3227:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2240,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2243,"mutability":"mutable","name":"value","nameLocation":"3254:5:13","nodeType":"VariableDeclaration","scope":2282,"src":"3246:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:13"},"returnParameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2282,"src":"3279:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2245,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:13"},"scope":2415,"src":"3180:392:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2307,"nodeType":"Block","src":"3811:154:13","statements":[{"assignments":[2293,2295],"declarations":[{"constant":false,"id":2293,"mutability":"mutable","name":"success","nameLocation":"3827:7:13","nodeType":"VariableDeclaration","scope":2307,"src":"3822:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2292,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:13","nodeType":"VariableDeclaration","scope":2307,"src":"3836:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2294,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2300,"initialValue":{"arguments":[{"id":2298,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"3881:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2296,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"3863:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:13","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:13","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:13"},{"expression":{"arguments":[{"id":2302,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"3930:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2303,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"3938:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2304,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"3947:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2301,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"3903:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2291,"id":2306,"nodeType":"Return","src":"3896:62:13"}]},"documentation":{"id":2283,"nodeType":"StructuredDocumentation","src":"3578:128:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2308,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:13","nodeType":"FunctionDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"target","nameLocation":"3747:6:13","nodeType":"VariableDeclaration","scope":2308,"src":"3739:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2284,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2287,"mutability":"mutable","name":"data","nameLocation":"3768:4:13","nodeType":"VariableDeclaration","scope":2308,"src":"3755:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2286,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:13"},"returnParameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2308,"src":"3797:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2289,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:13"},"scope":2415,"src":"3711:254:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2333,"nodeType":"Block","src":"4203:156:13","statements":[{"assignments":[2319,2321],"declarations":[{"constant":false,"id":2319,"mutability":"mutable","name":"success","nameLocation":"4219:7:13","nodeType":"VariableDeclaration","scope":2333,"src":"4214:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2318,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:13","nodeType":"VariableDeclaration","scope":2333,"src":"4228:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2320,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2326,"initialValue":{"arguments":[{"id":2324,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"4275:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2322,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"4255:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:13","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:13","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:13"},{"expression":{"arguments":[{"id":2328,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"4324:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2329,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"4332:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2330,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"4341:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2327,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"4297:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2317,"id":2332,"nodeType":"Return","src":"4290:62:13"}]},"documentation":{"id":2309,"nodeType":"StructuredDocumentation","src":"3971:130:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2334,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:13","nodeType":"FunctionDefinition","parameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"target","nameLocation":"4144:6:13","nodeType":"VariableDeclaration","scope":2334,"src":"4136:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2313,"mutability":"mutable","name":"data","nameLocation":"4165:4:13","nodeType":"VariableDeclaration","scope":2334,"src":"4152:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2312,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:13"},"returnParameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2334,"src":"4189:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2315,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:13"},"scope":2415,"src":"4106:253:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2373,"nodeType":"Block","src":"4783:424:13","statements":[{"condition":{"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:13","subExpression":{"id":2346,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"4798:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2371,"nodeType":"Block","src":"4857:344:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2353,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"5045:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:13","memberName":"length","nodeType":"MemberAccess","src":"5045:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2357,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"5071:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:13","memberName":"code","nodeType":"MemberAccess","src":"5071:11:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:13","memberName":"length","nodeType":"MemberAccess","src":"5071:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2368,"nodeType":"IfStatement","src":"5041:119:13","trueBody":{"id":2367,"nodeType":"Block","src":"5096:64:13","statements":[{"errorCall":{"arguments":[{"id":2364,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"5138:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2363,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"5121:16:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2366,"nodeType":"RevertStatement","src":"5114:31:13"}]}},{"expression":{"id":2369,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"5180:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2345,"id":2370,"nodeType":"Return","src":"5173:17:13"}]},"id":2372,"nodeType":"IfStatement","src":"4793:408:13","trueBody":{"id":2352,"nodeType":"Block","src":"4807:44:13","statements":[{"expression":{"arguments":[{"id":2349,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"4829:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2348,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"4821:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2351,"nodeType":"ExpressionStatement","src":"4821:19:13"}]}}]},"documentation":{"id":2335,"nodeType":"StructuredDocumentation","src":"4365:255:13","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":2374,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:13","nodeType":"FunctionDefinition","parameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"target","nameLocation":"4678:6:13","nodeType":"VariableDeclaration","scope":2374,"src":"4670:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2336,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"success","nameLocation":"4699:7:13","nodeType":"VariableDeclaration","scope":2374,"src":"4694:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2338,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:13","nodeType":"VariableDeclaration","scope":2374,"src":"4716:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2340,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:13"},"returnParameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2374,"src":"4769:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2343,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:13"},"scope":2415,"src":"4625:582:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2395,"nodeType":"Block","src":"5509:122:13","statements":[{"condition":{"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:13","subExpression":{"id":2384,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"5524:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2393,"nodeType":"Block","src":"5583:42:13","statements":[{"expression":{"id":2391,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"5604:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2383,"id":2392,"nodeType":"Return","src":"5597:17:13"}]},"id":2394,"nodeType":"IfStatement","src":"5519:106:13","trueBody":{"id":2390,"nodeType":"Block","src":"5533:44:13","statements":[{"expression":{"arguments":[{"id":2387,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"5555:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2386,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"5547:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2389,"nodeType":"ExpressionStatement","src":"5547:19:13"}]}}]},"documentation":{"id":2375,"nodeType":"StructuredDocumentation","src":"5213:189:13","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":2396,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:13","nodeType":"FunctionDefinition","parameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"success","nameLocation":"5438:7:13","nodeType":"VariableDeclaration","scope":2396,"src":"5433:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2376,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:13","nodeType":"VariableDeclaration","scope":2396,"src":"5447:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2378,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:13"},"returnParameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2396,"src":"5495:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2381,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:13"},"scope":2415,"src":"5407:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2413,"nodeType":"Block","src":"5798:461:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2402,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"5874:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:13","memberName":"length","nodeType":"MemberAccess","src":"5874:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2411,"nodeType":"Block","src":"6204:49:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2408,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"6225:15:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2410,"nodeType":"RevertStatement","src":"6218:24:13"}]},"id":2412,"nodeType":"IfStatement","src":"5870:383:13","trueBody":{"id":2407,"nodeType":"Block","src":"5897:301:13","statements":[{"AST":{"nativeSrc":"6055:133:13","nodeType":"YulBlock","src":"6055:133:13","statements":[{"nativeSrc":"6073:40:13","nodeType":"YulVariableDeclaration","src":"6073:40:13","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:13","nodeType":"YulIdentifier","src":"6102:10:13"}],"functionName":{"name":"mload","nativeSrc":"6096:5:13","nodeType":"YulIdentifier","src":"6096:5:13"},"nativeSrc":"6096:17:13","nodeType":"YulFunctionCall","src":"6096:17:13"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:13","nodeType":"YulTypedName","src":"6077:15:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:13","nodeType":"YulLiteral","src":"6141:2:13","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:13","nodeType":"YulIdentifier","src":"6145:10:13"}],"functionName":{"name":"add","nativeSrc":"6137:3:13","nodeType":"YulIdentifier","src":"6137:3:13"},"nativeSrc":"6137:19:13","nodeType":"YulFunctionCall","src":"6137:19:13"},{"name":"returndata_size","nativeSrc":"6158:15:13","nodeType":"YulIdentifier","src":"6158:15:13"}],"functionName":{"name":"revert","nativeSrc":"6130:6:13","nodeType":"YulIdentifier","src":"6130:6:13"},"nativeSrc":"6130:44:13","nodeType":"YulFunctionCall","src":"6130:44:13"},"nativeSrc":"6130:44:13","nodeType":"YulExpressionStatement","src":"6130:44:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2399,"isOffset":false,"isSlot":false,"src":"6102:10:13","valueSize":1},{"declaration":2399,"isOffset":false,"isSlot":false,"src":"6145:10:13","valueSize":1}],"id":2406,"nodeType":"InlineAssembly","src":"6046:142:13"}]}}]},"documentation":{"id":2397,"nodeType":"StructuredDocumentation","src":"5637:101:13","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2414,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:13","nodeType":"FunctionDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2399,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:13","nodeType":"VariableDeclaration","scope":2414,"src":"5760:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2398,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:13"},"returnParameters":{"id":2401,"nodeType":"ParameterList","parameters":[],"src":"5798:0:13"},"scope":2415,"src":"5743:516:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2416,"src":"195:6066:13","usedErrors":[2170,2175,2178],"usedEvents":[]}],"src":"101:6161:13"},"id":13},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2525]},"id":2526,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2417,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"219:1025:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2525,"linearizedBaseContracts":[2525],"name":"StorageSlot","nameLocation":"1253:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2421,"members":[{"constant":false,"id":2420,"mutability":"mutable","name":"value","nameLocation":"1308:5:14","nodeType":"VariableDeclaration","scope":2421,"src":"1300:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2419,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:14","nodeType":"StructDefinition","scope":2525,"src":"1271:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2424,"members":[{"constant":false,"id":2423,"mutability":"mutable","name":"value","nameLocation":"1360:5:14","nodeType":"VariableDeclaration","scope":2424,"src":"1355:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2422,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:14","nodeType":"StructDefinition","scope":2525,"src":"1326:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2427,"members":[{"constant":false,"id":2426,"mutability":"mutable","name":"value","nameLocation":"1415:5:14","nodeType":"VariableDeclaration","scope":2427,"src":"1407:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:14","nodeType":"StructDefinition","scope":2525,"src":"1378:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2430,"members":[{"constant":false,"id":2429,"mutability":"mutable","name":"value","nameLocation":"1470:5:14","nodeType":"VariableDeclaration","scope":2430,"src":"1462:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:14","nodeType":"StructDefinition","scope":2525,"src":"1433:49:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2433,"members":[{"constant":false,"id":2432,"mutability":"mutable","name":"value","nameLocation":"1523:5:14","nodeType":"VariableDeclaration","scope":2433,"src":"1516:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2431,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:14","nodeType":"StructDefinition","scope":2525,"src":"1488:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2436,"members":[{"constant":false,"id":2435,"mutability":"mutable","name":"value","nameLocation":"1574:5:14","nodeType":"VariableDeclaration","scope":2436,"src":"1568:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2434,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:14","nodeType":"StructDefinition","scope":2525,"src":"1541:45:14","visibility":"public"},{"body":{"id":2446,"nodeType":"Block","src":"1768:106:14","statements":[{"AST":{"nativeSrc":"1830:38:14","nodeType":"YulBlock","src":"1830:38:14","statements":[{"nativeSrc":"1844:14:14","nodeType":"YulAssignment","src":"1844:14:14","value":{"name":"slot","nativeSrc":"1854:4:14","nodeType":"YulIdentifier","src":"1854:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:14","nodeType":"YulIdentifier","src":"1844:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2443,"isOffset":false,"isSlot":true,"src":"1844:6:14","suffix":"slot","valueSize":1},{"declaration":2439,"isOffset":false,"isSlot":false,"src":"1854:4:14","valueSize":1}],"id":2445,"nodeType":"InlineAssembly","src":"1821:47:14"}]},"documentation":{"id":2437,"nodeType":"StructuredDocumentation","src":"1592:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2447,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:14","nodeType":"FunctionDefinition","parameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"slot","nameLocation":"1716:4:14","nodeType":"VariableDeclaration","scope":2447,"src":"1708:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:14"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2443,"mutability":"mutable","name":"r","nameLocation":"1765:1:14","nodeType":"VariableDeclaration","scope":2447,"src":"1745:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2421_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2442,"nodeType":"UserDefinedTypeName","pathNode":{"id":2441,"name":"AddressSlot","nameLocations":["1745:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2421,"src":"1745:11:14"},"referencedDeclaration":2421,"src":"1745:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2421_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:14"},"scope":2525,"src":"1684:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2457,"nodeType":"Block","src":"2056:106:14","statements":[{"AST":{"nativeSrc":"2118:38:14","nodeType":"YulBlock","src":"2118:38:14","statements":[{"nativeSrc":"2132:14:14","nodeType":"YulAssignment","src":"2132:14:14","value":{"name":"slot","nativeSrc":"2142:4:14","nodeType":"YulIdentifier","src":"2142:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:14","nodeType":"YulIdentifier","src":"2132:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2454,"isOffset":false,"isSlot":true,"src":"2132:6:14","suffix":"slot","valueSize":1},{"declaration":2450,"isOffset":false,"isSlot":false,"src":"2142:4:14","valueSize":1}],"id":2456,"nodeType":"InlineAssembly","src":"2109:47:14"}]},"documentation":{"id":2448,"nodeType":"StructuredDocumentation","src":"1880:87:14","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2458,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:14","nodeType":"FunctionDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"slot","nameLocation":"2004:4:14","nodeType":"VariableDeclaration","scope":2458,"src":"1996:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:14"},"returnParameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"r","nameLocation":"2053:1:14","nodeType":"VariableDeclaration","scope":2458,"src":"2033:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2424_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2453,"nodeType":"UserDefinedTypeName","pathNode":{"id":2452,"name":"BooleanSlot","nameLocations":["2033:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2424,"src":"2033:11:14"},"referencedDeclaration":2424,"src":"2033:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2424_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:14"},"scope":2525,"src":"1972:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2468,"nodeType":"Block","src":"2344:106:14","statements":[{"AST":{"nativeSrc":"2406:38:14","nodeType":"YulBlock","src":"2406:38:14","statements":[{"nativeSrc":"2420:14:14","nodeType":"YulAssignment","src":"2420:14:14","value":{"name":"slot","nativeSrc":"2430:4:14","nodeType":"YulIdentifier","src":"2430:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:14","nodeType":"YulIdentifier","src":"2420:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2465,"isOffset":false,"isSlot":true,"src":"2420:6:14","suffix":"slot","valueSize":1},{"declaration":2461,"isOffset":false,"isSlot":false,"src":"2430:4:14","valueSize":1}],"id":2467,"nodeType":"InlineAssembly","src":"2397:47:14"}]},"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"2168:87:14","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2469,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:14","nodeType":"FunctionDefinition","parameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"slot","nameLocation":"2292:4:14","nodeType":"VariableDeclaration","scope":2469,"src":"2284:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:14"},"returnParameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"r","nameLocation":"2341:1:14","nodeType":"VariableDeclaration","scope":2469,"src":"2321:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2427_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2464,"nodeType":"UserDefinedTypeName","pathNode":{"id":2463,"name":"Bytes32Slot","nameLocations":["2321:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2427,"src":"2321:11:14"},"referencedDeclaration":2427,"src":"2321:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2427_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:14"},"scope":2525,"src":"2260:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2479,"nodeType":"Block","src":"2632:106:14","statements":[{"AST":{"nativeSrc":"2694:38:14","nodeType":"YulBlock","src":"2694:38:14","statements":[{"nativeSrc":"2708:14:14","nodeType":"YulAssignment","src":"2708:14:14","value":{"name":"slot","nativeSrc":"2718:4:14","nodeType":"YulIdentifier","src":"2718:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:14","nodeType":"YulIdentifier","src":"2708:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2476,"isOffset":false,"isSlot":true,"src":"2708:6:14","suffix":"slot","valueSize":1},{"declaration":2472,"isOffset":false,"isSlot":false,"src":"2718:4:14","valueSize":1}],"id":2478,"nodeType":"InlineAssembly","src":"2685:47:14"}]},"documentation":{"id":2470,"nodeType":"StructuredDocumentation","src":"2456:87:14","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2480,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:14","nodeType":"FunctionDefinition","parameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"slot","nameLocation":"2580:4:14","nodeType":"VariableDeclaration","scope":2480,"src":"2572:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:14"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"r","nameLocation":"2629:1:14","nodeType":"VariableDeclaration","scope":2480,"src":"2609:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2430_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2475,"nodeType":"UserDefinedTypeName","pathNode":{"id":2474,"name":"Uint256Slot","nameLocations":["2609:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2430,"src":"2609:11:14"},"referencedDeclaration":2430,"src":"2609:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2430_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:14"},"scope":2525,"src":"2548:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2490,"nodeType":"Block","src":"2917:106:14","statements":[{"AST":{"nativeSrc":"2979:38:14","nodeType":"YulBlock","src":"2979:38:14","statements":[{"nativeSrc":"2993:14:14","nodeType":"YulAssignment","src":"2993:14:14","value":{"name":"slot","nativeSrc":"3003:4:14","nodeType":"YulIdentifier","src":"3003:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:14","nodeType":"YulIdentifier","src":"2993:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2487,"isOffset":false,"isSlot":true,"src":"2993:6:14","suffix":"slot","valueSize":1},{"declaration":2483,"isOffset":false,"isSlot":false,"src":"3003:4:14","valueSize":1}],"id":2489,"nodeType":"InlineAssembly","src":"2970:47:14"}]},"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"2744:86:14","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2491,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:14","nodeType":"FunctionDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"slot","nameLocation":"2866:4:14","nodeType":"VariableDeclaration","scope":2491,"src":"2858:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:14"},"returnParameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"r","nameLocation":"2914:1:14","nodeType":"VariableDeclaration","scope":2491,"src":"2895:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2433_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2486,"nodeType":"UserDefinedTypeName","pathNode":{"id":2485,"name":"StringSlot","nameLocations":["2895:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2433,"src":"2895:10:14"},"referencedDeclaration":2433,"src":"2895:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2433_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:14"},"scope":2525,"src":"2835:188:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2501,"nodeType":"Block","src":"3225:112:14","statements":[{"AST":{"nativeSrc":"3287:44:14","nodeType":"YulBlock","src":"3287:44:14","statements":[{"nativeSrc":"3301:20:14","nodeType":"YulAssignment","src":"3301:20:14","value":{"name":"store.slot","nativeSrc":"3311:10:14","nodeType":"YulIdentifier","src":"3311:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:14","nodeType":"YulIdentifier","src":"3301:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2498,"isOffset":false,"isSlot":true,"src":"3301:6:14","suffix":"slot","valueSize":1},{"declaration":2494,"isOffset":false,"isSlot":true,"src":"3311:10:14","suffix":"slot","valueSize":1}],"id":2500,"nodeType":"InlineAssembly","src":"3278:53:14"}]},"documentation":{"id":2492,"nodeType":"StructuredDocumentation","src":"3029:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2502,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:14","nodeType":"FunctionDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"store","nameLocation":"3173:5:14","nodeType":"VariableDeclaration","scope":2502,"src":"3158:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2493,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:14"},"returnParameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"r","nameLocation":"3222:1:14","nodeType":"VariableDeclaration","scope":2502,"src":"3203:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2433_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2497,"nodeType":"UserDefinedTypeName","pathNode":{"id":2496,"name":"StringSlot","nameLocations":["3203:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2433,"src":"3203:10:14"},"referencedDeclaration":2433,"src":"3203:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2433_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:14"},"scope":2525,"src":"3135:202:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2512,"nodeType":"Block","src":"3513:106:14","statements":[{"AST":{"nativeSrc":"3575:38:14","nodeType":"YulBlock","src":"3575:38:14","statements":[{"nativeSrc":"3589:14:14","nodeType":"YulAssignment","src":"3589:14:14","value":{"name":"slot","nativeSrc":"3599:4:14","nodeType":"YulIdentifier","src":"3599:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:14","nodeType":"YulIdentifier","src":"3589:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2509,"isOffset":false,"isSlot":true,"src":"3589:6:14","suffix":"slot","valueSize":1},{"declaration":2505,"isOffset":false,"isSlot":false,"src":"3599:4:14","valueSize":1}],"id":2511,"nodeType":"InlineAssembly","src":"3566:47:14"}]},"documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"3343:85:14","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2513,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:14","nodeType":"FunctionDefinition","parameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"slot","nameLocation":"3463:4:14","nodeType":"VariableDeclaration","scope":2513,"src":"3455:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:14"},"returnParameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"r","nameLocation":"3510:1:14","nodeType":"VariableDeclaration","scope":2513,"src":"3492:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2436_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2508,"nodeType":"UserDefinedTypeName","pathNode":{"id":2507,"name":"BytesSlot","nameLocations":["3492:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2436,"src":"3492:9:14"},"referencedDeclaration":2436,"src":"3492:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2436_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:14"},"scope":2525,"src":"3433:186:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2523,"nodeType":"Block","src":"3816:112:14","statements":[{"AST":{"nativeSrc":"3878:44:14","nodeType":"YulBlock","src":"3878:44:14","statements":[{"nativeSrc":"3892:20:14","nodeType":"YulAssignment","src":"3892:20:14","value":{"name":"store.slot","nativeSrc":"3902:10:14","nodeType":"YulIdentifier","src":"3902:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:14","nodeType":"YulIdentifier","src":"3892:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2520,"isOffset":false,"isSlot":true,"src":"3892:6:14","suffix":"slot","valueSize":1},{"declaration":2516,"isOffset":false,"isSlot":true,"src":"3902:10:14","suffix":"slot","valueSize":1}],"id":2522,"nodeType":"InlineAssembly","src":"3869:53:14"}]},"documentation":{"id":2514,"nodeType":"StructuredDocumentation","src":"3625:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2524,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:14","nodeType":"FunctionDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"store","nameLocation":"3765:5:14","nodeType":"VariableDeclaration","scope":2524,"src":"3751:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2515,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:14"},"returnParameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"r","nameLocation":"3813:1:14","nodeType":"VariableDeclaration","scope":2524,"src":"3795:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2436_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2519,"nodeType":"UserDefinedTypeName","pathNode":{"id":2518,"name":"BytesSlot","nameLocations":["3795:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2436,"src":"3795:9:14"},"referencedDeclaration":2436,"src":"3795:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2436_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:14"},"scope":2525,"src":"3729:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2526,"src":"1245:2685:14","usedErrors":[],"usedEvents":[]}],"src":"193:3738:14"},"id":14},"contracts/interfaces/IBaluniV1DCAVault.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1DCAVault.sol","exportedSymbols":{"IBaluniV1DCAVault":[2578]},"id":2579,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2527,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1DCAVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2578,"linearizedBaseContracts":[2578],"name":"IBaluniV1DCAVault","nameLocation":"77:17:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"cdf456e1","id":2532,"implemented":false,"kind":"function","modifiers":[],"name":"baseAsset","nameLocation":"111:9:15","nodeType":"FunctionDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[],"src":"120:2:15"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2532,"src":"146:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2529,"name":"address","nodeType":"ElementaryTypeName","src":"146:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"145:9:15"},"scope":2578,"src":"102:53:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fdf262b7","id":2537,"implemented":false,"kind":"function","modifiers":[],"name":"quoteAsset","nameLocation":"170:10:15","nodeType":"FunctionDefinition","parameters":{"id":2533,"nodeType":"ParameterList","parameters":[],"src":"180:2:15"},"returnParameters":{"id":2536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"206:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2534,"name":"address","nodeType":"ElementaryTypeName","src":"206:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"205:9:15"},"scope":2578,"src":"161:54:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7b103999","id":2542,"implemented":false,"kind":"function","modifiers":[],"name":"registry","nameLocation":"230:8:15","nodeType":"FunctionDefinition","parameters":{"id":2538,"nodeType":"ParameterList","parameters":[],"src":"238:2:15"},"returnParameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2542,"src":"264:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2539,"name":"address","nodeType":"ElementaryTypeName","src":"264:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"263:9:15"},"scope":2578,"src":"221:52:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"36b77107","id":2547,"implemented":false,"kind":"function","modifiers":[],"name":"lastDeposit","nameLocation":"288:11:15","nodeType":"FunctionDefinition","parameters":{"id":2543,"nodeType":"ParameterList","parameters":[],"src":"299:2:15"},"returnParameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2547,"src":"325:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"325:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"324:9:15"},"scope":2578,"src":"279:55:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6e553f65","id":2554,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"349:7:15","nodeType":"FunctionDefinition","parameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2549,"mutability":"mutable","name":"amount","nameLocation":"365:6:15","nodeType":"VariableDeclaration","scope":2554,"src":"357:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"357:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2551,"mutability":"mutable","name":"to","nameLocation":"381:2:15","nodeType":"VariableDeclaration","scope":2554,"src":"373:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"373:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"356:28:15"},"returnParameters":{"id":2553,"nodeType":"ParameterList","parameters":[],"src":"393:0:15"},"scope":2578,"src":"340:54:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"00f714ce","id":2561,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"409:8:15","nodeType":"FunctionDefinition","parameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"shares","nameLocation":"426:6:15","nodeType":"VariableDeclaration","scope":2561,"src":"418:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"418:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2558,"mutability":"mutable","name":"to","nameLocation":"442:2:15","nodeType":"VariableDeclaration","scope":2561,"src":"434:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2557,"name":"address","nodeType":"ElementaryTypeName","src":"434:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"417:28:15"},"returnParameters":{"id":2560,"nodeType":"ParameterList","parameters":[],"src":"454:0:15"},"scope":2578,"src":"400:55:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8456cb59","id":2564,"implemented":false,"kind":"function","modifiers":[],"name":"pause","nameLocation":"470:5:15","nodeType":"FunctionDefinition","parameters":{"id":2562,"nodeType":"ParameterList","parameters":[],"src":"475:2:15"},"returnParameters":{"id":2563,"nodeType":"ParameterList","parameters":[],"src":"486:0:15"},"scope":2578,"src":"461:26:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3f4ba83a","id":2567,"implemented":false,"kind":"function","modifiers":[],"name":"unpause","nameLocation":"502:7:15","nodeType":"FunctionDefinition","parameters":{"id":2565,"nodeType":"ParameterList","parameters":[],"src":"509:2:15"},"returnParameters":{"id":2566,"nodeType":"ParameterList","parameters":[],"src":"520:0:15"},"scope":2578,"src":"493:28:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"295b9300","id":2572,"implemented":false,"kind":"function","modifiers":[],"name":"totalValuation","nameLocation":"536:14:15","nodeType":"FunctionDefinition","parameters":{"id":2568,"nodeType":"ParameterList","parameters":[],"src":"550:2:15"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2572,"src":"576:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"576:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"575:9:15"},"scope":2578,"src":"527:58:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e73faa2d","id":2577,"implemented":false,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"600:9:15","nodeType":"FunctionDefinition","parameters":{"id":2573,"nodeType":"ParameterList","parameters":[],"src":"609:2:15"},"returnParameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2577,"src":"635:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2574,"name":"uint256","nodeType":"ElementaryTypeName","src":"635:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:9:15"},"scope":2578,"src":"591:53:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2579,"src":"67:580:15","usedErrors":[],"usedEvents":[]}],"src":"40:609:15"},"id":15},"contracts/interfaces/IBaluniV1Oracle.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Oracle.sol","exportedSymbols":{"IBaluniV1Oracle":[2603]},"id":2604,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2580,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Oracle","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2603,"linearizedBaseContracts":[2603],"name":"IBaluniV1Oracle","nameLocation":"77:15:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"248391ff","id":2591,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"109:7:16","nodeType":"FunctionDefinition","parameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"fromToken","nameLocation":"125:9:16","nodeType":"VariableDeclaration","scope":2591,"src":"117:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2581,"name":"address","nodeType":"ElementaryTypeName","src":"117:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2584,"mutability":"mutable","name":"toToken","nameLocation":"144:7:16","nodeType":"VariableDeclaration","scope":2591,"src":"136:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2583,"name":"address","nodeType":"ElementaryTypeName","src":"136:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2586,"mutability":"mutable","name":"amount","nameLocation":"161:6:16","nodeType":"VariableDeclaration","scope":2591,"src":"153:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2585,"name":"uint256","nodeType":"ElementaryTypeName","src":"153:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116:52:16"},"returnParameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2589,"mutability":"mutable","name":"valuation","nameLocation":"200:9:16","nodeType":"VariableDeclaration","scope":2591,"src":"192:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"192:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"191:19:16"},"scope":2603,"src":"100:111:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b27b5e75","id":2602,"implemented":false,"kind":"function","modifiers":[],"name":"convertScaled","nameLocation":"228:13:16","nodeType":"FunctionDefinition","parameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"fromToken","nameLocation":"260:9:16","nodeType":"VariableDeclaration","scope":2602,"src":"252:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2592,"name":"address","nodeType":"ElementaryTypeName","src":"252:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"toToken","nameLocation":"288:7:16","nodeType":"VariableDeclaration","scope":2602,"src":"280:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2594,"name":"address","nodeType":"ElementaryTypeName","src":"280:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2597,"mutability":"mutable","name":"amount","nameLocation":"314:6:16","nodeType":"VariableDeclaration","scope":2602,"src":"306:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2596,"name":"uint256","nodeType":"ElementaryTypeName","src":"306:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"241:86:16"},"returnParameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"valuation","nameLocation":"359:9:16","nodeType":"VariableDeclaration","scope":2602,"src":"351:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"350:19:16"},"scope":2603,"src":"219:151:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2604,"src":"67:306:16","usedErrors":[],"usedEvents":[]}],"src":"40:335:16"},"id":16},"contracts/interfaces/IBaluniV1Registry.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","exportedSymbols":{"IBaluniV1Registry":[2787]},"id":2788,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2605,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Registry","contractDependencies":[],"contractKind":"interface","documentation":{"id":2606,"nodeType":"StructuredDocumentation","src":"67:91:17","text":" @title IBaluniV1Registry\n @dev Interface for the BaluniV1Registry contract."},"fullyImplemented":false,"id":2787,"linearizedBaseContracts":[2787],"name":"IBaluniV1Registry","nameLocation":"170:17:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e04b677f","id":2611,"implemented":false,"kind":"function","modifiers":[],"name":"setUniswapFactory","nameLocation":"204:17:17","nodeType":"FunctionDefinition","parameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"mutability":"mutable","name":"_uniswapFactory","nameLocation":"230:15:17","nodeType":"VariableDeclaration","scope":2611,"src":"222:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2607,"name":"address","nodeType":"ElementaryTypeName","src":"222:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"221:25:17"},"returnParameters":{"id":2610,"nodeType":"ParameterList","parameters":[],"src":"255:0:17"},"scope":2787,"src":"195:61:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bea9849e","id":2616,"implemented":false,"kind":"function","modifiers":[],"name":"setUniswapRouter","nameLocation":"273:16:17","nodeType":"FunctionDefinition","parameters":{"id":2614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"_uniswapRouter","nameLocation":"298:14:17","nodeType":"VariableDeclaration","scope":2616,"src":"290:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2612,"name":"address","nodeType":"ElementaryTypeName","src":"290:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"289:24:17"},"returnParameters":{"id":2615,"nodeType":"ParameterList","parameters":[],"src":"322:0:17"},"scope":2787,"src":"264:59:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f1dccde7","id":2621,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniAgentFactory","nameLocation":"340:21:17","nodeType":"FunctionDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"_baluniAgentFactory","nameLocation":"370:19:17","nodeType":"VariableDeclaration","scope":2621,"src":"362:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2617,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"361:29:17"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[],"src":"399:0:17"},"scope":2787,"src":"331:69:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"588c5b70","id":2626,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniPoolPeriphery","nameLocation":"417:22:17","nodeType":"FunctionDefinition","parameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"_baluniPoolPeriphery","nameLocation":"448:20:17","nodeType":"VariableDeclaration","scope":2626,"src":"440:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2622,"name":"address","nodeType":"ElementaryTypeName","src":"440:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"439:30:17"},"returnParameters":{"id":2625,"nodeType":"ParameterList","parameters":[],"src":"478:0:17"},"scope":2787,"src":"408:71:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c3f5df5c","id":2631,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniSwapper","nameLocation":"496:16:17","nodeType":"FunctionDefinition","parameters":{"id":2629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"_baluniSwapper","nameLocation":"521:14:17","nodeType":"VariableDeclaration","scope":2631,"src":"513:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2627,"name":"address","nodeType":"ElementaryTypeName","src":"513:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"512:24:17"},"returnParameters":{"id":2630,"nodeType":"ParameterList","parameters":[],"src":"545:0:17"},"scope":2787,"src":"487:59:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f5b84f64","id":2636,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniOracle","nameLocation":"563:15:17","nodeType":"FunctionDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"_baluniOracle","nameLocation":"587:13:17","nodeType":"VariableDeclaration","scope":2636,"src":"579:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2632,"name":"address","nodeType":"ElementaryTypeName","src":"579:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"578:23:17"},"returnParameters":{"id":2635,"nodeType":"ParameterList","parameters":[],"src":"610:0:17"},"scope":2787,"src":"554:57:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f98977a9","id":2641,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniPoolRegistry","nameLocation":"628:21:17","nodeType":"FunctionDefinition","parameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"_baluniPoolRegistry","nameLocation":"658:19:17","nodeType":"VariableDeclaration","scope":2641,"src":"650:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2637,"name":"address","nodeType":"ElementaryTypeName","src":"650:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"649:29:17"},"returnParameters":{"id":2640,"nodeType":"ParameterList","parameters":[],"src":"687:0:17"},"scope":2787,"src":"619:69:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5055fe98","id":2646,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniVaultRegistry","nameLocation":"705:22:17","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"mutability":"mutable","name":"_baluniPoolRegistry","nameLocation":"736:19:17","nodeType":"VariableDeclaration","scope":2646,"src":"728:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2642,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"727:29:17"},"returnParameters":{"id":2645,"nodeType":"ParameterList","parameters":[],"src":"765:0:17"},"scope":2787,"src":"696:70:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0241bffa","id":2651,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRebalancer","nameLocation":"783:19:17","nodeType":"FunctionDefinition","parameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"_baluniRebalancer","nameLocation":"811:17:17","nodeType":"VariableDeclaration","scope":2651,"src":"803:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2647,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"802:27:17"},"returnParameters":{"id":2650,"nodeType":"ParameterList","parameters":[],"src":"838:0:17"},"scope":2787,"src":"774:65:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"400fb668","id":2656,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRouter","nameLocation":"856:15:17","nodeType":"FunctionDefinition","parameters":{"id":2654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"_baluniRouter","nameLocation":"880:13:17","nodeType":"VariableDeclaration","scope":2656,"src":"872:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2652,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"871:23:17"},"returnParameters":{"id":2655,"nodeType":"ParameterList","parameters":[],"src":"903:0:17"},"scope":2787,"src":"847:57:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6c43274c","id":2661,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRegistry","nameLocation":"921:17:17","nodeType":"FunctionDefinition","parameters":{"id":2659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2658,"mutability":"mutable","name":"_baluniRegistry","nameLocation":"947:15:17","nodeType":"VariableDeclaration","scope":2661,"src":"939:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2657,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"938:25:17"},"returnParameters":{"id":2660,"nodeType":"ParameterList","parameters":[],"src":"972:0:17"},"scope":2787,"src":"912:61:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b6fe9cc7","id":2666,"implemented":false,"kind":"function","modifiers":[],"name":"setWNATIVE","nameLocation":"990:10:17","nodeType":"FunctionDefinition","parameters":{"id":2664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2663,"mutability":"mutable","name":"_WNATIVE","nameLocation":"1009:8:17","nodeType":"VariableDeclaration","scope":2666,"src":"1001:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2662,"name":"address","nodeType":"ElementaryTypeName","src":"1001:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1000:18:17"},"returnParameters":{"id":2665,"nodeType":"ParameterList","parameters":[],"src":"1027:0:17"},"scope":2787,"src":"981:47:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b3e089a2","id":2671,"implemented":false,"kind":"function","modifiers":[],"name":"setUSDC","nameLocation":"1045:7:17","nodeType":"FunctionDefinition","parameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"_USDC","nameLocation":"1061:5:17","nodeType":"VariableDeclaration","scope":2671,"src":"1053:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2667,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1052:15:17"},"returnParameters":{"id":2670,"nodeType":"ParameterList","parameters":[],"src":"1076:0:17"},"scope":2787,"src":"1036:41:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f0f44260","id":2676,"implemented":false,"kind":"function","modifiers":[],"name":"setTreasury","nameLocation":"1094:11:17","nodeType":"FunctionDefinition","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"_treasury","nameLocation":"1114:9:17","nodeType":"VariableDeclaration","scope":2676,"src":"1106:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2672,"name":"address","nodeType":"ElementaryTypeName","src":"1106:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1105:19:17"},"returnParameters":{"id":2675,"nodeType":"ParameterList","parameters":[],"src":"1133:0:17"},"scope":2787,"src":"1085:49:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c08f786b","id":2681,"implemented":false,"kind":"function","modifiers":[],"name":"set1inchSpotAgg","nameLocation":"1151:15:17","nodeType":"FunctionDefinition","parameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"__1inchSpotAgg","nameLocation":"1175:14:17","nodeType":"VariableDeclaration","scope":2681,"src":"1167:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2677,"name":"address","nodeType":"ElementaryTypeName","src":"1167:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1166:24:17"},"returnParameters":{"id":2680,"nodeType":"ParameterList","parameters":[],"src":"1199:0:17"},"scope":2787,"src":"1142:58:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9e6453f8","id":2686,"implemented":false,"kind":"function","modifiers":[],"name":"setBPS_FEE","nameLocation":"1217:10:17","nodeType":"FunctionDefinition","parameters":{"id":2684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2683,"mutability":"mutable","name":"__BPS_FEE","nameLocation":"1236:9:17","nodeType":"VariableDeclaration","scope":2686,"src":"1228:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2682,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1227:19:17"},"returnParameters":{"id":2685,"nodeType":"ParameterList","parameters":[],"src":"1255:0:17"},"scope":2787,"src":"1208:48:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3e6dfa36","id":2691,"implemented":false,"kind":"function","modifiers":[],"name":"getUniswapFactory","nameLocation":"1273:17:17","nodeType":"FunctionDefinition","parameters":{"id":2687,"nodeType":"ParameterList","parameters":[],"src":"1290:2:17"},"returnParameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2691,"src":"1316:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2688,"name":"address","nodeType":"ElementaryTypeName","src":"1316:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1315:9:17"},"scope":2787,"src":"1264:61:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"524900b5","id":2696,"implemented":false,"kind":"function","modifiers":[],"name":"getUniswapRouter","nameLocation":"1342:16:17","nodeType":"FunctionDefinition","parameters":{"id":2692,"nodeType":"ParameterList","parameters":[],"src":"1358:2:17"},"returnParameters":{"id":2695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2696,"src":"1384:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2693,"name":"address","nodeType":"ElementaryTypeName","src":"1384:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1383:9:17"},"scope":2787,"src":"1333:60:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"82755ebb","id":2701,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniSwapper","nameLocation":"1410:16:17","nodeType":"FunctionDefinition","parameters":{"id":2697,"nodeType":"ParameterList","parameters":[],"src":"1426:2:17"},"returnParameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2701,"src":"1452:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2698,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1451:9:17"},"scope":2787,"src":"1401:60:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bb3ba04c","id":2706,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniOracle","nameLocation":"1478:15:17","nodeType":"FunctionDefinition","parameters":{"id":2702,"nodeType":"ParameterList","parameters":[],"src":"1493:2:17"},"returnParameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2706,"src":"1519:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2703,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:9:17"},"scope":2787,"src":"1469:59:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f5d2d998","id":2711,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniAgentFactory","nameLocation":"1545:21:17","nodeType":"FunctionDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[],"src":"1566:2:17"},"returnParameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2711,"src":"1592:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2708,"name":"address","nodeType":"ElementaryTypeName","src":"1592:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1591:9:17"},"scope":2787,"src":"1536:65:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1acb6141","id":2716,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniPoolPeriphery","nameLocation":"1618:22:17","nodeType":"FunctionDefinition","parameters":{"id":2712,"nodeType":"ParameterList","parameters":[],"src":"1640:2:17"},"returnParameters":{"id":2715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2716,"src":"1666:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2713,"name":"address","nodeType":"ElementaryTypeName","src":"1666:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1665:9:17"},"scope":2787,"src":"1609:66:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1cc2b00d","id":2721,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniVaultRegistry","nameLocation":"1692:22:17","nodeType":"FunctionDefinition","parameters":{"id":2717,"nodeType":"ParameterList","parameters":[],"src":"1714:2:17"},"returnParameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2721,"src":"1740:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2718,"name":"address","nodeType":"ElementaryTypeName","src":"1740:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1739:9:17"},"scope":2787,"src":"1683:66:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"32569e02","id":2726,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniPoolRegistry","nameLocation":"1766:21:17","nodeType":"FunctionDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[],"src":"1787:2:17"},"returnParameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2726,"src":"1813:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2723,"name":"address","nodeType":"ElementaryTypeName","src":"1813:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1812:9:17"},"scope":2787,"src":"1757:65:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cff49d68","id":2731,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRebalancer","nameLocation":"1839:19:17","nodeType":"FunctionDefinition","parameters":{"id":2727,"nodeType":"ParameterList","parameters":[],"src":"1858:2:17"},"returnParameters":{"id":2730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2731,"src":"1884:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2728,"name":"address","nodeType":"ElementaryTypeName","src":"1884:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1883:9:17"},"scope":2787,"src":"1830:63:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"04cc7325","id":2736,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRouter","nameLocation":"1910:15:17","nodeType":"FunctionDefinition","parameters":{"id":2732,"nodeType":"ParameterList","parameters":[],"src":"1925:2:17"},"returnParameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2736,"src":"1951:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2733,"name":"address","nodeType":"ElementaryTypeName","src":"1951:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1950:9:17"},"scope":2787,"src":"1901:59:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c9aba8ae","id":2741,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRegistry","nameLocation":"1977:17:17","nodeType":"FunctionDefinition","parameters":{"id":2737,"nodeType":"ParameterList","parameters":[],"src":"1994:2:17"},"returnParameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2741,"src":"2020:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2738,"name":"address","nodeType":"ElementaryTypeName","src":"2020:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2019:9:17"},"scope":2787,"src":"1968:61:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6c9c0078","id":2746,"implemented":false,"kind":"function","modifiers":[],"name":"getWNATIVE","nameLocation":"2046:10:17","nodeType":"FunctionDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[],"src":"2056:2:17"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2746,"src":"2082:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2743,"name":"address","nodeType":"ElementaryTypeName","src":"2082:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2081:9:17"},"scope":2787,"src":"2037:54:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1bf01e9b","id":2751,"implemented":false,"kind":"function","modifiers":[],"name":"getUSDC","nameLocation":"2108:7:17","nodeType":"FunctionDefinition","parameters":{"id":2747,"nodeType":"ParameterList","parameters":[],"src":"2115:2:17"},"returnParameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2751,"src":"2141:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2748,"name":"address","nodeType":"ElementaryTypeName","src":"2141:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2140:9:17"},"scope":2787,"src":"2099:51:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8e1c3a8a","id":2756,"implemented":false,"kind":"function","modifiers":[],"name":"get1inchSpotAgg","nameLocation":"2167:15:17","nodeType":"FunctionDefinition","parameters":{"id":2752,"nodeType":"ParameterList","parameters":[],"src":"2182:2:17"},"returnParameters":{"id":2755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2756,"src":"2208:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2753,"name":"address","nodeType":"ElementaryTypeName","src":"2208:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2207:9:17"},"scope":2787,"src":"2158:59:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"85462d6f","id":2761,"implemented":false,"kind":"function","modifiers":[],"name":"getBPS_FEE","nameLocation":"2234:10:17","nodeType":"FunctionDefinition","parameters":{"id":2757,"nodeType":"ParameterList","parameters":[],"src":"2244:2:17"},"returnParameters":{"id":2760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2761,"src":"2270:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2270:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2269:9:17"},"scope":2787,"src":"2225:54:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9380fb6f","id":2766,"implemented":false,"kind":"function","modifiers":[],"name":"getMAX_BPS_FEE","nameLocation":"2296:14:17","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[],"src":"2310:2:17"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2766,"src":"2336:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2763,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:9:17"},"scope":2787,"src":"2287:58:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4f4608a2","id":2771,"implemented":false,"kind":"function","modifiers":[],"name":"getBPS_BASE","nameLocation":"2362:11:17","nodeType":"FunctionDefinition","parameters":{"id":2767,"nodeType":"ParameterList","parameters":[],"src":"2373:2:17"},"returnParameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2771,"src":"2399:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"2399:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2398:9:17"},"scope":2787,"src":"2353:55:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3b19e84a","id":2776,"implemented":false,"kind":"function","modifiers":[],"name":"getTreasury","nameLocation":"2425:11:17","nodeType":"FunctionDefinition","parameters":{"id":2772,"nodeType":"ParameterList","parameters":[],"src":"2436:2:17"},"returnParameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2776,"src":"2462:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2773,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2461:9:17"},"scope":2787,"src":"2416:55:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cc01e9a6","id":2781,"implemented":false,"kind":"function","modifiers":[],"name":"setStaticOracle","nameLocation":"2488:15:17","nodeType":"FunctionDefinition","parameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"_staticOracle","nameLocation":"2512:13:17","nodeType":"VariableDeclaration","scope":2781,"src":"2504:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2777,"name":"address","nodeType":"ElementaryTypeName","src":"2504:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2503:23:17"},"returnParameters":{"id":2780,"nodeType":"ParameterList","parameters":[],"src":"2535:0:17"},"scope":2787,"src":"2479:57:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a5d2236f","id":2786,"implemented":false,"kind":"function","modifiers":[],"name":"getStaticOracle","nameLocation":"2553:15:17","nodeType":"FunctionDefinition","parameters":{"id":2782,"nodeType":"ParameterList","parameters":[],"src":"2568:2:17"},"returnParameters":{"id":2785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2786,"src":"2594:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2783,"name":"address","nodeType":"ElementaryTypeName","src":"2594:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2593:9:17"},"scope":2787,"src":"2544:59:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2788,"src":"160:2446:17","usedErrors":[],"usedEvents":[]}],"src":"40:2568:17"},"id":17},"contracts/interfaces/IBaluniV1Swapper.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Swapper.sol","exportedSymbols":{"IBaluniV1Swapper":[2818]},"id":2819,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2789,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Swapper","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2818,"linearizedBaseContracts":[2818],"name":"IBaluniV1Swapper","nameLocation":"77:16:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"2d6bc8ea","id":2802,"implemented":false,"kind":"function","modifiers":[],"name":"singleSwap","nameLocation":"110:10:18","nodeType":"FunctionDefinition","parameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2791,"mutability":"mutable","name":"token0","nameLocation":"139:6:18","nodeType":"VariableDeclaration","scope":2802,"src":"131:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2790,"name":"address","nodeType":"ElementaryTypeName","src":"131:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2793,"mutability":"mutable","name":"token1","nameLocation":"164:6:18","nodeType":"VariableDeclaration","scope":2802,"src":"156:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2792,"name":"address","nodeType":"ElementaryTypeName","src":"156:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2795,"mutability":"mutable","name":"amount","nameLocation":"189:6:18","nodeType":"VariableDeclaration","scope":2802,"src":"181:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2794,"name":"uint256","nodeType":"ElementaryTypeName","src":"181:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2797,"mutability":"mutable","name":"receiver","nameLocation":"214:8:18","nodeType":"VariableDeclaration","scope":2802,"src":"206:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2796,"name":"address","nodeType":"ElementaryTypeName","src":"206:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"120:109:18"},"returnParameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"amountOut","nameLocation":"256:9:18","nodeType":"VariableDeclaration","scope":2802,"src":"248:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2799,"name":"uint256","nodeType":"ElementaryTypeName","src":"248:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"247:19:18"},"scope":2818,"src":"101:166:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5efaaebb","id":2817,"implemented":false,"kind":"function","modifiers":[],"name":"multiHopSwap","nameLocation":"282:12:18","nodeType":"FunctionDefinition","parameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"token0","nameLocation":"313:6:18","nodeType":"VariableDeclaration","scope":2817,"src":"305:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2803,"name":"address","nodeType":"ElementaryTypeName","src":"305:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2806,"mutability":"mutable","name":"token1","nameLocation":"338:6:18","nodeType":"VariableDeclaration","scope":2817,"src":"330:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2805,"name":"address","nodeType":"ElementaryTypeName","src":"330:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2808,"mutability":"mutable","name":"token2","nameLocation":"363:6:18","nodeType":"VariableDeclaration","scope":2817,"src":"355:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2807,"name":"address","nodeType":"ElementaryTypeName","src":"355:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"amount","nameLocation":"388:6:18","nodeType":"VariableDeclaration","scope":2817,"src":"380:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"380:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2812,"mutability":"mutable","name":"receiver","nameLocation":"413:8:18","nodeType":"VariableDeclaration","scope":2817,"src":"405:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2811,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"294:134:18"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"amountOut","nameLocation":"455:9:18","nodeType":"VariableDeclaration","scope":2817,"src":"447:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"446:19:18"},"scope":2818,"src":"273:193:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2819,"src":"67:402:18","usedErrors":[],"usedEvents":[]}],"src":"40:431:18"},"id":18},"contracts/registry/BaluniV1DCAVaultRegistry.sol":{"ast":{"absolutePath":"contracts/registry/BaluniV1DCAVaultRegistry.sol","exportedSymbols":{"BaluniV1DCAVaultRegistry":[3261],"ContextUpgradeable":[1293],"ERC1967Utils":[2048],"IBaluniV1DCAVault":[2578],"IBaluniV1Registry":[2787],"IERC1822Proxiable":[1608],"Initializable":[448],"OwnableUpgradeable":[194],"UUPSUpgradeable":[630]},"id":3262,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2820,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:19"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2821,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3262,"sourceUnit":195,"src":"1466:75:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":2822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3262,"sourceUnit":449,"src":"1543:75:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":2823,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3262,"sourceUnit":631,"src":"1620:77:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","file":"../interfaces/IBaluniV1Registry.sol","id":2824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3262,"sourceUnit":2788,"src":"1699:45:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1DCAVault.sol","file":"../interfaces/IBaluniV1DCAVault.sol","id":2825,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3262,"sourceUnit":2579,"src":"1746:45:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2826,"name":"Initializable","nameLocations":["1832:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1832:13:19"},"id":2827,"nodeType":"InheritanceSpecifier","src":"1832:13:19"},{"baseName":{"id":2828,"name":"UUPSUpgradeable","nameLocations":["1847:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"1847:15:19"},"id":2829,"nodeType":"InheritanceSpecifier","src":"1847:15:19"},{"baseName":{"id":2830,"name":"OwnableUpgradeable","nameLocations":["1864:18:19"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"1864:18:19"},"id":2831,"nodeType":"InheritanceSpecifier","src":"1864:18:19"}],"canonicalName":"BaluniV1DCAVaultRegistry","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3261,"linearizedBaseContracts":[3261,194,1293,630,1608,448],"name":"BaluniV1DCAVaultRegistry","nameLocation":"1804:24:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"9094a91e","id":2834,"mutability":"mutable","name":"allVaults","nameLocation":"1907:9:19","nodeType":"VariableDeclaration","scope":3261,"src":"1890:26:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":2832,"name":"address","nodeType":"ElementaryTypeName","src":"1890:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2833,"nodeType":"ArrayTypeName","src":"1890:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"7b103999","id":2837,"mutability":"mutable","name":"registry","nameLocation":"1950:8:19","nodeType":"VariableDeclaration","scope":3261,"src":"1925:33:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"},"typeName":{"id":2836,"nodeType":"UserDefinedTypeName","pathNode":{"id":2835,"name":"IBaluniV1Registry","nameLocations":["1925:17:19"],"nodeType":"IdentifierPath","referencedDeclaration":2787,"src":"1925:17:19"},"referencedDeclaration":2787,"src":"1925:17:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"visibility":"public"},{"constant":false,"functionSelector":"bbd7edc5","id":2843,"mutability":"mutable","name":"getVault","nameLocation":"2022:8:19","nodeType":"VariableDeclaration","scope":3261,"src":"1967:63:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"typeName":{"id":2842,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2838,"name":"address","nodeType":"ElementaryTypeName","src":"1975:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1967:47:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2841,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2839,"name":"address","nodeType":"ElementaryTypeName","src":"1994:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1986:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2840,"name":"address","nodeType":"ElementaryTypeName","src":"2005:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"b822d89a800960c58214ca2d78afc70c29a892beb2e57c66d54e184bd7ca1815","id":2850,"name":"vaultCreated","nameLocation":"2045:12:19","nodeType":"EventDefinition","parameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"indexed":true,"mutability":"mutable","name":"vault","nameLocation":"2074:5:19","nodeType":"VariableDeclaration","scope":2850,"src":"2058:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2844,"name":"address","nodeType":"ElementaryTypeName","src":"2058:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2848,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2091:6:19","nodeType":"VariableDeclaration","scope":2850,"src":"2081:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2846,"name":"address","nodeType":"ElementaryTypeName","src":"2081:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2847,"nodeType":"ArrayTypeName","src":"2081:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2057:41:19"},"src":"2039:60:19"},{"body":{"id":2871,"nodeType":"Block","src":"2165:130:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2857,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2176:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2859,"nodeType":"ExpressionStatement","src":"2176:24:19"},{"expression":{"arguments":[{"expression":{"id":2861,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2226:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2230:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2226:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2860,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2211:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2211:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2864,"nodeType":"ExpressionStatement","src":"2211:26:19"},{"expression":{"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2865,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"2248:8:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2867,"name":"_register","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"2277:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2866,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"2259:17:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$2787_$","typeString":"type(contract IBaluniV1Registry)"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2259:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"src":"2248:39:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"id":2870,"nodeType":"ExpressionStatement","src":"2248:39:19"}]},"functionSelector":"c4d66de8","id":2872,"implemented":true,"kind":"function","modifiers":[{"id":2855,"kind":"modifierInvocation","modifierName":{"id":2854,"name":"initializer","nameLocations":["2153:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2153:11:19"},"nodeType":"ModifierInvocation","src":"2153:11:19"}],"name":"initialize","nameLocation":"2116:10:19","nodeType":"FunctionDefinition","parameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"_register","nameLocation":"2135:9:19","nodeType":"VariableDeclaration","scope":2872,"src":"2127:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2851,"name":"address","nodeType":"ElementaryTypeName","src":"2127:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2126:19:19"},"returnParameters":{"id":2856,"nodeType":"ParameterList","parameters":[],"src":"2165:0:19"},"scope":3261,"src":"2107:188:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2888,"nodeType":"Block","src":"2392:58:19","statements":[{"expression":{"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2882,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"2403:8:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2884,"name":"_register","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"2432:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2883,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"2414:17:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$2787_$","typeString":"type(contract IBaluniV1Registry)"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"src":"2403:39:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"id":2887,"nodeType":"ExpressionStatement","src":"2403:39:19"}]},"functionSelector":"8f2248bc","id":2889,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2879,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"2382:8:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":2880,"kind":"modifierInvocation","modifierName":{"id":2878,"name":"reinitializer","nameLocations":["2368:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"2368:13:19"},"nodeType":"ModifierInvocation","src":"2368:23:19"}],"name":"reinitialize","nameLocation":"2312:12:19","nodeType":"FunctionDefinition","parameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"_register","nameLocation":"2333:9:19","nodeType":"VariableDeclaration","scope":2889,"src":"2325:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2873,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2876,"mutability":"mutable","name":"_version","nameLocation":"2351:8:19","nodeType":"VariableDeclaration","scope":2889,"src":"2344:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2875,"name":"uint64","nodeType":"ElementaryTypeName","src":"2344:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2324:36:19"},"returnParameters":{"id":2881,"nodeType":"ParameterList","parameters":[],"src":"2392:0:19"},"scope":3261,"src":"2303:147:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[584],"body":{"id":2897,"nodeType":"Block","src":"2540:2:19","statements":[]},"id":2898,"implemented":true,"kind":"function","modifiers":[{"id":2895,"kind":"modifierInvocation","modifierName":{"id":2894,"name":"onlyOwner","nameLocations":["2530:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2530:9:19"},"nodeType":"ModifierInvocation","src":"2530:9:19"}],"name":"_authorizeUpgrade","nameLocation":"2467:17:19","nodeType":"FunctionDefinition","overrides":{"id":2893,"nodeType":"OverrideSpecifier","overrides":[],"src":"2521:8:19"},"parameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"newImplementation","nameLocation":"2493:17:19","nodeType":"VariableDeclaration","scope":2898,"src":"2485:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2890,"name":"address","nodeType":"ElementaryTypeName","src":"2485:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2484:27:19"},"returnParameters":{"id":2896,"nodeType":"ParameterList","parameters":[],"src":"2540:0:19"},"scope":3261,"src":"2458:84:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2953,"nodeType":"Block","src":"2609:406:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"2628:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2652:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2644:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2907,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:19","typeDescriptions":{}}},"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2644:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2628:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616c756e6956315661756c74466163746f72793a20494e56414c49445f7661756c745f41444452455353","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:45:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7510511c72bfe0cca9302d42db6cb14a9ff3bc6071674c6a36f4798a31a6f98d","typeString":"literal_string \"BaluniV1VaultFactory: INVALID_vault_ADDRESS\""},"value":"BaluniV1VaultFactory: INVALID_vault_ADDRESS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7510511c72bfe0cca9302d42db6cb14a9ff3bc6071674c6a36f4798a31a6f98d","typeString":"literal_string \"BaluniV1VaultFactory: INVALID_vault_ADDRESS\""}],"id":2905,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2620:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2620:82:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2914,"nodeType":"ExpressionStatement","src":"2620:82:19"},{"expression":{"arguments":[{"id":2918,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"2728:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2915,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"2713:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2723:4:19","memberName":"push","nodeType":"MemberAccess","src":"2713:14:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2920,"nodeType":"ExpressionStatement","src":"2713:28:19"},{"assignments":[2922],"declarations":[{"constant":false,"id":2922,"mutability":"mutable","name":"baseAsset","nameLocation":"2760:9:19","nodeType":"VariableDeclaration","scope":2953,"src":"2752:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2921,"name":"address","nodeType":"ElementaryTypeName","src":"2752:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2928,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2924,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"2790:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2923,"name":"IBaluniV1DCAVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"2772:17:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1DCAVault_$2578_$","typeString":"type(contract IBaluniV1DCAVault)"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1DCAVault_$2578","typeString":"contract IBaluniV1DCAVault"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2804:9:19","memberName":"baseAsset","nodeType":"MemberAccess","referencedDeclaration":2532,"src":"2772:41:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2752:63:19"},{"assignments":[2930],"declarations":[{"constant":false,"id":2930,"mutability":"mutable","name":"quoteAsset","nameLocation":"2834:10:19","nodeType":"VariableDeclaration","scope":2953,"src":"2826:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2929,"name":"address","nodeType":"ElementaryTypeName","src":"2826:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2936,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2932,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"2865:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2931,"name":"IBaluniV1DCAVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"2847:17:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1DCAVault_$2578_$","typeString":"type(contract IBaluniV1DCAVault)"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2847:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1DCAVault_$2578","typeString":"contract IBaluniV1DCAVault"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2879:10:19","memberName":"quoteAsset","nodeType":"MemberAccess","referencedDeclaration":2537,"src":"2847:42:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2847:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2826:65:19"},{"expression":{"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2937,"name":"getVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"2904:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":2940,"indexExpression":{"id":2938,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"2913:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2904:19:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2941,"indexExpression":{"id":2939,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"2924:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2904:31:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2942,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"2938:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2904:46:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2944,"nodeType":"ExpressionStatement","src":"2904:46:19"},{"expression":{"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2945,"name":"getVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"2961:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":2948,"indexExpression":{"id":2946,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"2970:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2961:20:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2949,"indexExpression":{"id":2947,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"2982:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2961:31:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2950,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"2995:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2961:46:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2952,"nodeType":"ExpressionStatement","src":"2961:46:19"}]},"functionSelector":"256b5a02","id":2954,"implemented":true,"kind":"function","modifiers":[{"id":2903,"kind":"modifierInvocation","modifierName":{"id":2902,"name":"onlyOwner","nameLocations":["2599:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2599:9:19"},"nodeType":"ModifierInvocation","src":"2599:9:19"}],"name":"addVault","nameLocation":"2559:8:19","nodeType":"FunctionDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"vaultAddress","nameLocation":"2576:12:19","nodeType":"VariableDeclaration","scope":2954,"src":"2568:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2899,"name":"address","nodeType":"ElementaryTypeName","src":"2568:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2567:22:19"},"returnParameters":{"id":2904,"nodeType":"ParameterList","parameters":[],"src":"2609:0:19"},"scope":3261,"src":"2550:465:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2963,"nodeType":"Block","src":"3213:35:19","statements":[{"expression":{"id":2961,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"3231:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":2960,"id":2962,"nodeType":"Return","src":"3224:16:19"}]},"documentation":{"id":2955,"nodeType":"StructuredDocumentation","src":"3023:119:19","text":" @dev Retrieves all the vaults created by the factory.\n @return An array of vault addresses."},"functionSelector":"97331bf9","id":2964,"implemented":true,"kind":"function","modifiers":[],"name":"getAllVaults","nameLocation":"3157:12:19","nodeType":"FunctionDefinition","parameters":{"id":2956,"nodeType":"ParameterList","parameters":[],"src":"3169:2:19"},"returnParameters":{"id":2960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2964,"src":"3195:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2957,"name":"address","nodeType":"ElementaryTypeName","src":"3195:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2958,"nodeType":"ArrayTypeName","src":"3195:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3194:18:19"},"scope":3261,"src":"3148:100:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2973,"nodeType":"Block","src":"3437:42:19","statements":[{"expression":{"expression":{"id":2970,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"3455:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3465:6:19","memberName":"length","nodeType":"MemberAccess","src":"3455:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2969,"id":2972,"nodeType":"Return","src":"3448:23:19"}]},"documentation":{"id":2965,"nodeType":"StructuredDocumentation","src":"3256:117:19","text":" @dev Retrieves the number of vaults created by the factory.\n @return The count of vaults."},"functionSelector":"b9b658db","id":2974,"implemented":true,"kind":"function","modifiers":[],"name":"getVaultsCount","nameLocation":"3388:14:19","nodeType":"FunctionDefinition","parameters":{"id":2966,"nodeType":"ParameterList","parameters":[],"src":"3402:2:19"},"returnParameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2974,"src":"3428:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"3428:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3427:9:19"},"scope":3261,"src":"3379:100:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3016,"nodeType":"Block","src":"3745:218:19","statements":[{"assignments":[2987],"declarations":[{"constant":false,"id":2987,"mutability":"mutable","name":"assets","nameLocation":"3773:6:19","nodeType":"VariableDeclaration","scope":3016,"src":"3756:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2985,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2986,"nodeType":"ArrayTypeName","src":"3756:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2993,"initialValue":{"arguments":[{"hexValue":"32","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3796:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":2990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3782:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2988,"name":"address","nodeType":"ElementaryTypeName","src":"3786:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2989,"nodeType":"ArrayTypeName","src":"3786:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3782:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3756:42:19"},{"expression":{"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2994,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"3809:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2996,"indexExpression":{"hexValue":"30","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3809:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2998,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"3839:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2997,"name":"IBaluniV1DCAVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"3821:17:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1DCAVault_$2578_$","typeString":"type(contract IBaluniV1DCAVault)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1DCAVault_$2578","typeString":"contract IBaluniV1DCAVault"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3853:9:19","memberName":"baseAsset","nodeType":"MemberAccess","referencedDeclaration":2532,"src":"3821:41:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3809:55:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3003,"nodeType":"ExpressionStatement","src":"3809:55:19"},{"expression":{"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3004,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"3875:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3006,"indexExpression":{"hexValue":"31","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3882:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3875:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3008,"name":"vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"3905:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3007,"name":"IBaluniV1DCAVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"3887:17:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1DCAVault_$2578_$","typeString":"type(contract IBaluniV1DCAVault)"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3887:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1DCAVault_$2578","typeString":"contract IBaluniV1DCAVault"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3919:10:19","memberName":"quoteAsset","nodeType":"MemberAccess","referencedDeclaration":2537,"src":"3887:42:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3887:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3875:56:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3013,"nodeType":"ExpressionStatement","src":"3875:56:19"},{"expression":{"id":3014,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"3949:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2982,"id":3015,"nodeType":"Return","src":"3942:13:19"}]},"documentation":{"id":2975,"nodeType":"StructuredDocumentation","src":"3487:166:19","text":" @dev Retrieves the assets of a specific vault.\n @param vaultAddress The address of the vault.\n @return An array of asset addresses."},"functionSelector":"ca9d67c8","id":3017,"implemented":true,"kind":"function","modifiers":[],"name":"getVaultAsset","nameLocation":"3668:13:19","nodeType":"FunctionDefinition","parameters":{"id":2978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2977,"mutability":"mutable","name":"vaultAddress","nameLocation":"3690:12:19","nodeType":"VariableDeclaration","scope":3017,"src":"3682:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2976,"name":"address","nodeType":"ElementaryTypeName","src":"3682:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3681:22:19"},"returnParameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3017,"src":"3727:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2979,"name":"address","nodeType":"ElementaryTypeName","src":"3727:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2980,"nodeType":"ArrayTypeName","src":"3727:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3726:18:19"},"scope":3261,"src":"3659:304:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3033,"nodeType":"Block","src":"4303:50:19","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3027,"name":"getVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"4321:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":3029,"indexExpression":{"id":3028,"name":"asset1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"4330:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4321:16:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":3031,"indexExpression":{"id":3030,"name":"asset2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"4338:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4321:24:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3026,"id":3032,"nodeType":"Return","src":"4314:31:19"}]},"documentation":{"id":3018,"nodeType":"StructuredDocumentation","src":"3971:231:19","text":" @dev Retrieves the vault address based on the given assets.\n @param asset1 The address of the first asset.\n @param asset2 The address of the second asset.\n @return The address of the vault."},"functionSelector":"592717af","id":3034,"implemented":true,"kind":"function","modifiers":[],"name":"getVaultType1ByAssets","nameLocation":"4217:21:19","nodeType":"FunctionDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"asset1","nameLocation":"4247:6:19","nodeType":"VariableDeclaration","scope":3034,"src":"4239:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3019,"name":"address","nodeType":"ElementaryTypeName","src":"4239:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"asset2","nameLocation":"4263:6:19","nodeType":"VariableDeclaration","scope":3034,"src":"4255:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3021,"name":"address","nodeType":"ElementaryTypeName","src":"4255:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4238:32:19"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3034,"src":"4294:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3024,"name":"address","nodeType":"ElementaryTypeName","src":"4294:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4293:9:19"},"scope":3261,"src":"4208:145:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3144,"nodeType":"Block","src":"4443:709:19","statements":[{"assignments":[3046],"declarations":[{"constant":false,"id":3046,"mutability":"mutable","name":"vaults","nameLocation":"4471:6:19","nodeType":"VariableDeclaration","scope":3144,"src":"4454:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3044,"name":"address","nodeType":"ElementaryTypeName","src":"4454:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3045,"nodeType":"ArrayTypeName","src":"4454:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3053,"initialValue":{"arguments":[{"expression":{"id":3050,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"4494:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4504:6:19","memberName":"length","nodeType":"MemberAccess","src":"4494:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4480:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3047,"name":"address","nodeType":"ElementaryTypeName","src":"4484:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3048,"nodeType":"ArrayTypeName","src":"4484:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4480:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4454:57:19"},{"assignments":[3055],"declarations":[{"constant":false,"id":3055,"mutability":"mutable","name":"count","nameLocation":"4530:5:19","nodeType":"VariableDeclaration","scope":3144,"src":"4522:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"4522:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3057,"initialValue":{"hexValue":"30","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4538:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4522:17:19"},{"body":{"id":3109,"nodeType":"Block","src":"4599:367:19","statements":[{"assignments":[3071],"declarations":[{"constant":false,"id":3071,"mutability":"mutable","name":"vault","nameLocation":"4632:5:19","nodeType":"VariableDeclaration","scope":3109,"src":"4614:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1DCAVault_$2578","typeString":"contract IBaluniV1DCAVault"},"typeName":{"id":3070,"nodeType":"UserDefinedTypeName","pathNode":{"id":3069,"name":"IBaluniV1DCAVault","nameLocations":["4614:17:19"],"nodeType":"IdentifierPath","referencedDeclaration":2578,"src":"4614:17:19"},"referencedDeclaration":2578,"src":"4614:17:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1DCAVault_$2578","typeString":"contract IBaluniV1DCAVault"}},"visibility":"internal"}],"id":3077,"initialValue":{"arguments":[{"baseExpression":{"id":3073,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"4658:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3075,"indexExpression":{"id":3074,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"4668:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4658:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3072,"name":"IBaluniV1DCAVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"4640:17:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1DCAVault_$2578_$","typeString":"type(contract IBaluniV1DCAVault)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4640:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1DCAVault_$2578","typeString":"contract IBaluniV1DCAVault"}},"nodeType":"VariableDeclarationStatement","src":"4614:57:19"},{"assignments":[3079],"declarations":[{"constant":false,"id":3079,"mutability":"mutable","name":"asset","nameLocation":"4694:5:19","nodeType":"VariableDeclaration","scope":3109,"src":"4686:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3078,"name":"address","nodeType":"ElementaryTypeName","src":"4686:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3083,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3080,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"4702:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1DCAVault_$2578","typeString":"contract IBaluniV1DCAVault"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4708:9:19","memberName":"baseAsset","nodeType":"MemberAccess","referencedDeclaration":2532,"src":"4702:15:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4702:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4686:33:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3084,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"4740:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3085,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"4749:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4740:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3101,"nodeType":"IfStatement","src":"4736:135:19","trueBody":{"id":3100,"nodeType":"Block","src":"4756:115:19","statements":[{"expression":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3087,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"4775:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3089,"indexExpression":{"id":3088,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4782:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4775:13:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3092,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"4799:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1DCAVault_$2578","typeString":"contract IBaluniV1DCAVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaluniV1DCAVault_$2578","typeString":"contract IBaluniV1DCAVault"}],"id":3091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4791:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3090,"name":"address","nodeType":"ElementaryTypeName","src":"4791:7:19","typeDescriptions":{}}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4791:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4775:30:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3095,"nodeType":"ExpressionStatement","src":"4775:30:19"},{"expression":{"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4824:7:19","subExpression":{"id":3096,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4824:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3098,"nodeType":"ExpressionStatement","src":"4824:7:19"},{"id":3099,"nodeType":"Break","src":"4850:5:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3102,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4891:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3103,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"4900:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4907:6:19","memberName":"length","nodeType":"MemberAccess","src":"4900:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4891:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3108,"nodeType":"IfStatement","src":"4887:68:19","trueBody":{"id":3107,"nodeType":"Block","src":"4915:40:19","statements":[{"id":3106,"nodeType":"Break","src":"4934:5:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3062,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"4572:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3063,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"4576:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4586:6:19","memberName":"length","nodeType":"MemberAccess","src":"4576:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4572:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3110,"initializationExpression":{"assignments":[3059],"declarations":[{"constant":false,"id":3059,"mutability":"mutable","name":"i","nameLocation":"4565:1:19","nodeType":"VariableDeclaration","scope":3110,"src":"4557:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3058,"name":"uint256","nodeType":"ElementaryTypeName","src":"4557:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3061,"initialValue":{"hexValue":"30","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4569:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4557:13:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4594:3:19","subExpression":{"id":3066,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"4594:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3068,"nodeType":"ExpressionStatement","src":"4594:3:19"},"nodeType":"ForStatement","src":"4552:414:19"},{"assignments":[3115],"declarations":[{"constant":false,"id":3115,"mutability":"mutable","name":"result","nameLocation":"4995:6:19","nodeType":"VariableDeclaration","scope":3144,"src":"4978:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3113,"name":"address","nodeType":"ElementaryTypeName","src":"4978:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3114,"nodeType":"ArrayTypeName","src":"4978:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3121,"initialValue":{"arguments":[{"id":3119,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"5018:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5004:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3116,"name":"address","nodeType":"ElementaryTypeName","src":"5008:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3117,"nodeType":"ArrayTypeName","src":"5008:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5004:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4978:46:19"},{"body":{"id":3140,"nodeType":"Block","src":"5071:48:19","statements":[{"expression":{"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3132,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"5086:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3134,"indexExpression":{"id":3133,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"5093:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5086:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3135,"name":"vaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"5098:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3137,"indexExpression":{"id":3136,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"5105:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5098:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5086:21:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3139,"nodeType":"ExpressionStatement","src":"5086:21:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3126,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"5055:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3127,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"5059:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5055:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3141,"initializationExpression":{"assignments":[3123],"declarations":[{"constant":false,"id":3123,"mutability":"mutable","name":"i","nameLocation":"5048:1:19","nodeType":"VariableDeclaration","scope":3141,"src":"5040:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3122,"name":"uint256","nodeType":"ElementaryTypeName","src":"5040:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3125,"initialValue":{"hexValue":"30","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5052:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5040:13:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5066:3:19","subExpression":{"id":3129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"5066:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3131,"nodeType":"ExpressionStatement","src":"5066:3:19"},"nodeType":"ForStatement","src":"5035:84:19"},{"expression":{"id":3142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"5138:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3041,"id":3143,"nodeType":"Return","src":"5131:13:19"}]},"functionSelector":"10894052","id":3145,"implemented":true,"kind":"function","modifiers":[],"name":"getVaultsByAsset","nameLocation":"4370:16:19","nodeType":"FunctionDefinition","parameters":{"id":3037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3036,"mutability":"mutable","name":"token","nameLocation":"4395:5:19","nodeType":"VariableDeclaration","scope":3145,"src":"4387:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3035,"name":"address","nodeType":"ElementaryTypeName","src":"4387:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4386:15:19"},"returnParameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3145,"src":"4425:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3038,"name":"address","nodeType":"ElementaryTypeName","src":"4425:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3039,"nodeType":"ArrayTypeName","src":"4425:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4424:18:19"},"scope":3261,"src":"4361:791:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3176,"nodeType":"Block","src":"5225:188:19","statements":[{"body":{"id":3172,"nodeType":"Block","src":"5283:100:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3163,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"5302:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3165,"indexExpression":{"id":3164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"5312:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5302:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3166,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"5318:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5302:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3171,"nodeType":"IfStatement","src":"5298:74:19","trueBody":{"id":3170,"nodeType":"Block","src":"5326:46:19","statements":[{"expression":{"hexValue":"74727565","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5352:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3151,"id":3169,"nodeType":"Return","src":"5345:11:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3156,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"5256:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3157,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"5260:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5270:6:19","memberName":"length","nodeType":"MemberAccess","src":"5260:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5256:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3173,"initializationExpression":{"assignments":[3153],"declarations":[{"constant":false,"id":3153,"mutability":"mutable","name":"i","nameLocation":"5249:1:19","nodeType":"VariableDeclaration","scope":3173,"src":"5241:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3152,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3155,"initialValue":{"hexValue":"30","id":3154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5253:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5241:13:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5278:3:19","subExpression":{"id":3160,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"5278:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3162,"nodeType":"ExpressionStatement","src":"5278:3:19"},"nodeType":"ForStatement","src":"5236:147:19"},{"expression":{"hexValue":"66616c7365","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5400:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3151,"id":3175,"nodeType":"Return","src":"5393:12:19"}]},"functionSelector":"02b3537d","id":3177,"implemented":true,"kind":"function","modifiers":[],"name":"vaultExist","nameLocation":"5169:10:19","nodeType":"FunctionDefinition","parameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"_vault","nameLocation":"5188:6:19","nodeType":"VariableDeclaration","scope":3177,"src":"5180:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3146,"name":"address","nodeType":"ElementaryTypeName","src":"5180:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5179:16:19"},"returnParameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3177,"src":"5219:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3149,"name":"bool","nodeType":"ElementaryTypeName","src":"5219:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5218:6:19"},"scope":3261,"src":"5160:253:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3259,"nodeType":"Block","src":"5477:496:19","statements":[{"body":{"id":3257,"nodeType":"Block","src":"5535:431:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3195,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"5554:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3197,"indexExpression":{"id":3196,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"5564:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5554:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3198,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"5570:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5554:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3256,"nodeType":"IfStatement","src":"5550:405:19","trueBody":{"id":3255,"nodeType":"Block","src":"5578:377:19","statements":[{"expression":{"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3200,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"5597:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3202,"indexExpression":{"id":3201,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"5607:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5597:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3203,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"5612:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3208,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3204,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"5622:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5632:6:19","memberName":"length","nodeType":"MemberAccess","src":"5622:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5641:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5622:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5612:31:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5597:46:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3210,"nodeType":"ExpressionStatement","src":"5597:46:19"},{"expression":{"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3211,"name":"getVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"5662:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":3222,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3213,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"5689:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3212,"name":"IBaluniV1DCAVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"5671:17:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1DCAVault_$2578_$","typeString":"type(contract IBaluniV1DCAVault)"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1DCAVault_$2578","typeString":"contract IBaluniV1DCAVault"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5697:10:19","memberName":"quoteAsset","nodeType":"MemberAccess","referencedDeclaration":2537,"src":"5671:36:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5662:48:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":3223,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3218,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"5729:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3217,"name":"IBaluniV1DCAVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"5711:17:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1DCAVault_$2578_$","typeString":"type(contract IBaluniV1DCAVault)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5711:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1DCAVault_$2578","typeString":"contract IBaluniV1DCAVault"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5737:9:19","memberName":"baseAsset","nodeType":"MemberAccess","referencedDeclaration":2532,"src":"5711:35:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5711:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5662:87:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5760:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5752:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3224,"name":"address","nodeType":"ElementaryTypeName","src":"5752:7:19","typeDescriptions":{}}},"id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5662:100:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3229,"nodeType":"ExpressionStatement","src":"5662:100:19"},{"expression":{"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3230,"name":"getVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"5781:8:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":3241,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3232,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"5808:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3231,"name":"IBaluniV1DCAVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"5790:17:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1DCAVault_$2578_$","typeString":"type(contract IBaluniV1DCAVault)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5790:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1DCAVault_$2578","typeString":"contract IBaluniV1DCAVault"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5816:9:19","memberName":"baseAsset","nodeType":"MemberAccess","referencedDeclaration":2532,"src":"5790:35:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5790:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5781:47:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":3242,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3237,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"5847:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3236,"name":"IBaluniV1DCAVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"5829:17:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1DCAVault_$2578_$","typeString":"type(contract IBaluniV1DCAVault)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1DCAVault_$2578","typeString":"contract IBaluniV1DCAVault"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5855:10:19","memberName":"quoteAsset","nodeType":"MemberAccess","referencedDeclaration":2537,"src":"5829:36:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5781:87:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5879:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5871:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3243,"name":"address","nodeType":"ElementaryTypeName","src":"5871:7:19","typeDescriptions":{}}},"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5871:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5781:100:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3248,"nodeType":"ExpressionStatement","src":"5781:100:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3249,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"5900:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5910:3:19","memberName":"pop","nodeType":"MemberAccess","src":"5900:13:19","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5900:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3253,"nodeType":"ExpressionStatement","src":"5900:15:19"},{"id":3254,"nodeType":"Break","src":"5934:5:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"5508:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3189,"name":"allVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"5512:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5522:6:19","memberName":"length","nodeType":"MemberAccess","src":"5512:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3258,"initializationExpression":{"assignments":[3185],"declarations":[{"constant":false,"id":3185,"mutability":"mutable","name":"i","nameLocation":"5501:1:19","nodeType":"VariableDeclaration","scope":3258,"src":"5493:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3187,"initialValue":{"hexValue":"30","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5505:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5493:13:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5530:3:19","subExpression":{"id":3192,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"5530:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3194,"nodeType":"ExpressionStatement","src":"5530:3:19"},"nodeType":"ForStatement","src":"5488:478:19"}]},"functionSelector":"ceb68c23","id":3260,"implemented":true,"kind":"function","modifiers":[{"id":3182,"kind":"modifierInvocation","modifierName":{"id":3181,"name":"onlyOwner","nameLocations":["5467:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"5467:9:19"},"nodeType":"ModifierInvocation","src":"5467:9:19"}],"name":"removeVault","nameLocation":"5430:11:19","nodeType":"FunctionDefinition","parameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3179,"mutability":"mutable","name":"_vault","nameLocation":"5450:6:19","nodeType":"VariableDeclaration","scope":3260,"src":"5442:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3178,"name":"address","nodeType":"ElementaryTypeName","src":"5442:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5441:16:19"},"returnParameters":{"id":3183,"nodeType":"ParameterList","parameters":[],"src":"5477:0:19"},"scope":3261,"src":"5421:552:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3262,"src":"1795:4181:19","usedErrors":[30,35,211,214,475,480,1780,1793,2175,2178],"usedEvents":[41,219,1759,2850]}],"src":"40:5938:19"},"id":19},"contracts/vaults/BaluniV1DCAVault.sol":{"ast":{"absolutePath":"contracts/vaults/BaluniV1DCAVault.sol","exportedSymbols":{"BaluniV1DCAVault":[4172],"ContextUpgradeable":[1293],"ERC1967Utils":[2048],"ERC20Upgradeable":[1247],"IBaluniV1Oracle":[2603],"IBaluniV1Registry":[2787],"IBaluniV1Swapper":[2818],"IERC1822Proxiable":[1608],"IERC20":[2136],"IERC20Errors":[1650],"IERC20Metadata":[2162],"Initializable":[448],"OwnableUpgradeable":[194],"PausableUpgradeable":[1469],"ReentrancyGuardUpgradeable":[1598],"UUPSUpgradeable":[630]},"id":4173,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":3263,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:20"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":3264,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4173,"sourceUnit":1248,"src":"67:78:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":3265,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4173,"sourceUnit":195,"src":"147:75:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":3266,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4173,"sourceUnit":1599,"src":"224:82:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":3267,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4173,"sourceUnit":449,"src":"308:75:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":3268,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4173,"sourceUnit":631,"src":"385:77:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","id":3269,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4173,"sourceUnit":1470,"src":"464:75:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","file":"../interfaces/IBaluniV1Registry.sol","id":3270,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4173,"sourceUnit":2788,"src":"543:45:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Swapper.sol","file":"../interfaces/IBaluniV1Swapper.sol","id":3271,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4173,"sourceUnit":2819,"src":"590:44:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Oracle.sol","file":"../interfaces/IBaluniV1Oracle.sol","id":3272,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4173,"sourceUnit":2604,"src":"636:43:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3273,"name":"Initializable","nameLocations":["717:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"717:13:20"},"id":3274,"nodeType":"InheritanceSpecifier","src":"717:13:20"},{"baseName":{"id":3275,"name":"UUPSUpgradeable","nameLocations":["737:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"737:15:20"},"id":3276,"nodeType":"InheritanceSpecifier","src":"737:15:20"},{"baseName":{"id":3277,"name":"OwnableUpgradeable","nameLocations":["759:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"759:18:20"},"id":3278,"nodeType":"InheritanceSpecifier","src":"759:18:20"},{"baseName":{"id":3279,"name":"ERC20Upgradeable","nameLocations":["784:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":1247,"src":"784:16:20"},"id":3280,"nodeType":"InheritanceSpecifier","src":"784:16:20"},{"baseName":{"id":3281,"name":"ReentrancyGuardUpgradeable","nameLocations":["807:26:20"],"nodeType":"IdentifierPath","referencedDeclaration":1598,"src":"807:26:20"},"id":3282,"nodeType":"InheritanceSpecifier","src":"807:26:20"},{"baseName":{"id":3283,"name":"PausableUpgradeable","nameLocations":["840:19:20"],"nodeType":"IdentifierPath","referencedDeclaration":1469,"src":"840:19:20"},"id":3284,"nodeType":"InheritanceSpecifier","src":"840:19:20"}],"canonicalName":"BaluniV1DCAVault","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4172,"linearizedBaseContracts":[4172,1469,1598,1247,1650,2162,2136,194,1293,630,1608,448],"name":"BaluniV1DCAVault","nameLocation":"692:16:20","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"cdf456e1","id":3286,"mutability":"mutable","name":"baseAsset","nameLocation":"883:9:20","nodeType":"VariableDeclaration","scope":4172,"src":"868:24:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3285,"name":"address","nodeType":"ElementaryTypeName","src":"868:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"fdf262b7","id":3288,"mutability":"mutable","name":"quoteAsset","nameLocation":"914:10:20","nodeType":"VariableDeclaration","scope":4172,"src":"899:25:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3287,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":3291,"mutability":"mutable","name":"_registry","nameLocation":"959:9:20","nodeType":"VariableDeclaration","scope":4172,"src":"933:35:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"},"typeName":{"id":3290,"nodeType":"UserDefinedTypeName","pathNode":{"id":3289,"name":"IBaluniV1Registry","nameLocations":["933:17:20"],"nodeType":"IdentifierPath","referencedDeclaration":2787,"src":"933:17:20"},"referencedDeclaration":2787,"src":"933:17:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"visibility":"private"},{"constant":false,"functionSelector":"36b77107","id":3293,"mutability":"mutable","name":"lastDeposit","nameLocation":"992:11:20","nodeType":"VariableDeclaration","scope":4172,"src":"977:26:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"977:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"bc4ba731","id":3295,"mutability":"mutable","name":"lastInvestedBlock","nameLocation":"1025:17:20","nodeType":"VariableDeclaration","scope":4172,"src":"1010:32:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1010:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"db48a5e3","id":3297,"mutability":"mutable","name":"maxPerSwap","nameLocation":"1064:10:20","nodeType":"VariableDeclaration","scope":4172,"src":"1049:25:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b3404efd","id":3299,"mutability":"mutable","name":"swapDuration","nameLocation":"1096:12:20","nodeType":"VariableDeclaration","scope":4172,"src":"1081:27:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1081:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4fe84c42","id":3301,"mutability":"mutable","name":"reinvestDuration","nameLocation":"1130:16:20","nodeType":"VariableDeclaration","scope":4172,"src":"1115:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9ac2a011","id":3305,"mutability":"mutable","name":"executors","nameLocation":"1187:9:20","nodeType":"VariableDeclaration","scope":4172,"src":"1155:41:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":3304,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3302,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1155:24:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3303,"name":"bool","nodeType":"ElementaryTypeName","src":"1174:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"129ac658e77b551b004790e5bd957532cef552c50852a1ee0e38dd3e23fe85db","id":3313,"name":"ExecuteTrade","nameLocation":"1211:12:20","nodeType":"EventDefinition","parameters":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1240:6:20","nodeType":"VariableDeclaration","scope":3313,"src":"1224:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3306,"name":"address","nodeType":"ElementaryTypeName","src":"1224:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3309,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"1256:8:20","nodeType":"VariableDeclaration","scope":3313,"src":"1248:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1248:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3311,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"1274:9:20","nodeType":"VariableDeclaration","scope":3313,"src":"1266:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1266:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1223:61:20"},"src":"1205:80:20"},{"body":{"id":3391,"nodeType":"Block","src":"1949:528:20","statements":[{"expression":{"arguments":[{"expression":{"id":3332,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1975:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:20","memberName":"sender","nodeType":"MemberAccess","src":"1975:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3331,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1960:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1960:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3335,"nodeType":"ExpressionStatement","src":"1960:26:20"},{"expression":{"arguments":[{"id":3337,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"2010:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3338,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"2017:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3336,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"1997:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1997:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3340,"nodeType":"ExpressionStatement","src":"1997:28:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3341,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2036:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2036:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3343,"nodeType":"ExpressionStatement","src":"2036:24:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3344,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"2071:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3346,"nodeType":"ExpressionStatement","src":"2071:24:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3347,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"2106:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2106:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3349,"nodeType":"ExpressionStatement","src":"2106:17:20"},{"expression":{"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3350,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"2136:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3351,"name":"_baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"2148:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2136:22:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3353,"nodeType":"ExpressionStatement","src":"2136:22:20"},{"expression":{"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3354,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"2169:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3355,"name":"_quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"2182:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:24:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3357,"nodeType":"ExpressionStatement","src":"2169:24:20"},{"expression":{"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3358,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"2204:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3360,"name":"_registryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"2234:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3359,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"2216:17:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$2787_$","typeString":"type(contract IBaluniV1Registry)"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"src":"2204:47:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"id":3363,"nodeType":"ExpressionStatement","src":"2204:47:20"},{"expression":{"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3364,"name":"swapDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"2264:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"333630","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2279:3:20","typeDescriptions":{"typeIdentifier":"t_rational_360_by_1","typeString":"int_const 360"},"value":"360"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3366,"name":"_reinvestDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"2285:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2279:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2264:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3369,"nodeType":"ExpressionStatement","src":"2264:38:20"},{"expression":{"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3370,"name":"reinvestDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"2313:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3371,"name":"_reinvestDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"2332:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2313:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3373,"nodeType":"ExpressionStatement","src":"2313:36:20"},{"expression":{"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3374,"name":"lastInvestedBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"2360:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3375,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2380:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2386:6:20","memberName":"number","nodeType":"MemberAccess","src":"2380:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2360:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3378,"nodeType":"ExpressionStatement","src":"2360:32:20"},{"expression":{"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3379,"name":"maxPerSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"2403:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130303030","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2416:5:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2424:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3383,"name":"_baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"2447:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3382,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2430:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Upgradeable_$1247_$","typeString":"type(contract ERC20Upgradeable)"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Upgradeable_$1247","typeString":"contract ERC20Upgradeable"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2459:8:20","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":767,"src":"2430:37:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2424:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2416:53:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2403:66:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3390,"nodeType":"ExpressionStatement","src":"2403:66:20"}]},"documentation":{"id":3314,"nodeType":"StructuredDocumentation","src":"1293:410:20","text":" @dev Initializes the BaluniV1DCA contract.\n @param _name The name of the token.\n @param _symbol The symbol of the token.\n @param _baseAsset The address of the base asset.\n @param _quoteAsset The address of the quote asset.\n @param _registryAddress The address of the registry contract.\n @param _reinvestDuration The duration between reinvestments."},"functionSelector":"edf3e29e","id":3392,"implemented":true,"kind":"function","modifiers":[{"id":3329,"kind":"modifierInvocation","modifierName":{"id":3328,"name":"initializer","nameLocations":["1937:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"1937:11:20"},"nodeType":"ModifierInvocation","src":"1937:11:20"}],"name":"initialize","nameLocation":"1718:10:20","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3316,"mutability":"mutable","name":"_name","nameLocation":"1753:5:20","nodeType":"VariableDeclaration","scope":3392,"src":"1739:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3315,"name":"string","nodeType":"ElementaryTypeName","src":"1739:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3318,"mutability":"mutable","name":"_symbol","nameLocation":"1783:7:20","nodeType":"VariableDeclaration","scope":3392,"src":"1769:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3317,"name":"string","nodeType":"ElementaryTypeName","src":"1769:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3320,"mutability":"mutable","name":"_baseAsset","nameLocation":"1809:10:20","nodeType":"VariableDeclaration","scope":3392,"src":"1801:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3319,"name":"address","nodeType":"ElementaryTypeName","src":"1801:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3322,"mutability":"mutable","name":"_quoteAsset","nameLocation":"1838:11:20","nodeType":"VariableDeclaration","scope":3392,"src":"1830:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3321,"name":"address","nodeType":"ElementaryTypeName","src":"1830:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3324,"mutability":"mutable","name":"_registryAddress","nameLocation":"1868:16:20","nodeType":"VariableDeclaration","scope":3392,"src":"1860:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3323,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3326,"mutability":"mutable","name":"_reinvestDuration","nameLocation":"1903:17:20","nodeType":"VariableDeclaration","scope":3392,"src":"1895:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1895:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:199:20"},"returnParameters":{"id":3330,"nodeType":"ParameterList","parameters":[],"src":"1949:0:20"},"scope":4172,"src":"1709:768:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3472,"nodeType":"Block","src":"2765:528:20","statements":[{"expression":{"arguments":[{"expression":{"id":3413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2791:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2795:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2791:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3412,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2776:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2776:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3416,"nodeType":"ExpressionStatement","src":"2776:26:20"},{"expression":{"arguments":[{"id":3418,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"2826:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3419,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"2833:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3417,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"2813:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2813:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3421,"nodeType":"ExpressionStatement","src":"2813:28:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3422,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2852:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3424,"nodeType":"ExpressionStatement","src":"2852:24:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3425,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"2887:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2887:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3427,"nodeType":"ExpressionStatement","src":"2887:24:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3428,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"2922:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3430,"nodeType":"ExpressionStatement","src":"2922:17:20"},{"expression":{"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3431,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"2952:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3432,"name":"_baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"2964:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2952:22:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3434,"nodeType":"ExpressionStatement","src":"2952:22:20"},{"expression":{"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3435,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"2985:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3436,"name":"_quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"2998:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2985:24:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3438,"nodeType":"ExpressionStatement","src":"2985:24:20"},{"expression":{"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3439,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"3020:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3441,"name":"_registryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"3050:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3440,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"3032:17:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$2787_$","typeString":"type(contract IBaluniV1Registry)"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3032:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"src":"3020:47:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"id":3444,"nodeType":"ExpressionStatement","src":"3020:47:20"},{"expression":{"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3445,"name":"swapDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"3080:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"333630","id":3446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3095:3:20","typeDescriptions":{"typeIdentifier":"t_rational_360_by_1","typeString":"int_const 360"},"value":"360"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3447,"name":"_reinvestDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"3101:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3095:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3080:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3450,"nodeType":"ExpressionStatement","src":"3080:38:20"},{"expression":{"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3451,"name":"reinvestDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"3129:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3452,"name":"_reinvestDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"3148:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3129:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3454,"nodeType":"ExpressionStatement","src":"3129:36:20"},{"expression":{"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3455,"name":"lastInvestedBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"3176:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3456,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3196:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:6:20","memberName":"number","nodeType":"MemberAccess","src":"3196:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3176:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3459,"nodeType":"ExpressionStatement","src":"3176:32:20"},{"expression":{"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3460,"name":"maxPerSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"3219:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130303030","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3232:5:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3240:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3464,"name":"_baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"3263:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3463,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"3246:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Upgradeable_$1247_$","typeString":"type(contract ERC20Upgradeable)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3246:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Upgradeable_$1247","typeString":"contract ERC20Upgradeable"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3275:8:20","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":767,"src":"3246:37:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3246:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3240:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3232:53:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3219:66:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3471,"nodeType":"ExpressionStatement","src":"3219:66:20"}]},"functionSelector":"c80b0baf","id":3473,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3409,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"2755:8:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":3410,"kind":"modifierInvocation","modifierName":{"id":3408,"name":"reinitializer","nameLocations":["2741:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"2741:13:20"},"nodeType":"ModifierInvocation","src":"2741:23:20"}],"name":"reinitialize","nameLocation":"2494:12:20","nodeType":"FunctionDefinition","parameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3394,"mutability":"mutable","name":"_name","nameLocation":"2531:5:20","nodeType":"VariableDeclaration","scope":3473,"src":"2517:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3393,"name":"string","nodeType":"ElementaryTypeName","src":"2517:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3396,"mutability":"mutable","name":"_symbol","nameLocation":"2561:7:20","nodeType":"VariableDeclaration","scope":3473,"src":"2547:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3395,"name":"string","nodeType":"ElementaryTypeName","src":"2547:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3398,"mutability":"mutable","name":"_baseAsset","nameLocation":"2587:10:20","nodeType":"VariableDeclaration","scope":3473,"src":"2579:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3397,"name":"address","nodeType":"ElementaryTypeName","src":"2579:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3400,"mutability":"mutable","name":"_quoteAsset","nameLocation":"2616:11:20","nodeType":"VariableDeclaration","scope":3473,"src":"2608:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3399,"name":"address","nodeType":"ElementaryTypeName","src":"2608:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3402,"mutability":"mutable","name":"_registryAddress","nameLocation":"2646:16:20","nodeType":"VariableDeclaration","scope":3473,"src":"2638:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3401,"name":"address","nodeType":"ElementaryTypeName","src":"2638:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3404,"mutability":"mutable","name":"_reinvestDuration","nameLocation":"2681:17:20","nodeType":"VariableDeclaration","scope":3473,"src":"2673:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3403,"name":"uint256","nodeType":"ElementaryTypeName","src":"2673:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3406,"mutability":"mutable","name":"_version","nameLocation":"2716:8:20","nodeType":"VariableDeclaration","scope":3473,"src":"2709:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3405,"name":"uint64","nodeType":"ElementaryTypeName","src":"2709:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2506:225:20"},"returnParameters":{"id":3411,"nodeType":"ParameterList","parameters":[],"src":"2765:0:20"},"scope":4172,"src":"2485:808:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3484,"nodeType":"Block","src":"3325:79:20","statements":[{"expression":{"arguments":[{"baseExpression":{"id":3476,"name":"executors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"3344:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3479,"indexExpression":{"expression":{"id":3477,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3354:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3358:6:20","memberName":"sender","nodeType":"MemberAccess","src":"3354:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3344:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6578656375746f723a207775743f","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3367:16:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_bbbcd694010870aca4b5330159c65992a3109a1437ee6632b6833f21093588c0","typeString":"literal_string \"executor: wut?\""},"value":"executor: wut?"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bbbcd694010870aca4b5330159c65992a3109a1437ee6632b6833f21093588c0","typeString":"literal_string \"executor: wut?\""}],"id":3475,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3336:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3336:48:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3482,"nodeType":"ExpressionStatement","src":"3336:48:20"},{"id":3483,"nodeType":"PlaceholderStatement","src":"3395:1:20"}]},"id":3485,"name":"onlyExecutor","nameLocation":"3310:12:20","nodeType":"ModifierDefinition","parameters":{"id":3474,"nodeType":"ParameterList","parameters":[],"src":"3322:2:20"},"src":"3301:103:20","virtual":false,"visibility":"internal"},{"baseFunctions":[584],"body":{"id":3494,"nodeType":"Block","src":"3754:2:20","statements":[]},"documentation":{"id":3486,"nodeType":"StructuredDocumentation","src":"3412:254:20","text":" @dev Internal function to authorize an upgrade to a new implementation contract.\n @param newImplementation The address of the new implementation contract.\n @notice This function can only be called by the contract owner."},"id":3495,"implemented":true,"kind":"function","modifiers":[{"id":3492,"kind":"modifierInvocation","modifierName":{"id":3491,"name":"onlyOwner","nameLocations":["3744:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3744:9:20"},"nodeType":"ModifierInvocation","src":"3744:9:20"}],"name":"_authorizeUpgrade","nameLocation":"3681:17:20","nodeType":"FunctionDefinition","overrides":{"id":3490,"nodeType":"OverrideSpecifier","overrides":[],"src":"3735:8:20"},"parameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"newImplementation","nameLocation":"3707:17:20","nodeType":"VariableDeclaration","scope":3495,"src":"3699:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3487,"name":"address","nodeType":"ElementaryTypeName","src":"3699:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3698:27:20"},"returnParameters":{"id":3493,"nodeType":"ParameterList","parameters":[],"src":"3754:0:20"},"scope":4172,"src":"3672:84:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3603,"nodeType":"Block","src":"4016:779:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3508,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"4035:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4044:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4035:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4047:34:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":3507,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4027:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4027:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3513,"nodeType":"ExpressionStatement","src":"4027:55:20"},{"expression":{"arguments":[{"expression":{"id":3518,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4126:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4130:6:20","memberName":"sender","nodeType":"MemberAccess","src":"4126:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3522,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4146:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1DCAVault_$4172","typeString":"contract BaluniV1DCAVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1DCAVault_$4172","typeString":"contract BaluniV1DCAVault"}],"id":3521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4138:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3520,"name":"address","nodeType":"ElementaryTypeName","src":"4138:7:20","typeDescriptions":{}}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3524,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"4153:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3515,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"4102:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3514,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"4095:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4095:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4113:12:20","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2135,"src":"4095:30:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4095:65:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3526,"nodeType":"ExpressionStatement","src":"4095:65:20"},{"assignments":[3528],"declarations":[{"constant":false,"id":3528,"mutability":"mutable","name":"baluniRouter","nameLocation":"4181:12:20","nodeType":"VariableDeclaration","scope":3603,"src":"4173:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3527,"name":"address","nodeType":"ElementaryTypeName","src":"4173:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3532,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3529,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"4196:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4206:15:20","memberName":"getBaluniRouter","nodeType":"MemberAccess","referencedDeclaration":2736,"src":"4196:25:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4196:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4173:50:20"},{"assignments":[3534],"declarations":[{"constant":false,"id":3534,"mutability":"mutable","name":"treasury","nameLocation":"4242:8:20","nodeType":"VariableDeclaration","scope":3603,"src":"4234:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3533,"name":"address","nodeType":"ElementaryTypeName","src":"4234:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3538,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3535,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"4253:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4263:11:20","memberName":"getTreasury","nodeType":"MemberAccess","referencedDeclaration":2776,"src":"4253:21:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4234:42:20"},{"assignments":[3540],"declarations":[{"constant":false,"id":3540,"mutability":"mutable","name":"hairCut","nameLocation":"4294:7:20","nodeType":"VariableDeclaration","scope":3603,"src":"4289:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3539,"name":"uint","nodeType":"ElementaryTypeName","src":"4289:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3544,"initialValue":{"arguments":[{"id":3542,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"4313:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3541,"name":"_haircut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"4304:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4289:31:20"},{"assignments":[3546],"declarations":[{"constant":false,"id":3546,"mutability":"mutable","name":"hairCut2","nameLocation":"4336:8:20","nodeType":"VariableDeclaration","scope":3603,"src":"4331:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3545,"name":"uint","nodeType":"ElementaryTypeName","src":"4331:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3550,"initialValue":{"arguments":[{"id":3548,"name":"hairCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"4356:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3547,"name":"_haircut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"4347:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4347:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4331:33:20"},{"expression":{"arguments":[{"id":3555,"name":"baluniRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"4404:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3556,"name":"hairCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"4418:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3557,"name":"hairCut2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"4428:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4418:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3552,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"4384:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3551,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"4377:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4377:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4395:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2103,"src":"4377:26:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4377:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3560,"nodeType":"ExpressionStatement","src":"4377:60:20"},{"expression":{"arguments":[{"id":3565,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"4475:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3566,"name":"hairCut2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"4485:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3562,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"4455:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3561,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"4448:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4448:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4466:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2103,"src":"4448:26:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4448:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3568,"nodeType":"ExpressionStatement","src":"4448:46:20"},{"assignments":[3570],"declarations":[{"constant":false,"id":3570,"mutability":"mutable","name":"amountAfter","nameLocation":"4515:11:20","nodeType":"VariableDeclaration","scope":3603,"src":"4507:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"4507:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3574,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3571,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"4529:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3572,"name":"hairCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"4538:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4529:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4507:38:20"},{"assignments":[3576],"declarations":[{"constant":false,"id":3576,"mutability":"mutable","name":"baseDecimal","nameLocation":"4562:11:20","nodeType":"VariableDeclaration","scope":3603,"src":"4556:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3575,"name":"uint8","nodeType":"ElementaryTypeName","src":"4556:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3582,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3578,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"4591:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3577,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"4576:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$2162_$","typeString":"type(contract IERC20Metadata)"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$2162","typeString":"contract IERC20Metadata"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4602:8:20","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":2161,"src":"4576:34:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4556:56:20"},{"assignments":[3584],"declarations":[{"constant":false,"id":3584,"mutability":"mutable","name":"amountScaled","nameLocation":"4661:12:20","nodeType":"VariableDeclaration","scope":3603,"src":"4653:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"4653:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3593,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3585,"name":"amountAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"4676:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4690:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4697:2:20","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3588,"name":"baseDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"4702:11:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4697:16:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3590,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4696:18:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4690:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4676:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4653:61:20"},{"expression":{"arguments":[{"id":3595,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"4731:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3596,"name":"amountScaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"4735:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3594,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"4725:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4725:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3598,"nodeType":"ExpressionStatement","src":"4725:23:20"},{"expression":{"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3599,"name":"lastDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"4761:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3600,"name":"amountAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"4776:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4761:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3602,"nodeType":"ExpressionStatement","src":"4761:26:20"}]},"documentation":{"id":3496,"nodeType":"StructuredDocumentation","src":"3764:165:20","text":" @dev Deposits assetA into the pool.\n @param amount The amount of assetA to deposit.\n @param to The address to receive pool tokens."},"functionSelector":"6e553f65","id":3604,"implemented":true,"kind":"function","modifiers":[{"id":3503,"kind":"modifierInvocation","modifierName":{"id":3502,"name":"nonReentrant","nameLocations":["3989:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":1538,"src":"3989:12:20"},"nodeType":"ModifierInvocation","src":"3989:12:20"},{"id":3505,"kind":"modifierInvocation","modifierName":{"id":3504,"name":"whenNotPaused","nameLocations":["4002:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"4002:13:20"},"nodeType":"ModifierInvocation","src":"4002:13:20"}],"name":"deposit","nameLocation":"3944:7:20","nodeType":"FunctionDefinition","parameters":{"id":3501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3498,"mutability":"mutable","name":"amount","nameLocation":"3960:6:20","nodeType":"VariableDeclaration","scope":3604,"src":"3952:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"3952:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3500,"mutability":"mutable","name":"to","nameLocation":"3976:2:20","nodeType":"VariableDeclaration","scope":3604,"src":"3968:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3499,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3951:28:20"},"returnParameters":{"id":3506,"nodeType":"ParameterList","parameters":[],"src":"4016:0:20"},"scope":4172,"src":"3935:860:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3809,"nodeType":"Block","src":"5078:1564:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3617,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"5097:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5106:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5097:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536861726573206d7573742062652067726561746572207468616e207a65726f","id":3620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5109:34:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_f247f7c1df7c48d1adf3ebe04e09d491abca7b6e14a32a1b30359ea588b9d3d6","typeString":"literal_string \"Shares must be greater than zero\""},"value":"Shares must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f247f7c1df7c48d1adf3ebe04e09d491abca7b6e14a32a1b30359ea588b9d3d6","typeString":"literal_string \"Shares must be greater than zero\""}],"id":3616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5089:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5089:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3622,"nodeType":"ExpressionStatement","src":"5089:55:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3625,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5173:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5177:6:20","memberName":"sender","nodeType":"MemberAccess","src":"5173:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3624,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"5163:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5163:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3628,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"5188:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5163:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5196:22:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":3623,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5155:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5155:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3632,"nodeType":"ExpressionStatement","src":"5155:64:20"},{"assignments":[3634],"declarations":[{"constant":false,"id":3634,"mutability":"mutable","name":"quoteDecimal","nameLocation":"5238:12:20","nodeType":"VariableDeclaration","scope":3809,"src":"5232:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3633,"name":"uint8","nodeType":"ElementaryTypeName","src":"5232:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3640,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3636,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"5268:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3635,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"5253:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$2162_$","typeString":"type(contract IERC20Metadata)"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5253:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$2162","typeString":"contract IERC20Metadata"}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5280:8:20","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":2161,"src":"5253:35:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5253:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"5232:58:20"},{"assignments":[3642],"declarations":[{"constant":false,"id":3642,"mutability":"mutable","name":"quoteBalance","nameLocation":"5309:12:20","nodeType":"VariableDeclaration","scope":3809,"src":"5301:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3641,"name":"uint256","nodeType":"ElementaryTypeName","src":"5301:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3652,"initialValue":{"arguments":[{"arguments":[{"id":3649,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5361:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1DCAVault_$4172","typeString":"contract BaluniV1DCAVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1DCAVault_$4172","typeString":"contract BaluniV1DCAVault"}],"id":3648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5353:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3647,"name":"address","nodeType":"ElementaryTypeName","src":"5353:7:20","typeDescriptions":{}}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5353:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3644,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"5331:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3643,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"5324:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5324:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5343:9:20","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2093,"src":"5324:28:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5324:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5301:66:20"},{"assignments":[3654],"declarations":[{"constant":false,"id":3654,"mutability":"mutable","name":"baseBalance","nameLocation":"5386:11:20","nodeType":"VariableDeclaration","scope":3809,"src":"5378:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"5378:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3664,"initialValue":{"arguments":[{"arguments":[{"id":3661,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5436:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1DCAVault_$4172","typeString":"contract BaluniV1DCAVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1DCAVault_$4172","typeString":"contract BaluniV1DCAVault"}],"id":3660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5428:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3659,"name":"address","nodeType":"ElementaryTypeName","src":"5428:7:20","typeDescriptions":{}}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5428:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3656,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"5407:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3655,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"5400:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5400:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5418:9:20","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2093,"src":"5400:27:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5400:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5378:64:20"},{"expression":{"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3665,"name":"quoteBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"5510:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5526:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5533:2:20","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3668,"name":"quoteDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"5538:12:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5533:17:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5532:19:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5526:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5510:41:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3673,"nodeType":"ExpressionStatement","src":"5510:41:20"},{"assignments":[3675],"declarations":[{"constant":false,"id":3675,"mutability":"mutable","name":"withdrawAmountA","nameLocation":"5572:15:20","nodeType":"VariableDeclaration","scope":3809,"src":"5564:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"5564:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3683,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3676,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"5591:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3677,"name":"baseBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"5600:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5591:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5590:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3680,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"5615:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5590:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5564:64:20"},{"assignments":[3685],"declarations":[{"constant":false,"id":3685,"mutability":"mutable","name":"withdrawAmountB","nameLocation":"5647:15:20","nodeType":"VariableDeclaration","scope":3809,"src":"5639:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"5639:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3693,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3686,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"5666:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3687,"name":"quoteBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"5675:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5666:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3689,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5665:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3690,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"5691:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5691:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5665:39:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5639:65:20"},{"expression":{"arguments":[{"expression":{"id":3695,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5723:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5727:6:20","memberName":"sender","nodeType":"MemberAccess","src":"5723:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3697,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"5735:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3694,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"5717:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5717:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3699,"nodeType":"ExpressionStatement","src":"5717:25:20"},{"expression":{"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3700,"name":"withdrawAmountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"5812:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5831:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5838:2:20","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3703,"name":"quoteDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"5843:12:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5838:17:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5837:19:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5831:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:44:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3708,"nodeType":"ExpressionStatement","src":"5812:44:20"},{"assignments":[3710],"declarations":[{"constant":false,"id":3710,"mutability":"mutable","name":"amountToSend","nameLocation":"5877:12:20","nodeType":"VariableDeclaration","scope":3809,"src":"5869:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3712,"initialValue":{"id":3711,"name":"withdrawAmountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"5892:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5869:38:20"},{"assignments":[3714],"declarations":[{"constant":false,"id":3714,"mutability":"mutable","name":"hairCut","nameLocation":"5925:7:20","nodeType":"VariableDeclaration","scope":3809,"src":"5920:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint","nodeType":"ElementaryTypeName","src":"5920:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3718,"initialValue":{"arguments":[{"id":3716,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"5944:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3715,"name":"_haircut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"5935:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5935:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5920:37:20"},{"expression":{"arguments":[{"id":3723,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"5995:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3724,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"5999:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3725,"name":"hairCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"6014:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5999:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3720,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"5975:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3719,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"5968:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5968:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5986:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2103,"src":"5968:26:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5968:54:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3728,"nodeType":"ExpressionStatement","src":"5968:54:20"},{"assignments":[3730],"declarations":[{"constant":false,"id":3730,"mutability":"mutable","name":"hairCut2","nameLocation":"6040:8:20","nodeType":"VariableDeclaration","scope":3809,"src":"6035:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint","nodeType":"ElementaryTypeName","src":"6035:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3734,"initialValue":{"arguments":[{"id":3732,"name":"hairCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"6060:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3731,"name":"_haircut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"6051:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6051:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6035:33:20"},{"assignments":[3736],"declarations":[{"constant":false,"id":3736,"mutability":"mutable","name":"baluniRouter","nameLocation":"6087:12:20","nodeType":"VariableDeclaration","scope":3809,"src":"6079:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3735,"name":"address","nodeType":"ElementaryTypeName","src":"6079:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3740,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3737,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"6102:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6112:15:20","memberName":"getBaluniRouter","nodeType":"MemberAccess","referencedDeclaration":2736,"src":"6102:25:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6102:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6079:50:20"},{"assignments":[3742],"declarations":[{"constant":false,"id":3742,"mutability":"mutable","name":"treasury","nameLocation":"6148:8:20","nodeType":"VariableDeclaration","scope":3809,"src":"6140:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3741,"name":"address","nodeType":"ElementaryTypeName","src":"6140:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3746,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3743,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"6159:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6169:11:20","memberName":"getTreasury","nodeType":"MemberAccess","referencedDeclaration":2776,"src":"6159:21:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6159:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6140:42:20"},{"expression":{"arguments":[{"id":3751,"name":"baluniRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"6220:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3752,"name":"hairCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"6234:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3753,"name":"hairCut2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"6244:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6234:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3748,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"6200:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3747,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"6193:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6193:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6211:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2103,"src":"6193:26:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6193:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3756,"nodeType":"ExpressionStatement","src":"6193:60:20"},{"expression":{"arguments":[{"id":3761,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"6291:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3762,"name":"hairCut2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"6301:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3758,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"6271:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3757,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"6264:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6264:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6282:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2103,"src":"6264:26:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6264:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3764,"nodeType":"ExpressionStatement","src":"6264:46:20"},{"expression":{"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3765,"name":"hairCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"6323:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3767,"name":"withdrawAmountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"6342:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3766,"name":"_haircut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"6333:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6323:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3770,"nodeType":"ExpressionStatement","src":"6323:35:20"},{"expression":{"arguments":[{"id":3775,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"6397:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3776,"name":"withdrawAmountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"6401:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3777,"name":"hairCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"6419:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6401:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3772,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"6376:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3771,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"6369:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6369:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6388:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2103,"src":"6369:27:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6369:58:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3780,"nodeType":"ExpressionStatement","src":"6369:58:20"},{"expression":{"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3781,"name":"hairCut2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"6438:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3783,"name":"hairCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"6458:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3782,"name":"_haircut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"6449:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6449:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6438:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3786,"nodeType":"ExpressionStatement","src":"6438:28:20"},{"expression":{"arguments":[{"id":3791,"name":"baluniRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"6504:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3792,"name":"hairCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"6518:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3793,"name":"hairCut2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"6528:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6518:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3788,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"6484:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3787,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"6477:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6477:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6495:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2103,"src":"6477:26:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6477:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3796,"nodeType":"ExpressionStatement","src":"6477:60:20"},{"expression":{"arguments":[{"id":3801,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"6575:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3802,"name":"hairCut2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"6585:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3798,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"6555:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3797,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"6548:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6548:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6566:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2103,"src":"6548:26:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6548:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3804,"nodeType":"ExpressionStatement","src":"6548:46:20"},{"expression":{"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3805,"name":"lastDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"6607:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3806,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"6622:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6607:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3808,"nodeType":"ExpressionStatement","src":"6607:27:20"}]},"documentation":{"id":3605,"nodeType":"StructuredDocumentation","src":"4803:187:20","text":" @dev Withdraws assetA and assetB from the pool.\n @param shares The amount of pool tokens to redeem.\n @param to The address to receive assetA and assetB."},"functionSelector":"00f714ce","id":3810,"implemented":true,"kind":"function","modifiers":[{"id":3612,"kind":"modifierInvocation","modifierName":{"id":3611,"name":"nonReentrant","nameLocations":["5051:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":1538,"src":"5051:12:20"},"nodeType":"ModifierInvocation","src":"5051:12:20"},{"id":3614,"kind":"modifierInvocation","modifierName":{"id":3613,"name":"whenNotPaused","nameLocations":["5064:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"5064:13:20"},"nodeType":"ModifierInvocation","src":"5064:13:20"}],"name":"withdraw","nameLocation":"5005:8:20","nodeType":"FunctionDefinition","parameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"shares","nameLocation":"5022:6:20","nodeType":"VariableDeclaration","scope":3810,"src":"5014:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3606,"name":"uint256","nodeType":"ElementaryTypeName","src":"5014:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3609,"mutability":"mutable","name":"to","nameLocation":"5038:2:20","nodeType":"VariableDeclaration","scope":3810,"src":"5030:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3608,"name":"address","nodeType":"ElementaryTypeName","src":"5030:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5013:28:20"},"returnParameters":{"id":3615,"nodeType":"ParameterList","parameters":[],"src":"5078:0:20"},"scope":4172,"src":"4996:1646:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3887,"nodeType":"Block","src":"6724:594:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3820,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6744:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6750:6:20","memberName":"number","nodeType":"MemberAccess","src":"6744:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3822,"name":"lastInvestedBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"6759:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6744:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6743:34:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3825,"name":"reinvestDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"6780:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6743:53:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"776169742074696c6c206e657874207265696e76657374206379636c65","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6798:31:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8475dfc2a61c983fde89982d493adea657965a16ea35a31669edc1d76f0cb847","typeString":"literal_string \"wait till next reinvest cycle\""},"value":"wait till next reinvest cycle"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8475dfc2a61c983fde89982d493adea657965a16ea35a31669edc1d76f0cb847","typeString":"literal_string \"wait till next reinvest cycle\""}],"id":3819,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6735:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6735:95:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3829,"nodeType":"ExpressionStatement","src":"6735:95:20"},{"assignments":[3831],"declarations":[{"constant":false,"id":3831,"mutability":"mutable","name":"amtToSwap","nameLocation":"6848:9:20","nodeType":"VariableDeclaration","scope":3887,"src":"6843:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3830,"name":"uint","nodeType":"ElementaryTypeName","src":"6843:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3834,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3832,"name":"getAmountToSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"6860:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6843:34:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3836,"name":"amtToSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"6911:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6923:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6911:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7468696e6720746f2073776170","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6926:17:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_53449748a5034738d502a01b62b389ab55b3ebc840f594da71fc707f6109e0a1","typeString":"literal_string \"Nothing to swap\""},"value":"Nothing to swap"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53449748a5034738d502a01b62b389ab55b3ebc840f594da71fc707f6109e0a1","typeString":"literal_string \"Nothing to swap\""}],"id":3835,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6903:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3841,"nodeType":"ExpressionStatement","src":"6903:41:20"},{"assignments":[3844],"declarations":[{"constant":false,"id":3844,"mutability":"mutable","name":"swapper","nameLocation":"6974:7:20","nodeType":"VariableDeclaration","scope":3887,"src":"6957:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Swapper_$2818","typeString":"contract IBaluniV1Swapper"},"typeName":{"id":3843,"nodeType":"UserDefinedTypeName","pathNode":{"id":3842,"name":"IBaluniV1Swapper","nameLocations":["6957:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":2818,"src":"6957:16:20"},"referencedDeclaration":2818,"src":"6957:16:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Swapper_$2818","typeString":"contract IBaluniV1Swapper"}},"visibility":"internal"}],"id":3850,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3846,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"7001:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7011:16:20","memberName":"getBaluniSwapper","nodeType":"MemberAccess","referencedDeclaration":2701,"src":"7001:26:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7001:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3845,"name":"IBaluniV1Swapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"6984:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Swapper_$2818_$","typeString":"type(contract IBaluniV1Swapper)"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6984:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Swapper_$2818","typeString":"contract IBaluniV1Swapper"}},"nodeType":"VariableDeclarationStatement","src":"6957:73:20"},{"expression":{"arguments":[{"arguments":[{"id":3857,"name":"swapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"7075:7:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Swapper_$2818","typeString":"contract IBaluniV1Swapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaluniV1Swapper_$2818","typeString":"contract IBaluniV1Swapper"}],"id":3856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7067:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3855,"name":"address","nodeType":"ElementaryTypeName","src":"7067:7:20","typeDescriptions":{}}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7067:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3859,"name":"amtToSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"7085:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3852,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"7048:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3851,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"7041:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7059:7:20","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2123,"src":"7041:25:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:54:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3861,"nodeType":"ExpressionStatement","src":"7041:54:20"},{"assignments":[3863],"declarations":[{"constant":false,"id":3863,"mutability":"mutable","name":"quoteReceived","nameLocation":"7116:13:20","nodeType":"VariableDeclaration","scope":3887,"src":"7108:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3862,"name":"uint256","nodeType":"ElementaryTypeName","src":"7108:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3874,"initialValue":{"arguments":[{"id":3866,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"7151:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3867,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"7162:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3868,"name":"amtToSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"7174:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3871,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7193:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1DCAVault_$4172","typeString":"contract BaluniV1DCAVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1DCAVault_$4172","typeString":"contract BaluniV1DCAVault"}],"id":3870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7185:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3869,"name":"address","nodeType":"ElementaryTypeName","src":"7185:7:20","typeDescriptions":{}}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7185:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3864,"name":"swapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"7132:7:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Swapper_$2818","typeString":"contract IBaluniV1Swapper"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7140:10:20","memberName":"singleSwap","nodeType":"MemberAccess","referencedDeclaration":2802,"src":"7132:18:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) external returns (uint256)"}},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7132:67:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7108:91:20"},{"expression":{"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3875,"name":"lastInvestedBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"7210:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3876,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7230:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7236:6:20","memberName":"number","nodeType":"MemberAccess","src":"7230:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7210:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3879,"nodeType":"ExpressionStatement","src":"7210:32:20"},{"eventCall":{"arguments":[{"expression":{"id":3881,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7273:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7277:6:20","memberName":"sender","nodeType":"MemberAccess","src":"7273:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3883,"name":"amtToSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"7285:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3884,"name":"quoteReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"7296:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3880,"name":"ExecuteTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"7260:12:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7260:50:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3886,"nodeType":"EmitStatement","src":"7255:55:20"}]},"functionSelector":"d53419a3","id":3888,"implemented":true,"kind":"function","modifiers":[{"id":3813,"kind":"modifierInvocation","modifierName":{"id":3812,"name":"onlyExecutor","nameLocations":["6684:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3485,"src":"6684:12:20"},"nodeType":"ModifierInvocation","src":"6684:12:20"},{"id":3815,"kind":"modifierInvocation","modifierName":{"id":3814,"name":"nonReentrant","nameLocations":["6697:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":1538,"src":"6697:12:20"},"nodeType":"ModifierInvocation","src":"6697:12:20"},{"id":3817,"kind":"modifierInvocation","modifierName":{"id":3816,"name":"whenNotPaused","nameLocations":["6710:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"6710:13:20"},"nodeType":"ModifierInvocation","src":"6710:13:20"}],"name":"systemDeposit","nameLocation":"6659:13:20","nodeType":"FunctionDefinition","parameters":{"id":3811,"nodeType":"ParameterList","parameters":[],"src":"6672:2:20"},"returnParameters":{"id":3818,"nodeType":"ParameterList","parameters":[],"src":"6724:0:20"},"scope":4172,"src":"6650:668:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3928,"nodeType":"Block","src":"7380:275:20","statements":[{"assignments":[3894],"declarations":[{"constant":false,"id":3894,"mutability":"mutable","name":"baseTokenBal","nameLocation":"7396:12:20","nodeType":"VariableDeclaration","scope":3928,"src":"7391:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint","nodeType":"ElementaryTypeName","src":"7391:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3904,"initialValue":{"arguments":[{"arguments":[{"id":3901,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7447:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1DCAVault_$4172","typeString":"contract BaluniV1DCAVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1DCAVault_$4172","typeString":"contract BaluniV1DCAVault"}],"id":3900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7439:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3899,"name":"address","nodeType":"ElementaryTypeName","src":"7439:7:20","typeDescriptions":{}}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3896,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"7418:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3895,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"7411:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7411:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7429:9:20","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2093,"src":"7411:27:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7411:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7391:62:20"},{"assignments":[3906],"declarations":[{"constant":false,"id":3906,"mutability":"mutable","name":"blockDiff","nameLocation":"7469:9:20","nodeType":"VariableDeclaration","scope":3928,"src":"7464:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3905,"name":"uint","nodeType":"ElementaryTypeName","src":"7464:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3911,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3907,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7481:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7487:6:20","memberName":"number","nodeType":"MemberAccess","src":"7481:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3909,"name":"lastInvestedBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"7496:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7481:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7464:49:20"},{"assignments":[3913],"declarations":[{"constant":false,"id":3913,"mutability":"mutable","name":"toSwapQty","nameLocation":"7529:9:20","nodeType":"VariableDeclaration","scope":3928,"src":"7524:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3912,"name":"uint","nodeType":"ElementaryTypeName","src":"7524:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3920,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3914,"name":"baseTokenBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"7542:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3915,"name":"blockDiff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"7557:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3918,"name":"swapDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"7570:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7541:41:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7524:58:20"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3921,"name":"toSwapQty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"7600:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3922,"name":"maxPerSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"7612:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3925,"name":"toSwapQty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"7638:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7600:47:20","trueExpression":{"id":3924,"name":"maxPerSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"7625:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3892,"id":3927,"nodeType":"Return","src":"7593:54:20"}]},"functionSelector":"d9d47d69","id":3929,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountToSwap","nameLocation":"7335:15:20","nodeType":"FunctionDefinition","parameters":{"id":3889,"nodeType":"ParameterList","parameters":[],"src":"7350:2:20"},"returnParameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3929,"src":"7374:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3890,"name":"uint","nodeType":"ElementaryTypeName","src":"7374:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7373:6:20"},"scope":4172,"src":"7326:329:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3953,"nodeType":"Block","src":"7718:145:20","statements":[{"assignments":[3935],"declarations":[{"constant":false,"id":3935,"mutability":"mutable","name":"amtToSwap","nameLocation":"7734:9:20","nodeType":"VariableDeclaration","scope":3953,"src":"7729:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3934,"name":"uint","nodeType":"ElementaryTypeName","src":"7729:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3938,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3936,"name":"getAmountToSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"7746:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7746:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7729:34:20"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3939,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7783:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7789:6:20","memberName":"number","nodeType":"MemberAccess","src":"7783:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3941,"name":"lastInvestedBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"7798:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7783:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7782:34:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3944,"name":"reinvestDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"7819:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:53:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3946,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7781:55:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3947,"name":"amtToSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"7841:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7853:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7841:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7781:74:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3933,"id":3952,"nodeType":"Return","src":"7774:81:20"}]},"functionSelector":"f267d91b","id":3954,"implemented":true,"kind":"function","modifiers":[],"name":"canSystemDeposit","nameLocation":"7672:16:20","nodeType":"FunctionDefinition","parameters":{"id":3930,"nodeType":"ParameterList","parameters":[],"src":"7688:2:20"},"returnParameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3954,"src":"7712:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3931,"name":"bool","nodeType":"ElementaryTypeName","src":"7712:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7711:6:20"},"scope":4172,"src":"7663:200:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3963,"nodeType":"Block","src":"7981:27:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3960,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7992:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7992:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3962,"nodeType":"ExpressionStatement","src":"7992:8:20"}]},"documentation":{"id":3955,"nodeType":"StructuredDocumentation","src":"7871:68:20","text":" @dev pause pool, restricting certain operations"},"functionSelector":"8456cb59","id":3964,"implemented":true,"kind":"function","modifiers":[{"id":3958,"kind":"modifierInvocation","modifierName":{"id":3957,"name":"onlyOwner","nameLocations":["7971:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"7971:9:20"},"nodeType":"ModifierInvocation","src":"7971:9:20"}],"name":"pause","nameLocation":"7954:5:20","nodeType":"FunctionDefinition","parameters":{"id":3956,"nodeType":"ParameterList","parameters":[],"src":"7959:2:20"},"returnParameters":{"id":3959,"nodeType":"ParameterList","parameters":[],"src":"7981:0:20"},"scope":4172,"src":"7945:63:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3973,"nodeType":"Block","src":"8127:29:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3970,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"8138:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8138:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3972,"nodeType":"ExpressionStatement","src":"8138:10:20"}]},"documentation":{"id":3965,"nodeType":"StructuredDocumentation","src":"8016:67:20","text":" @dev unpause pool, enabling certain operations"},"functionSelector":"3f4ba83a","id":3974,"implemented":true,"kind":"function","modifiers":[{"id":3968,"kind":"modifierInvocation","modifierName":{"id":3967,"name":"onlyOwner","nameLocations":["8117:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"8117:9:20"},"nodeType":"ModifierInvocation","src":"8117:9:20"}],"name":"unpause","nameLocation":"8098:7:20","nodeType":"FunctionDefinition","parameters":{"id":3966,"nodeType":"ParameterList","parameters":[],"src":"8105:2:20"},"returnParameters":{"id":3969,"nodeType":"ParameterList","parameters":[],"src":"8127:0:20"},"scope":4172,"src":"8089:67:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4060,"nodeType":"Block","src":"8220:609:20","statements":[{"assignments":[3981],"declarations":[{"constant":false,"id":3981,"mutability":"mutable","name":"oracle","nameLocation":"8247:6:20","nodeType":"VariableDeclaration","scope":4060,"src":"8231:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$2603","typeString":"contract IBaluniV1Oracle"},"typeName":{"id":3980,"nodeType":"UserDefinedTypeName","pathNode":{"id":3979,"name":"IBaluniV1Oracle","nameLocations":["8231:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":2603,"src":"8231:15:20"},"referencedDeclaration":2603,"src":"8231:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$2603","typeString":"contract IBaluniV1Oracle"}},"visibility":"internal"}],"id":3987,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3983,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"8272:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8282:15:20","memberName":"getBaluniOracle","nodeType":"MemberAccess","referencedDeclaration":2706,"src":"8272:25:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8272:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3982,"name":"IBaluniV1Oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"8256:15:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Oracle_$2603_$","typeString":"type(contract IBaluniV1Oracle)"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8256:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$2603","typeString":"contract IBaluniV1Oracle"}},"nodeType":"VariableDeclarationStatement","src":"8231:69:20"},{"assignments":[3989],"declarations":[{"constant":false,"id":3989,"mutability":"mutable","name":"USDC","nameLocation":"8319:4:20","nodeType":"VariableDeclaration","scope":4060,"src":"8311:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3988,"name":"address","nodeType":"ElementaryTypeName","src":"8311:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3993,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3990,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"8326:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8336:7:20","memberName":"getUSDC","nodeType":"MemberAccess","referencedDeclaration":2751,"src":"8326:17:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8326:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8311:34:20"},{"assignments":[3995],"declarations":[{"constant":false,"id":3995,"mutability":"mutable","name":"valuation","nameLocation":"8364:9:20","nodeType":"VariableDeclaration","scope":4060,"src":"8356:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3994,"name":"uint256","nodeType":"ElementaryTypeName","src":"8356:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3997,"initialValue":{"hexValue":"30","id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8376:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8356:21:20"},{"assignments":[3999],"declarations":[{"constant":false,"id":3999,"mutability":"mutable","name":"baseBalance","nameLocation":"8395:11:20","nodeType":"VariableDeclaration","scope":4060,"src":"8390:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3998,"name":"uint","nodeType":"ElementaryTypeName","src":"8390:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4009,"initialValue":{"arguments":[{"arguments":[{"id":4006,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8445:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1DCAVault_$4172","typeString":"contract BaluniV1DCAVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1DCAVault_$4172","typeString":"contract BaluniV1DCAVault"}],"id":4005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8437:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4004,"name":"address","nodeType":"ElementaryTypeName","src":"8437:7:20","typeDescriptions":{}}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8437:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4001,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"8416:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4000,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"8409:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8427:9:20","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2093,"src":"8409:27:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8390:61:20"},{"assignments":[4011],"declarations":[{"constant":false,"id":4011,"mutability":"mutable","name":"balanceQuote","nameLocation":"8467:12:20","nodeType":"VariableDeclaration","scope":4060,"src":"8462:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint","nodeType":"ElementaryTypeName","src":"8462:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4021,"initialValue":{"arguments":[{"arguments":[{"id":4018,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8519:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1DCAVault_$4172","typeString":"contract BaluniV1DCAVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1DCAVault_$4172","typeString":"contract BaluniV1DCAVault"}],"id":4017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8511:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4016,"name":"address","nodeType":"ElementaryTypeName","src":"8511:7:20","typeDescriptions":{}}},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8511:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4013,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"8489:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4012,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"8482:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8482:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8501:9:20","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2093,"src":"8482:28:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8482:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8462:63:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4022,"name":"baseBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"8542:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8557:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8542:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"balanceQuote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"8562:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8562:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8542:37:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4031,"nodeType":"IfStatement","src":"8538:51:20","trueBody":{"expression":{"hexValue":"30","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8588:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3978,"id":4030,"nodeType":"Return","src":"8581:8:20"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4032,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"8606:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4033,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"8619:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8606:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4044,"nodeType":"IfStatement","src":"8602:80:20","trueBody":{"expression":{"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4035,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"8625:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":4038,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"8653:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4039,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"8664:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4040,"name":"baseBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"8670:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4036,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"8638:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$2603","typeString":"contract IBaluniV1Oracle"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8645:7:20","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":2591,"src":"8638:14:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8638:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8625:57:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4043,"nodeType":"ExpressionStatement","src":"8625:57:20"}},{"expression":{"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4045,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"8693:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":4048,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"8721:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4049,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"8733:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4050,"name":"balanceQuote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"8744:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4046,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"8706:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$2603","typeString":"contract IBaluniV1Oracle"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8713:7:20","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":2591,"src":"8706:14:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8706:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8693:64:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4053,"nodeType":"ExpressionStatement","src":"8693:64:20"},{"expression":{"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4054,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"8768:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4055,"name":"baseBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"8781:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8768:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4057,"nodeType":"ExpressionStatement","src":"8768:24:20"},{"expression":{"id":4058,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"8812:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3978,"id":4059,"nodeType":"Return","src":"8805:16:20"}]},"functionSelector":"295b9300","id":4061,"implemented":true,"kind":"function","modifiers":[],"name":"totalValuation","nameLocation":"8173:14:20","nodeType":"FunctionDefinition","parameters":{"id":3975,"nodeType":"ParameterList","parameters":[],"src":"8187:2:20"},"returnParameters":{"id":3978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4061,"src":"8211:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"8211:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8210:9:20"},"scope":4172,"src":"8164:665:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4115,"nodeType":"Block","src":"8890:382:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4066,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"8905:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8905:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8922:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8905:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4072,"nodeType":"IfStatement","src":"8901:32:20","trueBody":{"expression":{"hexValue":"30","id":4070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4065,"id":4071,"nodeType":"Return","src":"8925:8:20"}},{"assignments":[4074],"declarations":[{"constant":false,"id":4074,"mutability":"mutable","name":"USDC","nameLocation":"8954:4:20","nodeType":"VariableDeclaration","scope":4115,"src":"8946:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4073,"name":"address","nodeType":"ElementaryTypeName","src":"8946:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4078,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4075,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"8961:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8971:7:20","memberName":"getUSDC","nodeType":"MemberAccess","referencedDeclaration":2751,"src":"8961:17:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8946:34:20"},{"assignments":[4080],"declarations":[{"constant":false,"id":4080,"mutability":"mutable","name":"decimals","nameLocation":"8997:8:20","nodeType":"VariableDeclaration","scope":4115,"src":"8991:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4079,"name":"uint8","nodeType":"ElementaryTypeName","src":"8991:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4086,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4082,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"9023:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4081,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"9008:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$2162_$","typeString":"type(contract IERC20Metadata)"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9008:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$2162","typeString":"contract IERC20Metadata"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9029:8:20","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":2161,"src":"9008:29:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9008:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"8991:48:20"},{"assignments":[4088],"declarations":[{"constant":false,"id":4088,"mutability":"mutable","name":"factor","nameLocation":"9058:6:20","nodeType":"VariableDeclaration","scope":4115,"src":"9050:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"9050:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4095,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9067:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:2:20","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4091,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"9079:8:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9074:13:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9073:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9067:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9050:38:20"},{"assignments":[4097],"declarations":[{"constant":false,"id":4097,"mutability":"mutable","name":"valuationScaledUp","nameLocation":"9107:17:20","nodeType":"VariableDeclaration","scope":4115,"src":"9099:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4096,"name":"uint256","nodeType":"ElementaryTypeName","src":"9099:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4102,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4098,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"9127:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9127:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4100,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"9146:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9127:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9099:53:20"},{"assignments":[4104],"declarations":[{"constant":false,"id":4104,"mutability":"mutable","name":"unitPriceScaled","nameLocation":"9171:15:20","nodeType":"VariableDeclaration","scope":4115,"src":"9163:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4103,"name":"uint256","nodeType":"ElementaryTypeName","src":"9163:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4112,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4105,"name":"valuationScaledUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"9190:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9210:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"9190:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9189:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4109,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"9218:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9218:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9189:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9163:68:20"},{"expression":{"id":4113,"name":"unitPriceScaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"9249:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4065,"id":4114,"nodeType":"Return","src":"9242:22:20"}]},"functionSelector":"e73faa2d","id":4116,"implemented":true,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"8846:9:20","nodeType":"FunctionDefinition","parameters":{"id":4062,"nodeType":"ParameterList","parameters":[],"src":"8855:2:20"},"returnParameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4116,"src":"8881:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4063,"name":"uint256","nodeType":"ElementaryTypeName","src":"8881:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8880:9:20"},"scope":4172,"src":"8837:435:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4126,"nodeType":"Block","src":"9332:44:20","statements":[{"expression":{"arguments":[{"id":4123,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"9358:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}],"id":4122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9350:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4121,"name":"address","nodeType":"ElementaryTypeName","src":"9350:7:20","typeDescriptions":{}}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9350:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4120,"id":4125,"nodeType":"Return","src":"9343:25:20"}]},"functionSelector":"7b103999","id":4127,"implemented":true,"kind":"function","modifiers":[],"name":"registry","nameLocation":"9289:8:20","nodeType":"FunctionDefinition","parameters":{"id":4117,"nodeType":"ParameterList","parameters":[],"src":"9297:2:20"},"returnParameters":{"id":4120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4127,"src":"9323:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4118,"name":"address","nodeType":"ElementaryTypeName","src":"9323:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9322:9:20"},"scope":4172,"src":"9280:96:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4142,"nodeType":"Block","src":"9454:46:20","statements":[{"expression":{"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4136,"name":"executors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"9465:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4138,"indexExpression":{"id":4137,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"9475:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9465:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4139,"name":"_allow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"9486:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9465:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4141,"nodeType":"ExpressionStatement","src":"9465:27:20"}]},"functionSelector":"1e1bff3f","id":4143,"implemented":true,"kind":"function","modifiers":[{"id":4134,"kind":"modifierInvocation","modifierName":{"id":4133,"name":"onlyOwner","nameLocations":["9444:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"9444:9:20"},"nodeType":"ModifierInvocation","src":"9444:9:20"}],"name":"setExecutor","nameLocation":"9393:11:20","nodeType":"FunctionDefinition","parameters":{"id":4132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4129,"mutability":"mutable","name":"_wallet","nameLocation":"9413:7:20","nodeType":"VariableDeclaration","scope":4143,"src":"9405:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4128,"name":"address","nodeType":"ElementaryTypeName","src":"9405:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4131,"mutability":"mutable","name":"_allow","nameLocation":"9427:6:20","nodeType":"VariableDeclaration","scope":4143,"src":"9422:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4130,"name":"bool","nodeType":"ElementaryTypeName","src":"9422:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9404:30:20"},"returnParameters":{"id":4135,"nodeType":"ParameterList","parameters":[],"src":"9454:0:20"},"scope":4172,"src":"9384:116:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4170,"nodeType":"Block","src":"9778:163:20","statements":[{"assignments":[4152],"declarations":[{"constant":false,"id":4152,"mutability":"mutable","name":"_BPS_FEE","nameLocation":"9797:8:20","nodeType":"VariableDeclaration","scope":4170,"src":"9789:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4151,"name":"uint256","nodeType":"ElementaryTypeName","src":"9789:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4156,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4153,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"9808:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9818:10:20","memberName":"getBPS_FEE","nodeType":"MemberAccess","referencedDeclaration":2761,"src":"9808:20:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9808:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9789:41:20"},{"assignments":[4158],"declarations":[{"constant":false,"id":4158,"mutability":"mutable","name":"_BPS_BASE","nameLocation":"9849:9:20","nodeType":"VariableDeclaration","scope":4170,"src":"9841:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4157,"name":"uint256","nodeType":"ElementaryTypeName","src":"9841:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4162,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4159,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"9861:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2787","typeString":"contract IBaluniV1Registry"}},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9871:11:20","memberName":"getBPS_BASE","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"9861:21:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9841:43:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4163,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"9903:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4164,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"9912:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9903:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9902:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4167,"name":"_BPS_BASE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"9924:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9902:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4150,"id":4169,"nodeType":"Return","src":"9895:38:20"}]},"documentation":{"id":4144,"nodeType":"StructuredDocumentation","src":"9508:198:20","text":" @dev Calculates the fee amount based on the provided amount using the haircut formula.\n @param amount The amount to calculate the fee for.\n @return The fee amount."},"id":4171,"implemented":true,"kind":"function","modifiers":[],"name":"_haircut","nameLocation":"9721:8:20","nodeType":"FunctionDefinition","parameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"amount","nameLocation":"9738:6:20","nodeType":"VariableDeclaration","scope":4171,"src":"9730:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"9730:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9729:16:20"},"returnParameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4171,"src":"9769:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"9769:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9768:9:20"},"scope":4172,"src":"9712:229:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4173,"src":"683:9261:20","usedErrors":[30,35,211,214,475,480,1332,1335,1500,1620,1625,1630,1639,1644,1649,1780,1793,2175,2178],"usedEvents":[41,219,1324,1329,1759,2070,2079,3313]}],"src":"40:9906:20"},"id":20}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"UPGRADE_INTERFACE_VERSION":{"details":"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {ContextUpgradeable} from \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {IERC20Errors} from \\\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\\n    struct ERC20Storage {\\n        mapping(address account => uint256) _balances;\\n\\n        mapping(address account => mapping(address spender => uint256)) _allowances;\\n\\n        uint256 _totalSupply;\\n\\n        string _name;\\n        string _symbol;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC20\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\\n\\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\\n        assembly {\\n            $.slot := ERC20StorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            $._totalSupply += value;\\n        } else {\\n            uint256 fromBalance = $._balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                $._balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                $._totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                $._balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        $._allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.","errors":{"EnforcedPause()":[{"details":"The operation failed because the contract is paused."}],"ExpectedPause()":[{"details":"The operation failed because the contract is not paused."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"paused()":{"details":"Returns true if the contract is paused, and false otherwise."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\\n    struct PausableStorage {\\n        bool _paused;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Pausable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\\n\\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\\n        assembly {\\n            $.slot := PausableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        PausableStorage storage $ = _getPausableStorage();\\n        $._paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        PausableStorage storage $ = _getPausableStorage();\\n        return $._paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        PausableStorage storage $ = _getPausableStorage();\\n        $._paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        PausableStorage storage $ = _getPausableStorage();\\n        $._paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\\n    struct ReentrancyGuardStorage {\\n        uint256 _status;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ReentrancyGuard\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\\n\\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\\n        assembly {\\n            $.slot := ReentrancyGuardStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if ($._status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        $._status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        return $._status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c6ced6292c72a5df5062c5531f11602e1abc0858cc9574df81da14878fc54a64736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC6 0xCE 0xD6 0x29 0x2C PUSH19 0xA5DF5062C5531F11602E1ABC0858CC9574DF81 0xDA EQ DUP8 DUP16 0xC5 BLOBBASEFEE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"449:6273:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c6ced6292c72a5df5062c5531f11602e1abc0858cc9574df81da14878fc54a64736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC6 0xCE 0xD6 0x29 0x2C PUSH19 0xA5DF5062C5531F11602E1ABC0858CC9574DF81 0xDA EQ DUP8 DUP16 0xC5 BLOBBASEFEE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"449:6273:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201c04349167677d2822c11c2f99ae3d53f9585061fd9b4d0a1134e59d5aae7d6364736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR DIV CALLVALUE SWAP2 PUSH8 0x677D2822C11C2F99 0xAE RETURNDATASIZE MSTORE8 0xF9 PC POP PUSH2 0xFD9B 0x4D EXP GT CALLVALUE 0xE5 SWAP14 GAS 0xAE PUSH30 0x6364736F6C63430008190033000000000000000000000000000000000000 ","sourceMap":"195:6066:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201c04349167677d2822c11c2f99ae3d53f9585061fd9b4d0a1134e59d5aae7d6364736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR DIV CALLVALUE SWAP2 PUSH8 0x677D2822C11C2F99 0xAE RETURNDATASIZE MSTORE8 0xF9 PC POP PUSH2 0xFD9B 0x4D EXP GT CALLVALUE 0xE5 SWAP14 GAS 0xAE PUSH30 0x6364736F6C63430008190033000000000000000000000000000000000000 ","sourceMap":"195:6066:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202c766a8d534da51e6d89f2a7211a3e2cbb05f0ce6c90a7d619a2d9809239f1ec64736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH23 0x6A8D534DA51E6D89F2A7211A3E2CBB05F0CE6C90A7D619 LOG2 0xD9 DUP1 SWAP3 CODECOPY CALL 0xEC PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1245:2685:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202c766a8d534da51e6d89f2a7211a3e2cbb05f0ce6c90a7d619a2d9809239f1ec64736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH23 0x6A8D534DA51E6D89F2A7211A3E2CBB05F0CE6C90A7D619 LOG2 0xD9 DUP1 SWAP3 CODECOPY CALL 0xEC PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1245:2685:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1DCAVault.sol":{"IBaluniV1DCAVault":{"abi":[{"inputs":[],"name":"baseAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lastDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"quoteAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"baseAsset()":"cdf456e1","deposit(uint256,address)":"6e553f65","lastDeposit()":"36b77107","pause()":"8456cb59","quoteAsset()":"fdf262b7","registry()":"7b103999","totalValuation()":"295b9300","unitPrice()":"e73faa2d","unpause()":"3f4ba83a","withdraw(uint256,address)":"00f714ce"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"baseAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1DCAVault.sol\":\"IBaluniV1DCAVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1DCAVault.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1DCAVault {\\r\\n    function baseAsset() external view returns (address);\\r\\n    function quoteAsset() external view returns (address);\\r\\n    function registry() external view returns (address);\\r\\n    function lastDeposit() external view returns (uint256);\\r\\n    function deposit(uint256 amount, address to) external;\\r\\n    function withdraw(uint256 shares, address to) external;\\r\\n    function pause() external;\\r\\n    function unpause() external;\\r\\n    function totalValuation() external view returns (uint256);\\r\\n    function unitPrice() external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xc7fa68680d00716d3c09298f77099f8a8afe02bf6030819587408e5f152eb088\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Oracle.sol":{"IBaluniV1Oracle":{"abi":[{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convertScaled","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"convert(address,address,uint256)":"248391ff","convertScaled(address,address,uint256)":"b27b5e75"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convertScaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Oracle.sol\":\"IBaluniV1Oracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Oracle {\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\\r\\n\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation);\\r\\n}\\r\\n\",\"keccak256\":\"0x2bc62f7640b15a1772de630216f6fe6aa7a719cb6cf0255befdde19ec8de785a\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Registry.sol":{"IBaluniV1Registry":{"abi":[{"inputs":[],"name":"get1inchSpotAgg","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBPS_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniAgentFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniPoolPeriphery","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniPoolRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniSwapper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniVaultRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMAX_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStaticOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTreasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUSDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUniswapFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUniswapRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"__1inchSpotAgg","type":"address"}],"name":"set1inchSpotAgg","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"__BPS_FEE","type":"uint256"}],"name":"setBPS_FEE","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniAgentFactory","type":"address"}],"name":"setBaluniAgentFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniOracle","type":"address"}],"name":"setBaluniOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolPeriphery","type":"address"}],"name":"setBaluniPoolPeriphery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolRegistry","type":"address"}],"name":"setBaluniPoolRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRebalancer","type":"address"}],"name":"setBaluniRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRegistry","type":"address"}],"name":"setBaluniRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRouter","type":"address"}],"name":"setBaluniRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniSwapper","type":"address"}],"name":"setBaluniSwapper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolRegistry","type":"address"}],"name":"setBaluniVaultRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_staticOracle","type":"address"}],"name":"setStaticOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"name":"setTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_USDC","type":"address"}],"name":"setUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_uniswapFactory","type":"address"}],"name":"setUniswapFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_uniswapRouter","type":"address"}],"name":"setUniswapRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_WNATIVE","type":"address"}],"name":"setWNATIVE","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the BaluniV1Registry contract.","kind":"dev","methods":{},"title":"IBaluniV1Registry","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"get1inchSpotAgg()":"8e1c3a8a","getBPS_BASE()":"4f4608a2","getBPS_FEE()":"85462d6f","getBaluniAgentFactory()":"f5d2d998","getBaluniOracle()":"bb3ba04c","getBaluniPoolPeriphery()":"1acb6141","getBaluniPoolRegistry()":"32569e02","getBaluniRebalancer()":"cff49d68","getBaluniRegistry()":"c9aba8ae","getBaluniRouter()":"04cc7325","getBaluniSwapper()":"82755ebb","getBaluniVaultRegistry()":"1cc2b00d","getMAX_BPS_FEE()":"9380fb6f","getStaticOracle()":"a5d2236f","getTreasury()":"3b19e84a","getUSDC()":"1bf01e9b","getUniswapFactory()":"3e6dfa36","getUniswapRouter()":"524900b5","getWNATIVE()":"6c9c0078","set1inchSpotAgg(address)":"c08f786b","setBPS_FEE(uint256)":"9e6453f8","setBaluniAgentFactory(address)":"f1dccde7","setBaluniOracle(address)":"f5b84f64","setBaluniPoolPeriphery(address)":"588c5b70","setBaluniPoolRegistry(address)":"f98977a9","setBaluniRebalancer(address)":"0241bffa","setBaluniRegistry(address)":"6c43274c","setBaluniRouter(address)":"400fb668","setBaluniSwapper(address)":"c3f5df5c","setBaluniVaultRegistry(address)":"5055fe98","setStaticOracle(address)":"cc01e9a6","setTreasury(address)":"f0f44260","setUSDC(address)":"b3e089a2","setUniswapFactory(address)":"e04b677f","setUniswapRouter(address)":"bea9849e","setWNATIVE(address)":"b6fe9cc7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"get1inchSpotAgg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBPS_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniAgentFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniPoolPeriphery\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniPoolRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniSwapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniVaultRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMAX_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStaticOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__1inchSpotAgg\",\"type\":\"address\"}],\"name\":\"set1inchSpotAgg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__BPS_FEE\",\"type\":\"uint256\"}],\"name\":\"setBPS_FEE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniAgentFactory\",\"type\":\"address\"}],\"name\":\"setBaluniAgentFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniOracle\",\"type\":\"address\"}],\"name\":\"setBaluniOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolPeriphery\",\"type\":\"address\"}],\"name\":\"setBaluniPoolPeriphery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolRegistry\",\"type\":\"address\"}],\"name\":\"setBaluniPoolRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRebalancer\",\"type\":\"address\"}],\"name\":\"setBaluniRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRegistry\",\"type\":\"address\"}],\"name\":\"setBaluniRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRouter\",\"type\":\"address\"}],\"name\":\"setBaluniRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniSwapper\",\"type\":\"address\"}],\"name\":\"setBaluniSwapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolRegistry\",\"type\":\"address\"}],\"name\":\"setBaluniVaultRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staticOracle\",\"type\":\"address\"}],\"name\":\"setStaticOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDC\",\"type\":\"address\"}],\"name\":\"setUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapFactory\",\"type\":\"address\"}],\"name\":\"setUniswapFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"}],\"name\":\"setUniswapRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WNATIVE\",\"type\":\"address\"}],\"name\":\"setWNATIVE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the BaluniV1Registry contract.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IBaluniV1Registry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Registry.sol\":\"IBaluniV1Registry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolRegistry(address _baluniPoolRegistry) external;\\r\\n\\r\\n    function setBaluniVaultRegistry(address _baluniPoolRegistry) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniVaultRegistry() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolRegistry() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x7e73b74ed81791ac27ab8e6f5877d7d6c969567be86125ee3ce2c77825487127\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Swapper.sol":{"IBaluniV1Swapper":{"abi":[{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"address","name":"token2","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"multiHopSwap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"singleSwap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"multiHopSwap(address,address,address,uint256,address)":"5efaaebb","singleSwap(address,address,uint256,address)":"2d6bc8ea"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"multiHopSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"singleSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Swapper.sol\":\"IBaluniV1Swapper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Swapper.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Swapper {\\r\\n    function singleSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 amountOut);\\r\\n    function multiHopSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        address token2,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 amountOut);\\r\\n}\\r\\n\",\"keccak256\":\"0x8113df3342115499d21149fa3fe70412cb6bdbf79766870f929b3845e1d2a0fe\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/registry/BaluniV1DCAVaultRegistry.sol":{"BaluniV1DCAVaultRegistry":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"vault","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"}],"name":"vaultCreated","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"vaultAddress","type":"address"}],"name":"addVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allVaults","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllVaults","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"getVault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"vaultAddress","type":"address"}],"name":"getVaultAsset","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset1","type":"address"},{"internalType":"address","name":"asset2","type":"address"}],"name":"getVaultType1ByAssets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getVaultsByAsset","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVaultsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_register","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"contract IBaluniV1Registry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_register","type":"address"},{"internalType":"uint64","name":"_version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_vault","type":"address"}],"name":"removeVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_vault","type":"address"}],"name":"vaultExist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"getAllVaults()":{"details":"Retrieves all the vaults created by the factory.","returns":{"_0":"An array of vault addresses."}},"getVaultAsset(address)":{"details":"Retrieves the assets of a specific vault.","params":{"vaultAddress":"The address of the vault."},"returns":{"_0":"An array of asset addresses."}},"getVaultType1ByAssets(address,address)":{"details":"Retrieves the vault address based on the given assets.","params":{"asset1":"The address of the first asset.","asset2":"The address of the second asset."},"returns":{"_0":"The address of the vault."}},"getVaultsCount()":{"details":"Retrieves the number of vaults created by the factory.","returns":{"_0":"The count of vaults."}},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a0604052306080523480156012575f80fd5b50608051611a676100395f395f81816111eb0152818161121401526113c90152611a675ff3fe60806040526004361061013d575f3560e01c80638f2248bc116100bb578063bbd7edc511610071578063ca9d67c811610057578063ca9d67c8146103b5578063ceb68c23146103d4578063f2fde38b146103f3575f80fd5b8063bbd7edc514610357578063c4d66de814610396575f80fd5b806397331bf9116100a157806397331bf9146102db578063ad3cb1cc146102ef578063b9b658db14610344575f80fd5b80638f2248bc1461029d5780639094a91e146102bc575f80fd5b806352d1902d11610110578063715018a6116100f6578063715018a61461022e5780637b103999146102425780638da5cb5b14610261575f80fd5b806352d1902d146101d5578063592717af146101f7575f80fd5b806302b3537d146101415780631089405214610175578063256b5a02146101a15780634f1ef286146101c2575b5f80fd5b34801561014c575f80fd5b5061016061015b36600461178e565b610412565b60405190151581526020015b60405180910390f35b348015610180575f80fd5b5061019461018f36600461178e565b61046c565b60405161016c91906117a9565b3480156101ac575f80fd5b506101c06101bb36600461178e565b61067b565b005b6101c06101d0366004611809565b6108b3565b3480156101e0575f80fd5b506101e96108d2565b60405190815260200161016c565b348015610202575f80fd5b506102166102113660046118c7565b610900565b6040516001600160a01b03909116815260200161016c565b348015610239575f80fd5b506101c061092e565b34801561024d575f80fd5b50600154610216906001600160a01b031681565b34801561026c575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610216565b3480156102a8575f80fd5b506101c06102b73660046118fe565b610941565b3480156102c7575f80fd5b506102166102d6366004611936565b610a77565b3480156102e6575f80fd5b50610194610a9e565b3480156102fa575f80fd5b506103376040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60405161016c919061194d565b34801561034f575f80fd5b505f546101e9565b348015610362575f80fd5b506102166103713660046118c7565b600260209081525f92835260408084209091529082529020546001600160a01b031681565b3480156103a1575f80fd5b506101c06103b036600461178e565b610afd565b3480156103c0575f80fd5b506101946103cf36600461178e565b610c7f565b3480156103df575f80fd5b506101c06103ee36600461178e565b610dc6565b3480156103fe575f80fd5b506101c061040d36600461178e565b611116565b5f805b5f5481101561046457826001600160a01b03165f828154811061043a5761043a611982565b5f918252602090912001546001600160a01b03160361045c5750600192915050565b600101610415565b505f92915050565b5f80546060919067ffffffffffffffff81111561048b5761048b6117f5565b6040519080825280602002602001820160405280156104b4578160200160208202803683370190505b5090505f805b5f548110156105d5575f8082815481106104d6576104d6611982565b5f918252602080832090910154604080517fcdf456e100000000000000000000000000000000000000000000000000000000815290516001600160a01b039092169450849263cdf456e1926004808401938290030181865afa15801561053e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105629190611996565b9050866001600160a01b0316816001600160a01b0316036105bc578185858151811061059057610590611982565b6001600160a01b0390921660209283029190910190910152836105b2816119c5565b94505050506105d5565b845184036105cb5750506105d5565b50506001016104ba565b505f8167ffffffffffffffff8111156105f0576105f06117f5565b604051908082528060200260200182016040528015610619578160200160208202803683370190505b5090505f5b828110156106725783818151811061063857610638611982565b602002602001015182828151811061065257610652611982565b6001600160a01b039092166020928302919091019091015260010161061e565b50949350505050565b61068361116c565b6001600160a01b03811661071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f42616c756e6956315661756c74466163746f72793a20494e56414c49445f766160448201527f756c745f4144445245535300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5f80546001810182558180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416908117909155604080517fcdf456e1000000000000000000000000000000000000000000000000000000008152905163cdf456e1916004808201926020929091908290030181865afa1580156107c7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107eb9190611996565b90505f826001600160a01b031663fdf262b76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561082a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061084e9190611996565b6001600160a01b039283165f818152600260208181526040808420958816845294815284832080549790981673ffffffffffffffffffffffffffffffffffffffff19978816811790985590815283822092825291909152208054909216909217905550565b6108bb6111e0565b6108c4826112b0565b6108ce82826112b8565b5050565b5f6108db6113be565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b6001600160a01b038083165f9081526002602090815260408083208585168452909152902054165b92915050565b61093661116c565b61093f5f611420565b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805482919068010000000000000000900460ff168061098f5750805467ffffffffffffffff808416911610155b156109c6576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80546801000000000000000067ffffffffffffffff84167fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000090921682171782556001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038716179055815468ff0000000000000000191682556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a150505050565b5f8181548110610a85575f80fd5b5f918252602090912001546001600160a01b0316905081565b60605f805480602002602001604051908101604052809291908181526020018280548015610af357602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610ad5575b5050505050905090565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f81158015610b475750825b90505f8267ffffffffffffffff166001148015610b635750303b155b905081158015610b71575080155b15610ba8576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610bf357845468ff00000000000000001916680100000000000000001785555b610bfb61149d565b610c04336114a5565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0388161790558315610c7757845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b60408051600280825260608083018452925f929190602083019080368337019050509050826001600160a01b031663cdf456e16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cdf573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d039190611996565b815f81518110610d1557610d15611982565b60200260200101906001600160a01b031690816001600160a01b031681525050826001600160a01b031663fdf262b76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d71573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d959190611996565b81600181518110610da857610da8611982565b6001600160a01b039092166020928302919091019091015292915050565b610dce61116c565b5f5b5f548110156108ce57816001600160a01b03165f8281548110610df557610df5611982565b5f918252602090912001546001600160a01b03160361110e575f8054610e1d906001906119dd565b81548110610e2d57610e2d611982565b5f91825260208220015481546001600160a01b03909116919083908110610e5657610e56611982565b905f5260205f20015f6101000a8154816001600160a01b0302191690836001600160a01b031602179055505f60025f846001600160a01b031663fdf262b76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ec1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ee59190611996565b6001600160a01b03166001600160a01b031681526020019081526020015f205f846001600160a01b031663cdf456e16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f41573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f659190611996565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6101000a8154816001600160a01b0302191690836001600160a01b031602179055505f60025f846001600160a01b031663cdf456e16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fe7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061100b9190611996565b6001600160a01b03166001600160a01b031681526020019081526020015f205f846001600160a01b031663fdf262b76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611067573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061108b9190611996565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6101000a8154816001600160a01b0302191690836001600160a01b031602179055505f8054806110dd576110dd6119f0565b5f8281526020902081015f19908101805473ffffffffffffffffffffffffffffffffffffffff191690550190555050565b600101610dd0565b61111e61116c565b6001600160a01b038116611160576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152602401610715565b61116981611420565b50565b3361119e7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b03161461093f576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610715565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061127957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661126d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614155b1561093f576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61116961116c565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611312575060408051601f3d908101601f1916820190925261130f91810190611a04565b60015b611353576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610715565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146113af576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610715565b6113b983836114b6565b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461093f576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805473ffffffffffffffffffffffffffffffffffffffff1981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b61093f61150b565b6114ad61150b565b61116981611572565b6114bf8261157a565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115611503576113b98282611616565b6108ce611688565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff1661093f576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61111e61150b565b806001600160a01b03163b5f036115c8576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401610715565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516116329190611a1b565b5f60405180830381855af49150503d805f811461166a576040519150601f19603f3d011682016040523d82523d5f602084013e61166f565b606091505b509150915061167f8583836116c0565b95945050505050565b341561093f576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060826116d5576116d082611738565b611731565b81511580156116ec57506001600160a01b0384163b155b1561172e576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401610715565b50805b9392505050565b8051156117485780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0381168114611169575f80fd5b5f6020828403121561179e575f80fd5b81356117318161177a565b602080825282518282018190525f9190848201906040850190845b818110156117e95783516001600160a01b0316835292840192918401916001016117c4565b50909695505050505050565b634e487b7160e01b5f52604160045260245ffd5b5f806040838503121561181a575f80fd5b82356118258161177a565b9150602083013567ffffffffffffffff80821115611841575f80fd5b818501915085601f830112611854575f80fd5b813581811115611866576118666117f5565b604051601f8201601f19908116603f0116810190838211818310171561188e5761188e6117f5565b816040528281528860208487010111156118a6575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f80604083850312156118d8575f80fd5b82356118e38161177a565b915060208301356118f38161177a565b809150509250929050565b5f806040838503121561190f575f80fd5b823561191a8161177a565b9150602083013567ffffffffffffffff811681146118f3575f80fd5b5f60208284031215611946575f80fd5b5035919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b634e487b7160e01b5f52603260045260245ffd5b5f602082840312156119a6575f80fd5b81516117318161177a565b634e487b7160e01b5f52601160045260245ffd5b5f5f1982036119d6576119d66119b1565b5060010190565b81810381811115610928576109286119b1565b634e487b7160e01b5f52603160045260245ffd5b5f60208284031215611a14575f80fd5b5051919050565b5f82518060208501845e5f92019182525091905056fea264697066735822122093641ff08b049c1358d5522efb64481d3fdc67741d0a998d8f56c8e1ba121b5264736f6c63430008190033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x1A67 PUSH2 0x39 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x11EB ADD MSTORE DUP2 DUP2 PUSH2 0x1214 ADD MSTORE PUSH2 0x13C9 ADD MSTORE PUSH2 0x1A67 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F2248BC GT PUSH2 0xBB JUMPI DUP1 PUSH4 0xBBD7EDC5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCA9D67C8 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xCA9D67C8 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xCEB68C23 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBBD7EDC5 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x396 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97331BF9 GT PUSH2 0xA1 JUMPI DUP1 PUSH4 0x97331BF9 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xB9B658DB EQ PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x9094A91E EQ PUSH2 0x2BC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0xF6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x261 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x592717AF EQ PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B3537D EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x10894052 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x256B5A02 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1C2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x160 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x17A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x92E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x216 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x216 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0xA77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0xA9E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x337 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C7 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x178E JUMP JUMPDEST PUSH2 0xAFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x178E JUMP JUMPDEST PUSH2 0xC7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x178E JUMP JUMPDEST PUSH2 0xDC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x1116 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x464 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x43A JUMPI PUSH2 0x43A PUSH2 0x1982 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x45C JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x415 JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48B JUMPI PUSH2 0x48B PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4B4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x5D5 JUMPI PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x1982 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xCDF456E100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP5 POP DUP5 SWAP3 PUSH4 0xCDF456E1 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x5BC JUMPI DUP2 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x590 JUMPI PUSH2 0x590 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP4 PUSH2 0x5B2 DUP2 PUSH2 0x19C5 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH2 0x5D5 JUMP JUMPDEST DUP5 MLOAD DUP5 SUB PUSH2 0x5CB JUMPI POP POP PUSH2 0x5D5 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x4BA JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5F0 JUMPI PUSH2 0x5F0 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x619 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x672 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x638 JUMPI PUSH2 0x638 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x652 JUMPI PUSH2 0x652 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x61E JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x683 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C756E6956315661756C74466163746F72793A20494E56414C49445F7661 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C745F41444452455353000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE DUP2 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0xCDF456E100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH4 0xCDF456E1 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFDF262B7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84E SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP6 DUP9 AND DUP5 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD SWAP8 SWAP1 SWAP9 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP8 DUP9 AND DUP2 OR SWAP1 SWAP9 SSTORE SWAP1 DUP2 MSTORE DUP4 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 SWAP3 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x8BB PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x8C4 DUP3 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x8CE DUP3 DUP3 PUSH2 0x12B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8DB PUSH2 0x13BE JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x936 PUSH2 0x116C JUMP JUMPDEST PUSH2 0x93F PUSH0 PUSH2 0x1420 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x98F JUMPI POP DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0x9C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 SWAP1 SWAP3 AND DUP3 OR OR DUP3 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE DUP2 SLOAD PUSH9 0xFF0000000000000000 NOT AND DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA85 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAD5 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xB47 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xB63 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB71 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xBF3 JUMPI DUP5 SLOAD PUSH9 0xFF0000000000000000 NOT AND PUSH9 0x10000000000000000 OR DUP6 SSTORE JUMPDEST PUSH2 0xBFB PUSH2 0x149D JUMP JUMPDEST PUSH2 0xC04 CALLER PUSH2 0x14A5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xC77 JUMPI DUP5 SLOAD PUSH9 0xFF0000000000000000 NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCDF456E1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCDF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD03 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xD15 JUMPI PUSH2 0xD15 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFDF262B7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD71 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD95 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xDA8 JUMPI PUSH2 0xDA8 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDCE PUSH2 0x116C JUMP JUMPDEST PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x8CE JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDF5 JUMPI PUSH2 0xDF5 PUSH2 0x1982 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x110E JUMPI PUSH0 DUP1 SLOAD PUSH2 0xE1D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x19DD JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xE2D JUMPI PUSH2 0xE2D PUSH2 0x1982 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xE56 JUMPI PUSH2 0xE56 PUSH2 0x1982 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFDF262B7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEE5 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCDF456E1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF41 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF65 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCDF456E1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFE7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x100B SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFDF262B7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1067 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x108B SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 SLOAD DUP1 PUSH2 0x10DD JUMPI PUSH2 0x10DD PUSH2 0x19F0 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x111E PUSH2 0x116C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1160 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x715 JUMP JUMPDEST PUSH2 0x1169 DUP2 PUSH2 0x1420 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x119E PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x715 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1279 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x126D PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1169 PUSH2 0x116C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1312 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x130F SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A04 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1353 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x715 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x13AF JUMPI PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x715 JUMP JUMPDEST PUSH2 0x13B9 DUP4 DUP4 PUSH2 0x14B6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x93F PUSH2 0x150B JUMP JUMPDEST PUSH2 0x14AD PUSH2 0x150B JUMP JUMPDEST PUSH2 0x1169 DUP2 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x14BF DUP3 PUSH2 0x157A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1503 JUMPI PUSH2 0x13B9 DUP3 DUP3 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x8CE PUSH2 0x1688 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x111E PUSH2 0x150B JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x15C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x715 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1632 SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x166A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x166F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x167F DUP6 DUP4 DUP4 PUSH2 0x16C0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x16D5 JUMPI PUSH2 0x16D0 DUP3 PUSH2 0x1738 JUMP JUMPDEST PUSH2 0x1731 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x16EC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x172E JUMPI PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x715 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1748 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1169 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1731 DUP2 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17E9 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x17C4 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1825 DUP2 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1841 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1854 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1866 JUMPI PUSH2 0x1866 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x188E JUMPI PUSH2 0x188E PUSH2 0x17F5 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x18A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18E3 DUP2 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x18F3 DUP2 PUSH2 0x177A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x190F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x191A DUP2 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x18F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1946 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1731 DUP2 PUSH2 0x177A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 NOT DUP3 SUB PUSH2 0x19D6 JUMPI PUSH2 0x19D6 PUSH2 0x19B1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x928 JUMPI PUSH2 0x928 PUSH2 0x19B1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 PUSH5 0x1FF08B049C SGT PC 0xD5 MSTORE 0x2E 0xFB PUSH5 0x481D3FDC67 PUSH21 0x1D0A998D8F56C8E1BA121B5264736F6C6343000819 STOP CALLER ","sourceMap":"1795:4181:19:-:0;;;1171:4:2;1128:48;;1795:4181:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_472":{"entryPoint":null,"id":472,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":5285,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":5490,"id":81,"parameterSlots":1,"returnSlots":0},"@__UUPSUpgradeable_init_502":{"entryPoint":5277,"id":502,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_2898":{"entryPoint":4784,"id":2898,"parameterSlots":1,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":5387,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_2047":{"entryPoint":5768,"id":2047,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_578":{"entryPoint":5054,"id":578,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":4460,"id":122,"parameterSlots":0,"returnSlots":0},"@_checkProxy_562":{"entryPoint":4576,"id":562,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_447":{"entryPoint":null,"id":447,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":null,"id":25,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":null,"id":438,"parameterSlots":0,"returnSlots":1},"@_msgSender_1275":{"entryPoint":null,"id":1275,"parameterSlots":0,"returnSlots":1},"@_revert_2414":{"entryPoint":5944,"id":2414,"parameterSlots":1,"returnSlots":0},"@_setImplementation_1833":{"entryPoint":5498,"id":1833,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":5152,"id":193,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_629":{"entryPoint":4792,"id":629,"parameterSlots":2,"returnSlots":0},"@addVault_2954":{"entryPoint":1659,"id":2954,"parameterSlots":1,"returnSlots":0},"@allVaults_2834":{"entryPoint":2679,"id":2834,"parameterSlots":0,"returnSlots":0},"@functionDelegateCall_2334":{"entryPoint":5654,"id":2334,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_2447":{"entryPoint":null,"id":2447,"parameterSlots":1,"returnSlots":1},"@getAllVaults_2964":{"entryPoint":2718,"id":2964,"parameterSlots":0,"returnSlots":1},"@getImplementation_1806":{"entryPoint":null,"id":1806,"parameterSlots":0,"returnSlots":1},"@getVaultAsset_3017":{"entryPoint":3199,"id":3017,"parameterSlots":1,"returnSlots":1},"@getVaultType1ByAssets_3034":{"entryPoint":2304,"id":3034,"parameterSlots":2,"returnSlots":1},"@getVault_2843":{"entryPoint":null,"id":2843,"parameterSlots":0,"returnSlots":0},"@getVaultsByAsset_3145":{"entryPoint":1132,"id":3145,"parameterSlots":1,"returnSlots":1},"@getVaultsCount_2974":{"entryPoint":null,"id":2974,"parameterSlots":0,"returnSlots":1},"@initialize_2872":{"entryPoint":2813,"id":2872,"parameterSlots":1,"returnSlots":0},"@owner_105":{"entryPoint":null,"id":105,"parameterSlots":0,"returnSlots":1},"@proxiableUUID_520":{"entryPoint":2258,"id":520,"parameterSlots":0,"returnSlots":1},"@registry_2837":{"entryPoint":null,"id":2837,"parameterSlots":0,"returnSlots":0},"@reinitialize_2889":{"entryPoint":2369,"id":2889,"parameterSlots":2,"returnSlots":0},"@removeVault_3260":{"entryPoint":3526,"id":3260,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_136":{"entryPoint":2350,"id":136,"parameterSlots":0,"returnSlots":0},"@transferOwnership_164":{"entryPoint":4374,"id":164,"parameterSlots":1,"returnSlots":0},"@upgradeToAndCall_1867":{"entryPoint":5302,"id":1867,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_540":{"entryPoint":2227,"id":540,"parameterSlots":2,"returnSlots":0},"@vaultExist_3177":{"entryPoint":1042,"id":3177,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_2374":{"entryPoint":5824,"id":2374,"parameterSlots":3,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":6550,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6343,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":6153,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint64":{"entryPoint":6398,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":6660,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6454,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6057,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IBaluniV1Registry_$2787__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6477,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7510511c72bfe0cca9302d42db6cb14a9ff3bc6071674c6a36f4798a31a6f98d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6621,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":6597,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6577,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":6640,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6530,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6133,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":6010,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7435:21","nodeType":"YulBlock","src":"0:7435:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"59:109:21","nodeType":"YulBlock","src":"59:109:21","statements":[{"body":{"nativeSrc":"146:16:21","nodeType":"YulBlock","src":"146:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"155:1:21","nodeType":"YulLiteral","src":"155:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"158:1:21","nodeType":"YulLiteral","src":"158:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"148:6:21","nodeType":"YulIdentifier","src":"148:6:21"},"nativeSrc":"148:12:21","nodeType":"YulFunctionCall","src":"148:12:21"},"nativeSrc":"148:12:21","nodeType":"YulExpressionStatement","src":"148:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"82:5:21","nodeType":"YulIdentifier","src":"82:5:21"},{"arguments":[{"name":"value","nativeSrc":"93:5:21","nodeType":"YulIdentifier","src":"93:5:21"},{"kind":"number","nativeSrc":"100:42:21","nodeType":"YulLiteral","src":"100:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"89:3:21","nodeType":"YulIdentifier","src":"89:3:21"},"nativeSrc":"89:54:21","nodeType":"YulFunctionCall","src":"89:54:21"}],"functionName":{"name":"eq","nativeSrc":"79:2:21","nodeType":"YulIdentifier","src":"79:2:21"},"nativeSrc":"79:65:21","nodeType":"YulFunctionCall","src":"79:65:21"}],"functionName":{"name":"iszero","nativeSrc":"72:6:21","nodeType":"YulIdentifier","src":"72:6:21"},"nativeSrc":"72:73:21","nodeType":"YulFunctionCall","src":"72:73:21"},"nativeSrc":"69:93:21","nodeType":"YulIf","src":"69:93:21"}]},"name":"validator_revert_address","nativeSrc":"14:154:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"48:5:21","nodeType":"YulTypedName","src":"48:5:21","type":""}],"src":"14:154:21"},{"body":{"nativeSrc":"243:177:21","nodeType":"YulBlock","src":"243:177:21","statements":[{"body":{"nativeSrc":"289:16:21","nodeType":"YulBlock","src":"289:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"298:1:21","nodeType":"YulLiteral","src":"298:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"301:1:21","nodeType":"YulLiteral","src":"301:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"291:6:21","nodeType":"YulIdentifier","src":"291:6:21"},"nativeSrc":"291:12:21","nodeType":"YulFunctionCall","src":"291:12:21"},"nativeSrc":"291:12:21","nodeType":"YulExpressionStatement","src":"291:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"264:7:21","nodeType":"YulIdentifier","src":"264:7:21"},{"name":"headStart","nativeSrc":"273:9:21","nodeType":"YulIdentifier","src":"273:9:21"}],"functionName":{"name":"sub","nativeSrc":"260:3:21","nodeType":"YulIdentifier","src":"260:3:21"},"nativeSrc":"260:23:21","nodeType":"YulFunctionCall","src":"260:23:21"},{"kind":"number","nativeSrc":"285:2:21","nodeType":"YulLiteral","src":"285:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"256:3:21","nodeType":"YulIdentifier","src":"256:3:21"},"nativeSrc":"256:32:21","nodeType":"YulFunctionCall","src":"256:32:21"},"nativeSrc":"253:52:21","nodeType":"YulIf","src":"253:52:21"},{"nativeSrc":"314:36:21","nodeType":"YulVariableDeclaration","src":"314:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"340:9:21","nodeType":"YulIdentifier","src":"340:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"327:12:21","nodeType":"YulIdentifier","src":"327:12:21"},"nativeSrc":"327:23:21","nodeType":"YulFunctionCall","src":"327:23:21"},"variables":[{"name":"value","nativeSrc":"318:5:21","nodeType":"YulTypedName","src":"318:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"384:5:21","nodeType":"YulIdentifier","src":"384:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"359:24:21","nodeType":"YulIdentifier","src":"359:24:21"},"nativeSrc":"359:31:21","nodeType":"YulFunctionCall","src":"359:31:21"},"nativeSrc":"359:31:21","nodeType":"YulExpressionStatement","src":"359:31:21"},{"nativeSrc":"399:15:21","nodeType":"YulAssignment","src":"399:15:21","value":{"name":"value","nativeSrc":"409:5:21","nodeType":"YulIdentifier","src":"409:5:21"},"variableNames":[{"name":"value0","nativeSrc":"399:6:21","nodeType":"YulIdentifier","src":"399:6:21"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"173:247:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"209:9:21","nodeType":"YulTypedName","src":"209:9:21","type":""},{"name":"dataEnd","nativeSrc":"220:7:21","nodeType":"YulTypedName","src":"220:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"232:6:21","nodeType":"YulTypedName","src":"232:6:21","type":""}],"src":"173:247:21"},{"body":{"nativeSrc":"520:92:21","nodeType":"YulBlock","src":"520:92:21","statements":[{"nativeSrc":"530:26:21","nodeType":"YulAssignment","src":"530:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"542:9:21","nodeType":"YulIdentifier","src":"542:9:21"},{"kind":"number","nativeSrc":"553:2:21","nodeType":"YulLiteral","src":"553:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"538:3:21","nodeType":"YulIdentifier","src":"538:3:21"},"nativeSrc":"538:18:21","nodeType":"YulFunctionCall","src":"538:18:21"},"variableNames":[{"name":"tail","nativeSrc":"530:4:21","nodeType":"YulIdentifier","src":"530:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"572:9:21","nodeType":"YulIdentifier","src":"572:9:21"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"597:6:21","nodeType":"YulIdentifier","src":"597:6:21"}],"functionName":{"name":"iszero","nativeSrc":"590:6:21","nodeType":"YulIdentifier","src":"590:6:21"},"nativeSrc":"590:14:21","nodeType":"YulFunctionCall","src":"590:14:21"}],"functionName":{"name":"iszero","nativeSrc":"583:6:21","nodeType":"YulIdentifier","src":"583:6:21"},"nativeSrc":"583:22:21","nodeType":"YulFunctionCall","src":"583:22:21"}],"functionName":{"name":"mstore","nativeSrc":"565:6:21","nodeType":"YulIdentifier","src":"565:6:21"},"nativeSrc":"565:41:21","nodeType":"YulFunctionCall","src":"565:41:21"},"nativeSrc":"565:41:21","nodeType":"YulExpressionStatement","src":"565:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"425:187:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"489:9:21","nodeType":"YulTypedName","src":"489:9:21","type":""},{"name":"value0","nativeSrc":"500:6:21","nodeType":"YulTypedName","src":"500:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"511:4:21","nodeType":"YulTypedName","src":"511:4:21","type":""}],"src":"425:187:21"},{"body":{"nativeSrc":"768:530:21","nodeType":"YulBlock","src":"768:530:21","statements":[{"nativeSrc":"778:12:21","nodeType":"YulVariableDeclaration","src":"778:12:21","value":{"kind":"number","nativeSrc":"788:2:21","nodeType":"YulLiteral","src":"788:2:21","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"782:2:21","nodeType":"YulTypedName","src":"782:2:21","type":""}]},{"nativeSrc":"799:32:21","nodeType":"YulVariableDeclaration","src":"799:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"817:9:21","nodeType":"YulIdentifier","src":"817:9:21"},{"kind":"number","nativeSrc":"828:2:21","nodeType":"YulLiteral","src":"828:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"813:3:21","nodeType":"YulIdentifier","src":"813:3:21"},"nativeSrc":"813:18:21","nodeType":"YulFunctionCall","src":"813:18:21"},"variables":[{"name":"tail_1","nativeSrc":"803:6:21","nodeType":"YulTypedName","src":"803:6:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"847:9:21","nodeType":"YulIdentifier","src":"847:9:21"},{"kind":"number","nativeSrc":"858:2:21","nodeType":"YulLiteral","src":"858:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"840:6:21","nodeType":"YulIdentifier","src":"840:6:21"},"nativeSrc":"840:21:21","nodeType":"YulFunctionCall","src":"840:21:21"},"nativeSrc":"840:21:21","nodeType":"YulExpressionStatement","src":"840:21:21"},{"nativeSrc":"870:17:21","nodeType":"YulVariableDeclaration","src":"870:17:21","value":{"name":"tail_1","nativeSrc":"881:6:21","nodeType":"YulIdentifier","src":"881:6:21"},"variables":[{"name":"pos","nativeSrc":"874:3:21","nodeType":"YulTypedName","src":"874:3:21","type":""}]},{"nativeSrc":"896:27:21","nodeType":"YulVariableDeclaration","src":"896:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"916:6:21","nodeType":"YulIdentifier","src":"916:6:21"}],"functionName":{"name":"mload","nativeSrc":"910:5:21","nodeType":"YulIdentifier","src":"910:5:21"},"nativeSrc":"910:13:21","nodeType":"YulFunctionCall","src":"910:13:21"},"variables":[{"name":"length","nativeSrc":"900:6:21","nodeType":"YulTypedName","src":"900:6:21","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"939:6:21","nodeType":"YulIdentifier","src":"939:6:21"},{"name":"length","nativeSrc":"947:6:21","nodeType":"YulIdentifier","src":"947:6:21"}],"functionName":{"name":"mstore","nativeSrc":"932:6:21","nodeType":"YulIdentifier","src":"932:6:21"},"nativeSrc":"932:22:21","nodeType":"YulFunctionCall","src":"932:22:21"},"nativeSrc":"932:22:21","nodeType":"YulExpressionStatement","src":"932:22:21"},{"nativeSrc":"963:25:21","nodeType":"YulAssignment","src":"963:25:21","value":{"arguments":[{"name":"headStart","nativeSrc":"974:9:21","nodeType":"YulIdentifier","src":"974:9:21"},{"kind":"number","nativeSrc":"985:2:21","nodeType":"YulLiteral","src":"985:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"970:3:21","nodeType":"YulIdentifier","src":"970:3:21"},"nativeSrc":"970:18:21","nodeType":"YulFunctionCall","src":"970:18:21"},"variableNames":[{"name":"pos","nativeSrc":"963:3:21","nodeType":"YulIdentifier","src":"963:3:21"}]},{"nativeSrc":"997:29:21","nodeType":"YulVariableDeclaration","src":"997:29:21","value":{"arguments":[{"name":"value0","nativeSrc":"1015:6:21","nodeType":"YulIdentifier","src":"1015:6:21"},{"kind":"number","nativeSrc":"1023:2:21","nodeType":"YulLiteral","src":"1023:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1011:3:21","nodeType":"YulIdentifier","src":"1011:3:21"},"nativeSrc":"1011:15:21","nodeType":"YulFunctionCall","src":"1011:15:21"},"variables":[{"name":"srcPtr","nativeSrc":"1001:6:21","nodeType":"YulTypedName","src":"1001:6:21","type":""}]},{"nativeSrc":"1035:10:21","nodeType":"YulVariableDeclaration","src":"1035:10:21","value":{"kind":"number","nativeSrc":"1044:1:21","nodeType":"YulLiteral","src":"1044:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1039:1:21","nodeType":"YulTypedName","src":"1039:1:21","type":""}]},{"body":{"nativeSrc":"1103:169:21","nodeType":"YulBlock","src":"1103:169:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1124:3:21","nodeType":"YulIdentifier","src":"1124:3:21"},{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"1139:6:21","nodeType":"YulIdentifier","src":"1139:6:21"}],"functionName":{"name":"mload","nativeSrc":"1133:5:21","nodeType":"YulIdentifier","src":"1133:5:21"},"nativeSrc":"1133:13:21","nodeType":"YulFunctionCall","src":"1133:13:21"},{"kind":"number","nativeSrc":"1148:42:21","nodeType":"YulLiteral","src":"1148:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1129:3:21","nodeType":"YulIdentifier","src":"1129:3:21"},"nativeSrc":"1129:62:21","nodeType":"YulFunctionCall","src":"1129:62:21"}],"functionName":{"name":"mstore","nativeSrc":"1117:6:21","nodeType":"YulIdentifier","src":"1117:6:21"},"nativeSrc":"1117:75:21","nodeType":"YulFunctionCall","src":"1117:75:21"},"nativeSrc":"1117:75:21","nodeType":"YulExpressionStatement","src":"1117:75:21"},{"nativeSrc":"1205:19:21","nodeType":"YulAssignment","src":"1205:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"1216:3:21","nodeType":"YulIdentifier","src":"1216:3:21"},{"name":"_1","nativeSrc":"1221:2:21","nodeType":"YulIdentifier","src":"1221:2:21"}],"functionName":{"name":"add","nativeSrc":"1212:3:21","nodeType":"YulIdentifier","src":"1212:3:21"},"nativeSrc":"1212:12:21","nodeType":"YulFunctionCall","src":"1212:12:21"},"variableNames":[{"name":"pos","nativeSrc":"1205:3:21","nodeType":"YulIdentifier","src":"1205:3:21"}]},{"nativeSrc":"1237:25:21","nodeType":"YulAssignment","src":"1237:25:21","value":{"arguments":[{"name":"srcPtr","nativeSrc":"1251:6:21","nodeType":"YulIdentifier","src":"1251:6:21"},{"name":"_1","nativeSrc":"1259:2:21","nodeType":"YulIdentifier","src":"1259:2:21"}],"functionName":{"name":"add","nativeSrc":"1247:3:21","nodeType":"YulIdentifier","src":"1247:3:21"},"nativeSrc":"1247:15:21","nodeType":"YulFunctionCall","src":"1247:15:21"},"variableNames":[{"name":"srcPtr","nativeSrc":"1237:6:21","nodeType":"YulIdentifier","src":"1237:6:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1065:1:21","nodeType":"YulIdentifier","src":"1065:1:21"},{"name":"length","nativeSrc":"1068:6:21","nodeType":"YulIdentifier","src":"1068:6:21"}],"functionName":{"name":"lt","nativeSrc":"1062:2:21","nodeType":"YulIdentifier","src":"1062:2:21"},"nativeSrc":"1062:13:21","nodeType":"YulFunctionCall","src":"1062:13:21"},"nativeSrc":"1054:218:21","nodeType":"YulForLoop","post":{"nativeSrc":"1076:18:21","nodeType":"YulBlock","src":"1076:18:21","statements":[{"nativeSrc":"1078:14:21","nodeType":"YulAssignment","src":"1078:14:21","value":{"arguments":[{"name":"i","nativeSrc":"1087:1:21","nodeType":"YulIdentifier","src":"1087:1:21"},{"kind":"number","nativeSrc":"1090:1:21","nodeType":"YulLiteral","src":"1090:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1083:3:21","nodeType":"YulIdentifier","src":"1083:3:21"},"nativeSrc":"1083:9:21","nodeType":"YulFunctionCall","src":"1083:9:21"},"variableNames":[{"name":"i","nativeSrc":"1078:1:21","nodeType":"YulIdentifier","src":"1078:1:21"}]}]},"pre":{"nativeSrc":"1058:3:21","nodeType":"YulBlock","src":"1058:3:21","statements":[]},"src":"1054:218:21"},{"nativeSrc":"1281:11:21","nodeType":"YulAssignment","src":"1281:11:21","value":{"name":"pos","nativeSrc":"1289:3:21","nodeType":"YulIdentifier","src":"1289:3:21"},"variableNames":[{"name":"tail","nativeSrc":"1281:4:21","nodeType":"YulIdentifier","src":"1281:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"617:681:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"737:9:21","nodeType":"YulTypedName","src":"737:9:21","type":""},{"name":"value0","nativeSrc":"748:6:21","nodeType":"YulTypedName","src":"748:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"759:4:21","nodeType":"YulTypedName","src":"759:4:21","type":""}],"src":"617:681:21"},{"body":{"nativeSrc":"1335:152:21","nodeType":"YulBlock","src":"1335:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1352:1:21","nodeType":"YulLiteral","src":"1352:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1355:77:21","nodeType":"YulLiteral","src":"1355:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1345:6:21","nodeType":"YulIdentifier","src":"1345:6:21"},"nativeSrc":"1345:88:21","nodeType":"YulFunctionCall","src":"1345:88:21"},"nativeSrc":"1345:88:21","nodeType":"YulExpressionStatement","src":"1345:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1449:1:21","nodeType":"YulLiteral","src":"1449:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"1452:4:21","nodeType":"YulLiteral","src":"1452:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1442:6:21","nodeType":"YulIdentifier","src":"1442:6:21"},"nativeSrc":"1442:15:21","nodeType":"YulFunctionCall","src":"1442:15:21"},"nativeSrc":"1442:15:21","nodeType":"YulExpressionStatement","src":"1442:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1473:1:21","nodeType":"YulLiteral","src":"1473:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1476:4:21","nodeType":"YulLiteral","src":"1476:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1466:6:21","nodeType":"YulIdentifier","src":"1466:6:21"},"nativeSrc":"1466:15:21","nodeType":"YulFunctionCall","src":"1466:15:21"},"nativeSrc":"1466:15:21","nodeType":"YulExpressionStatement","src":"1466:15:21"}]},"name":"panic_error_0x41","nativeSrc":"1303:184:21","nodeType":"YulFunctionDefinition","src":"1303:184:21"},{"body":{"nativeSrc":"1588:1019:21","nodeType":"YulBlock","src":"1588:1019:21","statements":[{"body":{"nativeSrc":"1634:16:21","nodeType":"YulBlock","src":"1634:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1643:1:21","nodeType":"YulLiteral","src":"1643:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1646:1:21","nodeType":"YulLiteral","src":"1646:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1636:6:21","nodeType":"YulIdentifier","src":"1636:6:21"},"nativeSrc":"1636:12:21","nodeType":"YulFunctionCall","src":"1636:12:21"},"nativeSrc":"1636:12:21","nodeType":"YulExpressionStatement","src":"1636:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1609:7:21","nodeType":"YulIdentifier","src":"1609:7:21"},{"name":"headStart","nativeSrc":"1618:9:21","nodeType":"YulIdentifier","src":"1618:9:21"}],"functionName":{"name":"sub","nativeSrc":"1605:3:21","nodeType":"YulIdentifier","src":"1605:3:21"},"nativeSrc":"1605:23:21","nodeType":"YulFunctionCall","src":"1605:23:21"},{"kind":"number","nativeSrc":"1630:2:21","nodeType":"YulLiteral","src":"1630:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1601:3:21","nodeType":"YulIdentifier","src":"1601:3:21"},"nativeSrc":"1601:32:21","nodeType":"YulFunctionCall","src":"1601:32:21"},"nativeSrc":"1598:52:21","nodeType":"YulIf","src":"1598:52:21"},{"nativeSrc":"1659:36:21","nodeType":"YulVariableDeclaration","src":"1659:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1685:9:21","nodeType":"YulIdentifier","src":"1685:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"1672:12:21","nodeType":"YulIdentifier","src":"1672:12:21"},"nativeSrc":"1672:23:21","nodeType":"YulFunctionCall","src":"1672:23:21"},"variables":[{"name":"value","nativeSrc":"1663:5:21","nodeType":"YulTypedName","src":"1663:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1729:5:21","nodeType":"YulIdentifier","src":"1729:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"1704:24:21","nodeType":"YulIdentifier","src":"1704:24:21"},"nativeSrc":"1704:31:21","nodeType":"YulFunctionCall","src":"1704:31:21"},"nativeSrc":"1704:31:21","nodeType":"YulExpressionStatement","src":"1704:31:21"},{"nativeSrc":"1744:15:21","nodeType":"YulAssignment","src":"1744:15:21","value":{"name":"value","nativeSrc":"1754:5:21","nodeType":"YulIdentifier","src":"1754:5:21"},"variableNames":[{"name":"value0","nativeSrc":"1744:6:21","nodeType":"YulIdentifier","src":"1744:6:21"}]},{"nativeSrc":"1768:46:21","nodeType":"YulVariableDeclaration","src":"1768:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1799:9:21","nodeType":"YulIdentifier","src":"1799:9:21"},{"kind":"number","nativeSrc":"1810:2:21","nodeType":"YulLiteral","src":"1810:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1795:3:21","nodeType":"YulIdentifier","src":"1795:3:21"},"nativeSrc":"1795:18:21","nodeType":"YulFunctionCall","src":"1795:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1782:12:21","nodeType":"YulIdentifier","src":"1782:12:21"},"nativeSrc":"1782:32:21","nodeType":"YulFunctionCall","src":"1782:32:21"},"variables":[{"name":"offset","nativeSrc":"1772:6:21","nodeType":"YulTypedName","src":"1772:6:21","type":""}]},{"nativeSrc":"1823:28:21","nodeType":"YulVariableDeclaration","src":"1823:28:21","value":{"kind":"number","nativeSrc":"1833:18:21","nodeType":"YulLiteral","src":"1833:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"1827:2:21","nodeType":"YulTypedName","src":"1827:2:21","type":""}]},{"body":{"nativeSrc":"1878:16:21","nodeType":"YulBlock","src":"1878:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1887:1:21","nodeType":"YulLiteral","src":"1887:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1890:1:21","nodeType":"YulLiteral","src":"1890:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1880:6:21","nodeType":"YulIdentifier","src":"1880:6:21"},"nativeSrc":"1880:12:21","nodeType":"YulFunctionCall","src":"1880:12:21"},"nativeSrc":"1880:12:21","nodeType":"YulExpressionStatement","src":"1880:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1866:6:21","nodeType":"YulIdentifier","src":"1866:6:21"},{"name":"_1","nativeSrc":"1874:2:21","nodeType":"YulIdentifier","src":"1874:2:21"}],"functionName":{"name":"gt","nativeSrc":"1863:2:21","nodeType":"YulIdentifier","src":"1863:2:21"},"nativeSrc":"1863:14:21","nodeType":"YulFunctionCall","src":"1863:14:21"},"nativeSrc":"1860:34:21","nodeType":"YulIf","src":"1860:34:21"},{"nativeSrc":"1903:32:21","nodeType":"YulVariableDeclaration","src":"1903:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1917:9:21","nodeType":"YulIdentifier","src":"1917:9:21"},{"name":"offset","nativeSrc":"1928:6:21","nodeType":"YulIdentifier","src":"1928:6:21"}],"functionName":{"name":"add","nativeSrc":"1913:3:21","nodeType":"YulIdentifier","src":"1913:3:21"},"nativeSrc":"1913:22:21","nodeType":"YulFunctionCall","src":"1913:22:21"},"variables":[{"name":"_2","nativeSrc":"1907:2:21","nodeType":"YulTypedName","src":"1907:2:21","type":""}]},{"body":{"nativeSrc":"1983:16:21","nodeType":"YulBlock","src":"1983:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1992:1:21","nodeType":"YulLiteral","src":"1992:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1995:1:21","nodeType":"YulLiteral","src":"1995:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1985:6:21","nodeType":"YulIdentifier","src":"1985:6:21"},"nativeSrc":"1985:12:21","nodeType":"YulFunctionCall","src":"1985:12:21"},"nativeSrc":"1985:12:21","nodeType":"YulExpressionStatement","src":"1985:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"1962:2:21","nodeType":"YulIdentifier","src":"1962:2:21"},{"kind":"number","nativeSrc":"1966:4:21","nodeType":"YulLiteral","src":"1966:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1958:3:21","nodeType":"YulIdentifier","src":"1958:3:21"},"nativeSrc":"1958:13:21","nodeType":"YulFunctionCall","src":"1958:13:21"},{"name":"dataEnd","nativeSrc":"1973:7:21","nodeType":"YulIdentifier","src":"1973:7:21"}],"functionName":{"name":"slt","nativeSrc":"1954:3:21","nodeType":"YulIdentifier","src":"1954:3:21"},"nativeSrc":"1954:27:21","nodeType":"YulFunctionCall","src":"1954:27:21"}],"functionName":{"name":"iszero","nativeSrc":"1947:6:21","nodeType":"YulIdentifier","src":"1947:6:21"},"nativeSrc":"1947:35:21","nodeType":"YulFunctionCall","src":"1947:35:21"},"nativeSrc":"1944:55:21","nodeType":"YulIf","src":"1944:55:21"},{"nativeSrc":"2008:26:21","nodeType":"YulVariableDeclaration","src":"2008:26:21","value":{"arguments":[{"name":"_2","nativeSrc":"2031:2:21","nodeType":"YulIdentifier","src":"2031:2:21"}],"functionName":{"name":"calldataload","nativeSrc":"2018:12:21","nodeType":"YulIdentifier","src":"2018:12:21"},"nativeSrc":"2018:16:21","nodeType":"YulFunctionCall","src":"2018:16:21"},"variables":[{"name":"_3","nativeSrc":"2012:2:21","nodeType":"YulTypedName","src":"2012:2:21","type":""}]},{"body":{"nativeSrc":"2057:22:21","nodeType":"YulBlock","src":"2057:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2059:16:21","nodeType":"YulIdentifier","src":"2059:16:21"},"nativeSrc":"2059:18:21","nodeType":"YulFunctionCall","src":"2059:18:21"},"nativeSrc":"2059:18:21","nodeType":"YulExpressionStatement","src":"2059:18:21"}]},"condition":{"arguments":[{"name":"_3","nativeSrc":"2049:2:21","nodeType":"YulIdentifier","src":"2049:2:21"},{"name":"_1","nativeSrc":"2053:2:21","nodeType":"YulIdentifier","src":"2053:2:21"}],"functionName":{"name":"gt","nativeSrc":"2046:2:21","nodeType":"YulIdentifier","src":"2046:2:21"},"nativeSrc":"2046:10:21","nodeType":"YulFunctionCall","src":"2046:10:21"},"nativeSrc":"2043:36:21","nodeType":"YulIf","src":"2043:36:21"},{"nativeSrc":"2088:76:21","nodeType":"YulVariableDeclaration","src":"2088:76:21","value":{"kind":"number","nativeSrc":"2098:66:21","nodeType":"YulLiteral","src":"2098:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"},"variables":[{"name":"_4","nativeSrc":"2092:2:21","nodeType":"YulTypedName","src":"2092:2:21","type":""}]},{"nativeSrc":"2173:23:21","nodeType":"YulVariableDeclaration","src":"2173:23:21","value":{"arguments":[{"kind":"number","nativeSrc":"2193:2:21","nodeType":"YulLiteral","src":"2193:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"2187:5:21","nodeType":"YulIdentifier","src":"2187:5:21"},"nativeSrc":"2187:9:21","nodeType":"YulFunctionCall","src":"2187:9:21"},"variables":[{"name":"memPtr","nativeSrc":"2177:6:21","nodeType":"YulTypedName","src":"2177:6:21","type":""}]},{"nativeSrc":"2205:71:21","nodeType":"YulVariableDeclaration","src":"2205:71:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"2227:6:21","nodeType":"YulIdentifier","src":"2227:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"2251:2:21","nodeType":"YulIdentifier","src":"2251:2:21"},{"kind":"number","nativeSrc":"2255:4:21","nodeType":"YulLiteral","src":"2255:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2247:3:21","nodeType":"YulIdentifier","src":"2247:3:21"},"nativeSrc":"2247:13:21","nodeType":"YulFunctionCall","src":"2247:13:21"},{"name":"_4","nativeSrc":"2262:2:21","nodeType":"YulIdentifier","src":"2262:2:21"}],"functionName":{"name":"and","nativeSrc":"2243:3:21","nodeType":"YulIdentifier","src":"2243:3:21"},"nativeSrc":"2243:22:21","nodeType":"YulFunctionCall","src":"2243:22:21"},{"kind":"number","nativeSrc":"2267:2:21","nodeType":"YulLiteral","src":"2267:2:21","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"2239:3:21","nodeType":"YulIdentifier","src":"2239:3:21"},"nativeSrc":"2239:31:21","nodeType":"YulFunctionCall","src":"2239:31:21"},{"name":"_4","nativeSrc":"2272:2:21","nodeType":"YulIdentifier","src":"2272:2:21"}],"functionName":{"name":"and","nativeSrc":"2235:3:21","nodeType":"YulIdentifier","src":"2235:3:21"},"nativeSrc":"2235:40:21","nodeType":"YulFunctionCall","src":"2235:40:21"}],"functionName":{"name":"add","nativeSrc":"2223:3:21","nodeType":"YulIdentifier","src":"2223:3:21"},"nativeSrc":"2223:53:21","nodeType":"YulFunctionCall","src":"2223:53:21"},"variables":[{"name":"newFreePtr","nativeSrc":"2209:10:21","nodeType":"YulTypedName","src":"2209:10:21","type":""}]},{"body":{"nativeSrc":"2335:22:21","nodeType":"YulBlock","src":"2335:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2337:16:21","nodeType":"YulIdentifier","src":"2337:16:21"},"nativeSrc":"2337:18:21","nodeType":"YulFunctionCall","src":"2337:18:21"},"nativeSrc":"2337:18:21","nodeType":"YulExpressionStatement","src":"2337:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"2294:10:21","nodeType":"YulIdentifier","src":"2294:10:21"},{"name":"_1","nativeSrc":"2306:2:21","nodeType":"YulIdentifier","src":"2306:2:21"}],"functionName":{"name":"gt","nativeSrc":"2291:2:21","nodeType":"YulIdentifier","src":"2291:2:21"},"nativeSrc":"2291:18:21","nodeType":"YulFunctionCall","src":"2291:18:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"2314:10:21","nodeType":"YulIdentifier","src":"2314:10:21"},{"name":"memPtr","nativeSrc":"2326:6:21","nodeType":"YulIdentifier","src":"2326:6:21"}],"functionName":{"name":"lt","nativeSrc":"2311:2:21","nodeType":"YulIdentifier","src":"2311:2:21"},"nativeSrc":"2311:22:21","nodeType":"YulFunctionCall","src":"2311:22:21"}],"functionName":{"name":"or","nativeSrc":"2288:2:21","nodeType":"YulIdentifier","src":"2288:2:21"},"nativeSrc":"2288:46:21","nodeType":"YulFunctionCall","src":"2288:46:21"},"nativeSrc":"2285:72:21","nodeType":"YulIf","src":"2285:72:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2373:2:21","nodeType":"YulLiteral","src":"2373:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2377:10:21","nodeType":"YulIdentifier","src":"2377:10:21"}],"functionName":{"name":"mstore","nativeSrc":"2366:6:21","nodeType":"YulIdentifier","src":"2366:6:21"},"nativeSrc":"2366:22:21","nodeType":"YulFunctionCall","src":"2366:22:21"},"nativeSrc":"2366:22:21","nodeType":"YulExpressionStatement","src":"2366:22:21"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"2404:6:21","nodeType":"YulIdentifier","src":"2404:6:21"},{"name":"_3","nativeSrc":"2412:2:21","nodeType":"YulIdentifier","src":"2412:2:21"}],"functionName":{"name":"mstore","nativeSrc":"2397:6:21","nodeType":"YulIdentifier","src":"2397:6:21"},"nativeSrc":"2397:18:21","nodeType":"YulFunctionCall","src":"2397:18:21"},"nativeSrc":"2397:18:21","nodeType":"YulExpressionStatement","src":"2397:18:21"},{"body":{"nativeSrc":"2461:16:21","nodeType":"YulBlock","src":"2461:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2470:1:21","nodeType":"YulLiteral","src":"2470:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2473:1:21","nodeType":"YulLiteral","src":"2473:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2463:6:21","nodeType":"YulIdentifier","src":"2463:6:21"},"nativeSrc":"2463:12:21","nodeType":"YulFunctionCall","src":"2463:12:21"},"nativeSrc":"2463:12:21","nodeType":"YulExpressionStatement","src":"2463:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2438:2:21","nodeType":"YulIdentifier","src":"2438:2:21"},{"name":"_3","nativeSrc":"2442:2:21","nodeType":"YulIdentifier","src":"2442:2:21"}],"functionName":{"name":"add","nativeSrc":"2434:3:21","nodeType":"YulIdentifier","src":"2434:3:21"},"nativeSrc":"2434:11:21","nodeType":"YulFunctionCall","src":"2434:11:21"},{"kind":"number","nativeSrc":"2447:2:21","nodeType":"YulLiteral","src":"2447:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2430:3:21","nodeType":"YulIdentifier","src":"2430:3:21"},"nativeSrc":"2430:20:21","nodeType":"YulFunctionCall","src":"2430:20:21"},{"name":"dataEnd","nativeSrc":"2452:7:21","nodeType":"YulIdentifier","src":"2452:7:21"}],"functionName":{"name":"gt","nativeSrc":"2427:2:21","nodeType":"YulIdentifier","src":"2427:2:21"},"nativeSrc":"2427:33:21","nodeType":"YulFunctionCall","src":"2427:33:21"},"nativeSrc":"2424:53:21","nodeType":"YulIf","src":"2424:53:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2503:6:21","nodeType":"YulIdentifier","src":"2503:6:21"},{"kind":"number","nativeSrc":"2511:2:21","nodeType":"YulLiteral","src":"2511:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2499:3:21","nodeType":"YulIdentifier","src":"2499:3:21"},"nativeSrc":"2499:15:21","nodeType":"YulFunctionCall","src":"2499:15:21"},{"arguments":[{"name":"_2","nativeSrc":"2520:2:21","nodeType":"YulIdentifier","src":"2520:2:21"},{"kind":"number","nativeSrc":"2524:2:21","nodeType":"YulLiteral","src":"2524:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2516:3:21","nodeType":"YulIdentifier","src":"2516:3:21"},"nativeSrc":"2516:11:21","nodeType":"YulFunctionCall","src":"2516:11:21"},{"name":"_3","nativeSrc":"2529:2:21","nodeType":"YulIdentifier","src":"2529:2:21"}],"functionName":{"name":"calldatacopy","nativeSrc":"2486:12:21","nodeType":"YulIdentifier","src":"2486:12:21"},"nativeSrc":"2486:46:21","nodeType":"YulFunctionCall","src":"2486:46:21"},"nativeSrc":"2486:46:21","nodeType":"YulExpressionStatement","src":"2486:46:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2556:6:21","nodeType":"YulIdentifier","src":"2556:6:21"},{"name":"_3","nativeSrc":"2564:2:21","nodeType":"YulIdentifier","src":"2564:2:21"}],"functionName":{"name":"add","nativeSrc":"2552:3:21","nodeType":"YulIdentifier","src":"2552:3:21"},"nativeSrc":"2552:15:21","nodeType":"YulFunctionCall","src":"2552:15:21"},{"kind":"number","nativeSrc":"2569:2:21","nodeType":"YulLiteral","src":"2569:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2548:3:21","nodeType":"YulIdentifier","src":"2548:3:21"},"nativeSrc":"2548:24:21","nodeType":"YulFunctionCall","src":"2548:24:21"},{"kind":"number","nativeSrc":"2574:1:21","nodeType":"YulLiteral","src":"2574:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2541:6:21","nodeType":"YulIdentifier","src":"2541:6:21"},"nativeSrc":"2541:35:21","nodeType":"YulFunctionCall","src":"2541:35:21"},"nativeSrc":"2541:35:21","nodeType":"YulExpressionStatement","src":"2541:35:21"},{"nativeSrc":"2585:16:21","nodeType":"YulAssignment","src":"2585:16:21","value":{"name":"memPtr","nativeSrc":"2595:6:21","nodeType":"YulIdentifier","src":"2595:6:21"},"variableNames":[{"name":"value1","nativeSrc":"2585:6:21","nodeType":"YulIdentifier","src":"2585:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"1492:1115:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1546:9:21","nodeType":"YulTypedName","src":"1546:9:21","type":""},{"name":"dataEnd","nativeSrc":"1557:7:21","nodeType":"YulTypedName","src":"1557:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1569:6:21","nodeType":"YulTypedName","src":"1569:6:21","type":""},{"name":"value1","nativeSrc":"1577:6:21","nodeType":"YulTypedName","src":"1577:6:21","type":""}],"src":"1492:1115:21"},{"body":{"nativeSrc":"2713:76:21","nodeType":"YulBlock","src":"2713:76:21","statements":[{"nativeSrc":"2723:26:21","nodeType":"YulAssignment","src":"2723:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2735:9:21","nodeType":"YulIdentifier","src":"2735:9:21"},{"kind":"number","nativeSrc":"2746:2:21","nodeType":"YulLiteral","src":"2746:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2731:3:21","nodeType":"YulIdentifier","src":"2731:3:21"},"nativeSrc":"2731:18:21","nodeType":"YulFunctionCall","src":"2731:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2723:4:21","nodeType":"YulIdentifier","src":"2723:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2765:9:21","nodeType":"YulIdentifier","src":"2765:9:21"},{"name":"value0","nativeSrc":"2776:6:21","nodeType":"YulIdentifier","src":"2776:6:21"}],"functionName":{"name":"mstore","nativeSrc":"2758:6:21","nodeType":"YulIdentifier","src":"2758:6:21"},"nativeSrc":"2758:25:21","nodeType":"YulFunctionCall","src":"2758:25:21"},"nativeSrc":"2758:25:21","nodeType":"YulExpressionStatement","src":"2758:25:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"2612:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2682:9:21","nodeType":"YulTypedName","src":"2682:9:21","type":""},{"name":"value0","nativeSrc":"2693:6:21","nodeType":"YulTypedName","src":"2693:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2704:4:21","nodeType":"YulTypedName","src":"2704:4:21","type":""}],"src":"2612:177:21"},{"body":{"nativeSrc":"2881:301:21","nodeType":"YulBlock","src":"2881:301:21","statements":[{"body":{"nativeSrc":"2927:16:21","nodeType":"YulBlock","src":"2927:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2936:1:21","nodeType":"YulLiteral","src":"2936:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2939:1:21","nodeType":"YulLiteral","src":"2939:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2929:6:21","nodeType":"YulIdentifier","src":"2929:6:21"},"nativeSrc":"2929:12:21","nodeType":"YulFunctionCall","src":"2929:12:21"},"nativeSrc":"2929:12:21","nodeType":"YulExpressionStatement","src":"2929:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2902:7:21","nodeType":"YulIdentifier","src":"2902:7:21"},{"name":"headStart","nativeSrc":"2911:9:21","nodeType":"YulIdentifier","src":"2911:9:21"}],"functionName":{"name":"sub","nativeSrc":"2898:3:21","nodeType":"YulIdentifier","src":"2898:3:21"},"nativeSrc":"2898:23:21","nodeType":"YulFunctionCall","src":"2898:23:21"},{"kind":"number","nativeSrc":"2923:2:21","nodeType":"YulLiteral","src":"2923:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2894:3:21","nodeType":"YulIdentifier","src":"2894:3:21"},"nativeSrc":"2894:32:21","nodeType":"YulFunctionCall","src":"2894:32:21"},"nativeSrc":"2891:52:21","nodeType":"YulIf","src":"2891:52:21"},{"nativeSrc":"2952:36:21","nodeType":"YulVariableDeclaration","src":"2952:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2978:9:21","nodeType":"YulIdentifier","src":"2978:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"2965:12:21","nodeType":"YulIdentifier","src":"2965:12:21"},"nativeSrc":"2965:23:21","nodeType":"YulFunctionCall","src":"2965:23:21"},"variables":[{"name":"value","nativeSrc":"2956:5:21","nodeType":"YulTypedName","src":"2956:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3022:5:21","nodeType":"YulIdentifier","src":"3022:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2997:24:21","nodeType":"YulIdentifier","src":"2997:24:21"},"nativeSrc":"2997:31:21","nodeType":"YulFunctionCall","src":"2997:31:21"},"nativeSrc":"2997:31:21","nodeType":"YulExpressionStatement","src":"2997:31:21"},{"nativeSrc":"3037:15:21","nodeType":"YulAssignment","src":"3037:15:21","value":{"name":"value","nativeSrc":"3047:5:21","nodeType":"YulIdentifier","src":"3047:5:21"},"variableNames":[{"name":"value0","nativeSrc":"3037:6:21","nodeType":"YulIdentifier","src":"3037:6:21"}]},{"nativeSrc":"3061:47:21","nodeType":"YulVariableDeclaration","src":"3061:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3093:9:21","nodeType":"YulIdentifier","src":"3093:9:21"},{"kind":"number","nativeSrc":"3104:2:21","nodeType":"YulLiteral","src":"3104:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3089:3:21","nodeType":"YulIdentifier","src":"3089:3:21"},"nativeSrc":"3089:18:21","nodeType":"YulFunctionCall","src":"3089:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"3076:12:21","nodeType":"YulIdentifier","src":"3076:12:21"},"nativeSrc":"3076:32:21","nodeType":"YulFunctionCall","src":"3076:32:21"},"variables":[{"name":"value_1","nativeSrc":"3065:7:21","nodeType":"YulTypedName","src":"3065:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"3142:7:21","nodeType":"YulIdentifier","src":"3142:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3117:24:21","nodeType":"YulIdentifier","src":"3117:24:21"},"nativeSrc":"3117:33:21","nodeType":"YulFunctionCall","src":"3117:33:21"},"nativeSrc":"3117:33:21","nodeType":"YulExpressionStatement","src":"3117:33:21"},{"nativeSrc":"3159:17:21","nodeType":"YulAssignment","src":"3159:17:21","value":{"name":"value_1","nativeSrc":"3169:7:21","nodeType":"YulIdentifier","src":"3169:7:21"},"variableNames":[{"name":"value1","nativeSrc":"3159:6:21","nodeType":"YulIdentifier","src":"3159:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"2794:388:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2839:9:21","nodeType":"YulTypedName","src":"2839:9:21","type":""},{"name":"dataEnd","nativeSrc":"2850:7:21","nodeType":"YulTypedName","src":"2850:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2862:6:21","nodeType":"YulTypedName","src":"2862:6:21","type":""},{"name":"value1","nativeSrc":"2870:6:21","nodeType":"YulTypedName","src":"2870:6:21","type":""}],"src":"2794:388:21"},{"body":{"nativeSrc":"3288:125:21","nodeType":"YulBlock","src":"3288:125:21","statements":[{"nativeSrc":"3298:26:21","nodeType":"YulAssignment","src":"3298:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3310:9:21","nodeType":"YulIdentifier","src":"3310:9:21"},{"kind":"number","nativeSrc":"3321:2:21","nodeType":"YulLiteral","src":"3321:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3306:3:21","nodeType":"YulIdentifier","src":"3306:3:21"},"nativeSrc":"3306:18:21","nodeType":"YulFunctionCall","src":"3306:18:21"},"variableNames":[{"name":"tail","nativeSrc":"3298:4:21","nodeType":"YulIdentifier","src":"3298:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3340:9:21","nodeType":"YulIdentifier","src":"3340:9:21"},{"arguments":[{"name":"value0","nativeSrc":"3355:6:21","nodeType":"YulIdentifier","src":"3355:6:21"},{"kind":"number","nativeSrc":"3363:42:21","nodeType":"YulLiteral","src":"3363:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3351:3:21","nodeType":"YulIdentifier","src":"3351:3:21"},"nativeSrc":"3351:55:21","nodeType":"YulFunctionCall","src":"3351:55:21"}],"functionName":{"name":"mstore","nativeSrc":"3333:6:21","nodeType":"YulIdentifier","src":"3333:6:21"},"nativeSrc":"3333:74:21","nodeType":"YulFunctionCall","src":"3333:74:21"},"nativeSrc":"3333:74:21","nodeType":"YulExpressionStatement","src":"3333:74:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3187:226:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3257:9:21","nodeType":"YulTypedName","src":"3257:9:21","type":""},{"name":"value0","nativeSrc":"3268:6:21","nodeType":"YulTypedName","src":"3268:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3279:4:21","nodeType":"YulTypedName","src":"3279:4:21","type":""}],"src":"3187:226:21"},{"body":{"nativeSrc":"3545:125:21","nodeType":"YulBlock","src":"3545:125:21","statements":[{"nativeSrc":"3555:26:21","nodeType":"YulAssignment","src":"3555:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3567:9:21","nodeType":"YulIdentifier","src":"3567:9:21"},{"kind":"number","nativeSrc":"3578:2:21","nodeType":"YulLiteral","src":"3578:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3563:3:21","nodeType":"YulIdentifier","src":"3563:3:21"},"nativeSrc":"3563:18:21","nodeType":"YulFunctionCall","src":"3563:18:21"},"variableNames":[{"name":"tail","nativeSrc":"3555:4:21","nodeType":"YulIdentifier","src":"3555:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3597:9:21","nodeType":"YulIdentifier","src":"3597:9:21"},{"arguments":[{"name":"value0","nativeSrc":"3612:6:21","nodeType":"YulIdentifier","src":"3612:6:21"},{"kind":"number","nativeSrc":"3620:42:21","nodeType":"YulLiteral","src":"3620:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3608:3:21","nodeType":"YulIdentifier","src":"3608:3:21"},"nativeSrc":"3608:55:21","nodeType":"YulFunctionCall","src":"3608:55:21"}],"functionName":{"name":"mstore","nativeSrc":"3590:6:21","nodeType":"YulIdentifier","src":"3590:6:21"},"nativeSrc":"3590:74:21","nodeType":"YulFunctionCall","src":"3590:74:21"},"nativeSrc":"3590:74:21","nodeType":"YulExpressionStatement","src":"3590:74:21"}]},"name":"abi_encode_tuple_t_contract$_IBaluniV1Registry_$2787__to_t_address__fromStack_reversed","nativeSrc":"3418:252:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3514:9:21","nodeType":"YulTypedName","src":"3514:9:21","type":""},{"name":"value0","nativeSrc":"3525:6:21","nodeType":"YulTypedName","src":"3525:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3536:4:21","nodeType":"YulTypedName","src":"3536:4:21","type":""}],"src":"3418:252:21"},{"body":{"nativeSrc":"3761:341:21","nodeType":"YulBlock","src":"3761:341:21","statements":[{"body":{"nativeSrc":"3807:16:21","nodeType":"YulBlock","src":"3807:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3816:1:21","nodeType":"YulLiteral","src":"3816:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3819:1:21","nodeType":"YulLiteral","src":"3819:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3809:6:21","nodeType":"YulIdentifier","src":"3809:6:21"},"nativeSrc":"3809:12:21","nodeType":"YulFunctionCall","src":"3809:12:21"},"nativeSrc":"3809:12:21","nodeType":"YulExpressionStatement","src":"3809:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3782:7:21","nodeType":"YulIdentifier","src":"3782:7:21"},{"name":"headStart","nativeSrc":"3791:9:21","nodeType":"YulIdentifier","src":"3791:9:21"}],"functionName":{"name":"sub","nativeSrc":"3778:3:21","nodeType":"YulIdentifier","src":"3778:3:21"},"nativeSrc":"3778:23:21","nodeType":"YulFunctionCall","src":"3778:23:21"},{"kind":"number","nativeSrc":"3803:2:21","nodeType":"YulLiteral","src":"3803:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3774:3:21","nodeType":"YulIdentifier","src":"3774:3:21"},"nativeSrc":"3774:32:21","nodeType":"YulFunctionCall","src":"3774:32:21"},"nativeSrc":"3771:52:21","nodeType":"YulIf","src":"3771:52:21"},{"nativeSrc":"3832:36:21","nodeType":"YulVariableDeclaration","src":"3832:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3858:9:21","nodeType":"YulIdentifier","src":"3858:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"3845:12:21","nodeType":"YulIdentifier","src":"3845:12:21"},"nativeSrc":"3845:23:21","nodeType":"YulFunctionCall","src":"3845:23:21"},"variables":[{"name":"value","nativeSrc":"3836:5:21","nodeType":"YulTypedName","src":"3836:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3902:5:21","nodeType":"YulIdentifier","src":"3902:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3877:24:21","nodeType":"YulIdentifier","src":"3877:24:21"},"nativeSrc":"3877:31:21","nodeType":"YulFunctionCall","src":"3877:31:21"},"nativeSrc":"3877:31:21","nodeType":"YulExpressionStatement","src":"3877:31:21"},{"nativeSrc":"3917:15:21","nodeType":"YulAssignment","src":"3917:15:21","value":{"name":"value","nativeSrc":"3927:5:21","nodeType":"YulIdentifier","src":"3927:5:21"},"variableNames":[{"name":"value0","nativeSrc":"3917:6:21","nodeType":"YulIdentifier","src":"3917:6:21"}]},{"nativeSrc":"3941:47:21","nodeType":"YulVariableDeclaration","src":"3941:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3973:9:21","nodeType":"YulIdentifier","src":"3973:9:21"},{"kind":"number","nativeSrc":"3984:2:21","nodeType":"YulLiteral","src":"3984:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3969:3:21","nodeType":"YulIdentifier","src":"3969:3:21"},"nativeSrc":"3969:18:21","nodeType":"YulFunctionCall","src":"3969:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"3956:12:21","nodeType":"YulIdentifier","src":"3956:12:21"},"nativeSrc":"3956:32:21","nodeType":"YulFunctionCall","src":"3956:32:21"},"variables":[{"name":"value_1","nativeSrc":"3945:7:21","nodeType":"YulTypedName","src":"3945:7:21","type":""}]},{"body":{"nativeSrc":"4054:16:21","nodeType":"YulBlock","src":"4054:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4063:1:21","nodeType":"YulLiteral","src":"4063:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4066:1:21","nodeType":"YulLiteral","src":"4066:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4056:6:21","nodeType":"YulIdentifier","src":"4056:6:21"},"nativeSrc":"4056:12:21","nodeType":"YulFunctionCall","src":"4056:12:21"},"nativeSrc":"4056:12:21","nodeType":"YulExpressionStatement","src":"4056:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nativeSrc":"4010:7:21","nodeType":"YulIdentifier","src":"4010:7:21"},{"arguments":[{"name":"value_1","nativeSrc":"4023:7:21","nodeType":"YulIdentifier","src":"4023:7:21"},{"kind":"number","nativeSrc":"4032:18:21","nodeType":"YulLiteral","src":"4032:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"4019:3:21","nodeType":"YulIdentifier","src":"4019:3:21"},"nativeSrc":"4019:32:21","nodeType":"YulFunctionCall","src":"4019:32:21"}],"functionName":{"name":"eq","nativeSrc":"4007:2:21","nodeType":"YulIdentifier","src":"4007:2:21"},"nativeSrc":"4007:45:21","nodeType":"YulFunctionCall","src":"4007:45:21"}],"functionName":{"name":"iszero","nativeSrc":"4000:6:21","nodeType":"YulIdentifier","src":"4000:6:21"},"nativeSrc":"4000:53:21","nodeType":"YulFunctionCall","src":"4000:53:21"},"nativeSrc":"3997:73:21","nodeType":"YulIf","src":"3997:73:21"},{"nativeSrc":"4079:17:21","nodeType":"YulAssignment","src":"4079:17:21","value":{"name":"value_1","nativeSrc":"4089:7:21","nodeType":"YulIdentifier","src":"4089:7:21"},"variableNames":[{"name":"value1","nativeSrc":"4079:6:21","nodeType":"YulIdentifier","src":"4079:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint64","nativeSrc":"3675:427:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3719:9:21","nodeType":"YulTypedName","src":"3719:9:21","type":""},{"name":"dataEnd","nativeSrc":"3730:7:21","nodeType":"YulTypedName","src":"3730:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3742:6:21","nodeType":"YulTypedName","src":"3742:6:21","type":""},{"name":"value1","nativeSrc":"3750:6:21","nodeType":"YulTypedName","src":"3750:6:21","type":""}],"src":"3675:427:21"},{"body":{"nativeSrc":"4177:110:21","nodeType":"YulBlock","src":"4177:110:21","statements":[{"body":{"nativeSrc":"4223:16:21","nodeType":"YulBlock","src":"4223:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4232:1:21","nodeType":"YulLiteral","src":"4232:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4235:1:21","nodeType":"YulLiteral","src":"4235:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4225:6:21","nodeType":"YulIdentifier","src":"4225:6:21"},"nativeSrc":"4225:12:21","nodeType":"YulFunctionCall","src":"4225:12:21"},"nativeSrc":"4225:12:21","nodeType":"YulExpressionStatement","src":"4225:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4198:7:21","nodeType":"YulIdentifier","src":"4198:7:21"},{"name":"headStart","nativeSrc":"4207:9:21","nodeType":"YulIdentifier","src":"4207:9:21"}],"functionName":{"name":"sub","nativeSrc":"4194:3:21","nodeType":"YulIdentifier","src":"4194:3:21"},"nativeSrc":"4194:23:21","nodeType":"YulFunctionCall","src":"4194:23:21"},{"kind":"number","nativeSrc":"4219:2:21","nodeType":"YulLiteral","src":"4219:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4190:3:21","nodeType":"YulIdentifier","src":"4190:3:21"},"nativeSrc":"4190:32:21","nodeType":"YulFunctionCall","src":"4190:32:21"},"nativeSrc":"4187:52:21","nodeType":"YulIf","src":"4187:52:21"},{"nativeSrc":"4248:33:21","nodeType":"YulAssignment","src":"4248:33:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4271:9:21","nodeType":"YulIdentifier","src":"4271:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"4258:12:21","nodeType":"YulIdentifier","src":"4258:12:21"},"nativeSrc":"4258:23:21","nodeType":"YulFunctionCall","src":"4258:23:21"},"variableNames":[{"name":"value0","nativeSrc":"4248:6:21","nodeType":"YulIdentifier","src":"4248:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"4107:180:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4143:9:21","nodeType":"YulTypedName","src":"4143:9:21","type":""},{"name":"dataEnd","nativeSrc":"4154:7:21","nodeType":"YulTypedName","src":"4154:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4166:6:21","nodeType":"YulTypedName","src":"4166:6:21","type":""}],"src":"4107:180:21"},{"body":{"nativeSrc":"4413:356:21","nodeType":"YulBlock","src":"4413:356:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4430:9:21","nodeType":"YulIdentifier","src":"4430:9:21"},{"kind":"number","nativeSrc":"4441:2:21","nodeType":"YulLiteral","src":"4441:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4423:6:21","nodeType":"YulIdentifier","src":"4423:6:21"},"nativeSrc":"4423:21:21","nodeType":"YulFunctionCall","src":"4423:21:21"},"nativeSrc":"4423:21:21","nodeType":"YulExpressionStatement","src":"4423:21:21"},{"nativeSrc":"4453:27:21","nodeType":"YulVariableDeclaration","src":"4453:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"4473:6:21","nodeType":"YulIdentifier","src":"4473:6:21"}],"functionName":{"name":"mload","nativeSrc":"4467:5:21","nodeType":"YulIdentifier","src":"4467:5:21"},"nativeSrc":"4467:13:21","nodeType":"YulFunctionCall","src":"4467:13:21"},"variables":[{"name":"length","nativeSrc":"4457:6:21","nodeType":"YulTypedName","src":"4457:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4500:9:21","nodeType":"YulIdentifier","src":"4500:9:21"},{"kind":"number","nativeSrc":"4511:2:21","nodeType":"YulLiteral","src":"4511:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4496:3:21","nodeType":"YulIdentifier","src":"4496:3:21"},"nativeSrc":"4496:18:21","nodeType":"YulFunctionCall","src":"4496:18:21"},{"name":"length","nativeSrc":"4516:6:21","nodeType":"YulIdentifier","src":"4516:6:21"}],"functionName":{"name":"mstore","nativeSrc":"4489:6:21","nodeType":"YulIdentifier","src":"4489:6:21"},"nativeSrc":"4489:34:21","nodeType":"YulFunctionCall","src":"4489:34:21"},"nativeSrc":"4489:34:21","nodeType":"YulExpressionStatement","src":"4489:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4542:9:21","nodeType":"YulIdentifier","src":"4542:9:21"},{"kind":"number","nativeSrc":"4553:2:21","nodeType":"YulLiteral","src":"4553:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4538:3:21","nodeType":"YulIdentifier","src":"4538:3:21"},"nativeSrc":"4538:18:21","nodeType":"YulFunctionCall","src":"4538:18:21"},{"arguments":[{"name":"value0","nativeSrc":"4562:6:21","nodeType":"YulIdentifier","src":"4562:6:21"},{"kind":"number","nativeSrc":"4570:2:21","nodeType":"YulLiteral","src":"4570:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4558:3:21","nodeType":"YulIdentifier","src":"4558:3:21"},"nativeSrc":"4558:15:21","nodeType":"YulFunctionCall","src":"4558:15:21"},{"name":"length","nativeSrc":"4575:6:21","nodeType":"YulIdentifier","src":"4575:6:21"}],"functionName":{"name":"mcopy","nativeSrc":"4532:5:21","nodeType":"YulIdentifier","src":"4532:5:21"},"nativeSrc":"4532:50:21","nodeType":"YulFunctionCall","src":"4532:50:21"},"nativeSrc":"4532:50:21","nodeType":"YulExpressionStatement","src":"4532:50:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4606:9:21","nodeType":"YulIdentifier","src":"4606:9:21"},{"name":"length","nativeSrc":"4617:6:21","nodeType":"YulIdentifier","src":"4617:6:21"}],"functionName":{"name":"add","nativeSrc":"4602:3:21","nodeType":"YulIdentifier","src":"4602:3:21"},"nativeSrc":"4602:22:21","nodeType":"YulFunctionCall","src":"4602:22:21"},{"kind":"number","nativeSrc":"4626:2:21","nodeType":"YulLiteral","src":"4626:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4598:3:21","nodeType":"YulIdentifier","src":"4598:3:21"},"nativeSrc":"4598:31:21","nodeType":"YulFunctionCall","src":"4598:31:21"},{"kind":"number","nativeSrc":"4631:1:21","nodeType":"YulLiteral","src":"4631:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4591:6:21","nodeType":"YulIdentifier","src":"4591:6:21"},"nativeSrc":"4591:42:21","nodeType":"YulFunctionCall","src":"4591:42:21"},"nativeSrc":"4591:42:21","nodeType":"YulExpressionStatement","src":"4591:42:21"},{"nativeSrc":"4642:121:21","nodeType":"YulAssignment","src":"4642:121:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4658:9:21","nodeType":"YulIdentifier","src":"4658:9:21"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4677:6:21","nodeType":"YulIdentifier","src":"4677:6:21"},{"kind":"number","nativeSrc":"4685:2:21","nodeType":"YulLiteral","src":"4685:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4673:3:21","nodeType":"YulIdentifier","src":"4673:3:21"},"nativeSrc":"4673:15:21","nodeType":"YulFunctionCall","src":"4673:15:21"},{"kind":"number","nativeSrc":"4690:66:21","nodeType":"YulLiteral","src":"4690:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"4669:3:21","nodeType":"YulIdentifier","src":"4669:3:21"},"nativeSrc":"4669:88:21","nodeType":"YulFunctionCall","src":"4669:88:21"}],"functionName":{"name":"add","nativeSrc":"4654:3:21","nodeType":"YulIdentifier","src":"4654:3:21"},"nativeSrc":"4654:104:21","nodeType":"YulFunctionCall","src":"4654:104:21"},{"kind":"number","nativeSrc":"4760:2:21","nodeType":"YulLiteral","src":"4760:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4650:3:21","nodeType":"YulIdentifier","src":"4650:3:21"},"nativeSrc":"4650:113:21","nodeType":"YulFunctionCall","src":"4650:113:21"},"variableNames":[{"name":"tail","nativeSrc":"4642:4:21","nodeType":"YulIdentifier","src":"4642:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4292:477:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4382:9:21","nodeType":"YulTypedName","src":"4382:9:21","type":""},{"name":"value0","nativeSrc":"4393:6:21","nodeType":"YulTypedName","src":"4393:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4404:4:21","nodeType":"YulTypedName","src":"4404:4:21","type":""}],"src":"4292:477:21"},{"body":{"nativeSrc":"4875:76:21","nodeType":"YulBlock","src":"4875:76:21","statements":[{"nativeSrc":"4885:26:21","nodeType":"YulAssignment","src":"4885:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4897:9:21","nodeType":"YulIdentifier","src":"4897:9:21"},{"kind":"number","nativeSrc":"4908:2:21","nodeType":"YulLiteral","src":"4908:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4893:3:21","nodeType":"YulIdentifier","src":"4893:3:21"},"nativeSrc":"4893:18:21","nodeType":"YulFunctionCall","src":"4893:18:21"},"variableNames":[{"name":"tail","nativeSrc":"4885:4:21","nodeType":"YulIdentifier","src":"4885:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4927:9:21","nodeType":"YulIdentifier","src":"4927:9:21"},{"name":"value0","nativeSrc":"4938:6:21","nodeType":"YulIdentifier","src":"4938:6:21"}],"functionName":{"name":"mstore","nativeSrc":"4920:6:21","nodeType":"YulIdentifier","src":"4920:6:21"},"nativeSrc":"4920:25:21","nodeType":"YulFunctionCall","src":"4920:25:21"},"nativeSrc":"4920:25:21","nodeType":"YulExpressionStatement","src":"4920:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4774:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4844:9:21","nodeType":"YulTypedName","src":"4844:9:21","type":""},{"name":"value0","nativeSrc":"4855:6:21","nodeType":"YulTypedName","src":"4855:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4866:4:21","nodeType":"YulTypedName","src":"4866:4:21","type":""}],"src":"4774:177:21"},{"body":{"nativeSrc":"4988:152:21","nodeType":"YulBlock","src":"4988:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5005:1:21","nodeType":"YulLiteral","src":"5005:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5008:77:21","nodeType":"YulLiteral","src":"5008:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"4998:6:21","nodeType":"YulIdentifier","src":"4998:6:21"},"nativeSrc":"4998:88:21","nodeType":"YulFunctionCall","src":"4998:88:21"},"nativeSrc":"4998:88:21","nodeType":"YulExpressionStatement","src":"4998:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5102:1:21","nodeType":"YulLiteral","src":"5102:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"5105:4:21","nodeType":"YulLiteral","src":"5105:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"5095:6:21","nodeType":"YulIdentifier","src":"5095:6:21"},"nativeSrc":"5095:15:21","nodeType":"YulFunctionCall","src":"5095:15:21"},"nativeSrc":"5095:15:21","nodeType":"YulExpressionStatement","src":"5095:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5126:1:21","nodeType":"YulLiteral","src":"5126:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5129:4:21","nodeType":"YulLiteral","src":"5129:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5119:6:21","nodeType":"YulIdentifier","src":"5119:6:21"},"nativeSrc":"5119:15:21","nodeType":"YulFunctionCall","src":"5119:15:21"},"nativeSrc":"5119:15:21","nodeType":"YulExpressionStatement","src":"5119:15:21"}]},"name":"panic_error_0x32","nativeSrc":"4956:184:21","nodeType":"YulFunctionDefinition","src":"4956:184:21"},{"body":{"nativeSrc":"5226:170:21","nodeType":"YulBlock","src":"5226:170:21","statements":[{"body":{"nativeSrc":"5272:16:21","nodeType":"YulBlock","src":"5272:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5281:1:21","nodeType":"YulLiteral","src":"5281:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5284:1:21","nodeType":"YulLiteral","src":"5284:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5274:6:21","nodeType":"YulIdentifier","src":"5274:6:21"},"nativeSrc":"5274:12:21","nodeType":"YulFunctionCall","src":"5274:12:21"},"nativeSrc":"5274:12:21","nodeType":"YulExpressionStatement","src":"5274:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5247:7:21","nodeType":"YulIdentifier","src":"5247:7:21"},{"name":"headStart","nativeSrc":"5256:9:21","nodeType":"YulIdentifier","src":"5256:9:21"}],"functionName":{"name":"sub","nativeSrc":"5243:3:21","nodeType":"YulIdentifier","src":"5243:3:21"},"nativeSrc":"5243:23:21","nodeType":"YulFunctionCall","src":"5243:23:21"},{"kind":"number","nativeSrc":"5268:2:21","nodeType":"YulLiteral","src":"5268:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5239:3:21","nodeType":"YulIdentifier","src":"5239:3:21"},"nativeSrc":"5239:32:21","nodeType":"YulFunctionCall","src":"5239:32:21"},"nativeSrc":"5236:52:21","nodeType":"YulIf","src":"5236:52:21"},{"nativeSrc":"5297:29:21","nodeType":"YulVariableDeclaration","src":"5297:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5316:9:21","nodeType":"YulIdentifier","src":"5316:9:21"}],"functionName":{"name":"mload","nativeSrc":"5310:5:21","nodeType":"YulIdentifier","src":"5310:5:21"},"nativeSrc":"5310:16:21","nodeType":"YulFunctionCall","src":"5310:16:21"},"variables":[{"name":"value","nativeSrc":"5301:5:21","nodeType":"YulTypedName","src":"5301:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5360:5:21","nodeType":"YulIdentifier","src":"5360:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5335:24:21","nodeType":"YulIdentifier","src":"5335:24:21"},"nativeSrc":"5335:31:21","nodeType":"YulFunctionCall","src":"5335:31:21"},"nativeSrc":"5335:31:21","nodeType":"YulExpressionStatement","src":"5335:31:21"},{"nativeSrc":"5375:15:21","nodeType":"YulAssignment","src":"5375:15:21","value":{"name":"value","nativeSrc":"5385:5:21","nodeType":"YulIdentifier","src":"5385:5:21"},"variableNames":[{"name":"value0","nativeSrc":"5375:6:21","nodeType":"YulIdentifier","src":"5375:6:21"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"5145:251:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5192:9:21","nodeType":"YulTypedName","src":"5192:9:21","type":""},{"name":"dataEnd","nativeSrc":"5203:7:21","nodeType":"YulTypedName","src":"5203:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5215:6:21","nodeType":"YulTypedName","src":"5215:6:21","type":""}],"src":"5145:251:21"},{"body":{"nativeSrc":"5433:152:21","nodeType":"YulBlock","src":"5433:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5450:1:21","nodeType":"YulLiteral","src":"5450:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5453:77:21","nodeType":"YulLiteral","src":"5453:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5443:6:21","nodeType":"YulIdentifier","src":"5443:6:21"},"nativeSrc":"5443:88:21","nodeType":"YulFunctionCall","src":"5443:88:21"},"nativeSrc":"5443:88:21","nodeType":"YulExpressionStatement","src":"5443:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5547:1:21","nodeType":"YulLiteral","src":"5547:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"5550:4:21","nodeType":"YulLiteral","src":"5550:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"5540:6:21","nodeType":"YulIdentifier","src":"5540:6:21"},"nativeSrc":"5540:15:21","nodeType":"YulFunctionCall","src":"5540:15:21"},"nativeSrc":"5540:15:21","nodeType":"YulExpressionStatement","src":"5540:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5571:1:21","nodeType":"YulLiteral","src":"5571:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5574:4:21","nodeType":"YulLiteral","src":"5574:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5564:6:21","nodeType":"YulIdentifier","src":"5564:6:21"},"nativeSrc":"5564:15:21","nodeType":"YulFunctionCall","src":"5564:15:21"},"nativeSrc":"5564:15:21","nodeType":"YulExpressionStatement","src":"5564:15:21"}]},"name":"panic_error_0x11","nativeSrc":"5401:184:21","nodeType":"YulFunctionDefinition","src":"5401:184:21"},{"body":{"nativeSrc":"5637:148:21","nodeType":"YulBlock","src":"5637:148:21","statements":[{"body":{"nativeSrc":"5728:22:21","nodeType":"YulBlock","src":"5728:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5730:16:21","nodeType":"YulIdentifier","src":"5730:16:21"},"nativeSrc":"5730:18:21","nodeType":"YulFunctionCall","src":"5730:18:21"},"nativeSrc":"5730:18:21","nodeType":"YulExpressionStatement","src":"5730:18:21"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"5653:5:21","nodeType":"YulIdentifier","src":"5653:5:21"},{"kind":"number","nativeSrc":"5660:66:21","nodeType":"YulLiteral","src":"5660:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"5650:2:21","nodeType":"YulIdentifier","src":"5650:2:21"},"nativeSrc":"5650:77:21","nodeType":"YulFunctionCall","src":"5650:77:21"},"nativeSrc":"5647:103:21","nodeType":"YulIf","src":"5647:103:21"},{"nativeSrc":"5759:20:21","nodeType":"YulAssignment","src":"5759:20:21","value":{"arguments":[{"name":"value","nativeSrc":"5770:5:21","nodeType":"YulIdentifier","src":"5770:5:21"},{"kind":"number","nativeSrc":"5777:1:21","nodeType":"YulLiteral","src":"5777:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5766:3:21","nodeType":"YulIdentifier","src":"5766:3:21"},"nativeSrc":"5766:13:21","nodeType":"YulFunctionCall","src":"5766:13:21"},"variableNames":[{"name":"ret","nativeSrc":"5759:3:21","nodeType":"YulIdentifier","src":"5759:3:21"}]}]},"name":"increment_t_uint256","nativeSrc":"5590:195:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5619:5:21","nodeType":"YulTypedName","src":"5619:5:21","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5629:3:21","nodeType":"YulTypedName","src":"5629:3:21","type":""}],"src":"5590:195:21"},{"body":{"nativeSrc":"5964:233:21","nodeType":"YulBlock","src":"5964:233:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5981:9:21","nodeType":"YulIdentifier","src":"5981:9:21"},{"kind":"number","nativeSrc":"5992:2:21","nodeType":"YulLiteral","src":"5992:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5974:6:21","nodeType":"YulIdentifier","src":"5974:6:21"},"nativeSrc":"5974:21:21","nodeType":"YulFunctionCall","src":"5974:21:21"},"nativeSrc":"5974:21:21","nodeType":"YulExpressionStatement","src":"5974:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6015:9:21","nodeType":"YulIdentifier","src":"6015:9:21"},{"kind":"number","nativeSrc":"6026:2:21","nodeType":"YulLiteral","src":"6026:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6011:3:21","nodeType":"YulIdentifier","src":"6011:3:21"},"nativeSrc":"6011:18:21","nodeType":"YulFunctionCall","src":"6011:18:21"},{"kind":"number","nativeSrc":"6031:2:21","nodeType":"YulLiteral","src":"6031:2:21","type":"","value":"43"}],"functionName":{"name":"mstore","nativeSrc":"6004:6:21","nodeType":"YulIdentifier","src":"6004:6:21"},"nativeSrc":"6004:30:21","nodeType":"YulFunctionCall","src":"6004:30:21"},"nativeSrc":"6004:30:21","nodeType":"YulExpressionStatement","src":"6004:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6054:9:21","nodeType":"YulIdentifier","src":"6054:9:21"},{"kind":"number","nativeSrc":"6065:2:21","nodeType":"YulLiteral","src":"6065:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6050:3:21","nodeType":"YulIdentifier","src":"6050:3:21"},"nativeSrc":"6050:18:21","nodeType":"YulFunctionCall","src":"6050:18:21"},{"hexValue":"42616c756e6956315661756c74466163746f72793a20494e56414c49445f7661","kind":"string","nativeSrc":"6070:34:21","nodeType":"YulLiteral","src":"6070:34:21","type":"","value":"BaluniV1VaultFactory: INVALID_va"}],"functionName":{"name":"mstore","nativeSrc":"6043:6:21","nodeType":"YulIdentifier","src":"6043:6:21"},"nativeSrc":"6043:62:21","nodeType":"YulFunctionCall","src":"6043:62:21"},"nativeSrc":"6043:62:21","nodeType":"YulExpressionStatement","src":"6043:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6125:9:21","nodeType":"YulIdentifier","src":"6125:9:21"},{"kind":"number","nativeSrc":"6136:2:21","nodeType":"YulLiteral","src":"6136:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6121:3:21","nodeType":"YulIdentifier","src":"6121:3:21"},"nativeSrc":"6121:18:21","nodeType":"YulFunctionCall","src":"6121:18:21"},{"hexValue":"756c745f41444452455353","kind":"string","nativeSrc":"6141:13:21","nodeType":"YulLiteral","src":"6141:13:21","type":"","value":"ult_ADDRESS"}],"functionName":{"name":"mstore","nativeSrc":"6114:6:21","nodeType":"YulIdentifier","src":"6114:6:21"},"nativeSrc":"6114:41:21","nodeType":"YulFunctionCall","src":"6114:41:21"},"nativeSrc":"6114:41:21","nodeType":"YulExpressionStatement","src":"6114:41:21"},{"nativeSrc":"6164:27:21","nodeType":"YulAssignment","src":"6164:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6176:9:21","nodeType":"YulIdentifier","src":"6176:9:21"},{"kind":"number","nativeSrc":"6187:3:21","nodeType":"YulLiteral","src":"6187:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6172:3:21","nodeType":"YulIdentifier","src":"6172:3:21"},"nativeSrc":"6172:19:21","nodeType":"YulFunctionCall","src":"6172:19:21"},"variableNames":[{"name":"tail","nativeSrc":"6164:4:21","nodeType":"YulIdentifier","src":"6164:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7510511c72bfe0cca9302d42db6cb14a9ff3bc6071674c6a36f4798a31a6f98d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5790:407:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5941:9:21","nodeType":"YulTypedName","src":"5941:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5955:4:21","nodeType":"YulTypedName","src":"5955:4:21","type":""}],"src":"5790:407:21"},{"body":{"nativeSrc":"6301:101:21","nodeType":"YulBlock","src":"6301:101:21","statements":[{"nativeSrc":"6311:26:21","nodeType":"YulAssignment","src":"6311:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6323:9:21","nodeType":"YulIdentifier","src":"6323:9:21"},{"kind":"number","nativeSrc":"6334:2:21","nodeType":"YulLiteral","src":"6334:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6319:3:21","nodeType":"YulIdentifier","src":"6319:3:21"},"nativeSrc":"6319:18:21","nodeType":"YulFunctionCall","src":"6319:18:21"},"variableNames":[{"name":"tail","nativeSrc":"6311:4:21","nodeType":"YulIdentifier","src":"6311:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6353:9:21","nodeType":"YulIdentifier","src":"6353:9:21"},{"arguments":[{"name":"value0","nativeSrc":"6368:6:21","nodeType":"YulIdentifier","src":"6368:6:21"},{"kind":"number","nativeSrc":"6376:18:21","nodeType":"YulLiteral","src":"6376:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6364:3:21","nodeType":"YulIdentifier","src":"6364:3:21"},"nativeSrc":"6364:31:21","nodeType":"YulFunctionCall","src":"6364:31:21"}],"functionName":{"name":"mstore","nativeSrc":"6346:6:21","nodeType":"YulIdentifier","src":"6346:6:21"},"nativeSrc":"6346:50:21","nodeType":"YulFunctionCall","src":"6346:50:21"},"nativeSrc":"6346:50:21","nodeType":"YulExpressionStatement","src":"6346:50:21"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"6202:200:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6270:9:21","nodeType":"YulTypedName","src":"6270:9:21","type":""},{"name":"value0","nativeSrc":"6281:6:21","nodeType":"YulTypedName","src":"6281:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6292:4:21","nodeType":"YulTypedName","src":"6292:4:21","type":""}],"src":"6202:200:21"},{"body":{"nativeSrc":"6515:101:21","nodeType":"YulBlock","src":"6515:101:21","statements":[{"nativeSrc":"6525:26:21","nodeType":"YulAssignment","src":"6525:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6537:9:21","nodeType":"YulIdentifier","src":"6537:9:21"},{"kind":"number","nativeSrc":"6548:2:21","nodeType":"YulLiteral","src":"6548:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6533:3:21","nodeType":"YulIdentifier","src":"6533:3:21"},"nativeSrc":"6533:18:21","nodeType":"YulFunctionCall","src":"6533:18:21"},"variableNames":[{"name":"tail","nativeSrc":"6525:4:21","nodeType":"YulIdentifier","src":"6525:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6567:9:21","nodeType":"YulIdentifier","src":"6567:9:21"},{"arguments":[{"name":"value0","nativeSrc":"6582:6:21","nodeType":"YulIdentifier","src":"6582:6:21"},{"kind":"number","nativeSrc":"6590:18:21","nodeType":"YulLiteral","src":"6590:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6578:3:21","nodeType":"YulIdentifier","src":"6578:3:21"},"nativeSrc":"6578:31:21","nodeType":"YulFunctionCall","src":"6578:31:21"}],"functionName":{"name":"mstore","nativeSrc":"6560:6:21","nodeType":"YulIdentifier","src":"6560:6:21"},"nativeSrc":"6560:50:21","nodeType":"YulFunctionCall","src":"6560:50:21"},"nativeSrc":"6560:50:21","nodeType":"YulExpressionStatement","src":"6560:50:21"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"6407:209:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6484:9:21","nodeType":"YulTypedName","src":"6484:9:21","type":""},{"name":"value0","nativeSrc":"6495:6:21","nodeType":"YulTypedName","src":"6495:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6506:4:21","nodeType":"YulTypedName","src":"6506:4:21","type":""}],"src":"6407:209:21"},{"body":{"nativeSrc":"6670:79:21","nodeType":"YulBlock","src":"6670:79:21","statements":[{"nativeSrc":"6680:17:21","nodeType":"YulAssignment","src":"6680:17:21","value":{"arguments":[{"name":"x","nativeSrc":"6692:1:21","nodeType":"YulIdentifier","src":"6692:1:21"},{"name":"y","nativeSrc":"6695:1:21","nodeType":"YulIdentifier","src":"6695:1:21"}],"functionName":{"name":"sub","nativeSrc":"6688:3:21","nodeType":"YulIdentifier","src":"6688:3:21"},"nativeSrc":"6688:9:21","nodeType":"YulFunctionCall","src":"6688:9:21"},"variableNames":[{"name":"diff","nativeSrc":"6680:4:21","nodeType":"YulIdentifier","src":"6680:4:21"}]},{"body":{"nativeSrc":"6721:22:21","nodeType":"YulBlock","src":"6721:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6723:16:21","nodeType":"YulIdentifier","src":"6723:16:21"},"nativeSrc":"6723:18:21","nodeType":"YulFunctionCall","src":"6723:18:21"},"nativeSrc":"6723:18:21","nodeType":"YulExpressionStatement","src":"6723:18:21"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"6712:4:21","nodeType":"YulIdentifier","src":"6712:4:21"},{"name":"x","nativeSrc":"6718:1:21","nodeType":"YulIdentifier","src":"6718:1:21"}],"functionName":{"name":"gt","nativeSrc":"6709:2:21","nodeType":"YulIdentifier","src":"6709:2:21"},"nativeSrc":"6709:11:21","nodeType":"YulFunctionCall","src":"6709:11:21"},"nativeSrc":"6706:37:21","nodeType":"YulIf","src":"6706:37:21"}]},"name":"checked_sub_t_uint256","nativeSrc":"6621:128:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6652:1:21","nodeType":"YulTypedName","src":"6652:1:21","type":""},{"name":"y","nativeSrc":"6655:1:21","nodeType":"YulTypedName","src":"6655:1:21","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"6661:4:21","nodeType":"YulTypedName","src":"6661:4:21","type":""}],"src":"6621:128:21"},{"body":{"nativeSrc":"6786:152:21","nodeType":"YulBlock","src":"6786:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6803:1:21","nodeType":"YulLiteral","src":"6803:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6806:77:21","nodeType":"YulLiteral","src":"6806:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6796:6:21","nodeType":"YulIdentifier","src":"6796:6:21"},"nativeSrc":"6796:88:21","nodeType":"YulFunctionCall","src":"6796:88:21"},"nativeSrc":"6796:88:21","nodeType":"YulExpressionStatement","src":"6796:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6900:1:21","nodeType":"YulLiteral","src":"6900:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"6903:4:21","nodeType":"YulLiteral","src":"6903:4:21","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"6893:6:21","nodeType":"YulIdentifier","src":"6893:6:21"},"nativeSrc":"6893:15:21","nodeType":"YulFunctionCall","src":"6893:15:21"},"nativeSrc":"6893:15:21","nodeType":"YulExpressionStatement","src":"6893:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6924:1:21","nodeType":"YulLiteral","src":"6924:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6927:4:21","nodeType":"YulLiteral","src":"6927:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6917:6:21","nodeType":"YulIdentifier","src":"6917:6:21"},"nativeSrc":"6917:15:21","nodeType":"YulFunctionCall","src":"6917:15:21"},"nativeSrc":"6917:15:21","nodeType":"YulExpressionStatement","src":"6917:15:21"}]},"name":"panic_error_0x31","nativeSrc":"6754:184:21","nodeType":"YulFunctionDefinition","src":"6754:184:21"},{"body":{"nativeSrc":"7024:103:21","nodeType":"YulBlock","src":"7024:103:21","statements":[{"body":{"nativeSrc":"7070:16:21","nodeType":"YulBlock","src":"7070:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7079:1:21","nodeType":"YulLiteral","src":"7079:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7082:1:21","nodeType":"YulLiteral","src":"7082:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7072:6:21","nodeType":"YulIdentifier","src":"7072:6:21"},"nativeSrc":"7072:12:21","nodeType":"YulFunctionCall","src":"7072:12:21"},"nativeSrc":"7072:12:21","nodeType":"YulExpressionStatement","src":"7072:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7045:7:21","nodeType":"YulIdentifier","src":"7045:7:21"},{"name":"headStart","nativeSrc":"7054:9:21","nodeType":"YulIdentifier","src":"7054:9:21"}],"functionName":{"name":"sub","nativeSrc":"7041:3:21","nodeType":"YulIdentifier","src":"7041:3:21"},"nativeSrc":"7041:23:21","nodeType":"YulFunctionCall","src":"7041:23:21"},{"kind":"number","nativeSrc":"7066:2:21","nodeType":"YulLiteral","src":"7066:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7037:3:21","nodeType":"YulIdentifier","src":"7037:3:21"},"nativeSrc":"7037:32:21","nodeType":"YulFunctionCall","src":"7037:32:21"},"nativeSrc":"7034:52:21","nodeType":"YulIf","src":"7034:52:21"},{"nativeSrc":"7095:26:21","nodeType":"YulAssignment","src":"7095:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7111:9:21","nodeType":"YulIdentifier","src":"7111:9:21"}],"functionName":{"name":"mload","nativeSrc":"7105:5:21","nodeType":"YulIdentifier","src":"7105:5:21"},"nativeSrc":"7105:16:21","nodeType":"YulFunctionCall","src":"7105:16:21"},"variableNames":[{"name":"value0","nativeSrc":"7095:6:21","nodeType":"YulIdentifier","src":"7095:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"6943:184:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6990:9:21","nodeType":"YulTypedName","src":"6990:9:21","type":""},{"name":"dataEnd","nativeSrc":"7001:7:21","nodeType":"YulTypedName","src":"7001:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7013:6:21","nodeType":"YulTypedName","src":"7013:6:21","type":""}],"src":"6943:184:21"},{"body":{"nativeSrc":"7269:164:21","nodeType":"YulBlock","src":"7269:164:21","statements":[{"nativeSrc":"7279:27:21","nodeType":"YulVariableDeclaration","src":"7279:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"7299:6:21","nodeType":"YulIdentifier","src":"7299:6:21"}],"functionName":{"name":"mload","nativeSrc":"7293:5:21","nodeType":"YulIdentifier","src":"7293:5:21"},"nativeSrc":"7293:13:21","nodeType":"YulFunctionCall","src":"7293:13:21"},"variables":[{"name":"length","nativeSrc":"7283:6:21","nodeType":"YulTypedName","src":"7283:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"7321:3:21","nodeType":"YulIdentifier","src":"7321:3:21"},{"arguments":[{"name":"value0","nativeSrc":"7330:6:21","nodeType":"YulIdentifier","src":"7330:6:21"},{"kind":"number","nativeSrc":"7338:4:21","nodeType":"YulLiteral","src":"7338:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7326:3:21","nodeType":"YulIdentifier","src":"7326:3:21"},"nativeSrc":"7326:17:21","nodeType":"YulFunctionCall","src":"7326:17:21"},{"name":"length","nativeSrc":"7345:6:21","nodeType":"YulIdentifier","src":"7345:6:21"}],"functionName":{"name":"mcopy","nativeSrc":"7315:5:21","nodeType":"YulIdentifier","src":"7315:5:21"},"nativeSrc":"7315:37:21","nodeType":"YulFunctionCall","src":"7315:37:21"},"nativeSrc":"7315:37:21","nodeType":"YulExpressionStatement","src":"7315:37:21"},{"nativeSrc":"7361:26:21","nodeType":"YulVariableDeclaration","src":"7361:26:21","value":{"arguments":[{"name":"pos","nativeSrc":"7375:3:21","nodeType":"YulIdentifier","src":"7375:3:21"},{"name":"length","nativeSrc":"7380:6:21","nodeType":"YulIdentifier","src":"7380:6:21"}],"functionName":{"name":"add","nativeSrc":"7371:3:21","nodeType":"YulIdentifier","src":"7371:3:21"},"nativeSrc":"7371:16:21","nodeType":"YulFunctionCall","src":"7371:16:21"},"variables":[{"name":"_1","nativeSrc":"7365:2:21","nodeType":"YulTypedName","src":"7365:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nativeSrc":"7403:2:21","nodeType":"YulIdentifier","src":"7403:2:21"},{"kind":"number","nativeSrc":"7407:1:21","nodeType":"YulLiteral","src":"7407:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7396:6:21","nodeType":"YulIdentifier","src":"7396:6:21"},"nativeSrc":"7396:13:21","nodeType":"YulFunctionCall","src":"7396:13:21"},"nativeSrc":"7396:13:21","nodeType":"YulExpressionStatement","src":"7396:13:21"},{"nativeSrc":"7418:9:21","nodeType":"YulAssignment","src":"7418:9:21","value":{"name":"_1","nativeSrc":"7425:2:21","nodeType":"YulIdentifier","src":"7425:2:21"},"variableNames":[{"name":"end","nativeSrc":"7418:3:21","nodeType":"YulIdentifier","src":"7418:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"7132:301:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7245:3:21","nodeType":"YulTypedName","src":"7245:3:21","type":""},{"name":"value0","nativeSrc":"7250:6:21","nodeType":"YulTypedName","src":"7250:6:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7261:3:21","nodeType":"YulTypedName","src":"7261:3:21","type":""}],"src":"7132:301:21"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IBaluniV1Registry_$2787__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffffffffffffffff))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_7510511c72bfe0cca9302d42db6cb14a9ff3bc6071674c6a36f4798a31a6f98d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"BaluniV1VaultFactory: INVALID_va\")\n        mstore(add(headStart, 96), \"ult_ADDRESS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"468":[{"length":32,"start":4587},{"length":32,"start":4628},{"length":32,"start":5065}]},"linkReferences":{},"object":"60806040526004361061013d575f3560e01c80638f2248bc116100bb578063bbd7edc511610071578063ca9d67c811610057578063ca9d67c8146103b5578063ceb68c23146103d4578063f2fde38b146103f3575f80fd5b8063bbd7edc514610357578063c4d66de814610396575f80fd5b806397331bf9116100a157806397331bf9146102db578063ad3cb1cc146102ef578063b9b658db14610344575f80fd5b80638f2248bc1461029d5780639094a91e146102bc575f80fd5b806352d1902d11610110578063715018a6116100f6578063715018a61461022e5780637b103999146102425780638da5cb5b14610261575f80fd5b806352d1902d146101d5578063592717af146101f7575f80fd5b806302b3537d146101415780631089405214610175578063256b5a02146101a15780634f1ef286146101c2575b5f80fd5b34801561014c575f80fd5b5061016061015b36600461178e565b610412565b60405190151581526020015b60405180910390f35b348015610180575f80fd5b5061019461018f36600461178e565b61046c565b60405161016c91906117a9565b3480156101ac575f80fd5b506101c06101bb36600461178e565b61067b565b005b6101c06101d0366004611809565b6108b3565b3480156101e0575f80fd5b506101e96108d2565b60405190815260200161016c565b348015610202575f80fd5b506102166102113660046118c7565b610900565b6040516001600160a01b03909116815260200161016c565b348015610239575f80fd5b506101c061092e565b34801561024d575f80fd5b50600154610216906001600160a01b031681565b34801561026c575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610216565b3480156102a8575f80fd5b506101c06102b73660046118fe565b610941565b3480156102c7575f80fd5b506102166102d6366004611936565b610a77565b3480156102e6575f80fd5b50610194610a9e565b3480156102fa575f80fd5b506103376040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60405161016c919061194d565b34801561034f575f80fd5b505f546101e9565b348015610362575f80fd5b506102166103713660046118c7565b600260209081525f92835260408084209091529082529020546001600160a01b031681565b3480156103a1575f80fd5b506101c06103b036600461178e565b610afd565b3480156103c0575f80fd5b506101946103cf36600461178e565b610c7f565b3480156103df575f80fd5b506101c06103ee36600461178e565b610dc6565b3480156103fe575f80fd5b506101c061040d36600461178e565b611116565b5f805b5f5481101561046457826001600160a01b03165f828154811061043a5761043a611982565b5f918252602090912001546001600160a01b03160361045c5750600192915050565b600101610415565b505f92915050565b5f80546060919067ffffffffffffffff81111561048b5761048b6117f5565b6040519080825280602002602001820160405280156104b4578160200160208202803683370190505b5090505f805b5f548110156105d5575f8082815481106104d6576104d6611982565b5f918252602080832090910154604080517fcdf456e100000000000000000000000000000000000000000000000000000000815290516001600160a01b039092169450849263cdf456e1926004808401938290030181865afa15801561053e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105629190611996565b9050866001600160a01b0316816001600160a01b0316036105bc578185858151811061059057610590611982565b6001600160a01b0390921660209283029190910190910152836105b2816119c5565b94505050506105d5565b845184036105cb5750506105d5565b50506001016104ba565b505f8167ffffffffffffffff8111156105f0576105f06117f5565b604051908082528060200260200182016040528015610619578160200160208202803683370190505b5090505f5b828110156106725783818151811061063857610638611982565b602002602001015182828151811061065257610652611982565b6001600160a01b039092166020928302919091019091015260010161061e565b50949350505050565b61068361116c565b6001600160a01b03811661071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f42616c756e6956315661756c74466163746f72793a20494e56414c49445f766160448201527f756c745f4144445245535300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5f80546001810182558180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416908117909155604080517fcdf456e1000000000000000000000000000000000000000000000000000000008152905163cdf456e1916004808201926020929091908290030181865afa1580156107c7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107eb9190611996565b90505f826001600160a01b031663fdf262b76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561082a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061084e9190611996565b6001600160a01b039283165f818152600260208181526040808420958816845294815284832080549790981673ffffffffffffffffffffffffffffffffffffffff19978816811790985590815283822092825291909152208054909216909217905550565b6108bb6111e0565b6108c4826112b0565b6108ce82826112b8565b5050565b5f6108db6113be565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b6001600160a01b038083165f9081526002602090815260408083208585168452909152902054165b92915050565b61093661116c565b61093f5f611420565b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805482919068010000000000000000900460ff168061098f5750805467ffffffffffffffff808416911610155b156109c6576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80546801000000000000000067ffffffffffffffff84167fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000090921682171782556001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038716179055815468ff0000000000000000191682556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a150505050565b5f8181548110610a85575f80fd5b5f918252602090912001546001600160a01b0316905081565b60605f805480602002602001604051908101604052809291908181526020018280548015610af357602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610ad5575b5050505050905090565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f81158015610b475750825b90505f8267ffffffffffffffff166001148015610b635750303b155b905081158015610b71575080155b15610ba8576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610bf357845468ff00000000000000001916680100000000000000001785555b610bfb61149d565b610c04336114a5565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0388161790558315610c7757845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b60408051600280825260608083018452925f929190602083019080368337019050509050826001600160a01b031663cdf456e16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cdf573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d039190611996565b815f81518110610d1557610d15611982565b60200260200101906001600160a01b031690816001600160a01b031681525050826001600160a01b031663fdf262b76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d71573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d959190611996565b81600181518110610da857610da8611982565b6001600160a01b039092166020928302919091019091015292915050565b610dce61116c565b5f5b5f548110156108ce57816001600160a01b03165f8281548110610df557610df5611982565b5f918252602090912001546001600160a01b03160361110e575f8054610e1d906001906119dd565b81548110610e2d57610e2d611982565b5f91825260208220015481546001600160a01b03909116919083908110610e5657610e56611982565b905f5260205f20015f6101000a8154816001600160a01b0302191690836001600160a01b031602179055505f60025f846001600160a01b031663fdf262b76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ec1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ee59190611996565b6001600160a01b03166001600160a01b031681526020019081526020015f205f846001600160a01b031663cdf456e16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f41573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f659190611996565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6101000a8154816001600160a01b0302191690836001600160a01b031602179055505f60025f846001600160a01b031663cdf456e16040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fe7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061100b9190611996565b6001600160a01b03166001600160a01b031681526020019081526020015f205f846001600160a01b031663fdf262b76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611067573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061108b9190611996565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6101000a8154816001600160a01b0302191690836001600160a01b031602179055505f8054806110dd576110dd6119f0565b5f8281526020902081015f19908101805473ffffffffffffffffffffffffffffffffffffffff191690550190555050565b600101610dd0565b61111e61116c565b6001600160a01b038116611160576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152602401610715565b61116981611420565b50565b3361119e7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b03161461093f576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610715565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061127957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661126d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614155b1561093f576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61116961116c565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611312575060408051601f3d908101601f1916820190925261130f91810190611a04565b60015b611353576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610715565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146113af576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610715565b6113b983836114b6565b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461093f576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805473ffffffffffffffffffffffffffffffffffffffff1981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b61093f61150b565b6114ad61150b565b61116981611572565b6114bf8261157a565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115611503576113b98282611616565b6108ce611688565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff1661093f576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61111e61150b565b806001600160a01b03163b5f036115c8576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401610715565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516116329190611a1b565b5f60405180830381855af49150503d805f811461166a576040519150601f19603f3d011682016040523d82523d5f602084013e61166f565b606091505b509150915061167f8583836116c0565b95945050505050565b341561093f576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060826116d5576116d082611738565b611731565b81511580156116ec57506001600160a01b0384163b155b1561172e576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401610715565b50805b9392505050565b8051156117485780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0381168114611169575f80fd5b5f6020828403121561179e575f80fd5b81356117318161177a565b602080825282518282018190525f9190848201906040850190845b818110156117e95783516001600160a01b0316835292840192918401916001016117c4565b50909695505050505050565b634e487b7160e01b5f52604160045260245ffd5b5f806040838503121561181a575f80fd5b82356118258161177a565b9150602083013567ffffffffffffffff80821115611841575f80fd5b818501915085601f830112611854575f80fd5b813581811115611866576118666117f5565b604051601f8201601f19908116603f0116810190838211818310171561188e5761188e6117f5565b816040528281528860208487010111156118a6575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f80604083850312156118d8575f80fd5b82356118e38161177a565b915060208301356118f38161177a565b809150509250929050565b5f806040838503121561190f575f80fd5b823561191a8161177a565b9150602083013567ffffffffffffffff811681146118f3575f80fd5b5f60208284031215611946575f80fd5b5035919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b634e487b7160e01b5f52603260045260245ffd5b5f602082840312156119a6575f80fd5b81516117318161177a565b634e487b7160e01b5f52601160045260245ffd5b5f5f1982036119d6576119d66119b1565b5060010190565b81810381811115610928576109286119b1565b634e487b7160e01b5f52603160045260245ffd5b5f60208284031215611a14575f80fd5b5051919050565b5f82518060208501845e5f92019182525091905056fea264697066735822122093641ff08b049c1358d5522efb64481d3fdc67741d0a998d8f56c8e1ba121b5264736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F2248BC GT PUSH2 0xBB JUMPI DUP1 PUSH4 0xBBD7EDC5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCA9D67C8 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xCA9D67C8 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xCEB68C23 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBBD7EDC5 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x396 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97331BF9 GT PUSH2 0xA1 JUMPI DUP1 PUSH4 0x97331BF9 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xB9B658DB EQ PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x9094A91E EQ PUSH2 0x2BC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0xF6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x261 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x592717AF EQ PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B3537D EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x10894052 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x256B5A02 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1C2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x160 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x17A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x92E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x216 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x216 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0xA77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0xA9E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x337 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x216 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C7 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x178E JUMP JUMPDEST PUSH2 0xAFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x178E JUMP JUMPDEST PUSH2 0xC7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x3EE CALLDATASIZE PUSH1 0x4 PUSH2 0x178E JUMP JUMPDEST PUSH2 0xDC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x1116 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x464 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x43A JUMPI PUSH2 0x43A PUSH2 0x1982 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x45C JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x415 JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48B JUMPI PUSH2 0x48B PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4B4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x5D5 JUMPI PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x1982 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xCDF456E100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP5 POP DUP5 SWAP3 PUSH4 0xCDF456E1 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x5BC JUMPI DUP2 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x590 JUMPI PUSH2 0x590 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP4 PUSH2 0x5B2 DUP2 PUSH2 0x19C5 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH2 0x5D5 JUMP JUMPDEST DUP5 MLOAD DUP5 SUB PUSH2 0x5CB JUMPI POP POP PUSH2 0x5D5 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x4BA JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5F0 JUMPI PUSH2 0x5F0 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x619 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x672 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x638 JUMPI PUSH2 0x638 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x652 JUMPI PUSH2 0x652 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x61E JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x683 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C756E6956315661756C74466163746F72793A20494E56414C49445F7661 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C745F41444452455353000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE DUP2 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0xCDF456E100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH4 0xCDF456E1 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFDF262B7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84E SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP6 DUP9 AND DUP5 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD SWAP8 SWAP1 SWAP9 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP8 DUP9 AND DUP2 OR SWAP1 SWAP9 SSTORE SWAP1 DUP2 MSTORE DUP4 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 SWAP3 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x8BB PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x8C4 DUP3 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x8CE DUP3 DUP3 PUSH2 0x12B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8DB PUSH2 0x13BE JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x936 PUSH2 0x116C JUMP JUMPDEST PUSH2 0x93F PUSH0 PUSH2 0x1420 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x98F JUMPI POP DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0x9C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 SWAP1 SWAP3 AND DUP3 OR OR DUP3 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE DUP2 SLOAD PUSH9 0xFF0000000000000000 NOT AND DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA85 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAD5 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xB47 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xB63 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB71 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xBF3 JUMPI DUP5 SLOAD PUSH9 0xFF0000000000000000 NOT AND PUSH9 0x10000000000000000 OR DUP6 SSTORE JUMPDEST PUSH2 0xBFB PUSH2 0x149D JUMP JUMPDEST PUSH2 0xC04 CALLER PUSH2 0x14A5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xC77 JUMPI DUP5 SLOAD PUSH9 0xFF0000000000000000 NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCDF456E1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCDF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD03 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xD15 JUMPI PUSH2 0xD15 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFDF262B7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD71 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD95 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xDA8 JUMPI PUSH2 0xDA8 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDCE PUSH2 0x116C JUMP JUMPDEST PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x8CE JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDF5 JUMPI PUSH2 0xDF5 PUSH2 0x1982 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x110E JUMPI PUSH0 DUP1 SLOAD PUSH2 0xE1D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x19DD JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xE2D JUMPI PUSH2 0xE2D PUSH2 0x1982 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xE56 JUMPI PUSH2 0xE56 PUSH2 0x1982 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFDF262B7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEE5 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCDF456E1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF41 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF65 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCDF456E1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFE7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x100B SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFDF262B7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1067 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x108B SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 SLOAD DUP1 PUSH2 0x10DD JUMPI PUSH2 0x10DD PUSH2 0x19F0 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x111E PUSH2 0x116C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1160 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x715 JUMP JUMPDEST PUSH2 0x1169 DUP2 PUSH2 0x1420 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x119E PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x715 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1279 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x126D PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1169 PUSH2 0x116C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1312 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x130F SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A04 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1353 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x715 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x13AF JUMPI PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x715 JUMP JUMPDEST PUSH2 0x13B9 DUP4 DUP4 PUSH2 0x14B6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x93F PUSH2 0x150B JUMP JUMPDEST PUSH2 0x14AD PUSH2 0x150B JUMP JUMPDEST PUSH2 0x1169 DUP2 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x14BF DUP3 PUSH2 0x157A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1503 JUMPI PUSH2 0x13B9 DUP3 DUP3 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x8CE PUSH2 0x1688 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x111E PUSH2 0x150B JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x15C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x715 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1632 SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x166A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x166F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x167F DUP6 DUP4 DUP4 PUSH2 0x16C0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x16D5 JUMPI PUSH2 0x16D0 DUP3 PUSH2 0x1738 JUMP JUMPDEST PUSH2 0x1731 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x16EC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x172E JUMPI PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x715 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1748 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1169 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1731 DUP2 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17E9 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x17C4 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1825 DUP2 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1841 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1854 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1866 JUMPI PUSH2 0x1866 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x188E JUMPI PUSH2 0x188E PUSH2 0x17F5 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x18A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18E3 DUP2 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x18F3 DUP2 PUSH2 0x177A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x190F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x191A DUP2 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x18F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1946 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1731 DUP2 PUSH2 0x177A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 NOT DUP3 SUB PUSH2 0x19D6 JUMPI PUSH2 0x19D6 PUSH2 0x19B1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x928 JUMPI PUSH2 0x928 PUSH2 0x19B1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 PUSH5 0x1FF08B049C SGT PC 0xD5 MSTORE 0x2E 0xFB PUSH5 0x481D3FDC67 PUSH21 0x1D0A998D8F56C8E1BA121B5264736F6C6343000819 STOP CALLER ","sourceMap":"1795:4181:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5160:253;;;;;;;;;;-1:-1:-1;5160:253:19;;;;;:::i;:::-;;:::i;:::-;;;590:14:21;;583:22;565:41;;553:2;538:18;5160:253:19;;;;;;;;4361:791;;;;;;;;;;-1:-1:-1;4361:791:19;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2550:465::-;;;;;;;;;;-1:-1:-1;2550:465:19;;;;;:::i;:::-;;:::i;:::-;;4158:214:2;;;;;;:::i;:::-;;:::i;3705:134::-;;;;;;;;;;;;;:::i;:::-;;;2758:25:21;;;2746:2;2731:18;3705:134:2;2612:177:21;4208:145:19;;;;;;;;;;-1:-1:-1;4208:145:19;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3351:55:21;;;3333:74;;3321:2;3306:18;4208:145:19;3187:226:21;3155:101:0;;;;;;;;;;;;;:::i;1925:33:19:-;;;;;;;;;;-1:-1:-1;1925:33:19;;;;-1:-1:-1;;;;;1925:33:19;;;2441:144:0;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;2303:147:19;;;;;;;;;;-1:-1:-1;2303:147:19;;;;;:::i;:::-;;:::i;1890:26::-;;;;;;;;;;-1:-1:-1;1890:26:19;;;;;:::i;:::-;;:::i;3148:100::-;;;;;;;;;;;;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3379:100:19:-;;;;;;;;;;-1:-1:-1;3428:7:19;3455:16;3379:100;;1967:63;;;;;;;;;;-1:-1:-1;1967:63:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1967:63:19;;;2107:188;;;;;;;;;;-1:-1:-1;2107:188:19;;;;;:::i;:::-;;:::i;3659:304::-;;;;;;;;;;-1:-1:-1;3659:304:19;;;;;:::i;:::-;;:::i;5421:552::-;;;;;;;;;;-1:-1:-1;5421:552:19;;;;;:::i;:::-;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;5160:253:19:-;5219:4;;5236:147;5260:9;:16;5256:20;;5236:147;;;5318:6;-1:-1:-1;;;;;5302:22:19;:9;5312:1;5302:12;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5302:12:19;:22;5298:74;;-1:-1:-1;5352:4:19;;5160:253;-1:-1:-1;;5160:253:19:o;5298:74::-;5278:3;;5236:147;;;-1:-1:-1;5400:5:19;;5160:253;-1:-1:-1;;5160:253:19:o;4361:791::-;4454:23;4494:16;;4425;;4454:23;4480:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4480:31:19;;4454:57;;4522:13;4557:9;4552:414;4576:9;:16;4572:20;;4552:414;;;4614:23;4658:9;4668:1;4658:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;4702:17;;;;;;;;-1:-1:-1;;;;;4658:12:19;;;;-1:-1:-1;4658:12:19;;4702:15;;:17;;;;;;;;;;4658:12;4702:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4686:33;;4749:5;-1:-1:-1;;;;;4740:14:19;:5;-1:-1:-1;;;;;4740:14:19;;4736:135;;4799:5;4775:6;4782:5;4775:13;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4775:30:19;;;:13;;;;;;;;;;;:30;4824:7;;;;:::i;:::-;;;;4850:5;;;;4736:135;4900:6;:13;4891:5;:22;4887:68;;4934:5;;;;4887:68;-1:-1:-1;;4594:3:19;;4552:414;;;;4978:23;5018:5;5004:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5004:20:19;;4978:46;;5040:9;5035:84;5059:5;5055:1;:9;5035:84;;;5098:6;5105:1;5098:9;;;;;;;;:::i;:::-;;;;;;;5086:6;5093:1;5086:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5086:21:19;;;:9;;;;;;;;;;;:21;5066:3;;5035:84;;;-1:-1:-1;5138:6:19;4361:791;-1:-1:-1;;;;4361:791:19:o;2550:465::-;2334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2628:26:19;::::1;2620:82;;;::::0;::::1;::::0;;5992:2:21;2620:82:19::1;::::0;::::1;5974:21:21::0;6031:2;6011:18;;;6004:30;6070:34;6050:18;;;6043:62;6141:13;6121:18;;;6114:41;6172:19;;2620:82:19::1;;;;;;;;;2713:9;:28:::0;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;2713:28:19::1;-1:-1:-1::0;;;;;2713:28:19;::::1;::::0;;::::1;::::0;;;2772:43:::1;::::0;;;;;;;:41:::1;::::0;:43:::1;::::0;;::::1;::::0;2713:28:::1;::::0;2772:43;;;;;;;;2713:28;2772:43:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2752:63;;2826:18;2865:12;-1:-1:-1::0;;;;;2847:42:19::1;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2904:19:19;;::::1;;::::0;;;:8:::1;:19;::::0;;;;;;;:31;;::::1;::::0;;;;;;;;:46;;;;;::::1;-1:-1:-1::0;;2904:46:19;;::::1;::::0;::::1;::::0;;;2961:20;;;;;;:31;;;;;;;;:46;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;2550:465:19:o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;1327:66:9::1;3705:134:2::0;:::o;4208:145:19:-;-1:-1:-1;;;;;4321:16:19;;;4294:7;4321:16;;;:8;:16;;;;;;;;:24;;;;;;;;;;;;4208:145;;;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2303:147:19:-;8870:21:1;6431:15;;2382:8:19;;8870:21:1;6431:15;;;;;;:44;;-1:-1:-1;6450:14:1;;:25;;;;:14;;:25;;6431:44;6427:105;;;6498:23;;;;;;;;;;;;;;6427:105;6541:24;;6575:22;6541:24;;;6575:22;;;;;;;;;-1:-1:-1;2403:39:19;;-1:-1:-1;;2403:39:19::1;-1:-1:-1::0;;;;;2403:39:19;::::1;;::::0;;6618:23:1;;-1:-1:-1;;6618:23:1;;;6656:20;;6346:50:21;;;6656:20:1;;6334:2:21;6319:18;6656:20:1;;;;;;;6291:392;2303:147:19;;;:::o;1890:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1890:26:19;;-1:-1:-1;1890:26:19;:::o;3148:100::-;3195:16;3231:9;3224:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3224:16:19;;;;;;;;;;;;;;;;;;;;;;;3148:100;:::o;2107:188::-;8870:21:1;4302:15;;;;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4951:18;;;;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;5013:22:1;;;;;4979:67;2176:24:19::1;:22;:24::i;:::-;2211:26;2226:10;2211:14;:26::i;:::-;2248:8;:39:::0;;-1:-1:-1;;2248:39:19::1;-1:-1:-1::0;;;;;2248:39:19;::::1;;::::0;;5066:101:1;;;;5100:23;;-1:-1:-1;;5100:23:1;;;5142:14;;-1:-1:-1;6346:50:21;;5142:14:1;;6334:2:21;6319:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;2107:188:19;:::o;3659:304::-;3782:16;;;3796:1;3782:16;;;3727;3782;;;;;3727;3756:23;;3782:16;3796:1;3782:16;;;;;;;;;;-1:-1:-1;3782:16:19;3756:42;;3839:12;-1:-1:-1;;;;;3821:41:19;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3809:6;3816:1;3809:9;;;;;;;;:::i;:::-;;;;;;:55;-1:-1:-1;;;;;3809:55:19;;;-1:-1:-1;;;;;3809:55:19;;;;;3905:12;-1:-1:-1;;;;;3887:42:19;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3875:6;3882:1;3875:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3875:56:19;;;:9;;;;;;;;;;;:56;3949:6;3659:304;-1:-1:-1;;3659:304:19:o;5421:552::-;2334:13:0;:11;:13::i;:::-;5493:9:19::1;5488:478;5512:9;:16:::0;5508:20;::::1;5488:478;;;5570:6;-1:-1:-1::0;;;;;5554:22:19::1;:9;5564:1;5554:12;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;5554:12:19::1;:22:::0;5550:405:::1;;5612:9;5622:16:::0;;:20:::1;::::0;5641:1:::1;::::0;5622:20:::1;:::i;:::-;5612:31;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;5597:12;;-1:-1:-1;;;;;5612:31:19;;::::1;::::0;;5607:1;;5597:12;::::1;;;;;:::i;:::-;;;;;;;;;:46;;;;;-1:-1:-1::0;;;;;5597:46:19::1;;;;;-1:-1:-1::0;;;;;5597:46:19::1;;;;;;5760:1;5662:8;:48;5689:6;-1:-1:-1::0;;;;;5671:36:19::1;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5662:48:19::1;-1:-1:-1::0;;;;;5662:48:19::1;;;;;;;;;;;;:87;5729:6;-1:-1:-1::0;;;;;5711:35:19::1;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5662:87:19::1;-1:-1:-1::0;;;;;5662:87:19::1;;;;;;;;;;;;;:100;;;;;-1:-1:-1::0;;;;;5662:100:19::1;;;;;-1:-1:-1::0;;;;;5662:100:19::1;;;;;;5879:1;5781:8;:47;5808:6;-1:-1:-1::0;;;;;5790:35:19::1;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5781:47:19::1;-1:-1:-1::0;;;;;5781:47:19::1;;;;;;;;;;;;:87;5847:6;-1:-1:-1::0;;;;;5829:36:19::1;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5781:87:19::1;-1:-1:-1::0;;;;;5781:87:19::1;;;;;;;;;;;;;:100;;;;;-1:-1:-1::0;;;;;5781:100:19::1;;;;;-1:-1:-1::0;;;;;5781:100:19::1;;;;;;5900:9;:15;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;5900:15:19;;;;;-1:-1:-1;;5900:15:19::1;::::0;;;;;4158:214:2;;:::o;5550:405:19:-:1;5530:3;;5488:478;;3405:215:0::0;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;::::1;::::0;;3562:1:::1;3534:31;::::0;::::1;3333:74:21::0;3306:18;;3534:31:0::1;3187:226:21::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2658:162::-;966:10:4;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;;;;966:10:4;2763:40:0;;;3333:74:21;3306:18;;2763:40:0;3187:226:21;4599:312:2;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;1327:66:9;2035:53;-1:-1:-1;;;;;2035:53:9;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;2458:84:19;2334:13:0;:11;:13::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;;;;-1:-1:-1;;;;;3351:55:21;;6513:60:2;;;3333:74:21;3306:18;;6513:60:2;3187:226:21;6147:437:2;1327:66:9;6245:40:2;;6241:120;;6312:34;;;;;;;;2758:25:21;;;2731:18;;6312:34:2;2612:177:21;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;;;;;;;;;;;;;3774:248:0;1313:22;3923:8;;-1:-1:-1;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;2968:67:2:-;6931:20:1;:18;:20::i;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;2779:335:9:-:0;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:9;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:1:-;8870:21;8560:40;;;;;;7146:73;;7191:17;;;;;;;;;;;;;;1980:235:0;6931:20:1;:18;:20::i;2186:281:9:-;2263:17;-1:-1:-1;;;;;2263:29:9;;2296:1;2263:34;2259:119;;2320:47;;;;;-1:-1:-1;;;;;3351:55:21;;2320:47:9;;;3333:74:21;3306:18;;2320:47:9;3187:226:21;2259:119:9;1327:66;2387:73;;-1:-1:-1;;2387:73:9;-1:-1:-1;;;;;2387:73:9;;;;;;;;;;2186:281::o;4106:253:13:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:13;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:13:o;6598:122:9:-;6648:9;:13;6644:70;;6684:19;;;;;;;;;;;;;;4625:582:13;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:13;;;:23;5045:49;5041:119;;;5121:24;;;;;-1:-1:-1;;;;;3351:55:21;;5121:24:13;;;3333:74:21;3306:18;;5121:24:13;3187:226:21;5041:119:13;-1:-1:-1;5180:10:13;4793:408;4625:582;;;;;:::o;5743:516::-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;14:154:21;-1:-1:-1;;;;;93:5:21;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:247;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;340:9;327:23;359:31;384:5;359:31;:::i;617:681::-;788:2;840:21;;;910:13;;813:18;;;932:22;;;759:4;;788:2;1011:15;;;;985:2;970:18;;;759:4;1054:218;1068:6;1065:1;1062:13;1054:218;;;1133:13;;-1:-1:-1;;;;;1129:62:21;1117:75;;1247:15;;;;1212:12;;;;1090:1;1083:9;1054:218;;;-1:-1:-1;1289:3:21;;617:681;-1:-1:-1;;;;;;617:681:21:o;1303:184::-;-1:-1:-1;;;1352:1:21;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1492:1115;1569:6;1577;1630:2;1618:9;1609:7;1605:23;1601:32;1598:52;;;1646:1;1643;1636:12;1598:52;1685:9;1672:23;1704:31;1729:5;1704:31;:::i;:::-;1754:5;-1:-1:-1;1810:2:21;1795:18;;1782:32;1833:18;1863:14;;;1860:34;;;1890:1;1887;1880:12;1860:34;1928:6;1917:9;1913:22;1903:32;;1973:7;1966:4;1962:2;1958:13;1954:27;1944:55;;1995:1;1992;1985:12;1944:55;2031:2;2018:16;2053:2;2049;2046:10;2043:36;;;2059:18;;:::i;:::-;2193:2;2187:9;2255:4;2247:13;;-1:-1:-1;;2243:22:21;;;2267:2;2239:31;2235:40;2223:53;;;2291:18;;;2311:22;;;2288:46;2285:72;;;2337:18;;:::i;:::-;2377:10;2373:2;2366:22;2412:2;2404:6;2397:18;2452:7;2447:2;2442;2438;2434:11;2430:20;2427:33;2424:53;;;2473:1;2470;2463:12;2424:53;2529:2;2524;2520;2516:11;2511:2;2503:6;2499:15;2486:46;2574:1;2569:2;2564;2556:6;2552:15;2548:24;2541:35;2595:6;2585:16;;;;;;;1492:1115;;;;;:::o;2794:388::-;2862:6;2870;2923:2;2911:9;2902:7;2898:23;2894:32;2891:52;;;2939:1;2936;2929:12;2891:52;2978:9;2965:23;2997:31;3022:5;2997:31;:::i;:::-;3047:5;-1:-1:-1;3104:2:21;3089:18;;3076:32;3117:33;3076:32;3117:33;:::i;:::-;3169:7;3159:17;;;2794:388;;;;;:::o;3675:427::-;3742:6;3750;3803:2;3791:9;3782:7;3778:23;3774:32;3771:52;;;3819:1;3816;3809:12;3771:52;3858:9;3845:23;3877:31;3902:5;3877:31;:::i;:::-;3927:5;-1:-1:-1;3984:2:21;3969:18;;3956:32;4032:18;4019:32;;4007:45;;3997:73;;4066:1;4063;4056:12;4107:180;4166:6;4219:2;4207:9;4198:7;4194:23;4190:32;4187:52;;;4235:1;4232;4225:12;4187:52;-1:-1:-1;4258:23:21;;4107:180;-1:-1:-1;4107:180:21:o;4292:477::-;4441:2;4430:9;4423:21;4404:4;4473:6;4467:13;4516:6;4511:2;4500:9;4496:18;4489:34;4575:6;4570:2;4562:6;4558:15;4553:2;4542:9;4538:18;4532:50;4631:1;4626:2;4617:6;4606:9;4602:22;4598:31;4591:42;4760:2;-1:-1:-1;;4685:2:21;4677:6;4673:15;4669:88;4658:9;4654:104;4650:113;4642:121;;;4292:477;;;;:::o;4956:184::-;-1:-1:-1;;;5005:1:21;4998:88;5105:4;5102:1;5095:15;5129:4;5126:1;5119:15;5145:251;5215:6;5268:2;5256:9;5247:7;5243:23;5239:32;5236:52;;;5284:1;5281;5274:12;5236:52;5316:9;5310:16;5335:31;5360:5;5335:31;:::i;5401:184::-;-1:-1:-1;;;5450:1:21;5443:88;5550:4;5547:1;5540:15;5574:4;5571:1;5564:15;5590:195;5629:3;-1:-1:-1;;5653:5:21;5650:77;5647:103;;5730:18;;:::i;:::-;-1:-1:-1;5777:1:21;5766:13;;5590:195::o;6621:128::-;6688:9;;;6709:11;;;6706:37;;;6723:18;;:::i;6754:184::-;-1:-1:-1;;;6803:1:21;6796:88;6903:4;6900:1;6893:15;6927:4;6924:1;6917:15;6943:184;7013:6;7066:2;7054:9;7045:7;7041:23;7037:32;7034:52;;;7082:1;7079;7072:12;7034:52;-1:-1:-1;7105:16:21;;6943:184;-1:-1:-1;6943:184:21:o;7132:301::-;7261:3;7299:6;7293:13;7345:6;7338:4;7330:6;7326:17;7321:3;7315:37;7407:1;7371:16;;7396:13;;;-1:-1:-1;7371:16:21;7132:301;-1:-1:-1;7132:301:21:o"},"gasEstimates":{"creation":{"codeDepositCost":"1351800","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"infinite","addVault(address)":"infinite","allVaults(uint256)":"4678","getAllVaults()":"infinite","getVault(address,address)":"infinite","getVaultAsset(address)":"infinite","getVaultType1ByAssets(address,address)":"infinite","getVaultsByAsset(address)":"infinite","getVaultsCount()":"2379","initialize(address)":"infinite","owner()":"2419","proxiableUUID()":"infinite","registry()":"2403","reinitialize(address,uint64)":"78456","removeVault(address)":"infinite","renounceOwnership()":"infinite","transferOwnership(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite","vaultExist(address)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","addVault(address)":"256b5a02","allVaults(uint256)":"9094a91e","getAllVaults()":"97331bf9","getVault(address,address)":"bbd7edc5","getVaultAsset(address)":"ca9d67c8","getVaultType1ByAssets(address,address)":"592717af","getVaultsByAsset(address)":"10894052","getVaultsCount()":"b9b658db","initialize(address)":"c4d66de8","owner()":"8da5cb5b","proxiableUUID()":"52d1902d","registry()":"7b103999","reinitialize(address,uint64)":"8f2248bc","removeVault(address)":"ceb68c23","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeToAndCall(address,bytes)":"4f1ef286","vaultExist(address)":"02b3537d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"vaultCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"}],\"name\":\"addVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allVaults\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllVaults\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"}],\"name\":\"getVaultAsset\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"}],\"name\":\"getVaultType1ByAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getVaultsByAsset\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_register\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IBaluniV1Registry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_register\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"removeVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"vaultExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"getAllVaults()\":{\"details\":\"Retrieves all the vaults created by the factory.\",\"returns\":{\"_0\":\"An array of vault addresses.\"}},\"getVaultAsset(address)\":{\"details\":\"Retrieves the assets of a specific vault.\",\"params\":{\"vaultAddress\":\"The address of the vault.\"},\"returns\":{\"_0\":\"An array of asset addresses.\"}},\"getVaultType1ByAssets(address,address)\":{\"details\":\"Retrieves the vault address based on the given assets.\",\"params\":{\"asset1\":\"The address of the first asset.\",\"asset2\":\"The address of the second asset.\"},\"returns\":{\"_0\":\"The address of the vault.\"}},\"getVaultsCount()\":{\"details\":\"Retrieves the number of vaults created by the factory.\",\"returns\":{\"_0\":\"The count of vaults.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/BaluniV1DCAVaultRegistry.sol\":\"BaluniV1DCAVaultRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/interfaces/IBaluniV1DCAVault.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1DCAVault {\\r\\n    function baseAsset() external view returns (address);\\r\\n    function quoteAsset() external view returns (address);\\r\\n    function registry() external view returns (address);\\r\\n    function lastDeposit() external view returns (uint256);\\r\\n    function deposit(uint256 amount, address to) external;\\r\\n    function withdraw(uint256 shares, address to) external;\\r\\n    function pause() external;\\r\\n    function unpause() external;\\r\\n    function totalValuation() external view returns (uint256);\\r\\n    function unitPrice() external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xc7fa68680d00716d3c09298f77099f8a8afe02bf6030819587408e5f152eb088\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolRegistry(address _baluniPoolRegistry) external;\\r\\n\\r\\n    function setBaluniVaultRegistry(address _baluniPoolRegistry) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniVaultRegistry() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolRegistry() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x7e73b74ed81791ac27ab8e6f5877d7d6c969567be86125ee3ce2c77825487127\",\"license\":\"GNU AGPLv3\"},\"contracts/registry/BaluniV1DCAVaultRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\nimport '../interfaces/IBaluniV1Registry.sol';\\r\\nimport '../interfaces/IBaluniV1DCAVault.sol';\\r\\n\\r\\ncontract BaluniV1DCAVaultRegistry is Initializable, UUPSUpgradeable, OwnableUpgradeable {\\r\\n    address[] public allVaults;\\r\\n\\r\\n    IBaluniV1Registry public registry;\\r\\n\\r\\n    mapping(address => mapping(address => address)) public getVault;\\r\\n\\r\\n    event vaultCreated(address indexed vault, address[] assets);\\r\\n\\r\\n    function initialize(address _register) public initializer {\\r\\n        __UUPSUpgradeable_init();\\r\\n        __Ownable_init(msg.sender);\\r\\n        registry = IBaluniV1Registry(_register);\\r\\n    }\\r\\n\\r\\n    function reinitialize(address _register, uint64 _version) public reinitializer(_version) {\\r\\n        registry = IBaluniV1Registry(_register);\\r\\n    }\\r\\n\\r\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n    function addVault(address vaultAddress) external onlyOwner {\\r\\n        require(vaultAddress != address(0), 'BaluniV1VaultFactory: INVALID_vault_ADDRESS');\\r\\n        allVaults.push(vaultAddress);\\r\\n        address baseAsset = IBaluniV1DCAVault(vaultAddress).baseAsset();\\r\\n        address quoteAsset = IBaluniV1DCAVault(vaultAddress).quoteAsset();\\r\\n\\r\\n        getVault[baseAsset][quoteAsset] = vaultAddress;\\r\\n        getVault[quoteAsset][baseAsset] = vaultAddress;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves all the vaults created by the factory.\\r\\n     * @return An array of vault addresses.\\r\\n     */\\r\\n    function getAllVaults() external view returns (address[] memory) {\\r\\n        return allVaults;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the number of vaults created by the factory.\\r\\n     * @return The count of vaults.\\r\\n     */\\r\\n    function getVaultsCount() external view returns (uint256) {\\r\\n        return allVaults.length;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the assets of a specific vault.\\r\\n     * @param vaultAddress The address of the vault.\\r\\n     * @return An array of asset addresses.\\r\\n     */\\r\\n    function getVaultAsset(address vaultAddress) external view returns (address[] memory) {\\r\\n        address[] memory assets = new address[](2);\\r\\n        assets[0] = IBaluniV1DCAVault(vaultAddress).baseAsset();\\r\\n        assets[1] = IBaluniV1DCAVault(vaultAddress).quoteAsset();\\r\\n        return assets;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the vault address based on the given assets.\\r\\n     * @param asset1 The address of the first asset.\\r\\n     * @param asset2 The address of the second asset.\\r\\n     * @return The address of the vault.\\r\\n     */\\r\\n    function getVaultType1ByAssets(address asset1, address asset2) external view returns (address) {\\r\\n        return getVault[asset1][asset2];\\r\\n    }\\r\\n\\r\\n    function getVaultsByAsset(address token) external view returns (address[] memory) {\\r\\n        address[] memory vaults = new address[](allVaults.length);\\r\\n        uint256 count = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < allVaults.length; i++) {\\r\\n            IBaluniV1DCAVault vault = IBaluniV1DCAVault(allVaults[i]);\\r\\n            address asset = vault.baseAsset();\\r\\n\\r\\n            if (asset == token) {\\r\\n                vaults[count] = address(vault);\\r\\n                count++;\\r\\n                break;\\r\\n            }\\r\\n\\r\\n            if (count == vaults.length) {\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        address[] memory result = new address[](count);\\r\\n        for (uint256 i = 0; i < count; i++) {\\r\\n            result[i] = vaults[i];\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    function vaultExist(address _vault) external view returns (bool) {\\r\\n        for (uint256 i = 0; i < allVaults.length; i++) {\\r\\n            if (allVaults[i] == _vault) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function removeVault(address _vault) external onlyOwner {\\r\\n        for (uint256 i = 0; i < allVaults.length; i++) {\\r\\n            if (allVaults[i] == _vault) {\\r\\n                allVaults[i] = allVaults[allVaults.length - 1];\\r\\n                getVault[IBaluniV1DCAVault(_vault).quoteAsset()][IBaluniV1DCAVault(_vault).baseAsset()] = address(0);\\r\\n                getVault[IBaluniV1DCAVault(_vault).baseAsset()][IBaluniV1DCAVault(_vault).quoteAsset()] = address(0);\\r\\n                allVaults.pop();\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x43f9137ecce57554c729ffe68ce4330e09a5d4d273f0667905a8aea64a1c838a\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2834,"contract":"contracts/registry/BaluniV1DCAVaultRegistry.sol:BaluniV1DCAVaultRegistry","label":"allVaults","offset":0,"slot":"0","type":"t_array(t_address)dyn_storage"},{"astId":2837,"contract":"contracts/registry/BaluniV1DCAVaultRegistry.sol:BaluniV1DCAVaultRegistry","label":"registry","offset":0,"slot":"1","type":"t_contract(IBaluniV1Registry)2787"},{"astId":2843,"contract":"contracts/registry/BaluniV1DCAVaultRegistry.sol:BaluniV1DCAVaultRegistry","label":"getVault","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_address))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_contract(IBaluniV1Registry)2787":{"encoding":"inplace","label":"contract IBaluniV1Registry","numberOfBytes":"20"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_mapping(t_address,t_address))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => address))","numberOfBytes":"32","value":"t_mapping(t_address,t_address)"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/vaults/BaluniV1DCAVault.sol":{"BaluniV1DCAVault":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"ExecuteTrade","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"canSystemDeposit","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"executors","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAmountToSwap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"address","name":"_baseAsset","type":"address"},{"internalType":"address","name":"_quoteAsset","type":"address"},{"internalType":"address","name":"_registryAddress","type":"address"},{"internalType":"uint256","name":"_reinvestDuration","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lastDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastInvestedBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxPerSwap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quoteAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"address","name":"_baseAsset","type":"address"},{"internalType":"address","name":"_quoteAsset","type":"address"},{"internalType":"address","name":"_registryAddress","type":"address"},{"internalType":"uint256","name":"_reinvestDuration","type":"uint256"},{"internalType":"uint64","name":"_version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reinvestDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_wallet","type":"address"},{"internalType":"bool","name":"_allow","type":"bool"}],"name":"setExecutor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"swapDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"systemDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"EnforcedPause()":[{"details":"The operation failed because the contract is paused."}],"ExpectedPause()":[{"details":"The operation failed because the contract is not paused."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"deposit(uint256,address)":{"details":"Deposits assetA into the pool.","params":{"amount":"The amount of assetA to deposit.","to":"The address to receive pool tokens."}},"initialize(string,string,address,address,address,uint256)":{"details":"Initializes the BaluniV1DCA contract.","params":{"_baseAsset":"The address of the base asset.","_name":"The name of the token.","_quoteAsset":"The address of the quote asset.","_registryAddress":"The address of the registry contract.","_reinvestDuration":"The duration between reinvestments.","_symbol":"The symbol of the token."}},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"pause()":{"details":"pause pool, restricting certain operations"},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unpause()":{"details":"unpause pool, enabling certain operations"},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"withdraw(uint256,address)":{"details":"Withdraws assetA and assetB from the pool.","params":{"shares":"The amount of pool tokens to redeem.","to":"The address to receive assetA and assetB."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a0604052306080523480156012575f80fd5b506080516138f36100395f395f81816127dd0152818161280601526129b601526138f35ff3fe60806040526004361061025c575f3560e01c80638456cb591161014b578063cdf456e1116100c6578063e73faa2d1161007c578063f267d91b11610062578063f267d91b14610709578063f2fde38b1461071d578063fdf262b71461073c575f80fd5b8063e73faa2d146106d6578063edf3e29e146106ea575f80fd5b8063d9d47d69116100ac578063d9d47d691461064a578063db48a5e31461065e578063dd62ed3e14610673575f80fd5b8063cdf456e114610618578063d53419a314610636575f80fd5b8063a9059cbb1161011b578063b3404efd11610101578063b3404efd146105cf578063bc4ba731146105e4578063c80b0baf146105f9575f80fd5b8063a9059cbb14610568578063ad3cb1cc14610587575f80fd5b80638456cb59146104d65780638da5cb5b146104ea57806395d89b41146105265780639ac2a0111461053a575f80fd5b80633f4ba83a116101db5780635c975abb116101ab57806370a082311161019157806370a082311461043e578063715018a6146104915780637b103999146104a5575f80fd5b80635c975abb146103e95780636e553f651461041f575f80fd5b80633f4ba83a146103995780634f1ef286146103ad5780634fe84c42146103c057806352d1902d146103d5575f80fd5b80631e1bff3f11610230578063295b930011610216578063295b930014610355578063313ce5671461036957806336b7710714610384575f80fd5b80631e1bff3f1461031757806323b872dd14610336575f80fd5b8062f714ce1461026057806306fdde0314610281578063095ea7b3146102ab57806318160ddd146102da575b5f80fd5b34801561026b575f80fd5b5061027f61027a3660046131d9565b61075b565b005b34801561028c575f80fd5b50610295610f2b565b6040516102a29190613207565b60405180910390f35b3480156102b6575f80fd5b506102ca6102c536600461323c565b610ffe565b60405190151581526020016102a2565b3480156102e5575f80fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b6040519081526020016102a2565b348015610322575f80fd5b5061027f610331366004613273565b611017565b348015610341575f80fd5b506102ca61035036600461329f565b611049565b348015610360575f80fd5b5061030961106e565b348015610374575f80fd5b50604051601281526020016102a2565b34801561038f575f80fd5b5061030960035481565b3480156103a4575f80fd5b5061027f6113c1565b61027f6103bb366004613364565b6113d3565b3480156103cb575f80fd5b5061030960075481565b3480156103e0575f80fd5b506103096113ee565b3480156103f4575f80fd5b507fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff166102ca565b34801561042a575f80fd5b5061027f6104393660046131d9565b61141c565b348015610449575f80fd5b506103096104583660046133c4565b6001600160a01b03165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00602052604090205490565b34801561049c575f80fd5b5061027f61182d565b3480156104b0575f80fd5b506002546001600160a01b03165b6040516001600160a01b0390911681526020016102a2565b3480156104e1575f80fd5b5061027f61183e565b3480156104f5575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166104be565b348015610531575f80fd5b5061029561184e565b348015610545575f80fd5b506102ca6105543660046133c4565b60086020525f908152604090205460ff1681565b348015610573575f80fd5b506102ca61058236600461323c565b61189f565b348015610592575f80fd5b506102956040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b3480156105da575f80fd5b5061030960065481565b3480156105ef575f80fd5b5061030960045481565b348015610604575f80fd5b5061027f6106133660046133fd565b6118ac565b348015610623575f80fd5b505f546104be906001600160a01b031681565b348015610641575f80fd5b5061027f611ad3565b348015610655575f80fd5b50610309611e17565b348015610669575f80fd5b5061030960055481565b34801561067e575f80fd5b5061030961068d3660046134bb565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b3480156106e1575f80fd5b50610309611ecb565b3480156106f5575f80fd5b5061027f6107043660046134e7565b61205c565b348015610714575f80fd5b506102ca6122b7565b348015610728575f80fd5b5061027f6107373660046133c4565b6122e6565b348015610747575f80fd5b506001546104be906001600160a01b031681565b61076361233c565b61076b6123bd565b5f82116107bf5760405162461bcd60e51b815260206004820181905260248201527f536861726573206d7573742062652067726561746572207468616e207a65726f60448201526064015b60405180910390fd5b335f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00602052604090205482111561083c5760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e636500000000000000000000000060448201526064016107b6565b6001546040805163313ce56760e01b815290515f926001600160a01b03169163313ce5679160048083019260209291908290030181865afa158015610883573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a79190613587565b6001546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156108f2573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061091691906135a7565b5f80546040516370a0823160e01b815230600482015292935090916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610961573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061098591906135a7565b90506109928360126135d2565b61099d90600a6136cb565b6109a790836136d9565b91505f6109d27f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b6109dc83886136d9565b6109e691906136f0565b90505f610a117f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b610a1b85896136d9565b610a2591906136f0565b9050610a313388612419565b610a3c8560126135d2565b610a4790600a6136cb565b610a5190826136f0565b9050815f610a5e82612466565b5f549091506001600160a01b031663a9059cbb89610a7c848661370f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af1158015610adc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b009190613722565b505f610b0b82612466565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b03166304cc73256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b5e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b82919061373d565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b0316633b19e84a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bf9919061373d565b5f549091506001600160a01b031663a9059cbb83610c17868861370f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af1158015610c77573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c9b9190613722565b505f5460405163a9059cbb60e01b81526001600160a01b038381166004830152602482018690529091169063a9059cbb906044016020604051808303815f875af1158015610ceb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0f9190613722565b50610d1986612466565b6001549094506001600160a01b031663a9059cbb8c610d38878a61370f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af1158015610d98573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dbc9190613722565b50610dc684612466565b5f549093506001600160a01b031663a9059cbb83610de4868861370f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af1158015610e44573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e689190613722565b505f5460405163a9059cbb60e01b81526001600160a01b038381166004830152602482018690529091169063a9059cbb906044016020604051808303815f875af1158015610eb8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610edc9190613722565b508460035f828254610eee919061370f565b909155505060017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005550610f2798505050505050505050565b5050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060917f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0091610f7c90613758565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa890613758565b8015610ff35780601f10610fca57610100808354040283529160200191610ff3565b820191905f5260205f20905b815481529060010190602001808311610fd657829003601f168201915b505050505091505090565b5f3361100b818585612598565b60019150505b92915050565b61101f6125aa565b6001600160a01b03919091165f908152600860205260409020805460ff1916911515919091179055565b5f3361105685828561261e565b6110618585856126d1565b60019150505b9392505050565b5f8060025f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110c0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110e4919061373d565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b0316631bf01e9b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611137573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061115b919061373d565b5f80546040516370a0823160e01b8152306004820152929350909182916001600160a01b0316906370a0823190602401602060405180830381865afa1580156111a6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111ca91906135a7565b6001546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611215573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061123991906135a7565b905081158015611247575080155b15611257575f9550505050505090565b5f546001600160a01b0385811691161461130b575f546040517f248391ff0000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201528582166024820152604481018490529086169063248391ff90606401602060405180830381865afa1580156112da573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112fe91906135a7565b6113089084613790565b92505b6001545f546040517f248391ff0000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152604481018390529086169063248391ff90606401602060405180830381865afa15801561137d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113a191906135a7565b6113ab9084613790565b92506113b78284613790565b9695505050505050565b6113c96125aa565b6113d1612760565b565b6113db6127d2565b6113e4826128a2565b610f2782826128aa565b5f6113f76129ab565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b61142461233c565b61142c6123bd565b5f821161147b5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016107b6565b5f546040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303815f875af11580156114e7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061150b9190613722565b50600254604080517f04cc732500000000000000000000000000000000000000000000000000000000815290515f926001600160a01b0316916304cc73259160048083019260209291908290030181865afa15801561156c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611590919061373d565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b0316633b19e84a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115e3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611607919061373d565b90505f61161385612466565b90505f61161f82612466565b5f549091506001600160a01b031663a9059cbb8561163d848661370f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af115801561169d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116c19190613722565b505f5460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490529091169063a9059cbb906044016020604051808303815f875af1158015611711573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117359190613722565b505f611741838861370f565b90505f805f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611793573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117b79190613587565b90505f6117c58260126135d2565b6117d090600a6136cb565b6117da90846136d9565b90506117e68882612a0d565b8260035f8282546117f79190613790565b909155505060017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005550610f2795505050505050565b6118356125aa565b6113d15f612a5a565b6118466125aa565b6113d1612ad7565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060917f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0091610f7c90613758565b5f3361100b8185856126d1565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805482919068010000000000000000900460ff16806118fa5750805467ffffffffffffffff808416911610155b15611931576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80547fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000001667ffffffffffffffff8316176801000000000000000017815561197733612b32565b6119818989612b43565b611989612b55565b611991612b5d565b611999612b6d565b5f80546001600160a01b03808a1673ffffffffffffffffffffffffffffffffffffffff19928316179092556001805489841690831617905560028054928816929091169190911790556119ee846101686136d9565b60065560078490554360049081556040805163313ce56760e01b815290516001600160a01b038a169263313ce567928082019260209290918290030181865afa158015611a3d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a619190613587565b611a6c90600a6136cb565b611a78906127106136d9565b600555805468ff00000000000000001916815560405167ffffffffffffffff831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050505050565b335f9081526008602052604090205460ff16611b315760405162461bcd60e51b815260206004820152600e60248201527f6578656375746f723a207775743f00000000000000000000000000000000000060448201526064016107b6565b611b3961233c565b611b416123bd565b600754600454611b51904361370f565b11611b9e5760405162461bcd60e51b815260206004820152601d60248201527f776169742074696c6c206e657874207265696e76657374206379636c6500000060448201526064016107b6565b5f611ba7611e17565b90505f8111611bf85760405162461bcd60e51b815260206004820152600f60248201527f4e6f7468696e6720746f2073776170000000000000000000000000000000000060448201526064016107b6565b600254604080517f82755ebb00000000000000000000000000000000000000000000000000000000815290515f926001600160a01b0316916382755ebb9160048083019260209291908290030181865afa158015611c58573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c7c919061373d565b5f546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b0380841660048301526024820186905292935091169063095ea7b3906044016020604051808303815f875af1158015611ce6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d0a9190613722565b505f80546001546040517f2d6bc8ea0000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015290821660248201526044810185905230606482015290831690632d6bc8ea906084016020604051808303815f875af1158015611d85573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611da991906135a7565b43600455604080518581526020810183905291925033917f129ac658e77b551b004790e5bd957532cef552c50852a1ee0e38dd3e23fe85db910160405180910390a25050506113d160017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b5f80546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015611e5d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e8191906135a7565b90505f60045443611e92919061370f565b90505f6006548284611ea491906136d9565b611eae91906136f0565b90506005548111611ebf5780611ec3565b6005545b935050505090565b5f611ef47f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b5f03611eff57505f90565b600254604080517f1bf01e9b00000000000000000000000000000000000000000000000000000000815290515f926001600160a01b031691631bf01e9b9160048083019260209291908290030181865afa158015611f5f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f83919061373d565b90505f816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fc2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fe69190613587565b90505f611ff48260126135d2565b611fff90600a6136cb565b90505f8161200b61106e565b61201591906136d9565b90505f6120407f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b61205283670de0b6b3a76400006136d9565b6113b791906136f0565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f811580156120a65750825b90505f8267ffffffffffffffff1660011480156120c25750303b155b9050811580156120d0575080155b15612107576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000166001178555831561215257845468ff00000000000000001916680100000000000000001785555b61215b33612b32565b6121658b8b612b43565b61216d612b55565b612175612b5d565b61217d612b6d565b5f80546001600160a01b03808c1673ffffffffffffffffffffffffffffffffffffffff1992831617909255600180548b841690831617905560028054928a16929091169190911790556121d2866101686136d9565b60065560078690554360049081556040805163313ce56760e01b815290516001600160a01b038c169263313ce567928082019260209290918290030181865afa158015612221573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122459190613587565b61225090600a6136cb565b61225c906127106136d9565b60055583156122aa57845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050565b5f806122c1611e17565b9050600754600454436122d4919061370f565b1180156122e057505f81115b91505090565b6122ee6125aa565b6001600160a01b038116612330576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f60048201526024016107b6565b61233981612a5a565b50565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0080547ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016123b7576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60029055565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff16156113d1576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03821661245b576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f60048201526024016107b6565b610f27825f83612b7d565b5f8060025f9054906101000a90046001600160a01b03166001600160a01b03166385462d6f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156124b8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906124dc91906135a7565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b0316634f4608a26040518163ffffffff1660e01b8152600401602060405180830381865afa15801561252f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061255391906135a7565b90508061256083866136d9565b61256a91906136f0565b949350505050565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b6125a58383836001612ce2565b505050565b336125dc7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146113d1576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016107b6565b6001600160a01b038381165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0160209081526040808320938616835292905220545f1981146126cb57818110156126bd576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101829052604481018390526064016107b6565b6126cb84848484035f612ce2565b50505050565b6001600160a01b038316612713576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f60048201526024016107b6565b6001600160a01b038216612755576040517fec442f050000000000000000000000000000000000000000000000000000000081525f60048201526024016107b6565b6125a5838383612b7d565b612768612e0b565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061286b57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661285f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614155b156113d1576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6123396125aa565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612904575060408051601f3d908101601f19168201909252612901918101906135a7565b60015b612945576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201526024016107b6565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146129a1576040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600481018290526024016107b6565b6125a58383612e66565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113d1576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038216612a4f576040517fec442f050000000000000000000000000000000000000000000000000000000081525f60048201526024016107b6565b610f275f8383612b7d565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805473ffffffffffffffffffffffffffffffffffffffff1981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b612adf6123bd565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336127b4565b612b3a612ebb565b61233981612f22565b612b4b612ebb565b610f278282612f2a565b6113d1612ebb565b612b65612ebb565b6113d1612f8d565b612b75612ebb565b6113d1612f95565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace006001600160a01b038416612bca5781816002015f828254612bbf9190613790565b90915550612c539050565b6001600160a01b0384165f9081526020829052604090205482811015612c35576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b038616600482015260248101829052604481018490526064016107b6565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b038316612c71576002810180548390039055612c8f565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051612cd491815260200190565b60405180910390a350505050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace006001600160a01b038516612d45576040517fe602df050000000000000000000000000000000000000000000000000000000081525f60048201526024016107b6565b6001600160a01b038416612d87576040517f94280d620000000000000000000000000000000000000000000000000000000081525f60048201526024016107b6565b6001600160a01b038086165f90815260018301602090815260408083209388168352929052208390558115612e0457836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051612dfb91815260200190565b60405180910390a35b5050505050565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff166113d1576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612e6f82612fc8565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115612eb3576125a58282613064565b610f276130d6565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff166113d1576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6122ee612ebb565b612f32612ebb565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03612f7e84826137e7565b50600481016126cb83826137e7565b612572612ebb565b612f9d612ebb565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff19169055565b806001600160a01b03163b5f03613016576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016107b6565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60605f80846001600160a01b03168460405161308091906138a7565b5f60405180830381855af49150503d805f81146130b8576040519150601f19603f3d011682016040523d82523d5f602084013e6130bd565b606091505b50915091506130cd85838361310e565b95945050505050565b34156113d1576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060826131235761311e82613183565b611067565b815115801561313a57506001600160a01b0384163b155b1561317c576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024016107b6565b5080611067565b8051156131935780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0381168114612339575f80fd5b5f80604083850312156131ea575f80fd5b8235915060208301356131fc816131c5565b809150509250929050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f806040838503121561324d575f80fd5b8235613258816131c5565b946020939093013593505050565b8015158114612339575f80fd5b5f8060408385031215613284575f80fd5b823561328f816131c5565b915060208301356131fc81613266565b5f805f606084860312156132b1575f80fd5b83356132bc816131c5565b925060208401356132cc816131c5565b929592945050506040919091013590565b634e487b7160e01b5f52604160045260245ffd5b5f67ffffffffffffffff8084111561330b5761330b6132dd565b604051601f8501601f19908116603f01168101908282118183101715613333576133336132dd565b8160405280935085815286868601111561334b575f80fd5b858560208301375f602087830101525050509392505050565b5f8060408385031215613375575f80fd5b8235613380816131c5565b9150602083013567ffffffffffffffff81111561339b575f80fd5b8301601f810185136133ab575f80fd5b6133ba858235602084016132f1565b9150509250929050565b5f602082840312156133d4575f80fd5b8135611067816131c5565b5f82601f8301126133ee575f80fd5b611067838335602085016132f1565b5f805f805f805f60e0888a031215613413575f80fd5b873567ffffffffffffffff8082111561342a575f80fd5b6134368b838c016133df565b985060208a013591508082111561344b575f80fd5b6134578b838c016133df565b975060408a01359150613469826131c5565b90955060608901359061347b826131c5565b90945060808901359061348d826131c5565b90935060a0890135925060c08901359080821682146134aa575f80fd5b508091505092959891949750929550565b5f80604083850312156134cc575f80fd5b82356134d7816131c5565b915060208301356131fc816131c5565b5f805f805f8060c087890312156134fc575f80fd5b863567ffffffffffffffff80821115613513575f80fd5b61351f8a838b016133df565b97506020890135915080821115613534575f80fd5b5061354189828a016133df565b9550506040870135613552816131c5565b93506060870135613562816131c5565b92506080870135613572816131c5565b8092505060a087013590509295509295509295565b5f60208284031215613597575f80fd5b815160ff81168114611067575f80fd5b5f602082840312156135b7575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b60ff8281168282160390811115611011576110116135be565b600181815b8085111561362557815f190482111561360b5761360b6135be565b8085161561361857918102915b93841c93908002906135f0565b509250929050565b5f8261363b57506001611011565b8161364757505f611011565b816001811461365d576002811461366757613683565b6001915050611011565b60ff841115613678576136786135be565b50506001821b611011565b5060208310610133831016604e8410600b84101617156136a6575081810a611011565b6136b083836135eb565b805f19048211156136c3576136c36135be565b029392505050565b5f61106760ff84168361362d565b8082028115828204841417611011576110116135be565b5f8261370a57634e487b7160e01b5f52601260045260245ffd5b500490565b81810381811115611011576110116135be565b5f60208284031215613732575f80fd5b815161106781613266565b5f6020828403121561374d575f80fd5b8151611067816131c5565b600181811c9082168061376c57607f821691505b60208210810361378a57634e487b7160e01b5f52602260045260245ffd5b50919050565b80820180821115611011576110116135be565b601f8211156125a557805f5260205f20601f840160051c810160208510156137c85750805b601f840160051c820191505b81811015612e04575f81556001016137d4565b815167ffffffffffffffff811115613801576138016132dd565b6138158161380f8454613758565b846137a3565b602080601f831160018114613848575f84156138315750858301515b5f19600386901b1c1916600185901b17855561389f565b5f85815260208120601f198616915b8281101561387657888601518255948401946001909101908401613857565b508582101561389357878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f82518060208501845e5f92019182525091905056fea26469706673582212200715022b3d313d9ee579f9e8d21d222032148be4058dd3dec566f2d41779abeb64736f6c63430008190033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x38F3 PUSH2 0x39 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x27DD ADD MSTORE DUP2 DUP2 PUSH2 0x2806 ADD MSTORE PUSH2 0x29B6 ADD MSTORE PUSH2 0x38F3 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0xCDF456E1 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xE73FAA2D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF267D91B GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xF267D91B EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0xFDF262B7 EQ PUSH2 0x73C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x6D6 JUMPI DUP1 PUSH4 0xEDF3E29E EQ PUSH2 0x6EA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD9D47D69 GT PUSH2 0xAC JUMPI DUP1 PUSH4 0xD9D47D69 EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xDB48A5E3 EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x673 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xD53419A3 EQ PUSH2 0x636 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0x11B JUMPI DUP1 PUSH4 0xB3404EFD GT PUSH2 0x101 JUMPI DUP1 PUSH4 0xB3404EFD EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0xBC4BA731 EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0xC80B0BAF EQ PUSH2 0x5F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x587 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0x9AC2A011 EQ PUSH2 0x53A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x1DB JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x191 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x4A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x41F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x4FE84C42 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x3D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E1BFF3F GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x295B9300 GT PUSH2 0x216 JUMPI DUP1 PUSH4 0x295B9300 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x36B77107 EQ PUSH2 0x384 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E1BFF3F EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x336 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x31D9 JUMP JUMPDEST PUSH2 0x75B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x3207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x323C JUMP JUMPDEST PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x3273 JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x341 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x329F JUMP JUMPDEST PUSH2 0x1049 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0x106E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x3BB CALLDATASIZE PUSH1 0x4 PUSH2 0x3364 JUMP JUMPDEST PUSH2 0x13D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0x13EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND PUSH2 0x2CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x439 CALLDATASIZE PUSH1 0x4 PUSH2 0x31D9 JUMP JUMPDEST PUSH2 0x141C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x449 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0x458 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x182D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x183E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0x184E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x545 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x554 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C4 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x573 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x582 CALLDATASIZE PUSH1 0x4 PUSH2 0x323C JUMP JUMPDEST PUSH2 0x189F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x592 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x604 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x613 CALLDATASIZE PUSH1 0x4 PUSH2 0x33FD JUMP JUMPDEST PUSH2 0x18AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x623 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x4BE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x641 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x1AD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x655 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0x1E17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x669 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0x68D CALLDATASIZE PUSH1 0x4 PUSH2 0x34BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0x1ECB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x704 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E7 JUMP JUMPDEST PUSH2 0x205C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x714 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x22B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x728 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x737 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C4 JUMP JUMPDEST PUSH2 0x22E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x747 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x4BE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x763 PUSH2 0x233C JUMP JUMPDEST PUSH2 0x76B PUSH2 0x23BD JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536861726573206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x883 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x3587 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x916 SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x961 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x985 SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST SWAP1 POP PUSH2 0x992 DUP4 PUSH1 0x12 PUSH2 0x35D2 JUMP JUMPDEST PUSH2 0x99D SWAP1 PUSH1 0xA PUSH2 0x36CB JUMP JUMPDEST PUSH2 0x9A7 SWAP1 DUP4 PUSH2 0x36D9 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH2 0x9D2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9DC DUP4 DUP9 PUSH2 0x36D9 JUMP JUMPDEST PUSH2 0x9E6 SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xA11 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA1B DUP6 DUP10 PUSH2 0x36D9 JUMP JUMPDEST PUSH2 0xA25 SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST SWAP1 POP PUSH2 0xA31 CALLER DUP9 PUSH2 0x2419 JUMP JUMPDEST PUSH2 0xA3C DUP6 PUSH1 0x12 PUSH2 0x35D2 JUMP JUMPDEST PUSH2 0xA47 SWAP1 PUSH1 0xA PUSH2 0x36CB JUMP JUMPDEST PUSH2 0xA51 SWAP1 DUP3 PUSH2 0x36F0 JUMP JUMPDEST SWAP1 POP DUP2 PUSH0 PUSH2 0xA5E DUP3 PUSH2 0x2466 JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP10 PUSH2 0xA7C DUP5 DUP7 PUSH2 0x370F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xADC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH0 PUSH2 0xB0B DUP3 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4CC7325 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB5E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0x373D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3B19E84A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF9 SWAP2 SWAP1 PUSH2 0x373D JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP4 PUSH2 0xC17 DUP7 DUP9 PUSH2 0x370F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC77 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC9B SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCEB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD0F SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH2 0xD19 DUP7 PUSH2 0x2466 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP13 PUSH2 0xD38 DUP8 DUP11 PUSH2 0x370F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD98 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBC SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH2 0xDC6 DUP5 PUSH2 0x2466 JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP4 PUSH2 0xDE4 DUP7 DUP9 PUSH2 0x370F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE44 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE68 SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEB8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP DUP5 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x370F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE POP PUSH2 0xF27 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP2 PUSH2 0xF7C SWAP1 PUSH2 0x3758 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFA8 SWAP1 PUSH2 0x3758 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFF3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFCA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFF3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFD6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x100B DUP2 DUP6 DUP6 PUSH2 0x2598 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x101F PUSH2 0x25AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x1056 DUP6 DUP3 DUP6 PUSH2 0x261E JUMP JUMPDEST PUSH2 0x1061 DUP6 DUP6 DUP6 PUSH2 0x26D1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10C0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10E4 SWAP2 SWAP1 PUSH2 0x373D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BF01E9B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1137 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x115B SWAP2 SWAP1 PUSH2 0x373D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11CA SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1215 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1239 SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1247 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1257 JUMPI PUSH0 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ PUSH2 0x130B JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE DUP6 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP7 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12DA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12FE SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST PUSH2 0x1308 SWAP1 DUP5 PUSH2 0x3790 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP7 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x137D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13A1 SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST PUSH2 0x13AB SWAP1 DUP5 PUSH2 0x3790 JUMP JUMPDEST SWAP3 POP PUSH2 0x13B7 DUP3 DUP5 PUSH2 0x3790 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13C9 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x13D1 PUSH2 0x2760 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13DB PUSH2 0x27D2 JUMP JUMPDEST PUSH2 0x13E4 DUP3 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0xF27 DUP3 DUP3 PUSH2 0x28AA JUMP JUMPDEST PUSH0 PUSH2 0x13F7 PUSH2 0x29AB JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH2 0x1424 PUSH2 0x233C JUMP JUMPDEST PUSH2 0x142C PUSH2 0x23BD JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x147B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14E7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x150B SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x4CC732500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x4CC7325 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x156C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1590 SWAP2 SWAP1 PUSH2 0x373D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3B19E84A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15E3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1607 SWAP2 SWAP1 PUSH2 0x373D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1613 DUP6 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x161F DUP3 PUSH2 0x2466 JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 PUSH2 0x163D DUP5 DUP7 PUSH2 0x370F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x169D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16C1 SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1711 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1735 SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH0 PUSH2 0x1741 DUP4 DUP9 PUSH2 0x370F JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1793 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17B7 SWAP2 SWAP1 PUSH2 0x3587 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x17C5 DUP3 PUSH1 0x12 PUSH2 0x35D2 JUMP JUMPDEST PUSH2 0x17D0 SWAP1 PUSH1 0xA PUSH2 0x36CB JUMP JUMPDEST PUSH2 0x17DA SWAP1 DUP5 PUSH2 0x36D9 JUMP JUMPDEST SWAP1 POP PUSH2 0x17E6 DUP9 DUP3 PUSH2 0x2A0D JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x17F7 SWAP2 SWAP1 PUSH2 0x3790 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE POP PUSH2 0xF27 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1835 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x13D1 PUSH0 PUSH2 0x2A5A JUMP JUMPDEST PUSH2 0x1846 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x13D1 PUSH2 0x2AD7 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP2 PUSH2 0xF7C SWAP1 PUSH2 0x3758 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x100B DUP2 DUP6 DUP6 PUSH2 0x26D1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x18FA JUMPI POP DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0x1931 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 AND PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND OR PUSH9 0x10000000000000000 OR DUP2 SSTORE PUSH2 0x1977 CALLER PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x1981 DUP10 DUP10 PUSH2 0x2B43 JUMP JUMPDEST PUSH2 0x1989 PUSH2 0x2B55 JUMP JUMPDEST PUSH2 0x1991 PUSH2 0x2B5D JUMP JUMPDEST PUSH2 0x1999 PUSH2 0x2B6D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP10 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP9 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x19EE DUP5 PUSH2 0x168 PUSH2 0x36D9 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x7 DUP5 SWAP1 SSTORE NUMBER PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP3 PUSH4 0x313CE567 SWAP3 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A3D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A61 SWAP2 SWAP1 PUSH2 0x3587 JUMP JUMPDEST PUSH2 0x1A6C SWAP1 PUSH1 0xA PUSH2 0x36CB JUMP JUMPDEST PUSH2 0x1A78 SWAP1 PUSH2 0x2710 PUSH2 0x36D9 JUMP JUMPDEST PUSH1 0x5 SSTORE DUP1 SLOAD PUSH9 0xFF0000000000000000 NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1B31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6578656375746F723A207775743F000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x1B39 PUSH2 0x233C JUMP JUMPDEST PUSH2 0x1B41 PUSH2 0x23BD JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x4 SLOAD PUSH2 0x1B51 SWAP1 NUMBER PUSH2 0x370F JUMP JUMPDEST GT PUSH2 0x1B9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776169742074696C6C206E657874207265696E76657374206379636C65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH0 PUSH2 0x1BA7 PUSH2 0x1E17 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1BF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F20737761700000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x82755EBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x82755EBB SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C58 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C7C SWAP2 SWAP1 PUSH2 0x373D JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CE6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D0A SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2D6BC8EA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x64 DUP3 ADD MSTORE SWAP1 DUP4 AND SWAP1 PUSH4 0x2D6BC8EA SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D85 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DA9 SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST NUMBER PUSH1 0x4 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP CALLER SWAP2 PUSH32 0x129AC658E77B551B004790E5BD957532CEF552C50852A1EE0E38DD3E23FE85DB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x13D1 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E5D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E81 SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x4 SLOAD NUMBER PUSH2 0x1E92 SWAP2 SWAP1 PUSH2 0x370F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 SLOAD DUP3 DUP5 PUSH2 0x1EA4 SWAP2 SWAP1 PUSH2 0x36D9 JUMP JUMPDEST PUSH2 0x1EAE SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP2 GT PUSH2 0x1EBF JUMPI DUP1 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x5 SLOAD JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1EF4 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST PUSH0 SUB PUSH2 0x1EFF JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x1BF01E9B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x1BF01E9B SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F5F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F83 SWAP2 SWAP1 PUSH2 0x373D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FC2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FE6 SWAP2 SWAP1 PUSH2 0x3587 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1FF4 DUP3 PUSH1 0x12 PUSH2 0x35D2 JUMP JUMPDEST PUSH2 0x1FFF SWAP1 PUSH1 0xA PUSH2 0x36CB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH2 0x200B PUSH2 0x106E JUMP JUMPDEST PUSH2 0x2015 SWAP2 SWAP1 PUSH2 0x36D9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2040 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2052 DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x36D9 JUMP JUMPDEST PUSH2 0x13B7 SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x20A6 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x20C2 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x20D0 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x2107 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x2152 JUMPI DUP5 SLOAD PUSH9 0xFF0000000000000000 NOT AND PUSH9 0x10000000000000000 OR DUP6 SSTORE JUMPDEST PUSH2 0x215B CALLER PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x2165 DUP12 DUP12 PUSH2 0x2B43 JUMP JUMPDEST PUSH2 0x216D PUSH2 0x2B55 JUMP JUMPDEST PUSH2 0x2175 PUSH2 0x2B5D JUMP JUMPDEST PUSH2 0x217D PUSH2 0x2B6D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP12 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x21D2 DUP7 PUSH2 0x168 PUSH2 0x36D9 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x7 DUP7 SWAP1 SSTORE NUMBER PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP3 PUSH4 0x313CE567 SWAP3 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2221 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2245 SWAP2 SWAP1 PUSH2 0x3587 JUMP JUMPDEST PUSH2 0x2250 SWAP1 PUSH1 0xA PUSH2 0x36CB JUMP JUMPDEST PUSH2 0x225C SWAP1 PUSH2 0x2710 PUSH2 0x36D9 JUMP JUMPDEST PUSH1 0x5 SSTORE DUP4 ISZERO PUSH2 0x22AA JUMPI DUP5 SLOAD PUSH9 0xFF0000000000000000 NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x22C1 PUSH2 0x1E17 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD PUSH1 0x4 SLOAD NUMBER PUSH2 0x22D4 SWAP2 SWAP1 PUSH2 0x370F JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x22E0 JUMPI POP PUSH0 DUP2 GT JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x22EE PUSH2 0x25AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2330 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x2339 DUP2 PUSH2 0x2A5A JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE ADD PUSH2 0x23B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x245B JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xF27 DUP3 PUSH0 DUP4 PUSH2 0x2B7D JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x85462D6F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24B8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24DC SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4F4608A2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x252F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2553 SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2560 DUP4 DUP7 PUSH2 0x36D9 JUMP JUMPDEST PUSH2 0x256A SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH2 0x25A5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2CE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH2 0x25DC PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x26CB JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x26BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x26CB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x2CE2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2713 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2755 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x25A5 DUP4 DUP4 DUP4 PUSH2 0x2B7D JUMP JUMPDEST PUSH2 0x2768 PUSH2 0x2E0B JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x286B JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x285F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2339 PUSH2 0x25AA JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2904 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2901 SWAP2 DUP2 ADD SWAP1 PUSH2 0x35A7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2945 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x29A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x25A5 DUP4 DUP4 PUSH2 0x2E66 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2A4F JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xF27 PUSH0 DUP4 DUP4 PUSH2 0x2B7D JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2ADF PUSH2 0x23BD JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x27B4 JUMP JUMPDEST PUSH2 0x2B3A PUSH2 0x2EBB JUMP JUMPDEST PUSH2 0x2339 DUP2 PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0x2B4B PUSH2 0x2EBB JUMP JUMPDEST PUSH2 0xF27 DUP3 DUP3 PUSH2 0x2F2A JUMP JUMPDEST PUSH2 0x13D1 PUSH2 0x2EBB JUMP JUMPDEST PUSH2 0x2B65 PUSH2 0x2EBB JUMP JUMPDEST PUSH2 0x13D1 PUSH2 0x2F8D JUMP JUMPDEST PUSH2 0x2B75 PUSH2 0x2EBB JUMP JUMPDEST PUSH2 0x13D1 PUSH2 0x2F95 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2BCA JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2BBF SWAP2 SWAP1 PUSH2 0x3790 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2C53 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2C35 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2C71 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2C8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2CD4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x2D45 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2D87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x2E04 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2DFB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E6F DUP3 PUSH2 0x2FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x2EB3 JUMPI PUSH2 0x25A5 DUP3 DUP3 PUSH2 0x3064 JUMP JUMPDEST PUSH2 0xF27 PUSH2 0x30D6 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22EE PUSH2 0x2EBB JUMP JUMPDEST PUSH2 0x2F32 PUSH2 0x2EBB JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x2F7E DUP5 DUP3 PUSH2 0x37E7 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x26CB DUP4 DUP3 PUSH2 0x37E7 JUMP JUMPDEST PUSH2 0x2572 PUSH2 0x2EBB JUMP JUMPDEST PUSH2 0x2F9D PUSH2 0x2EBB JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x3016 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x3080 SWAP2 SWAP1 PUSH2 0x38A7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x30B8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x30BD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x30CD DUP6 DUP4 DUP4 PUSH2 0x310E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x3123 JUMPI PUSH2 0x311E DUP3 PUSH2 0x3183 JUMP JUMPDEST PUSH2 0x1067 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x313A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x317C JUMPI PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST POP DUP1 PUSH2 0x1067 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x3193 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2339 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31EA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x31FC DUP2 PUSH2 0x31C5 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x324D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3258 DUP2 PUSH2 0x31C5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2339 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3284 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x328F DUP2 PUSH2 0x31C5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x31FC DUP2 PUSH2 0x3266 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x32B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x32BC DUP2 PUSH2 0x31C5 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x32CC DUP2 PUSH2 0x31C5 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x330B JUMPI PUSH2 0x330B PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3333 JUMPI PUSH2 0x3333 PUSH2 0x32DD JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x334B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3375 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3380 DUP2 PUSH2 0x31C5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x339B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x33AB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x33BA DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x32F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1067 DUP2 PUSH2 0x31C5 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x33EE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1067 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x32F1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3413 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x342A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3436 DUP12 DUP4 DUP13 ADD PUSH2 0x33DF JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x344B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3457 DUP12 DUP4 DUP13 ADD PUSH2 0x33DF JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3469 DUP3 PUSH2 0x31C5 JUMP JUMPDEST SWAP1 SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP1 PUSH2 0x347B DUP3 PUSH2 0x31C5 JUMP JUMPDEST SWAP1 SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP1 PUSH2 0x348D DUP3 PUSH2 0x31C5 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD SWAP1 DUP1 DUP3 AND DUP3 EQ PUSH2 0x34AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34CC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x34D7 DUP2 PUSH2 0x31C5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x31FC DUP2 PUSH2 0x31C5 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x34FC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3513 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x351F DUP11 DUP4 DUP12 ADD PUSH2 0x33DF JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3534 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3541 DUP10 DUP3 DUP11 ADD PUSH2 0x33DF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x3552 DUP2 PUSH2 0x31C5 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x3562 DUP2 PUSH2 0x31C5 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x3572 DUP2 PUSH2 0x31C5 JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3597 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1067 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x1011 JUMPI PUSH2 0x1011 PUSH2 0x35BE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x3625 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x360B JUMPI PUSH2 0x360B PUSH2 0x35BE JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x3618 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x35F0 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x363B JUMPI POP PUSH1 0x1 PUSH2 0x1011 JUMP JUMPDEST DUP2 PUSH2 0x3647 JUMPI POP PUSH0 PUSH2 0x1011 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x365D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3667 JUMPI PUSH2 0x3683 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1011 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3678 JUMPI PUSH2 0x3678 PUSH2 0x35BE JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1011 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x36A6 JUMPI POP DUP2 DUP2 EXP PUSH2 0x1011 JUMP JUMPDEST PUSH2 0x36B0 DUP4 DUP4 PUSH2 0x35EB JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x36C3 JUMPI PUSH2 0x36C3 PUSH2 0x35BE JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1067 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x362D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1011 JUMPI PUSH2 0x1011 PUSH2 0x35BE JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x370A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1011 JUMPI PUSH2 0x1011 PUSH2 0x35BE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3732 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1067 DUP2 PUSH2 0x3266 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x374D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1067 DUP2 PUSH2 0x31C5 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x376C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x378A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1011 JUMPI PUSH2 0x1011 PUSH2 0x35BE JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x25A5 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x37C8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E04 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x37D4 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3801 JUMPI PUSH2 0x3801 PUSH2 0x32DD JUMP JUMPDEST PUSH2 0x3815 DUP2 PUSH2 0x380F DUP5 SLOAD PUSH2 0x3758 JUMP JUMPDEST DUP5 PUSH2 0x37A3 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3848 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x3831 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x389F JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3876 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3857 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x3893 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD ISZERO MUL 0x2B RETURNDATASIZE BALANCE RETURNDATASIZE SWAP15 0xE5 PUSH26 0xF9E8D21D222032148BE4058DD3DEC566F2D41779ABEB64736F6C PUSH4 0x43000819 STOP CALLER ","sourceMap":"683:9261:20:-:0;;;1171:4:2;1128:48;;683:9261:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_472":{"entryPoint":null,"id":472,"parameterSlots":0,"returnSlots":0},"@__ERC20_init_698":{"entryPoint":11075,"id":698,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_726":{"entryPoint":12074,"id":726,"parameterSlots":2,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":11058,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":12066,"id":81,"parameterSlots":1,"returnSlots":0},"@__Pausable_init_1345":{"entryPoint":11117,"id":1345,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_unchained_1363":{"entryPoint":12181,"id":1363,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_1509":{"entryPoint":11101,"id":1509,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_unchained_1527":{"entryPoint":12173,"id":1527,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_502":{"entryPoint":11093,"id":502,"parameterSlots":0,"returnSlots":0},"@_approve_1130":{"entryPoint":9624,"id":1130,"parameterSlots":3,"returnSlots":0},"@_approve_1198":{"entryPoint":11490,"id":1198,"parameterSlots":4,"returnSlots":0},"@_authorizeUpgrade_3495":{"entryPoint":10402,"id":3495,"parameterSlots":1,"returnSlots":0},"@_burn_1112":{"entryPoint":9241,"id":1112,"parameterSlots":2,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":11963,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_2047":{"entryPoint":12502,"id":2047,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_578":{"entryPoint":10667,"id":578,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":9642,"id":122,"parameterSlots":0,"returnSlots":0},"@_checkProxy_562":{"entryPoint":10194,"id":562,"parameterSlots":0,"returnSlots":0},"@_getERC20Storage_682":{"entryPoint":null,"id":682,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_447":{"entryPoint":null,"id":447,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":null,"id":25,"parameterSlots":0,"returnSlots":1},"@_getPausableStorage_1319":{"entryPoint":null,"id":1319,"parameterSlots":0,"returnSlots":1},"@_getReentrancyGuardStorage_1497":{"entryPoint":null,"id":1497,"parameterSlots":0,"returnSlots":1},"@_haircut_4171":{"entryPoint":9318,"id":4171,"parameterSlots":1,"returnSlots":1},"@_isInitializing_438":{"entryPoint":null,"id":438,"parameterSlots":0,"returnSlots":1},"@_mint_1079":{"entryPoint":10765,"id":1079,"parameterSlots":2,"returnSlots":0},"@_msgSender_1275":{"entryPoint":null,"id":1275,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1579":{"entryPoint":9586,"id":1579,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1563":{"entryPoint":9020,"id":1563,"parameterSlots":0,"returnSlots":0},"@_pause_1444":{"entryPoint":10967,"id":1444,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_1407":{"entryPoint":9149,"id":1407,"parameterSlots":0,"returnSlots":0},"@_requirePaused_1420":{"entryPoint":11787,"id":1420,"parameterSlots":0,"returnSlots":0},"@_revert_2414":{"entryPoint":12675,"id":2414,"parameterSlots":1,"returnSlots":0},"@_setImplementation_1833":{"entryPoint":12232,"id":1833,"parameterSlots":1,"returnSlots":0},"@_spendAllowance_1246":{"entryPoint":9758,"id":1246,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":10842,"id":193,"parameterSlots":1,"returnSlots":0},"@_transfer_954":{"entryPoint":9937,"id":954,"parameterSlots":3,"returnSlots":0},"@_unpause_1468":{"entryPoint":10080,"id":1468,"parameterSlots":0,"returnSlots":0},"@_update_1046":{"entryPoint":11133,"id":1046,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCallUUPS_629":{"entryPoint":10410,"id":629,"parameterSlots":2,"returnSlots":0},"@allowance_851":{"entryPoint":null,"id":851,"parameterSlots":2,"returnSlots":1},"@approve_875":{"entryPoint":4094,"id":875,"parameterSlots":2,"returnSlots":1},"@balanceOf_803":{"entryPoint":null,"id":803,"parameterSlots":1,"returnSlots":1},"@baseAsset_3286":{"entryPoint":null,"id":3286,"parameterSlots":0,"returnSlots":0},"@canSystemDeposit_3954":{"entryPoint":8887,"id":3954,"parameterSlots":0,"returnSlots":1},"@decimals_767":{"entryPoint":null,"id":767,"parameterSlots":0,"returnSlots":1},"@deposit_3604":{"entryPoint":5148,"id":3604,"parameterSlots":2,"returnSlots":0},"@executors_3305":{"entryPoint":null,"id":3305,"parameterSlots":0,"returnSlots":0},"@functionDelegateCall_2334":{"entryPoint":12388,"id":2334,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_2447":{"entryPoint":null,"id":2447,"parameterSlots":1,"returnSlots":1},"@getAmountToSwap_3929":{"entryPoint":7703,"id":3929,"parameterSlots":0,"returnSlots":1},"@getImplementation_1806":{"entryPoint":null,"id":1806,"parameterSlots":0,"returnSlots":1},"@initialize_3392":{"entryPoint":8284,"id":3392,"parameterSlots":6,"returnSlots":0},"@lastDeposit_3293":{"entryPoint":null,"id":3293,"parameterSlots":0,"returnSlots":0},"@lastInvestedBlock_3295":{"entryPoint":null,"id":3295,"parameterSlots":0,"returnSlots":0},"@maxPerSwap_3297":{"entryPoint":null,"id":3297,"parameterSlots":0,"returnSlots":0},"@name_742":{"entryPoint":3883,"id":742,"parameterSlots":0,"returnSlots":1},"@owner_105":{"entryPoint":null,"id":105,"parameterSlots":0,"returnSlots":1},"@pause_3964":{"entryPoint":6206,"id":3964,"parameterSlots":0,"returnSlots":0},"@paused_1395":{"entryPoint":null,"id":1395,"parameterSlots":0,"returnSlots":1},"@proxiableUUID_520":{"entryPoint":5102,"id":520,"parameterSlots":0,"returnSlots":1},"@quoteAsset_3288":{"entryPoint":null,"id":3288,"parameterSlots":0,"returnSlots":0},"@registry_4127":{"entryPoint":null,"id":4127,"parameterSlots":0,"returnSlots":1},"@reinitialize_3473":{"entryPoint":6316,"id":3473,"parameterSlots":7,"returnSlots":0},"@reinvestDuration_3301":{"entryPoint":null,"id":3301,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_136":{"entryPoint":6189,"id":136,"parameterSlots":0,"returnSlots":0},"@setExecutor_4143":{"entryPoint":4119,"id":4143,"parameterSlots":2,"returnSlots":0},"@swapDuration_3299":{"entryPoint":null,"id":3299,"parameterSlots":0,"returnSlots":0},"@symbol_758":{"entryPoint":6222,"id":758,"parameterSlots":0,"returnSlots":1},"@systemDeposit_3888":{"entryPoint":6867,"id":3888,"parameterSlots":0,"returnSlots":0},"@totalSupply_783":{"entryPoint":null,"id":783,"parameterSlots":0,"returnSlots":1},"@totalValuation_4061":{"entryPoint":4206,"id":4061,"parameterSlots":0,"returnSlots":1},"@transferFrom_907":{"entryPoint":4169,"id":907,"parameterSlots":3,"returnSlots":1},"@transferOwnership_164":{"entryPoint":8934,"id":164,"parameterSlots":1,"returnSlots":0},"@transfer_827":{"entryPoint":6303,"id":827,"parameterSlots":2,"returnSlots":1},"@unitPrice_4116":{"entryPoint":7883,"id":4116,"parameterSlots":0,"returnSlots":1},"@unpause_3974":{"entryPoint":5057,"id":3974,"parameterSlots":0,"returnSlots":0},"@upgradeToAndCall_1867":{"entryPoint":11878,"id":1867,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_540":{"entryPoint":5075,"id":540,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_2374":{"entryPoint":12558,"id":2374,"parameterSlots":3,"returnSlots":1},"@withdraw_3810":{"entryPoint":1883,"id":3810,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_bytes":{"entryPoint":13041,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":13279,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":13252,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":14141,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":13499,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":12959,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bool":{"entryPoint":12915,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":13156,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":12860,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":14114,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_addresst_uint256":{"entryPoint":13543,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_addresst_uint256t_uint64":{"entryPoint":13309,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":13735,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":12761,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":13703,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14503,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12807,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_53449748a5034738d502a01b62b389ab55b3ebc840f594da71fc707f6109e0a1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8475dfc2a61c983fde89982d493adea657965a16ea35a31669edc1d76f0cb847__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bbbcd694010870aca4b5330159c65992a3109a1437ee6632b6833f21093588c0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f247f7c1df7c48d1adf3ebe04e09d491abca7b6e14a32a1b30359ea588b9d3d6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":14224,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":14064,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":13803,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":14027,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":13869,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":14041,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":14095,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint8":{"entryPoint":13778,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":14243,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":14311,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":14168,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":13758,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13021,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":12741,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":12902,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:18986:21","nodeType":"YulBlock","src":"0:18986:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"59:109:21","nodeType":"YulBlock","src":"59:109:21","statements":[{"body":{"nativeSrc":"146:16:21","nodeType":"YulBlock","src":"146:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"155:1:21","nodeType":"YulLiteral","src":"155:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"158:1:21","nodeType":"YulLiteral","src":"158:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"148:6:21","nodeType":"YulIdentifier","src":"148:6:21"},"nativeSrc":"148:12:21","nodeType":"YulFunctionCall","src":"148:12:21"},"nativeSrc":"148:12:21","nodeType":"YulExpressionStatement","src":"148:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"82:5:21","nodeType":"YulIdentifier","src":"82:5:21"},{"arguments":[{"name":"value","nativeSrc":"93:5:21","nodeType":"YulIdentifier","src":"93:5:21"},{"kind":"number","nativeSrc":"100:42:21","nodeType":"YulLiteral","src":"100:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"89:3:21","nodeType":"YulIdentifier","src":"89:3:21"},"nativeSrc":"89:54:21","nodeType":"YulFunctionCall","src":"89:54:21"}],"functionName":{"name":"eq","nativeSrc":"79:2:21","nodeType":"YulIdentifier","src":"79:2:21"},"nativeSrc":"79:65:21","nodeType":"YulFunctionCall","src":"79:65:21"}],"functionName":{"name":"iszero","nativeSrc":"72:6:21","nodeType":"YulIdentifier","src":"72:6:21"},"nativeSrc":"72:73:21","nodeType":"YulFunctionCall","src":"72:73:21"},"nativeSrc":"69:93:21","nodeType":"YulIf","src":"69:93:21"}]},"name":"validator_revert_address","nativeSrc":"14:154:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"48:5:21","nodeType":"YulTypedName","src":"48:5:21","type":""}],"src":"14:154:21"},{"body":{"nativeSrc":"260:228:21","nodeType":"YulBlock","src":"260:228:21","statements":[{"body":{"nativeSrc":"306:16:21","nodeType":"YulBlock","src":"306:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"315:1:21","nodeType":"YulLiteral","src":"315:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"318:1:21","nodeType":"YulLiteral","src":"318:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"308:6:21","nodeType":"YulIdentifier","src":"308:6:21"},"nativeSrc":"308:12:21","nodeType":"YulFunctionCall","src":"308:12:21"},"nativeSrc":"308:12:21","nodeType":"YulExpressionStatement","src":"308:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"281:7:21","nodeType":"YulIdentifier","src":"281:7:21"},{"name":"headStart","nativeSrc":"290:9:21","nodeType":"YulIdentifier","src":"290:9:21"}],"functionName":{"name":"sub","nativeSrc":"277:3:21","nodeType":"YulIdentifier","src":"277:3:21"},"nativeSrc":"277:23:21","nodeType":"YulFunctionCall","src":"277:23:21"},{"kind":"number","nativeSrc":"302:2:21","nodeType":"YulLiteral","src":"302:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"273:3:21","nodeType":"YulIdentifier","src":"273:3:21"},"nativeSrc":"273:32:21","nodeType":"YulFunctionCall","src":"273:32:21"},"nativeSrc":"270:52:21","nodeType":"YulIf","src":"270:52:21"},{"nativeSrc":"331:33:21","nodeType":"YulAssignment","src":"331:33:21","value":{"arguments":[{"name":"headStart","nativeSrc":"354:9:21","nodeType":"YulIdentifier","src":"354:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"341:12:21","nodeType":"YulIdentifier","src":"341:12:21"},"nativeSrc":"341:23:21","nodeType":"YulFunctionCall","src":"341:23:21"},"variableNames":[{"name":"value0","nativeSrc":"331:6:21","nodeType":"YulIdentifier","src":"331:6:21"}]},{"nativeSrc":"373:45:21","nodeType":"YulVariableDeclaration","src":"373:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"403:9:21","nodeType":"YulIdentifier","src":"403:9:21"},{"kind":"number","nativeSrc":"414:2:21","nodeType":"YulLiteral","src":"414:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"399:3:21","nodeType":"YulIdentifier","src":"399:3:21"},"nativeSrc":"399:18:21","nodeType":"YulFunctionCall","src":"399:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"386:12:21","nodeType":"YulIdentifier","src":"386:12:21"},"nativeSrc":"386:32:21","nodeType":"YulFunctionCall","src":"386:32:21"},"variables":[{"name":"value","nativeSrc":"377:5:21","nodeType":"YulTypedName","src":"377:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"452:5:21","nodeType":"YulIdentifier","src":"452:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"427:24:21","nodeType":"YulIdentifier","src":"427:24:21"},"nativeSrc":"427:31:21","nodeType":"YulFunctionCall","src":"427:31:21"},"nativeSrc":"427:31:21","nodeType":"YulExpressionStatement","src":"427:31:21"},{"nativeSrc":"467:15:21","nodeType":"YulAssignment","src":"467:15:21","value":{"name":"value","nativeSrc":"477:5:21","nodeType":"YulIdentifier","src":"477:5:21"},"variableNames":[{"name":"value1","nativeSrc":"467:6:21","nodeType":"YulIdentifier","src":"467:6:21"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nativeSrc":"173:315:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"218:9:21","nodeType":"YulTypedName","src":"218:9:21","type":""},{"name":"dataEnd","nativeSrc":"229:7:21","nodeType":"YulTypedName","src":"229:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"241:6:21","nodeType":"YulTypedName","src":"241:6:21","type":""},{"name":"value1","nativeSrc":"249:6:21","nodeType":"YulTypedName","src":"249:6:21","type":""}],"src":"173:315:21"},{"body":{"nativeSrc":"614:356:21","nodeType":"YulBlock","src":"614:356:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"631:9:21","nodeType":"YulIdentifier","src":"631:9:21"},{"kind":"number","nativeSrc":"642:2:21","nodeType":"YulLiteral","src":"642:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"624:6:21","nodeType":"YulIdentifier","src":"624:6:21"},"nativeSrc":"624:21:21","nodeType":"YulFunctionCall","src":"624:21:21"},"nativeSrc":"624:21:21","nodeType":"YulExpressionStatement","src":"624:21:21"},{"nativeSrc":"654:27:21","nodeType":"YulVariableDeclaration","src":"654:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"674:6:21","nodeType":"YulIdentifier","src":"674:6:21"}],"functionName":{"name":"mload","nativeSrc":"668:5:21","nodeType":"YulIdentifier","src":"668:5:21"},"nativeSrc":"668:13:21","nodeType":"YulFunctionCall","src":"668:13:21"},"variables":[{"name":"length","nativeSrc":"658:6:21","nodeType":"YulTypedName","src":"658:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"701:9:21","nodeType":"YulIdentifier","src":"701:9:21"},{"kind":"number","nativeSrc":"712:2:21","nodeType":"YulLiteral","src":"712:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"697:3:21","nodeType":"YulIdentifier","src":"697:3:21"},"nativeSrc":"697:18:21","nodeType":"YulFunctionCall","src":"697:18:21"},{"name":"length","nativeSrc":"717:6:21","nodeType":"YulIdentifier","src":"717:6:21"}],"functionName":{"name":"mstore","nativeSrc":"690:6:21","nodeType":"YulIdentifier","src":"690:6:21"},"nativeSrc":"690:34:21","nodeType":"YulFunctionCall","src":"690:34:21"},"nativeSrc":"690:34:21","nodeType":"YulExpressionStatement","src":"690:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"743:9:21","nodeType":"YulIdentifier","src":"743:9:21"},{"kind":"number","nativeSrc":"754:2:21","nodeType":"YulLiteral","src":"754:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"739:3:21","nodeType":"YulIdentifier","src":"739:3:21"},"nativeSrc":"739:18:21","nodeType":"YulFunctionCall","src":"739:18:21"},{"arguments":[{"name":"value0","nativeSrc":"763:6:21","nodeType":"YulIdentifier","src":"763:6:21"},{"kind":"number","nativeSrc":"771:2:21","nodeType":"YulLiteral","src":"771:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"759:3:21","nodeType":"YulIdentifier","src":"759:3:21"},"nativeSrc":"759:15:21","nodeType":"YulFunctionCall","src":"759:15:21"},{"name":"length","nativeSrc":"776:6:21","nodeType":"YulIdentifier","src":"776:6:21"}],"functionName":{"name":"mcopy","nativeSrc":"733:5:21","nodeType":"YulIdentifier","src":"733:5:21"},"nativeSrc":"733:50:21","nodeType":"YulFunctionCall","src":"733:50:21"},"nativeSrc":"733:50:21","nodeType":"YulExpressionStatement","src":"733:50:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"807:9:21","nodeType":"YulIdentifier","src":"807:9:21"},{"name":"length","nativeSrc":"818:6:21","nodeType":"YulIdentifier","src":"818:6:21"}],"functionName":{"name":"add","nativeSrc":"803:3:21","nodeType":"YulIdentifier","src":"803:3:21"},"nativeSrc":"803:22:21","nodeType":"YulFunctionCall","src":"803:22:21"},{"kind":"number","nativeSrc":"827:2:21","nodeType":"YulLiteral","src":"827:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"799:3:21","nodeType":"YulIdentifier","src":"799:3:21"},"nativeSrc":"799:31:21","nodeType":"YulFunctionCall","src":"799:31:21"},{"kind":"number","nativeSrc":"832:1:21","nodeType":"YulLiteral","src":"832:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"792:6:21","nodeType":"YulIdentifier","src":"792:6:21"},"nativeSrc":"792:42:21","nodeType":"YulFunctionCall","src":"792:42:21"},"nativeSrc":"792:42:21","nodeType":"YulExpressionStatement","src":"792:42:21"},{"nativeSrc":"843:121:21","nodeType":"YulAssignment","src":"843:121:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"859:9:21","nodeType":"YulIdentifier","src":"859:9:21"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"878:6:21","nodeType":"YulIdentifier","src":"878:6:21"},{"kind":"number","nativeSrc":"886:2:21","nodeType":"YulLiteral","src":"886:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"874:3:21","nodeType":"YulIdentifier","src":"874:3:21"},"nativeSrc":"874:15:21","nodeType":"YulFunctionCall","src":"874:15:21"},{"kind":"number","nativeSrc":"891:66:21","nodeType":"YulLiteral","src":"891:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"870:3:21","nodeType":"YulIdentifier","src":"870:3:21"},"nativeSrc":"870:88:21","nodeType":"YulFunctionCall","src":"870:88:21"}],"functionName":{"name":"add","nativeSrc":"855:3:21","nodeType":"YulIdentifier","src":"855:3:21"},"nativeSrc":"855:104:21","nodeType":"YulFunctionCall","src":"855:104:21"},{"kind":"number","nativeSrc":"961:2:21","nodeType":"YulLiteral","src":"961:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"851:3:21","nodeType":"YulIdentifier","src":"851:3:21"},"nativeSrc":"851:113:21","nodeType":"YulFunctionCall","src":"851:113:21"},"variableNames":[{"name":"tail","nativeSrc":"843:4:21","nodeType":"YulIdentifier","src":"843:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"493:477:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"583:9:21","nodeType":"YulTypedName","src":"583:9:21","type":""},{"name":"value0","nativeSrc":"594:6:21","nodeType":"YulTypedName","src":"594:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"605:4:21","nodeType":"YulTypedName","src":"605:4:21","type":""}],"src":"493:477:21"},{"body":{"nativeSrc":"1062:228:21","nodeType":"YulBlock","src":"1062:228:21","statements":[{"body":{"nativeSrc":"1108:16:21","nodeType":"YulBlock","src":"1108:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1117:1:21","nodeType":"YulLiteral","src":"1117:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1120:1:21","nodeType":"YulLiteral","src":"1120:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1110:6:21","nodeType":"YulIdentifier","src":"1110:6:21"},"nativeSrc":"1110:12:21","nodeType":"YulFunctionCall","src":"1110:12:21"},"nativeSrc":"1110:12:21","nodeType":"YulExpressionStatement","src":"1110:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1083:7:21","nodeType":"YulIdentifier","src":"1083:7:21"},{"name":"headStart","nativeSrc":"1092:9:21","nodeType":"YulIdentifier","src":"1092:9:21"}],"functionName":{"name":"sub","nativeSrc":"1079:3:21","nodeType":"YulIdentifier","src":"1079:3:21"},"nativeSrc":"1079:23:21","nodeType":"YulFunctionCall","src":"1079:23:21"},{"kind":"number","nativeSrc":"1104:2:21","nodeType":"YulLiteral","src":"1104:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1075:3:21","nodeType":"YulIdentifier","src":"1075:3:21"},"nativeSrc":"1075:32:21","nodeType":"YulFunctionCall","src":"1075:32:21"},"nativeSrc":"1072:52:21","nodeType":"YulIf","src":"1072:52:21"},{"nativeSrc":"1133:36:21","nodeType":"YulVariableDeclaration","src":"1133:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1159:9:21","nodeType":"YulIdentifier","src":"1159:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"1146:12:21","nodeType":"YulIdentifier","src":"1146:12:21"},"nativeSrc":"1146:23:21","nodeType":"YulFunctionCall","src":"1146:23:21"},"variables":[{"name":"value","nativeSrc":"1137:5:21","nodeType":"YulTypedName","src":"1137:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1203:5:21","nodeType":"YulIdentifier","src":"1203:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"1178:24:21","nodeType":"YulIdentifier","src":"1178:24:21"},"nativeSrc":"1178:31:21","nodeType":"YulFunctionCall","src":"1178:31:21"},"nativeSrc":"1178:31:21","nodeType":"YulExpressionStatement","src":"1178:31:21"},{"nativeSrc":"1218:15:21","nodeType":"YulAssignment","src":"1218:15:21","value":{"name":"value","nativeSrc":"1228:5:21","nodeType":"YulIdentifier","src":"1228:5:21"},"variableNames":[{"name":"value0","nativeSrc":"1218:6:21","nodeType":"YulIdentifier","src":"1218:6:21"}]},{"nativeSrc":"1242:42:21","nodeType":"YulAssignment","src":"1242:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1269:9:21","nodeType":"YulIdentifier","src":"1269:9:21"},{"kind":"number","nativeSrc":"1280:2:21","nodeType":"YulLiteral","src":"1280:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1265:3:21","nodeType":"YulIdentifier","src":"1265:3:21"},"nativeSrc":"1265:18:21","nodeType":"YulFunctionCall","src":"1265:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1252:12:21","nodeType":"YulIdentifier","src":"1252:12:21"},"nativeSrc":"1252:32:21","nodeType":"YulFunctionCall","src":"1252:32:21"},"variableNames":[{"name":"value1","nativeSrc":"1242:6:21","nodeType":"YulIdentifier","src":"1242:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"975:315:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1020:9:21","nodeType":"YulTypedName","src":"1020:9:21","type":""},{"name":"dataEnd","nativeSrc":"1031:7:21","nodeType":"YulTypedName","src":"1031:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1043:6:21","nodeType":"YulTypedName","src":"1043:6:21","type":""},{"name":"value1","nativeSrc":"1051:6:21","nodeType":"YulTypedName","src":"1051:6:21","type":""}],"src":"975:315:21"},{"body":{"nativeSrc":"1390:92:21","nodeType":"YulBlock","src":"1390:92:21","statements":[{"nativeSrc":"1400:26:21","nodeType":"YulAssignment","src":"1400:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1412:9:21","nodeType":"YulIdentifier","src":"1412:9:21"},{"kind":"number","nativeSrc":"1423:2:21","nodeType":"YulLiteral","src":"1423:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1408:3:21","nodeType":"YulIdentifier","src":"1408:3:21"},"nativeSrc":"1408:18:21","nodeType":"YulFunctionCall","src":"1408:18:21"},"variableNames":[{"name":"tail","nativeSrc":"1400:4:21","nodeType":"YulIdentifier","src":"1400:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1442:9:21","nodeType":"YulIdentifier","src":"1442:9:21"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1467:6:21","nodeType":"YulIdentifier","src":"1467:6:21"}],"functionName":{"name":"iszero","nativeSrc":"1460:6:21","nodeType":"YulIdentifier","src":"1460:6:21"},"nativeSrc":"1460:14:21","nodeType":"YulFunctionCall","src":"1460:14:21"}],"functionName":{"name":"iszero","nativeSrc":"1453:6:21","nodeType":"YulIdentifier","src":"1453:6:21"},"nativeSrc":"1453:22:21","nodeType":"YulFunctionCall","src":"1453:22:21"}],"functionName":{"name":"mstore","nativeSrc":"1435:6:21","nodeType":"YulIdentifier","src":"1435:6:21"},"nativeSrc":"1435:41:21","nodeType":"YulFunctionCall","src":"1435:41:21"},"nativeSrc":"1435:41:21","nodeType":"YulExpressionStatement","src":"1435:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1295:187:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1359:9:21","nodeType":"YulTypedName","src":"1359:9:21","type":""},{"name":"value0","nativeSrc":"1370:6:21","nodeType":"YulTypedName","src":"1370:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1381:4:21","nodeType":"YulTypedName","src":"1381:4:21","type":""}],"src":"1295:187:21"},{"body":{"nativeSrc":"1588:76:21","nodeType":"YulBlock","src":"1588:76:21","statements":[{"nativeSrc":"1598:26:21","nodeType":"YulAssignment","src":"1598:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1610:9:21","nodeType":"YulIdentifier","src":"1610:9:21"},{"kind":"number","nativeSrc":"1621:2:21","nodeType":"YulLiteral","src":"1621:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1606:3:21","nodeType":"YulIdentifier","src":"1606:3:21"},"nativeSrc":"1606:18:21","nodeType":"YulFunctionCall","src":"1606:18:21"},"variableNames":[{"name":"tail","nativeSrc":"1598:4:21","nodeType":"YulIdentifier","src":"1598:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1640:9:21","nodeType":"YulIdentifier","src":"1640:9:21"},{"name":"value0","nativeSrc":"1651:6:21","nodeType":"YulIdentifier","src":"1651:6:21"}],"functionName":{"name":"mstore","nativeSrc":"1633:6:21","nodeType":"YulIdentifier","src":"1633:6:21"},"nativeSrc":"1633:25:21","nodeType":"YulFunctionCall","src":"1633:25:21"},"nativeSrc":"1633:25:21","nodeType":"YulExpressionStatement","src":"1633:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1487:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1557:9:21","nodeType":"YulTypedName","src":"1557:9:21","type":""},{"name":"value0","nativeSrc":"1568:6:21","nodeType":"YulTypedName","src":"1568:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1579:4:21","nodeType":"YulTypedName","src":"1579:4:21","type":""}],"src":"1487:177:21"},{"body":{"nativeSrc":"1711:76:21","nodeType":"YulBlock","src":"1711:76:21","statements":[{"body":{"nativeSrc":"1765:16:21","nodeType":"YulBlock","src":"1765:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1774:1:21","nodeType":"YulLiteral","src":"1774:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1777:1:21","nodeType":"YulLiteral","src":"1777:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1767:6:21","nodeType":"YulIdentifier","src":"1767:6:21"},"nativeSrc":"1767:12:21","nodeType":"YulFunctionCall","src":"1767:12:21"},"nativeSrc":"1767:12:21","nodeType":"YulExpressionStatement","src":"1767:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1734:5:21","nodeType":"YulIdentifier","src":"1734:5:21"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1755:5:21","nodeType":"YulIdentifier","src":"1755:5:21"}],"functionName":{"name":"iszero","nativeSrc":"1748:6:21","nodeType":"YulIdentifier","src":"1748:6:21"},"nativeSrc":"1748:13:21","nodeType":"YulFunctionCall","src":"1748:13:21"}],"functionName":{"name":"iszero","nativeSrc":"1741:6:21","nodeType":"YulIdentifier","src":"1741:6:21"},"nativeSrc":"1741:21:21","nodeType":"YulFunctionCall","src":"1741:21:21"}],"functionName":{"name":"eq","nativeSrc":"1731:2:21","nodeType":"YulIdentifier","src":"1731:2:21"},"nativeSrc":"1731:32:21","nodeType":"YulFunctionCall","src":"1731:32:21"}],"functionName":{"name":"iszero","nativeSrc":"1724:6:21","nodeType":"YulIdentifier","src":"1724:6:21"},"nativeSrc":"1724:40:21","nodeType":"YulFunctionCall","src":"1724:40:21"},"nativeSrc":"1721:60:21","nodeType":"YulIf","src":"1721:60:21"}]},"name":"validator_revert_bool","nativeSrc":"1669:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1700:5:21","nodeType":"YulTypedName","src":"1700:5:21","type":""}],"src":"1669:118:21"},{"body":{"nativeSrc":"1876:298:21","nodeType":"YulBlock","src":"1876:298:21","statements":[{"body":{"nativeSrc":"1922:16:21","nodeType":"YulBlock","src":"1922:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1931:1:21","nodeType":"YulLiteral","src":"1931:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1934:1:21","nodeType":"YulLiteral","src":"1934:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1924:6:21","nodeType":"YulIdentifier","src":"1924:6:21"},"nativeSrc":"1924:12:21","nodeType":"YulFunctionCall","src":"1924:12:21"},"nativeSrc":"1924:12:21","nodeType":"YulExpressionStatement","src":"1924:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1897:7:21","nodeType":"YulIdentifier","src":"1897:7:21"},{"name":"headStart","nativeSrc":"1906:9:21","nodeType":"YulIdentifier","src":"1906:9:21"}],"functionName":{"name":"sub","nativeSrc":"1893:3:21","nodeType":"YulIdentifier","src":"1893:3:21"},"nativeSrc":"1893:23:21","nodeType":"YulFunctionCall","src":"1893:23:21"},{"kind":"number","nativeSrc":"1918:2:21","nodeType":"YulLiteral","src":"1918:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1889:3:21","nodeType":"YulIdentifier","src":"1889:3:21"},"nativeSrc":"1889:32:21","nodeType":"YulFunctionCall","src":"1889:32:21"},"nativeSrc":"1886:52:21","nodeType":"YulIf","src":"1886:52:21"},{"nativeSrc":"1947:36:21","nodeType":"YulVariableDeclaration","src":"1947:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1973:9:21","nodeType":"YulIdentifier","src":"1973:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"1960:12:21","nodeType":"YulIdentifier","src":"1960:12:21"},"nativeSrc":"1960:23:21","nodeType":"YulFunctionCall","src":"1960:23:21"},"variables":[{"name":"value","nativeSrc":"1951:5:21","nodeType":"YulTypedName","src":"1951:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2017:5:21","nodeType":"YulIdentifier","src":"2017:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"1992:24:21","nodeType":"YulIdentifier","src":"1992:24:21"},"nativeSrc":"1992:31:21","nodeType":"YulFunctionCall","src":"1992:31:21"},"nativeSrc":"1992:31:21","nodeType":"YulExpressionStatement","src":"1992:31:21"},{"nativeSrc":"2032:15:21","nodeType":"YulAssignment","src":"2032:15:21","value":{"name":"value","nativeSrc":"2042:5:21","nodeType":"YulIdentifier","src":"2042:5:21"},"variableNames":[{"name":"value0","nativeSrc":"2032:6:21","nodeType":"YulIdentifier","src":"2032:6:21"}]},{"nativeSrc":"2056:47:21","nodeType":"YulVariableDeclaration","src":"2056:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2088:9:21","nodeType":"YulIdentifier","src":"2088:9:21"},{"kind":"number","nativeSrc":"2099:2:21","nodeType":"YulLiteral","src":"2099:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2084:3:21","nodeType":"YulIdentifier","src":"2084:3:21"},"nativeSrc":"2084:18:21","nodeType":"YulFunctionCall","src":"2084:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"2071:12:21","nodeType":"YulIdentifier","src":"2071:12:21"},"nativeSrc":"2071:32:21","nodeType":"YulFunctionCall","src":"2071:32:21"},"variables":[{"name":"value_1","nativeSrc":"2060:7:21","nodeType":"YulTypedName","src":"2060:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"2134:7:21","nodeType":"YulIdentifier","src":"2134:7:21"}],"functionName":{"name":"validator_revert_bool","nativeSrc":"2112:21:21","nodeType":"YulIdentifier","src":"2112:21:21"},"nativeSrc":"2112:30:21","nodeType":"YulFunctionCall","src":"2112:30:21"},"nativeSrc":"2112:30:21","nodeType":"YulExpressionStatement","src":"2112:30:21"},{"nativeSrc":"2151:17:21","nodeType":"YulAssignment","src":"2151:17:21","value":{"name":"value_1","nativeSrc":"2161:7:21","nodeType":"YulIdentifier","src":"2161:7:21"},"variableNames":[{"name":"value1","nativeSrc":"2151:6:21","nodeType":"YulIdentifier","src":"2151:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"1792:382:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1834:9:21","nodeType":"YulTypedName","src":"1834:9:21","type":""},{"name":"dataEnd","nativeSrc":"1845:7:21","nodeType":"YulTypedName","src":"1845:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1857:6:21","nodeType":"YulTypedName","src":"1857:6:21","type":""},{"name":"value1","nativeSrc":"1865:6:21","nodeType":"YulTypedName","src":"1865:6:21","type":""}],"src":"1792:382:21"},{"body":{"nativeSrc":"2283:352:21","nodeType":"YulBlock","src":"2283:352:21","statements":[{"body":{"nativeSrc":"2329:16:21","nodeType":"YulBlock","src":"2329:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2338:1:21","nodeType":"YulLiteral","src":"2338:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2341:1:21","nodeType":"YulLiteral","src":"2341:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2331:6:21","nodeType":"YulIdentifier","src":"2331:6:21"},"nativeSrc":"2331:12:21","nodeType":"YulFunctionCall","src":"2331:12:21"},"nativeSrc":"2331:12:21","nodeType":"YulExpressionStatement","src":"2331:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2304:7:21","nodeType":"YulIdentifier","src":"2304:7:21"},{"name":"headStart","nativeSrc":"2313:9:21","nodeType":"YulIdentifier","src":"2313:9:21"}],"functionName":{"name":"sub","nativeSrc":"2300:3:21","nodeType":"YulIdentifier","src":"2300:3:21"},"nativeSrc":"2300:23:21","nodeType":"YulFunctionCall","src":"2300:23:21"},{"kind":"number","nativeSrc":"2325:2:21","nodeType":"YulLiteral","src":"2325:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2296:3:21","nodeType":"YulIdentifier","src":"2296:3:21"},"nativeSrc":"2296:32:21","nodeType":"YulFunctionCall","src":"2296:32:21"},"nativeSrc":"2293:52:21","nodeType":"YulIf","src":"2293:52:21"},{"nativeSrc":"2354:36:21","nodeType":"YulVariableDeclaration","src":"2354:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2380:9:21","nodeType":"YulIdentifier","src":"2380:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"2367:12:21","nodeType":"YulIdentifier","src":"2367:12:21"},"nativeSrc":"2367:23:21","nodeType":"YulFunctionCall","src":"2367:23:21"},"variables":[{"name":"value","nativeSrc":"2358:5:21","nodeType":"YulTypedName","src":"2358:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2424:5:21","nodeType":"YulIdentifier","src":"2424:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2399:24:21","nodeType":"YulIdentifier","src":"2399:24:21"},"nativeSrc":"2399:31:21","nodeType":"YulFunctionCall","src":"2399:31:21"},"nativeSrc":"2399:31:21","nodeType":"YulExpressionStatement","src":"2399:31:21"},{"nativeSrc":"2439:15:21","nodeType":"YulAssignment","src":"2439:15:21","value":{"name":"value","nativeSrc":"2449:5:21","nodeType":"YulIdentifier","src":"2449:5:21"},"variableNames":[{"name":"value0","nativeSrc":"2439:6:21","nodeType":"YulIdentifier","src":"2439:6:21"}]},{"nativeSrc":"2463:47:21","nodeType":"YulVariableDeclaration","src":"2463:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2495:9:21","nodeType":"YulIdentifier","src":"2495:9:21"},{"kind":"number","nativeSrc":"2506:2:21","nodeType":"YulLiteral","src":"2506:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2491:3:21","nodeType":"YulIdentifier","src":"2491:3:21"},"nativeSrc":"2491:18:21","nodeType":"YulFunctionCall","src":"2491:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"2478:12:21","nodeType":"YulIdentifier","src":"2478:12:21"},"nativeSrc":"2478:32:21","nodeType":"YulFunctionCall","src":"2478:32:21"},"variables":[{"name":"value_1","nativeSrc":"2467:7:21","nodeType":"YulTypedName","src":"2467:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"2544:7:21","nodeType":"YulIdentifier","src":"2544:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2519:24:21","nodeType":"YulIdentifier","src":"2519:24:21"},"nativeSrc":"2519:33:21","nodeType":"YulFunctionCall","src":"2519:33:21"},"nativeSrc":"2519:33:21","nodeType":"YulExpressionStatement","src":"2519:33:21"},{"nativeSrc":"2561:17:21","nodeType":"YulAssignment","src":"2561:17:21","value":{"name":"value_1","nativeSrc":"2571:7:21","nodeType":"YulIdentifier","src":"2571:7:21"},"variableNames":[{"name":"value1","nativeSrc":"2561:6:21","nodeType":"YulIdentifier","src":"2561:6:21"}]},{"nativeSrc":"2587:42:21","nodeType":"YulAssignment","src":"2587:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2614:9:21","nodeType":"YulIdentifier","src":"2614:9:21"},{"kind":"number","nativeSrc":"2625:2:21","nodeType":"YulLiteral","src":"2625:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2610:3:21","nodeType":"YulIdentifier","src":"2610:3:21"},"nativeSrc":"2610:18:21","nodeType":"YulFunctionCall","src":"2610:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"2597:12:21","nodeType":"YulIdentifier","src":"2597:12:21"},"nativeSrc":"2597:32:21","nodeType":"YulFunctionCall","src":"2597:32:21"},"variableNames":[{"name":"value2","nativeSrc":"2587:6:21","nodeType":"YulIdentifier","src":"2587:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"2179:456:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2233:9:21","nodeType":"YulTypedName","src":"2233:9:21","type":""},{"name":"dataEnd","nativeSrc":"2244:7:21","nodeType":"YulTypedName","src":"2244:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2256:6:21","nodeType":"YulTypedName","src":"2256:6:21","type":""},{"name":"value1","nativeSrc":"2264:6:21","nodeType":"YulTypedName","src":"2264:6:21","type":""},{"name":"value2","nativeSrc":"2272:6:21","nodeType":"YulTypedName","src":"2272:6:21","type":""}],"src":"2179:456:21"},{"body":{"nativeSrc":"2737:87:21","nodeType":"YulBlock","src":"2737:87:21","statements":[{"nativeSrc":"2747:26:21","nodeType":"YulAssignment","src":"2747:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2759:9:21","nodeType":"YulIdentifier","src":"2759:9:21"},{"kind":"number","nativeSrc":"2770:2:21","nodeType":"YulLiteral","src":"2770:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2755:3:21","nodeType":"YulIdentifier","src":"2755:3:21"},"nativeSrc":"2755:18:21","nodeType":"YulFunctionCall","src":"2755:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2747:4:21","nodeType":"YulIdentifier","src":"2747:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2789:9:21","nodeType":"YulIdentifier","src":"2789:9:21"},{"arguments":[{"name":"value0","nativeSrc":"2804:6:21","nodeType":"YulIdentifier","src":"2804:6:21"},{"kind":"number","nativeSrc":"2812:4:21","nodeType":"YulLiteral","src":"2812:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"2800:3:21","nodeType":"YulIdentifier","src":"2800:3:21"},"nativeSrc":"2800:17:21","nodeType":"YulFunctionCall","src":"2800:17:21"}],"functionName":{"name":"mstore","nativeSrc":"2782:6:21","nodeType":"YulIdentifier","src":"2782:6:21"},"nativeSrc":"2782:36:21","nodeType":"YulFunctionCall","src":"2782:36:21"},"nativeSrc":"2782:36:21","nodeType":"YulExpressionStatement","src":"2782:36:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"2640:184:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2706:9:21","nodeType":"YulTypedName","src":"2706:9:21","type":""},{"name":"value0","nativeSrc":"2717:6:21","nodeType":"YulTypedName","src":"2717:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2728:4:21","nodeType":"YulTypedName","src":"2728:4:21","type":""}],"src":"2640:184:21"},{"body":{"nativeSrc":"2861:152:21","nodeType":"YulBlock","src":"2861:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2878:1:21","nodeType":"YulLiteral","src":"2878:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2881:77:21","nodeType":"YulLiteral","src":"2881:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"2871:6:21","nodeType":"YulIdentifier","src":"2871:6:21"},"nativeSrc":"2871:88:21","nodeType":"YulFunctionCall","src":"2871:88:21"},"nativeSrc":"2871:88:21","nodeType":"YulExpressionStatement","src":"2871:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2975:1:21","nodeType":"YulLiteral","src":"2975:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"2978:4:21","nodeType":"YulLiteral","src":"2978:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2968:6:21","nodeType":"YulIdentifier","src":"2968:6:21"},"nativeSrc":"2968:15:21","nodeType":"YulFunctionCall","src":"2968:15:21"},"nativeSrc":"2968:15:21","nodeType":"YulExpressionStatement","src":"2968:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2999:1:21","nodeType":"YulLiteral","src":"2999:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3002:4:21","nodeType":"YulLiteral","src":"3002:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2992:6:21","nodeType":"YulIdentifier","src":"2992:6:21"},"nativeSrc":"2992:15:21","nodeType":"YulFunctionCall","src":"2992:15:21"},"nativeSrc":"2992:15:21","nodeType":"YulExpressionStatement","src":"2992:15:21"}]},"name":"panic_error_0x41","nativeSrc":"2829:184:21","nodeType":"YulFunctionDefinition","src":"2829:184:21"},{"body":{"nativeSrc":"3092:616:21","nodeType":"YulBlock","src":"3092:616:21","statements":[{"nativeSrc":"3102:28:21","nodeType":"YulVariableDeclaration","src":"3102:28:21","value":{"kind":"number","nativeSrc":"3112:18:21","nodeType":"YulLiteral","src":"3112:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"3106:2:21","nodeType":"YulTypedName","src":"3106:2:21","type":""}]},{"body":{"nativeSrc":"3157:22:21","nodeType":"YulBlock","src":"3157:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3159:16:21","nodeType":"YulIdentifier","src":"3159:16:21"},"nativeSrc":"3159:18:21","nodeType":"YulFunctionCall","src":"3159:18:21"},"nativeSrc":"3159:18:21","nodeType":"YulExpressionStatement","src":"3159:18:21"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3145:6:21","nodeType":"YulIdentifier","src":"3145:6:21"},{"name":"_1","nativeSrc":"3153:2:21","nodeType":"YulIdentifier","src":"3153:2:21"}],"functionName":{"name":"gt","nativeSrc":"3142:2:21","nodeType":"YulIdentifier","src":"3142:2:21"},"nativeSrc":"3142:14:21","nodeType":"YulFunctionCall","src":"3142:14:21"},"nativeSrc":"3139:40:21","nodeType":"YulIf","src":"3139:40:21"},{"nativeSrc":"3188:76:21","nodeType":"YulVariableDeclaration","src":"3188:76:21","value":{"kind":"number","nativeSrc":"3198:66:21","nodeType":"YulLiteral","src":"3198:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"},"variables":[{"name":"_2","nativeSrc":"3192:2:21","nodeType":"YulTypedName","src":"3192:2:21","type":""}]},{"nativeSrc":"3273:23:21","nodeType":"YulVariableDeclaration","src":"3273:23:21","value":{"arguments":[{"kind":"number","nativeSrc":"3293:2:21","nodeType":"YulLiteral","src":"3293:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"3287:5:21","nodeType":"YulIdentifier","src":"3287:5:21"},"nativeSrc":"3287:9:21","nodeType":"YulFunctionCall","src":"3287:9:21"},"variables":[{"name":"memPtr","nativeSrc":"3277:6:21","nodeType":"YulTypedName","src":"3277:6:21","type":""}]},{"nativeSrc":"3305:73:21","nodeType":"YulVariableDeclaration","src":"3305:73:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"3327:6:21","nodeType":"YulIdentifier","src":"3327:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3351:6:21","nodeType":"YulIdentifier","src":"3351:6:21"},{"kind":"number","nativeSrc":"3359:2:21","nodeType":"YulLiteral","src":"3359:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3347:3:21","nodeType":"YulIdentifier","src":"3347:3:21"},"nativeSrc":"3347:15:21","nodeType":"YulFunctionCall","src":"3347:15:21"},{"name":"_2","nativeSrc":"3364:2:21","nodeType":"YulIdentifier","src":"3364:2:21"}],"functionName":{"name":"and","nativeSrc":"3343:3:21","nodeType":"YulIdentifier","src":"3343:3:21"},"nativeSrc":"3343:24:21","nodeType":"YulFunctionCall","src":"3343:24:21"},{"kind":"number","nativeSrc":"3369:2:21","nodeType":"YulLiteral","src":"3369:2:21","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"3339:3:21","nodeType":"YulIdentifier","src":"3339:3:21"},"nativeSrc":"3339:33:21","nodeType":"YulFunctionCall","src":"3339:33:21"},{"name":"_2","nativeSrc":"3374:2:21","nodeType":"YulIdentifier","src":"3374:2:21"}],"functionName":{"name":"and","nativeSrc":"3335:3:21","nodeType":"YulIdentifier","src":"3335:3:21"},"nativeSrc":"3335:42:21","nodeType":"YulFunctionCall","src":"3335:42:21"}],"functionName":{"name":"add","nativeSrc":"3323:3:21","nodeType":"YulIdentifier","src":"3323:3:21"},"nativeSrc":"3323:55:21","nodeType":"YulFunctionCall","src":"3323:55:21"},"variables":[{"name":"newFreePtr","nativeSrc":"3309:10:21","nodeType":"YulTypedName","src":"3309:10:21","type":""}]},{"body":{"nativeSrc":"3437:22:21","nodeType":"YulBlock","src":"3437:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3439:16:21","nodeType":"YulIdentifier","src":"3439:16:21"},"nativeSrc":"3439:18:21","nodeType":"YulFunctionCall","src":"3439:18:21"},"nativeSrc":"3439:18:21","nodeType":"YulExpressionStatement","src":"3439:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"3396:10:21","nodeType":"YulIdentifier","src":"3396:10:21"},{"name":"_1","nativeSrc":"3408:2:21","nodeType":"YulIdentifier","src":"3408:2:21"}],"functionName":{"name":"gt","nativeSrc":"3393:2:21","nodeType":"YulIdentifier","src":"3393:2:21"},"nativeSrc":"3393:18:21","nodeType":"YulFunctionCall","src":"3393:18:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"3416:10:21","nodeType":"YulIdentifier","src":"3416:10:21"},{"name":"memPtr","nativeSrc":"3428:6:21","nodeType":"YulIdentifier","src":"3428:6:21"}],"functionName":{"name":"lt","nativeSrc":"3413:2:21","nodeType":"YulIdentifier","src":"3413:2:21"},"nativeSrc":"3413:22:21","nodeType":"YulFunctionCall","src":"3413:22:21"}],"functionName":{"name":"or","nativeSrc":"3390:2:21","nodeType":"YulIdentifier","src":"3390:2:21"},"nativeSrc":"3390:46:21","nodeType":"YulFunctionCall","src":"3390:46:21"},"nativeSrc":"3387:72:21","nodeType":"YulIf","src":"3387:72:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3475:2:21","nodeType":"YulLiteral","src":"3475:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"3479:10:21","nodeType":"YulIdentifier","src":"3479:10:21"}],"functionName":{"name":"mstore","nativeSrc":"3468:6:21","nodeType":"YulIdentifier","src":"3468:6:21"},"nativeSrc":"3468:22:21","nodeType":"YulFunctionCall","src":"3468:22:21"},"nativeSrc":"3468:22:21","nodeType":"YulExpressionStatement","src":"3468:22:21"},{"nativeSrc":"3499:15:21","nodeType":"YulAssignment","src":"3499:15:21","value":{"name":"memPtr","nativeSrc":"3508:6:21","nodeType":"YulIdentifier","src":"3508:6:21"},"variableNames":[{"name":"array","nativeSrc":"3499:5:21","nodeType":"YulIdentifier","src":"3499:5:21"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"3530:6:21","nodeType":"YulIdentifier","src":"3530:6:21"},{"name":"length","nativeSrc":"3538:6:21","nodeType":"YulIdentifier","src":"3538:6:21"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:21","nodeType":"YulIdentifier","src":"3523:6:21"},"nativeSrc":"3523:22:21","nodeType":"YulFunctionCall","src":"3523:22:21"},"nativeSrc":"3523:22:21","nodeType":"YulExpressionStatement","src":"3523:22:21"},{"body":{"nativeSrc":"3583:16:21","nodeType":"YulBlock","src":"3583:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3592:1:21","nodeType":"YulLiteral","src":"3592:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3595:1:21","nodeType":"YulLiteral","src":"3595:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3585:6:21","nodeType":"YulIdentifier","src":"3585:6:21"},"nativeSrc":"3585:12:21","nodeType":"YulFunctionCall","src":"3585:12:21"},"nativeSrc":"3585:12:21","nodeType":"YulExpressionStatement","src":"3585:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3564:3:21","nodeType":"YulIdentifier","src":"3564:3:21"},{"name":"length","nativeSrc":"3569:6:21","nodeType":"YulIdentifier","src":"3569:6:21"}],"functionName":{"name":"add","nativeSrc":"3560:3:21","nodeType":"YulIdentifier","src":"3560:3:21"},"nativeSrc":"3560:16:21","nodeType":"YulFunctionCall","src":"3560:16:21"},{"name":"end","nativeSrc":"3578:3:21","nodeType":"YulIdentifier","src":"3578:3:21"}],"functionName":{"name":"gt","nativeSrc":"3557:2:21","nodeType":"YulIdentifier","src":"3557:2:21"},"nativeSrc":"3557:25:21","nodeType":"YulFunctionCall","src":"3557:25:21"},"nativeSrc":"3554:45:21","nodeType":"YulIf","src":"3554:45:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3625:6:21","nodeType":"YulIdentifier","src":"3625:6:21"},{"kind":"number","nativeSrc":"3633:4:21","nodeType":"YulLiteral","src":"3633:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3621:3:21","nodeType":"YulIdentifier","src":"3621:3:21"},"nativeSrc":"3621:17:21","nodeType":"YulFunctionCall","src":"3621:17:21"},{"name":"src","nativeSrc":"3640:3:21","nodeType":"YulIdentifier","src":"3640:3:21"},{"name":"length","nativeSrc":"3645:6:21","nodeType":"YulIdentifier","src":"3645:6:21"}],"functionName":{"name":"calldatacopy","nativeSrc":"3608:12:21","nodeType":"YulIdentifier","src":"3608:12:21"},"nativeSrc":"3608:44:21","nodeType":"YulFunctionCall","src":"3608:44:21"},"nativeSrc":"3608:44:21","nodeType":"YulExpressionStatement","src":"3608:44:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3676:6:21","nodeType":"YulIdentifier","src":"3676:6:21"},{"name":"length","nativeSrc":"3684:6:21","nodeType":"YulIdentifier","src":"3684:6:21"}],"functionName":{"name":"add","nativeSrc":"3672:3:21","nodeType":"YulIdentifier","src":"3672:3:21"},"nativeSrc":"3672:19:21","nodeType":"YulFunctionCall","src":"3672:19:21"},{"kind":"number","nativeSrc":"3693:4:21","nodeType":"YulLiteral","src":"3693:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3668:3:21","nodeType":"YulIdentifier","src":"3668:3:21"},"nativeSrc":"3668:30:21","nodeType":"YulFunctionCall","src":"3668:30:21"},{"kind":"number","nativeSrc":"3700:1:21","nodeType":"YulLiteral","src":"3700:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:21","nodeType":"YulIdentifier","src":"3661:6:21"},"nativeSrc":"3661:41:21","nodeType":"YulFunctionCall","src":"3661:41:21"},"nativeSrc":"3661:41:21","nodeType":"YulExpressionStatement","src":"3661:41:21"}]},"name":"abi_decode_available_length_bytes","nativeSrc":"3018:690:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3061:3:21","nodeType":"YulTypedName","src":"3061:3:21","type":""},{"name":"length","nativeSrc":"3066:6:21","nodeType":"YulTypedName","src":"3066:6:21","type":""},{"name":"end","nativeSrc":"3074:3:21","nodeType":"YulTypedName","src":"3074:3:21","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3082:5:21","nodeType":"YulTypedName","src":"3082:5:21","type":""}],"src":"3018:690:21"},{"body":{"nativeSrc":"3809:488:21","nodeType":"YulBlock","src":"3809:488:21","statements":[{"body":{"nativeSrc":"3855:16:21","nodeType":"YulBlock","src":"3855:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3864:1:21","nodeType":"YulLiteral","src":"3864:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3867:1:21","nodeType":"YulLiteral","src":"3867:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3857:6:21","nodeType":"YulIdentifier","src":"3857:6:21"},"nativeSrc":"3857:12:21","nodeType":"YulFunctionCall","src":"3857:12:21"},"nativeSrc":"3857:12:21","nodeType":"YulExpressionStatement","src":"3857:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3830:7:21","nodeType":"YulIdentifier","src":"3830:7:21"},{"name":"headStart","nativeSrc":"3839:9:21","nodeType":"YulIdentifier","src":"3839:9:21"}],"functionName":{"name":"sub","nativeSrc":"3826:3:21","nodeType":"YulIdentifier","src":"3826:3:21"},"nativeSrc":"3826:23:21","nodeType":"YulFunctionCall","src":"3826:23:21"},{"kind":"number","nativeSrc":"3851:2:21","nodeType":"YulLiteral","src":"3851:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3822:3:21","nodeType":"YulIdentifier","src":"3822:3:21"},"nativeSrc":"3822:32:21","nodeType":"YulFunctionCall","src":"3822:32:21"},"nativeSrc":"3819:52:21","nodeType":"YulIf","src":"3819:52:21"},{"nativeSrc":"3880:36:21","nodeType":"YulVariableDeclaration","src":"3880:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3906:9:21","nodeType":"YulIdentifier","src":"3906:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"3893:12:21","nodeType":"YulIdentifier","src":"3893:12:21"},"nativeSrc":"3893:23:21","nodeType":"YulFunctionCall","src":"3893:23:21"},"variables":[{"name":"value","nativeSrc":"3884:5:21","nodeType":"YulTypedName","src":"3884:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3950:5:21","nodeType":"YulIdentifier","src":"3950:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3925:24:21","nodeType":"YulIdentifier","src":"3925:24:21"},"nativeSrc":"3925:31:21","nodeType":"YulFunctionCall","src":"3925:31:21"},"nativeSrc":"3925:31:21","nodeType":"YulExpressionStatement","src":"3925:31:21"},{"nativeSrc":"3965:15:21","nodeType":"YulAssignment","src":"3965:15:21","value":{"name":"value","nativeSrc":"3975:5:21","nodeType":"YulIdentifier","src":"3975:5:21"},"variableNames":[{"name":"value0","nativeSrc":"3965:6:21","nodeType":"YulIdentifier","src":"3965:6:21"}]},{"nativeSrc":"3989:46:21","nodeType":"YulVariableDeclaration","src":"3989:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4020:9:21","nodeType":"YulIdentifier","src":"4020:9:21"},{"kind":"number","nativeSrc":"4031:2:21","nodeType":"YulLiteral","src":"4031:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4016:3:21","nodeType":"YulIdentifier","src":"4016:3:21"},"nativeSrc":"4016:18:21","nodeType":"YulFunctionCall","src":"4016:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"4003:12:21","nodeType":"YulIdentifier","src":"4003:12:21"},"nativeSrc":"4003:32:21","nodeType":"YulFunctionCall","src":"4003:32:21"},"variables":[{"name":"offset","nativeSrc":"3993:6:21","nodeType":"YulTypedName","src":"3993:6:21","type":""}]},{"body":{"nativeSrc":"4078:16:21","nodeType":"YulBlock","src":"4078:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4087:1:21","nodeType":"YulLiteral","src":"4087:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4090:1:21","nodeType":"YulLiteral","src":"4090:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4080:6:21","nodeType":"YulIdentifier","src":"4080:6:21"},"nativeSrc":"4080:12:21","nodeType":"YulFunctionCall","src":"4080:12:21"},"nativeSrc":"4080:12:21","nodeType":"YulExpressionStatement","src":"4080:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4050:6:21","nodeType":"YulIdentifier","src":"4050:6:21"},{"kind":"number","nativeSrc":"4058:18:21","nodeType":"YulLiteral","src":"4058:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4047:2:21","nodeType":"YulIdentifier","src":"4047:2:21"},"nativeSrc":"4047:30:21","nodeType":"YulFunctionCall","src":"4047:30:21"},"nativeSrc":"4044:50:21","nodeType":"YulIf","src":"4044:50:21"},{"nativeSrc":"4103:32:21","nodeType":"YulVariableDeclaration","src":"4103:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4117:9:21","nodeType":"YulIdentifier","src":"4117:9:21"},{"name":"offset","nativeSrc":"4128:6:21","nodeType":"YulIdentifier","src":"4128:6:21"}],"functionName":{"name":"add","nativeSrc":"4113:3:21","nodeType":"YulIdentifier","src":"4113:3:21"},"nativeSrc":"4113:22:21","nodeType":"YulFunctionCall","src":"4113:22:21"},"variables":[{"name":"_1","nativeSrc":"4107:2:21","nodeType":"YulTypedName","src":"4107:2:21","type":""}]},{"body":{"nativeSrc":"4183:16:21","nodeType":"YulBlock","src":"4183:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4192:1:21","nodeType":"YulLiteral","src":"4192:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4195:1:21","nodeType":"YulLiteral","src":"4195:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4185:6:21","nodeType":"YulIdentifier","src":"4185:6:21"},"nativeSrc":"4185:12:21","nodeType":"YulFunctionCall","src":"4185:12:21"},"nativeSrc":"4185:12:21","nodeType":"YulExpressionStatement","src":"4185:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"4162:2:21","nodeType":"YulIdentifier","src":"4162:2:21"},{"kind":"number","nativeSrc":"4166:4:21","nodeType":"YulLiteral","src":"4166:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4158:3:21","nodeType":"YulIdentifier","src":"4158:3:21"},"nativeSrc":"4158:13:21","nodeType":"YulFunctionCall","src":"4158:13:21"},{"name":"dataEnd","nativeSrc":"4173:7:21","nodeType":"YulIdentifier","src":"4173:7:21"}],"functionName":{"name":"slt","nativeSrc":"4154:3:21","nodeType":"YulIdentifier","src":"4154:3:21"},"nativeSrc":"4154:27:21","nodeType":"YulFunctionCall","src":"4154:27:21"}],"functionName":{"name":"iszero","nativeSrc":"4147:6:21","nodeType":"YulIdentifier","src":"4147:6:21"},"nativeSrc":"4147:35:21","nodeType":"YulFunctionCall","src":"4147:35:21"},"nativeSrc":"4144:55:21","nodeType":"YulIf","src":"4144:55:21"},{"nativeSrc":"4208:83:21","nodeType":"YulAssignment","src":"4208:83:21","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"4256:2:21","nodeType":"YulIdentifier","src":"4256:2:21"},{"kind":"number","nativeSrc":"4260:2:21","nodeType":"YulLiteral","src":"4260:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4252:3:21","nodeType":"YulIdentifier","src":"4252:3:21"},"nativeSrc":"4252:11:21","nodeType":"YulFunctionCall","src":"4252:11:21"},{"arguments":[{"name":"_1","nativeSrc":"4278:2:21","nodeType":"YulIdentifier","src":"4278:2:21"}],"functionName":{"name":"calldataload","nativeSrc":"4265:12:21","nodeType":"YulIdentifier","src":"4265:12:21"},"nativeSrc":"4265:16:21","nodeType":"YulFunctionCall","src":"4265:16:21"},{"name":"dataEnd","nativeSrc":"4283:7:21","nodeType":"YulIdentifier","src":"4283:7:21"}],"functionName":{"name":"abi_decode_available_length_bytes","nativeSrc":"4218:33:21","nodeType":"YulIdentifier","src":"4218:33:21"},"nativeSrc":"4218:73:21","nodeType":"YulFunctionCall","src":"4218:73:21"},"variableNames":[{"name":"value1","nativeSrc":"4208:6:21","nodeType":"YulIdentifier","src":"4208:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"3713:584:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3767:9:21","nodeType":"YulTypedName","src":"3767:9:21","type":""},{"name":"dataEnd","nativeSrc":"3778:7:21","nodeType":"YulTypedName","src":"3778:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3790:6:21","nodeType":"YulTypedName","src":"3790:6:21","type":""},{"name":"value1","nativeSrc":"3798:6:21","nodeType":"YulTypedName","src":"3798:6:21","type":""}],"src":"3713:584:21"},{"body":{"nativeSrc":"4403:76:21","nodeType":"YulBlock","src":"4403:76:21","statements":[{"nativeSrc":"4413:26:21","nodeType":"YulAssignment","src":"4413:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4425:9:21","nodeType":"YulIdentifier","src":"4425:9:21"},{"kind":"number","nativeSrc":"4436:2:21","nodeType":"YulLiteral","src":"4436:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4421:3:21","nodeType":"YulIdentifier","src":"4421:3:21"},"nativeSrc":"4421:18:21","nodeType":"YulFunctionCall","src":"4421:18:21"},"variableNames":[{"name":"tail","nativeSrc":"4413:4:21","nodeType":"YulIdentifier","src":"4413:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4455:9:21","nodeType":"YulIdentifier","src":"4455:9:21"},{"name":"value0","nativeSrc":"4466:6:21","nodeType":"YulIdentifier","src":"4466:6:21"}],"functionName":{"name":"mstore","nativeSrc":"4448:6:21","nodeType":"YulIdentifier","src":"4448:6:21"},"nativeSrc":"4448:25:21","nodeType":"YulFunctionCall","src":"4448:25:21"},"nativeSrc":"4448:25:21","nodeType":"YulExpressionStatement","src":"4448:25:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"4302:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4372:9:21","nodeType":"YulTypedName","src":"4372:9:21","type":""},{"name":"value0","nativeSrc":"4383:6:21","nodeType":"YulTypedName","src":"4383:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4394:4:21","nodeType":"YulTypedName","src":"4394:4:21","type":""}],"src":"4302:177:21"},{"body":{"nativeSrc":"4554:177:21","nodeType":"YulBlock","src":"4554:177:21","statements":[{"body":{"nativeSrc":"4600:16:21","nodeType":"YulBlock","src":"4600:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4609:1:21","nodeType":"YulLiteral","src":"4609:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4612:1:21","nodeType":"YulLiteral","src":"4612:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4602:6:21","nodeType":"YulIdentifier","src":"4602:6:21"},"nativeSrc":"4602:12:21","nodeType":"YulFunctionCall","src":"4602:12:21"},"nativeSrc":"4602:12:21","nodeType":"YulExpressionStatement","src":"4602:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4575:7:21","nodeType":"YulIdentifier","src":"4575:7:21"},{"name":"headStart","nativeSrc":"4584:9:21","nodeType":"YulIdentifier","src":"4584:9:21"}],"functionName":{"name":"sub","nativeSrc":"4571:3:21","nodeType":"YulIdentifier","src":"4571:3:21"},"nativeSrc":"4571:23:21","nodeType":"YulFunctionCall","src":"4571:23:21"},{"kind":"number","nativeSrc":"4596:2:21","nodeType":"YulLiteral","src":"4596:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4567:3:21","nodeType":"YulIdentifier","src":"4567:3:21"},"nativeSrc":"4567:32:21","nodeType":"YulFunctionCall","src":"4567:32:21"},"nativeSrc":"4564:52:21","nodeType":"YulIf","src":"4564:52:21"},{"nativeSrc":"4625:36:21","nodeType":"YulVariableDeclaration","src":"4625:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4651:9:21","nodeType":"YulIdentifier","src":"4651:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"4638:12:21","nodeType":"YulIdentifier","src":"4638:12:21"},"nativeSrc":"4638:23:21","nodeType":"YulFunctionCall","src":"4638:23:21"},"variables":[{"name":"value","nativeSrc":"4629:5:21","nodeType":"YulTypedName","src":"4629:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4695:5:21","nodeType":"YulIdentifier","src":"4695:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4670:24:21","nodeType":"YulIdentifier","src":"4670:24:21"},"nativeSrc":"4670:31:21","nodeType":"YulFunctionCall","src":"4670:31:21"},"nativeSrc":"4670:31:21","nodeType":"YulExpressionStatement","src":"4670:31:21"},{"nativeSrc":"4710:15:21","nodeType":"YulAssignment","src":"4710:15:21","value":{"name":"value","nativeSrc":"4720:5:21","nodeType":"YulIdentifier","src":"4720:5:21"},"variableNames":[{"name":"value0","nativeSrc":"4710:6:21","nodeType":"YulIdentifier","src":"4710:6:21"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4484:247:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4520:9:21","nodeType":"YulTypedName","src":"4520:9:21","type":""},{"name":"dataEnd","nativeSrc":"4531:7:21","nodeType":"YulTypedName","src":"4531:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4543:6:21","nodeType":"YulTypedName","src":"4543:6:21","type":""}],"src":"4484:247:21"},{"body":{"nativeSrc":"4837:125:21","nodeType":"YulBlock","src":"4837:125:21","statements":[{"nativeSrc":"4847:26:21","nodeType":"YulAssignment","src":"4847:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4859:9:21","nodeType":"YulIdentifier","src":"4859:9:21"},{"kind":"number","nativeSrc":"4870:2:21","nodeType":"YulLiteral","src":"4870:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4855:3:21","nodeType":"YulIdentifier","src":"4855:3:21"},"nativeSrc":"4855:18:21","nodeType":"YulFunctionCall","src":"4855:18:21"},"variableNames":[{"name":"tail","nativeSrc":"4847:4:21","nodeType":"YulIdentifier","src":"4847:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4889:9:21","nodeType":"YulIdentifier","src":"4889:9:21"},{"arguments":[{"name":"value0","nativeSrc":"4904:6:21","nodeType":"YulIdentifier","src":"4904:6:21"},{"kind":"number","nativeSrc":"4912:42:21","nodeType":"YulLiteral","src":"4912:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"4900:3:21","nodeType":"YulIdentifier","src":"4900:3:21"},"nativeSrc":"4900:55:21","nodeType":"YulFunctionCall","src":"4900:55:21"}],"functionName":{"name":"mstore","nativeSrc":"4882:6:21","nodeType":"YulIdentifier","src":"4882:6:21"},"nativeSrc":"4882:74:21","nodeType":"YulFunctionCall","src":"4882:74:21"},"nativeSrc":"4882:74:21","nodeType":"YulExpressionStatement","src":"4882:74:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"4736:226:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4806:9:21","nodeType":"YulTypedName","src":"4806:9:21","type":""},{"name":"value0","nativeSrc":"4817:6:21","nodeType":"YulTypedName","src":"4817:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4828:4:21","nodeType":"YulTypedName","src":"4828:4:21","type":""}],"src":"4736:226:21"},{"body":{"nativeSrc":"5020:168:21","nodeType":"YulBlock","src":"5020:168:21","statements":[{"body":{"nativeSrc":"5069:16:21","nodeType":"YulBlock","src":"5069:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5078:1:21","nodeType":"YulLiteral","src":"5078:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5081:1:21","nodeType":"YulLiteral","src":"5081:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5071:6:21","nodeType":"YulIdentifier","src":"5071:6:21"},"nativeSrc":"5071:12:21","nodeType":"YulFunctionCall","src":"5071:12:21"},"nativeSrc":"5071:12:21","nodeType":"YulExpressionStatement","src":"5071:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5048:6:21","nodeType":"YulIdentifier","src":"5048:6:21"},{"kind":"number","nativeSrc":"5056:4:21","nodeType":"YulLiteral","src":"5056:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5044:3:21","nodeType":"YulIdentifier","src":"5044:3:21"},"nativeSrc":"5044:17:21","nodeType":"YulFunctionCall","src":"5044:17:21"},{"name":"end","nativeSrc":"5063:3:21","nodeType":"YulIdentifier","src":"5063:3:21"}],"functionName":{"name":"slt","nativeSrc":"5040:3:21","nodeType":"YulIdentifier","src":"5040:3:21"},"nativeSrc":"5040:27:21","nodeType":"YulFunctionCall","src":"5040:27:21"}],"functionName":{"name":"iszero","nativeSrc":"5033:6:21","nodeType":"YulIdentifier","src":"5033:6:21"},"nativeSrc":"5033:35:21","nodeType":"YulFunctionCall","src":"5033:35:21"},"nativeSrc":"5030:55:21","nodeType":"YulIf","src":"5030:55:21"},{"nativeSrc":"5094:88:21","nodeType":"YulAssignment","src":"5094:88:21","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5141:6:21","nodeType":"YulIdentifier","src":"5141:6:21"},{"kind":"number","nativeSrc":"5149:4:21","nodeType":"YulLiteral","src":"5149:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5137:3:21","nodeType":"YulIdentifier","src":"5137:3:21"},"nativeSrc":"5137:17:21","nodeType":"YulFunctionCall","src":"5137:17:21"},{"arguments":[{"name":"offset","nativeSrc":"5169:6:21","nodeType":"YulIdentifier","src":"5169:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"5156:12:21","nodeType":"YulIdentifier","src":"5156:12:21"},"nativeSrc":"5156:20:21","nodeType":"YulFunctionCall","src":"5156:20:21"},{"name":"end","nativeSrc":"5178:3:21","nodeType":"YulIdentifier","src":"5178:3:21"}],"functionName":{"name":"abi_decode_available_length_bytes","nativeSrc":"5103:33:21","nodeType":"YulIdentifier","src":"5103:33:21"},"nativeSrc":"5103:79:21","nodeType":"YulFunctionCall","src":"5103:79:21"},"variableNames":[{"name":"array","nativeSrc":"5094:5:21","nodeType":"YulIdentifier","src":"5094:5:21"}]}]},"name":"abi_decode_string","nativeSrc":"4967:221:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4994:6:21","nodeType":"YulTypedName","src":"4994:6:21","type":""},{"name":"end","nativeSrc":"5002:3:21","nodeType":"YulTypedName","src":"5002:3:21","type":""}],"returnVariables":[{"name":"array","nativeSrc":"5010:5:21","nodeType":"YulTypedName","src":"5010:5:21","type":""}],"src":"4967:221:21"},{"body":{"nativeSrc":"5384:1005:21","nodeType":"YulBlock","src":"5384:1005:21","statements":[{"body":{"nativeSrc":"5431:16:21","nodeType":"YulBlock","src":"5431:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5440:1:21","nodeType":"YulLiteral","src":"5440:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5443:1:21","nodeType":"YulLiteral","src":"5443:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5433:6:21","nodeType":"YulIdentifier","src":"5433:6:21"},"nativeSrc":"5433:12:21","nodeType":"YulFunctionCall","src":"5433:12:21"},"nativeSrc":"5433:12:21","nodeType":"YulExpressionStatement","src":"5433:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5405:7:21","nodeType":"YulIdentifier","src":"5405:7:21"},{"name":"headStart","nativeSrc":"5414:9:21","nodeType":"YulIdentifier","src":"5414:9:21"}],"functionName":{"name":"sub","nativeSrc":"5401:3:21","nodeType":"YulIdentifier","src":"5401:3:21"},"nativeSrc":"5401:23:21","nodeType":"YulFunctionCall","src":"5401:23:21"},{"kind":"number","nativeSrc":"5426:3:21","nodeType":"YulLiteral","src":"5426:3:21","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"5397:3:21","nodeType":"YulIdentifier","src":"5397:3:21"},"nativeSrc":"5397:33:21","nodeType":"YulFunctionCall","src":"5397:33:21"},"nativeSrc":"5394:53:21","nodeType":"YulIf","src":"5394:53:21"},{"nativeSrc":"5456:37:21","nodeType":"YulVariableDeclaration","src":"5456:37:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5483:9:21","nodeType":"YulIdentifier","src":"5483:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"5470:12:21","nodeType":"YulIdentifier","src":"5470:12:21"},"nativeSrc":"5470:23:21","nodeType":"YulFunctionCall","src":"5470:23:21"},"variables":[{"name":"offset","nativeSrc":"5460:6:21","nodeType":"YulTypedName","src":"5460:6:21","type":""}]},{"nativeSrc":"5502:28:21","nodeType":"YulVariableDeclaration","src":"5502:28:21","value":{"kind":"number","nativeSrc":"5512:18:21","nodeType":"YulLiteral","src":"5512:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"5506:2:21","nodeType":"YulTypedName","src":"5506:2:21","type":""}]},{"body":{"nativeSrc":"5557:16:21","nodeType":"YulBlock","src":"5557:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5566:1:21","nodeType":"YulLiteral","src":"5566:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5569:1:21","nodeType":"YulLiteral","src":"5569:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5559:6:21","nodeType":"YulIdentifier","src":"5559:6:21"},"nativeSrc":"5559:12:21","nodeType":"YulFunctionCall","src":"5559:12:21"},"nativeSrc":"5559:12:21","nodeType":"YulExpressionStatement","src":"5559:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5545:6:21","nodeType":"YulIdentifier","src":"5545:6:21"},{"name":"_1","nativeSrc":"5553:2:21","nodeType":"YulIdentifier","src":"5553:2:21"}],"functionName":{"name":"gt","nativeSrc":"5542:2:21","nodeType":"YulIdentifier","src":"5542:2:21"},"nativeSrc":"5542:14:21","nodeType":"YulFunctionCall","src":"5542:14:21"},"nativeSrc":"5539:34:21","nodeType":"YulIf","src":"5539:34:21"},{"nativeSrc":"5582:60:21","nodeType":"YulAssignment","src":"5582:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5614:9:21","nodeType":"YulIdentifier","src":"5614:9:21"},{"name":"offset","nativeSrc":"5625:6:21","nodeType":"YulIdentifier","src":"5625:6:21"}],"functionName":{"name":"add","nativeSrc":"5610:3:21","nodeType":"YulIdentifier","src":"5610:3:21"},"nativeSrc":"5610:22:21","nodeType":"YulFunctionCall","src":"5610:22:21"},{"name":"dataEnd","nativeSrc":"5634:7:21","nodeType":"YulIdentifier","src":"5634:7:21"}],"functionName":{"name":"abi_decode_string","nativeSrc":"5592:17:21","nodeType":"YulIdentifier","src":"5592:17:21"},"nativeSrc":"5592:50:21","nodeType":"YulFunctionCall","src":"5592:50:21"},"variableNames":[{"name":"value0","nativeSrc":"5582:6:21","nodeType":"YulIdentifier","src":"5582:6:21"}]},{"nativeSrc":"5651:48:21","nodeType":"YulVariableDeclaration","src":"5651:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5684:9:21","nodeType":"YulIdentifier","src":"5684:9:21"},{"kind":"number","nativeSrc":"5695:2:21","nodeType":"YulLiteral","src":"5695:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5680:3:21","nodeType":"YulIdentifier","src":"5680:3:21"},"nativeSrc":"5680:18:21","nodeType":"YulFunctionCall","src":"5680:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"5667:12:21","nodeType":"YulIdentifier","src":"5667:12:21"},"nativeSrc":"5667:32:21","nodeType":"YulFunctionCall","src":"5667:32:21"},"variables":[{"name":"offset_1","nativeSrc":"5655:8:21","nodeType":"YulTypedName","src":"5655:8:21","type":""}]},{"body":{"nativeSrc":"5728:16:21","nodeType":"YulBlock","src":"5728:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5737:1:21","nodeType":"YulLiteral","src":"5737:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5740:1:21","nodeType":"YulLiteral","src":"5740:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5730:6:21","nodeType":"YulIdentifier","src":"5730:6:21"},"nativeSrc":"5730:12:21","nodeType":"YulFunctionCall","src":"5730:12:21"},"nativeSrc":"5730:12:21","nodeType":"YulExpressionStatement","src":"5730:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"5714:8:21","nodeType":"YulIdentifier","src":"5714:8:21"},{"name":"_1","nativeSrc":"5724:2:21","nodeType":"YulIdentifier","src":"5724:2:21"}],"functionName":{"name":"gt","nativeSrc":"5711:2:21","nodeType":"YulIdentifier","src":"5711:2:21"},"nativeSrc":"5711:16:21","nodeType":"YulFunctionCall","src":"5711:16:21"},"nativeSrc":"5708:36:21","nodeType":"YulIf","src":"5708:36:21"},{"nativeSrc":"5753:62:21","nodeType":"YulAssignment","src":"5753:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5785:9:21","nodeType":"YulIdentifier","src":"5785:9:21"},{"name":"offset_1","nativeSrc":"5796:8:21","nodeType":"YulIdentifier","src":"5796:8:21"}],"functionName":{"name":"add","nativeSrc":"5781:3:21","nodeType":"YulIdentifier","src":"5781:3:21"},"nativeSrc":"5781:24:21","nodeType":"YulFunctionCall","src":"5781:24:21"},{"name":"dataEnd","nativeSrc":"5807:7:21","nodeType":"YulIdentifier","src":"5807:7:21"}],"functionName":{"name":"abi_decode_string","nativeSrc":"5763:17:21","nodeType":"YulIdentifier","src":"5763:17:21"},"nativeSrc":"5763:52:21","nodeType":"YulFunctionCall","src":"5763:52:21"},"variableNames":[{"name":"value1","nativeSrc":"5753:6:21","nodeType":"YulIdentifier","src":"5753:6:21"}]},{"nativeSrc":"5824:45:21","nodeType":"YulVariableDeclaration","src":"5824:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5854:9:21","nodeType":"YulIdentifier","src":"5854:9:21"},{"kind":"number","nativeSrc":"5865:2:21","nodeType":"YulLiteral","src":"5865:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5850:3:21","nodeType":"YulIdentifier","src":"5850:3:21"},"nativeSrc":"5850:18:21","nodeType":"YulFunctionCall","src":"5850:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"5837:12:21","nodeType":"YulIdentifier","src":"5837:12:21"},"nativeSrc":"5837:32:21","nodeType":"YulFunctionCall","src":"5837:32:21"},"variables":[{"name":"value","nativeSrc":"5828:5:21","nodeType":"YulTypedName","src":"5828:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5903:5:21","nodeType":"YulIdentifier","src":"5903:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5878:24:21","nodeType":"YulIdentifier","src":"5878:24:21"},"nativeSrc":"5878:31:21","nodeType":"YulFunctionCall","src":"5878:31:21"},"nativeSrc":"5878:31:21","nodeType":"YulExpressionStatement","src":"5878:31:21"},{"nativeSrc":"5918:15:21","nodeType":"YulAssignment","src":"5918:15:21","value":{"name":"value","nativeSrc":"5928:5:21","nodeType":"YulIdentifier","src":"5928:5:21"},"variableNames":[{"name":"value2","nativeSrc":"5918:6:21","nodeType":"YulIdentifier","src":"5918:6:21"}]},{"nativeSrc":"5942:47:21","nodeType":"YulVariableDeclaration","src":"5942:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5974:9:21","nodeType":"YulIdentifier","src":"5974:9:21"},{"kind":"number","nativeSrc":"5985:2:21","nodeType":"YulLiteral","src":"5985:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5970:3:21","nodeType":"YulIdentifier","src":"5970:3:21"},"nativeSrc":"5970:18:21","nodeType":"YulFunctionCall","src":"5970:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"5957:12:21","nodeType":"YulIdentifier","src":"5957:12:21"},"nativeSrc":"5957:32:21","nodeType":"YulFunctionCall","src":"5957:32:21"},"variables":[{"name":"value_1","nativeSrc":"5946:7:21","nodeType":"YulTypedName","src":"5946:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"6023:7:21","nodeType":"YulIdentifier","src":"6023:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5998:24:21","nodeType":"YulIdentifier","src":"5998:24:21"},"nativeSrc":"5998:33:21","nodeType":"YulFunctionCall","src":"5998:33:21"},"nativeSrc":"5998:33:21","nodeType":"YulExpressionStatement","src":"5998:33:21"},{"nativeSrc":"6040:17:21","nodeType":"YulAssignment","src":"6040:17:21","value":{"name":"value_1","nativeSrc":"6050:7:21","nodeType":"YulIdentifier","src":"6050:7:21"},"variableNames":[{"name":"value3","nativeSrc":"6040:6:21","nodeType":"YulIdentifier","src":"6040:6:21"}]},{"nativeSrc":"6066:48:21","nodeType":"YulVariableDeclaration","src":"6066:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6098:9:21","nodeType":"YulIdentifier","src":"6098:9:21"},{"kind":"number","nativeSrc":"6109:3:21","nodeType":"YulLiteral","src":"6109:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6094:3:21","nodeType":"YulIdentifier","src":"6094:3:21"},"nativeSrc":"6094:19:21","nodeType":"YulFunctionCall","src":"6094:19:21"}],"functionName":{"name":"calldataload","nativeSrc":"6081:12:21","nodeType":"YulIdentifier","src":"6081:12:21"},"nativeSrc":"6081:33:21","nodeType":"YulFunctionCall","src":"6081:33:21"},"variables":[{"name":"value_2","nativeSrc":"6070:7:21","nodeType":"YulTypedName","src":"6070:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_2","nativeSrc":"6148:7:21","nodeType":"YulIdentifier","src":"6148:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"6123:24:21","nodeType":"YulIdentifier","src":"6123:24:21"},"nativeSrc":"6123:33:21","nodeType":"YulFunctionCall","src":"6123:33:21"},"nativeSrc":"6123:33:21","nodeType":"YulExpressionStatement","src":"6123:33:21"},{"nativeSrc":"6165:17:21","nodeType":"YulAssignment","src":"6165:17:21","value":{"name":"value_2","nativeSrc":"6175:7:21","nodeType":"YulIdentifier","src":"6175:7:21"},"variableNames":[{"name":"value4","nativeSrc":"6165:6:21","nodeType":"YulIdentifier","src":"6165:6:21"}]},{"nativeSrc":"6191:43:21","nodeType":"YulAssignment","src":"6191:43:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6218:9:21","nodeType":"YulIdentifier","src":"6218:9:21"},{"kind":"number","nativeSrc":"6229:3:21","nodeType":"YulLiteral","src":"6229:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"6214:3:21","nodeType":"YulIdentifier","src":"6214:3:21"},"nativeSrc":"6214:19:21","nodeType":"YulFunctionCall","src":"6214:19:21"}],"functionName":{"name":"calldataload","nativeSrc":"6201:12:21","nodeType":"YulIdentifier","src":"6201:12:21"},"nativeSrc":"6201:33:21","nodeType":"YulFunctionCall","src":"6201:33:21"},"variableNames":[{"name":"value5","nativeSrc":"6191:6:21","nodeType":"YulIdentifier","src":"6191:6:21"}]},{"nativeSrc":"6243:48:21","nodeType":"YulVariableDeclaration","src":"6243:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6275:9:21","nodeType":"YulIdentifier","src":"6275:9:21"},{"kind":"number","nativeSrc":"6286:3:21","nodeType":"YulLiteral","src":"6286:3:21","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"6271:3:21","nodeType":"YulIdentifier","src":"6271:3:21"},"nativeSrc":"6271:19:21","nodeType":"YulFunctionCall","src":"6271:19:21"}],"functionName":{"name":"calldataload","nativeSrc":"6258:12:21","nodeType":"YulIdentifier","src":"6258:12:21"},"nativeSrc":"6258:33:21","nodeType":"YulFunctionCall","src":"6258:33:21"},"variables":[{"name":"value_3","nativeSrc":"6247:7:21","nodeType":"YulTypedName","src":"6247:7:21","type":""}]},{"body":{"nativeSrc":"6341:16:21","nodeType":"YulBlock","src":"6341:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6350:1:21","nodeType":"YulLiteral","src":"6350:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6353:1:21","nodeType":"YulLiteral","src":"6353:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6343:6:21","nodeType":"YulIdentifier","src":"6343:6:21"},"nativeSrc":"6343:12:21","nodeType":"YulFunctionCall","src":"6343:12:21"},"nativeSrc":"6343:12:21","nodeType":"YulExpressionStatement","src":"6343:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value_3","nativeSrc":"6313:7:21","nodeType":"YulIdentifier","src":"6313:7:21"},{"arguments":[{"name":"value_3","nativeSrc":"6326:7:21","nodeType":"YulIdentifier","src":"6326:7:21"},{"name":"_1","nativeSrc":"6335:2:21","nodeType":"YulIdentifier","src":"6335:2:21"}],"functionName":{"name":"and","nativeSrc":"6322:3:21","nodeType":"YulIdentifier","src":"6322:3:21"},"nativeSrc":"6322:16:21","nodeType":"YulFunctionCall","src":"6322:16:21"}],"functionName":{"name":"eq","nativeSrc":"6310:2:21","nodeType":"YulIdentifier","src":"6310:2:21"},"nativeSrc":"6310:29:21","nodeType":"YulFunctionCall","src":"6310:29:21"}],"functionName":{"name":"iszero","nativeSrc":"6303:6:21","nodeType":"YulIdentifier","src":"6303:6:21"},"nativeSrc":"6303:37:21","nodeType":"YulFunctionCall","src":"6303:37:21"},"nativeSrc":"6300:57:21","nodeType":"YulIf","src":"6300:57:21"},{"nativeSrc":"6366:17:21","nodeType":"YulAssignment","src":"6366:17:21","value":{"name":"value_3","nativeSrc":"6376:7:21","nodeType":"YulIdentifier","src":"6376:7:21"},"variableNames":[{"name":"value6","nativeSrc":"6366:6:21","nodeType":"YulIdentifier","src":"6366:6:21"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_addresst_uint256t_uint64","nativeSrc":"5193:1196:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5302:9:21","nodeType":"YulTypedName","src":"5302:9:21","type":""},{"name":"dataEnd","nativeSrc":"5313:7:21","nodeType":"YulTypedName","src":"5313:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5325:6:21","nodeType":"YulTypedName","src":"5325:6:21","type":""},{"name":"value1","nativeSrc":"5333:6:21","nodeType":"YulTypedName","src":"5333:6:21","type":""},{"name":"value2","nativeSrc":"5341:6:21","nodeType":"YulTypedName","src":"5341:6:21","type":""},{"name":"value3","nativeSrc":"5349:6:21","nodeType":"YulTypedName","src":"5349:6:21","type":""},{"name":"value4","nativeSrc":"5357:6:21","nodeType":"YulTypedName","src":"5357:6:21","type":""},{"name":"value5","nativeSrc":"5365:6:21","nodeType":"YulTypedName","src":"5365:6:21","type":""},{"name":"value6","nativeSrc":"5373:6:21","nodeType":"YulTypedName","src":"5373:6:21","type":""}],"src":"5193:1196:21"},{"body":{"nativeSrc":"6481:301:21","nodeType":"YulBlock","src":"6481:301:21","statements":[{"body":{"nativeSrc":"6527:16:21","nodeType":"YulBlock","src":"6527:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6536:1:21","nodeType":"YulLiteral","src":"6536:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6539:1:21","nodeType":"YulLiteral","src":"6539:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6529:6:21","nodeType":"YulIdentifier","src":"6529:6:21"},"nativeSrc":"6529:12:21","nodeType":"YulFunctionCall","src":"6529:12:21"},"nativeSrc":"6529:12:21","nodeType":"YulExpressionStatement","src":"6529:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6502:7:21","nodeType":"YulIdentifier","src":"6502:7:21"},{"name":"headStart","nativeSrc":"6511:9:21","nodeType":"YulIdentifier","src":"6511:9:21"}],"functionName":{"name":"sub","nativeSrc":"6498:3:21","nodeType":"YulIdentifier","src":"6498:3:21"},"nativeSrc":"6498:23:21","nodeType":"YulFunctionCall","src":"6498:23:21"},{"kind":"number","nativeSrc":"6523:2:21","nodeType":"YulLiteral","src":"6523:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6494:3:21","nodeType":"YulIdentifier","src":"6494:3:21"},"nativeSrc":"6494:32:21","nodeType":"YulFunctionCall","src":"6494:32:21"},"nativeSrc":"6491:52:21","nodeType":"YulIf","src":"6491:52:21"},{"nativeSrc":"6552:36:21","nodeType":"YulVariableDeclaration","src":"6552:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6578:9:21","nodeType":"YulIdentifier","src":"6578:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"6565:12:21","nodeType":"YulIdentifier","src":"6565:12:21"},"nativeSrc":"6565:23:21","nodeType":"YulFunctionCall","src":"6565:23:21"},"variables":[{"name":"value","nativeSrc":"6556:5:21","nodeType":"YulTypedName","src":"6556:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6622:5:21","nodeType":"YulIdentifier","src":"6622:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"6597:24:21","nodeType":"YulIdentifier","src":"6597:24:21"},"nativeSrc":"6597:31:21","nodeType":"YulFunctionCall","src":"6597:31:21"},"nativeSrc":"6597:31:21","nodeType":"YulExpressionStatement","src":"6597:31:21"},{"nativeSrc":"6637:15:21","nodeType":"YulAssignment","src":"6637:15:21","value":{"name":"value","nativeSrc":"6647:5:21","nodeType":"YulIdentifier","src":"6647:5:21"},"variableNames":[{"name":"value0","nativeSrc":"6637:6:21","nodeType":"YulIdentifier","src":"6637:6:21"}]},{"nativeSrc":"6661:47:21","nodeType":"YulVariableDeclaration","src":"6661:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6693:9:21","nodeType":"YulIdentifier","src":"6693:9:21"},{"kind":"number","nativeSrc":"6704:2:21","nodeType":"YulLiteral","src":"6704:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6689:3:21","nodeType":"YulIdentifier","src":"6689:3:21"},"nativeSrc":"6689:18:21","nodeType":"YulFunctionCall","src":"6689:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"6676:12:21","nodeType":"YulIdentifier","src":"6676:12:21"},"nativeSrc":"6676:32:21","nodeType":"YulFunctionCall","src":"6676:32:21"},"variables":[{"name":"value_1","nativeSrc":"6665:7:21","nodeType":"YulTypedName","src":"6665:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"6742:7:21","nodeType":"YulIdentifier","src":"6742:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"6717:24:21","nodeType":"YulIdentifier","src":"6717:24:21"},"nativeSrc":"6717:33:21","nodeType":"YulFunctionCall","src":"6717:33:21"},"nativeSrc":"6717:33:21","nodeType":"YulExpressionStatement","src":"6717:33:21"},{"nativeSrc":"6759:17:21","nodeType":"YulAssignment","src":"6759:17:21","value":{"name":"value_1","nativeSrc":"6769:7:21","nodeType":"YulIdentifier","src":"6769:7:21"},"variableNames":[{"name":"value1","nativeSrc":"6759:6:21","nodeType":"YulIdentifier","src":"6759:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"6394:388:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6439:9:21","nodeType":"YulTypedName","src":"6439:9:21","type":""},{"name":"dataEnd","nativeSrc":"6450:7:21","nodeType":"YulTypedName","src":"6450:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6462:6:21","nodeType":"YulTypedName","src":"6462:6:21","type":""},{"name":"value1","nativeSrc":"6470:6:21","nodeType":"YulTypedName","src":"6470:6:21","type":""}],"src":"6394:388:21"},{"body":{"nativeSrc":"6962:856:21","nodeType":"YulBlock","src":"6962:856:21","statements":[{"body":{"nativeSrc":"7009:16:21","nodeType":"YulBlock","src":"7009:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7018:1:21","nodeType":"YulLiteral","src":"7018:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7021:1:21","nodeType":"YulLiteral","src":"7021:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7011:6:21","nodeType":"YulIdentifier","src":"7011:6:21"},"nativeSrc":"7011:12:21","nodeType":"YulFunctionCall","src":"7011:12:21"},"nativeSrc":"7011:12:21","nodeType":"YulExpressionStatement","src":"7011:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6983:7:21","nodeType":"YulIdentifier","src":"6983:7:21"},{"name":"headStart","nativeSrc":"6992:9:21","nodeType":"YulIdentifier","src":"6992:9:21"}],"functionName":{"name":"sub","nativeSrc":"6979:3:21","nodeType":"YulIdentifier","src":"6979:3:21"},"nativeSrc":"6979:23:21","nodeType":"YulFunctionCall","src":"6979:23:21"},{"kind":"number","nativeSrc":"7004:3:21","nodeType":"YulLiteral","src":"7004:3:21","type":"","value":"192"}],"functionName":{"name":"slt","nativeSrc":"6975:3:21","nodeType":"YulIdentifier","src":"6975:3:21"},"nativeSrc":"6975:33:21","nodeType":"YulFunctionCall","src":"6975:33:21"},"nativeSrc":"6972:53:21","nodeType":"YulIf","src":"6972:53:21"},{"nativeSrc":"7034:37:21","nodeType":"YulVariableDeclaration","src":"7034:37:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7061:9:21","nodeType":"YulIdentifier","src":"7061:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"7048:12:21","nodeType":"YulIdentifier","src":"7048:12:21"},"nativeSrc":"7048:23:21","nodeType":"YulFunctionCall","src":"7048:23:21"},"variables":[{"name":"offset","nativeSrc":"7038:6:21","nodeType":"YulTypedName","src":"7038:6:21","type":""}]},{"nativeSrc":"7080:28:21","nodeType":"YulVariableDeclaration","src":"7080:28:21","value":{"kind":"number","nativeSrc":"7090:18:21","nodeType":"YulLiteral","src":"7090:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"7084:2:21","nodeType":"YulTypedName","src":"7084:2:21","type":""}]},{"body":{"nativeSrc":"7135:16:21","nodeType":"YulBlock","src":"7135:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7144:1:21","nodeType":"YulLiteral","src":"7144:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7147:1:21","nodeType":"YulLiteral","src":"7147:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7137:6:21","nodeType":"YulIdentifier","src":"7137:6:21"},"nativeSrc":"7137:12:21","nodeType":"YulFunctionCall","src":"7137:12:21"},"nativeSrc":"7137:12:21","nodeType":"YulExpressionStatement","src":"7137:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7123:6:21","nodeType":"YulIdentifier","src":"7123:6:21"},{"name":"_1","nativeSrc":"7131:2:21","nodeType":"YulIdentifier","src":"7131:2:21"}],"functionName":{"name":"gt","nativeSrc":"7120:2:21","nodeType":"YulIdentifier","src":"7120:2:21"},"nativeSrc":"7120:14:21","nodeType":"YulFunctionCall","src":"7120:14:21"},"nativeSrc":"7117:34:21","nodeType":"YulIf","src":"7117:34:21"},{"nativeSrc":"7160:60:21","nodeType":"YulAssignment","src":"7160:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7192:9:21","nodeType":"YulIdentifier","src":"7192:9:21"},{"name":"offset","nativeSrc":"7203:6:21","nodeType":"YulIdentifier","src":"7203:6:21"}],"functionName":{"name":"add","nativeSrc":"7188:3:21","nodeType":"YulIdentifier","src":"7188:3:21"},"nativeSrc":"7188:22:21","nodeType":"YulFunctionCall","src":"7188:22:21"},{"name":"dataEnd","nativeSrc":"7212:7:21","nodeType":"YulIdentifier","src":"7212:7:21"}],"functionName":{"name":"abi_decode_string","nativeSrc":"7170:17:21","nodeType":"YulIdentifier","src":"7170:17:21"},"nativeSrc":"7170:50:21","nodeType":"YulFunctionCall","src":"7170:50:21"},"variableNames":[{"name":"value0","nativeSrc":"7160:6:21","nodeType":"YulIdentifier","src":"7160:6:21"}]},{"nativeSrc":"7229:48:21","nodeType":"YulVariableDeclaration","src":"7229:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7262:9:21","nodeType":"YulIdentifier","src":"7262:9:21"},{"kind":"number","nativeSrc":"7273:2:21","nodeType":"YulLiteral","src":"7273:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7258:3:21","nodeType":"YulIdentifier","src":"7258:3:21"},"nativeSrc":"7258:18:21","nodeType":"YulFunctionCall","src":"7258:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"7245:12:21","nodeType":"YulIdentifier","src":"7245:12:21"},"nativeSrc":"7245:32:21","nodeType":"YulFunctionCall","src":"7245:32:21"},"variables":[{"name":"offset_1","nativeSrc":"7233:8:21","nodeType":"YulTypedName","src":"7233:8:21","type":""}]},{"body":{"nativeSrc":"7306:16:21","nodeType":"YulBlock","src":"7306:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7315:1:21","nodeType":"YulLiteral","src":"7315:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7318:1:21","nodeType":"YulLiteral","src":"7318:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7308:6:21","nodeType":"YulIdentifier","src":"7308:6:21"},"nativeSrc":"7308:12:21","nodeType":"YulFunctionCall","src":"7308:12:21"},"nativeSrc":"7308:12:21","nodeType":"YulExpressionStatement","src":"7308:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"7292:8:21","nodeType":"YulIdentifier","src":"7292:8:21"},{"name":"_1","nativeSrc":"7302:2:21","nodeType":"YulIdentifier","src":"7302:2:21"}],"functionName":{"name":"gt","nativeSrc":"7289:2:21","nodeType":"YulIdentifier","src":"7289:2:21"},"nativeSrc":"7289:16:21","nodeType":"YulFunctionCall","src":"7289:16:21"},"nativeSrc":"7286:36:21","nodeType":"YulIf","src":"7286:36:21"},{"nativeSrc":"7331:62:21","nodeType":"YulAssignment","src":"7331:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7363:9:21","nodeType":"YulIdentifier","src":"7363:9:21"},{"name":"offset_1","nativeSrc":"7374:8:21","nodeType":"YulIdentifier","src":"7374:8:21"}],"functionName":{"name":"add","nativeSrc":"7359:3:21","nodeType":"YulIdentifier","src":"7359:3:21"},"nativeSrc":"7359:24:21","nodeType":"YulFunctionCall","src":"7359:24:21"},{"name":"dataEnd","nativeSrc":"7385:7:21","nodeType":"YulIdentifier","src":"7385:7:21"}],"functionName":{"name":"abi_decode_string","nativeSrc":"7341:17:21","nodeType":"YulIdentifier","src":"7341:17:21"},"nativeSrc":"7341:52:21","nodeType":"YulFunctionCall","src":"7341:52:21"},"variableNames":[{"name":"value1","nativeSrc":"7331:6:21","nodeType":"YulIdentifier","src":"7331:6:21"}]},{"nativeSrc":"7402:45:21","nodeType":"YulVariableDeclaration","src":"7402:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7432:9:21","nodeType":"YulIdentifier","src":"7432:9:21"},{"kind":"number","nativeSrc":"7443:2:21","nodeType":"YulLiteral","src":"7443:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7428:3:21","nodeType":"YulIdentifier","src":"7428:3:21"},"nativeSrc":"7428:18:21","nodeType":"YulFunctionCall","src":"7428:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"7415:12:21","nodeType":"YulIdentifier","src":"7415:12:21"},"nativeSrc":"7415:32:21","nodeType":"YulFunctionCall","src":"7415:32:21"},"variables":[{"name":"value","nativeSrc":"7406:5:21","nodeType":"YulTypedName","src":"7406:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"7481:5:21","nodeType":"YulIdentifier","src":"7481:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"7456:24:21","nodeType":"YulIdentifier","src":"7456:24:21"},"nativeSrc":"7456:31:21","nodeType":"YulFunctionCall","src":"7456:31:21"},"nativeSrc":"7456:31:21","nodeType":"YulExpressionStatement","src":"7456:31:21"},{"nativeSrc":"7496:15:21","nodeType":"YulAssignment","src":"7496:15:21","value":{"name":"value","nativeSrc":"7506:5:21","nodeType":"YulIdentifier","src":"7506:5:21"},"variableNames":[{"name":"value2","nativeSrc":"7496:6:21","nodeType":"YulIdentifier","src":"7496:6:21"}]},{"nativeSrc":"7520:47:21","nodeType":"YulVariableDeclaration","src":"7520:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7552:9:21","nodeType":"YulIdentifier","src":"7552:9:21"},{"kind":"number","nativeSrc":"7563:2:21","nodeType":"YulLiteral","src":"7563:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7548:3:21","nodeType":"YulIdentifier","src":"7548:3:21"},"nativeSrc":"7548:18:21","nodeType":"YulFunctionCall","src":"7548:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"7535:12:21","nodeType":"YulIdentifier","src":"7535:12:21"},"nativeSrc":"7535:32:21","nodeType":"YulFunctionCall","src":"7535:32:21"},"variables":[{"name":"value_1","nativeSrc":"7524:7:21","nodeType":"YulTypedName","src":"7524:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"7601:7:21","nodeType":"YulIdentifier","src":"7601:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"7576:24:21","nodeType":"YulIdentifier","src":"7576:24:21"},"nativeSrc":"7576:33:21","nodeType":"YulFunctionCall","src":"7576:33:21"},"nativeSrc":"7576:33:21","nodeType":"YulExpressionStatement","src":"7576:33:21"},{"nativeSrc":"7618:17:21","nodeType":"YulAssignment","src":"7618:17:21","value":{"name":"value_1","nativeSrc":"7628:7:21","nodeType":"YulIdentifier","src":"7628:7:21"},"variableNames":[{"name":"value3","nativeSrc":"7618:6:21","nodeType":"YulIdentifier","src":"7618:6:21"}]},{"nativeSrc":"7644:48:21","nodeType":"YulVariableDeclaration","src":"7644:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7676:9:21","nodeType":"YulIdentifier","src":"7676:9:21"},{"kind":"number","nativeSrc":"7687:3:21","nodeType":"YulLiteral","src":"7687:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7672:3:21","nodeType":"YulIdentifier","src":"7672:3:21"},"nativeSrc":"7672:19:21","nodeType":"YulFunctionCall","src":"7672:19:21"}],"functionName":{"name":"calldataload","nativeSrc":"7659:12:21","nodeType":"YulIdentifier","src":"7659:12:21"},"nativeSrc":"7659:33:21","nodeType":"YulFunctionCall","src":"7659:33:21"},"variables":[{"name":"value_2","nativeSrc":"7648:7:21","nodeType":"YulTypedName","src":"7648:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_2","nativeSrc":"7726:7:21","nodeType":"YulIdentifier","src":"7726:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"7701:24:21","nodeType":"YulIdentifier","src":"7701:24:21"},"nativeSrc":"7701:33:21","nodeType":"YulFunctionCall","src":"7701:33:21"},"nativeSrc":"7701:33:21","nodeType":"YulExpressionStatement","src":"7701:33:21"},{"nativeSrc":"7743:17:21","nodeType":"YulAssignment","src":"7743:17:21","value":{"name":"value_2","nativeSrc":"7753:7:21","nodeType":"YulIdentifier","src":"7753:7:21"},"variableNames":[{"name":"value4","nativeSrc":"7743:6:21","nodeType":"YulIdentifier","src":"7743:6:21"}]},{"nativeSrc":"7769:43:21","nodeType":"YulAssignment","src":"7769:43:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7796:9:21","nodeType":"YulIdentifier","src":"7796:9:21"},{"kind":"number","nativeSrc":"7807:3:21","nodeType":"YulLiteral","src":"7807:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"7792:3:21","nodeType":"YulIdentifier","src":"7792:3:21"},"nativeSrc":"7792:19:21","nodeType":"YulFunctionCall","src":"7792:19:21"}],"functionName":{"name":"calldataload","nativeSrc":"7779:12:21","nodeType":"YulIdentifier","src":"7779:12:21"},"nativeSrc":"7779:33:21","nodeType":"YulFunctionCall","src":"7779:33:21"},"variableNames":[{"name":"value5","nativeSrc":"7769:6:21","nodeType":"YulIdentifier","src":"7769:6:21"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_addresst_uint256","nativeSrc":"6787:1031:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6888:9:21","nodeType":"YulTypedName","src":"6888:9:21","type":""},{"name":"dataEnd","nativeSrc":"6899:7:21","nodeType":"YulTypedName","src":"6899:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6911:6:21","nodeType":"YulTypedName","src":"6911:6:21","type":""},{"name":"value1","nativeSrc":"6919:6:21","nodeType":"YulTypedName","src":"6919:6:21","type":""},{"name":"value2","nativeSrc":"6927:6:21","nodeType":"YulTypedName","src":"6927:6:21","type":""},{"name":"value3","nativeSrc":"6935:6:21","nodeType":"YulTypedName","src":"6935:6:21","type":""},{"name":"value4","nativeSrc":"6943:6:21","nodeType":"YulTypedName","src":"6943:6:21","type":""},{"name":"value5","nativeSrc":"6951:6:21","nodeType":"YulTypedName","src":"6951:6:21","type":""}],"src":"6787:1031:21"},{"body":{"nativeSrc":"7997:182:21","nodeType":"YulBlock","src":"7997:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8014:9:21","nodeType":"YulIdentifier","src":"8014:9:21"},{"kind":"number","nativeSrc":"8025:2:21","nodeType":"YulLiteral","src":"8025:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8007:6:21","nodeType":"YulIdentifier","src":"8007:6:21"},"nativeSrc":"8007:21:21","nodeType":"YulFunctionCall","src":"8007:21:21"},"nativeSrc":"8007:21:21","nodeType":"YulExpressionStatement","src":"8007:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8048:9:21","nodeType":"YulIdentifier","src":"8048:9:21"},{"kind":"number","nativeSrc":"8059:2:21","nodeType":"YulLiteral","src":"8059:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8044:3:21","nodeType":"YulIdentifier","src":"8044:3:21"},"nativeSrc":"8044:18:21","nodeType":"YulFunctionCall","src":"8044:18:21"},{"kind":"number","nativeSrc":"8064:2:21","nodeType":"YulLiteral","src":"8064:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8037:6:21","nodeType":"YulIdentifier","src":"8037:6:21"},"nativeSrc":"8037:30:21","nodeType":"YulFunctionCall","src":"8037:30:21"},"nativeSrc":"8037:30:21","nodeType":"YulExpressionStatement","src":"8037:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8087:9:21","nodeType":"YulIdentifier","src":"8087:9:21"},{"kind":"number","nativeSrc":"8098:2:21","nodeType":"YulLiteral","src":"8098:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8083:3:21","nodeType":"YulIdentifier","src":"8083:3:21"},"nativeSrc":"8083:18:21","nodeType":"YulFunctionCall","src":"8083:18:21"},{"hexValue":"536861726573206d7573742062652067726561746572207468616e207a65726f","kind":"string","nativeSrc":"8103:34:21","nodeType":"YulLiteral","src":"8103:34:21","type":"","value":"Shares must be greater than zero"}],"functionName":{"name":"mstore","nativeSrc":"8076:6:21","nodeType":"YulIdentifier","src":"8076:6:21"},"nativeSrc":"8076:62:21","nodeType":"YulFunctionCall","src":"8076:62:21"},"nativeSrc":"8076:62:21","nodeType":"YulExpressionStatement","src":"8076:62:21"},{"nativeSrc":"8147:26:21","nodeType":"YulAssignment","src":"8147:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8159:9:21","nodeType":"YulIdentifier","src":"8159:9:21"},{"kind":"number","nativeSrc":"8170:2:21","nodeType":"YulLiteral","src":"8170:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8155:3:21","nodeType":"YulIdentifier","src":"8155:3:21"},"nativeSrc":"8155:18:21","nodeType":"YulFunctionCall","src":"8155:18:21"},"variableNames":[{"name":"tail","nativeSrc":"8147:4:21","nodeType":"YulIdentifier","src":"8147:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f247f7c1df7c48d1adf3ebe04e09d491abca7b6e14a32a1b30359ea588b9d3d6__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7823:356:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7974:9:21","nodeType":"YulTypedName","src":"7974:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7988:4:21","nodeType":"YulTypedName","src":"7988:4:21","type":""}],"src":"7823:356:21"},{"body":{"nativeSrc":"8358:170:21","nodeType":"YulBlock","src":"8358:170:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8375:9:21","nodeType":"YulIdentifier","src":"8375:9:21"},{"kind":"number","nativeSrc":"8386:2:21","nodeType":"YulLiteral","src":"8386:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8368:6:21","nodeType":"YulIdentifier","src":"8368:6:21"},"nativeSrc":"8368:21:21","nodeType":"YulFunctionCall","src":"8368:21:21"},"nativeSrc":"8368:21:21","nodeType":"YulExpressionStatement","src":"8368:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8409:9:21","nodeType":"YulIdentifier","src":"8409:9:21"},{"kind":"number","nativeSrc":"8420:2:21","nodeType":"YulLiteral","src":"8420:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8405:3:21","nodeType":"YulIdentifier","src":"8405:3:21"},"nativeSrc":"8405:18:21","nodeType":"YulFunctionCall","src":"8405:18:21"},{"kind":"number","nativeSrc":"8425:2:21","nodeType":"YulLiteral","src":"8425:2:21","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"8398:6:21","nodeType":"YulIdentifier","src":"8398:6:21"},"nativeSrc":"8398:30:21","nodeType":"YulFunctionCall","src":"8398:30:21"},"nativeSrc":"8398:30:21","nodeType":"YulExpressionStatement","src":"8398:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8448:9:21","nodeType":"YulIdentifier","src":"8448:9:21"},{"kind":"number","nativeSrc":"8459:2:21","nodeType":"YulLiteral","src":"8459:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8444:3:21","nodeType":"YulIdentifier","src":"8444:3:21"},"nativeSrc":"8444:18:21","nodeType":"YulFunctionCall","src":"8444:18:21"},{"hexValue":"496e73756666696369656e742062616c616e6365","kind":"string","nativeSrc":"8464:22:21","nodeType":"YulLiteral","src":"8464:22:21","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nativeSrc":"8437:6:21","nodeType":"YulIdentifier","src":"8437:6:21"},"nativeSrc":"8437:50:21","nodeType":"YulFunctionCall","src":"8437:50:21"},"nativeSrc":"8437:50:21","nodeType":"YulExpressionStatement","src":"8437:50:21"},{"nativeSrc":"8496:26:21","nodeType":"YulAssignment","src":"8496:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8508:9:21","nodeType":"YulIdentifier","src":"8508:9:21"},{"kind":"number","nativeSrc":"8519:2:21","nodeType":"YulLiteral","src":"8519:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8504:3:21","nodeType":"YulIdentifier","src":"8504:3:21"},"nativeSrc":"8504:18:21","nodeType":"YulFunctionCall","src":"8504:18:21"},"variableNames":[{"name":"tail","nativeSrc":"8496:4:21","nodeType":"YulIdentifier","src":"8496:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8184:344:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8335:9:21","nodeType":"YulTypedName","src":"8335:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8349:4:21","nodeType":"YulTypedName","src":"8349:4:21","type":""}],"src":"8184:344:21"},{"body":{"nativeSrc":"8612:194:21","nodeType":"YulBlock","src":"8612:194:21","statements":[{"body":{"nativeSrc":"8658:16:21","nodeType":"YulBlock","src":"8658:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8667:1:21","nodeType":"YulLiteral","src":"8667:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"8670:1:21","nodeType":"YulLiteral","src":"8670:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8660:6:21","nodeType":"YulIdentifier","src":"8660:6:21"},"nativeSrc":"8660:12:21","nodeType":"YulFunctionCall","src":"8660:12:21"},"nativeSrc":"8660:12:21","nodeType":"YulExpressionStatement","src":"8660:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8633:7:21","nodeType":"YulIdentifier","src":"8633:7:21"},{"name":"headStart","nativeSrc":"8642:9:21","nodeType":"YulIdentifier","src":"8642:9:21"}],"functionName":{"name":"sub","nativeSrc":"8629:3:21","nodeType":"YulIdentifier","src":"8629:3:21"},"nativeSrc":"8629:23:21","nodeType":"YulFunctionCall","src":"8629:23:21"},{"kind":"number","nativeSrc":"8654:2:21","nodeType":"YulLiteral","src":"8654:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8625:3:21","nodeType":"YulIdentifier","src":"8625:3:21"},"nativeSrc":"8625:32:21","nodeType":"YulFunctionCall","src":"8625:32:21"},"nativeSrc":"8622:52:21","nodeType":"YulIf","src":"8622:52:21"},{"nativeSrc":"8683:29:21","nodeType":"YulVariableDeclaration","src":"8683:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8702:9:21","nodeType":"YulIdentifier","src":"8702:9:21"}],"functionName":{"name":"mload","nativeSrc":"8696:5:21","nodeType":"YulIdentifier","src":"8696:5:21"},"nativeSrc":"8696:16:21","nodeType":"YulFunctionCall","src":"8696:16:21"},"variables":[{"name":"value","nativeSrc":"8687:5:21","nodeType":"YulTypedName","src":"8687:5:21","type":""}]},{"body":{"nativeSrc":"8760:16:21","nodeType":"YulBlock","src":"8760:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8769:1:21","nodeType":"YulLiteral","src":"8769:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"8772:1:21","nodeType":"YulLiteral","src":"8772:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8762:6:21","nodeType":"YulIdentifier","src":"8762:6:21"},"nativeSrc":"8762:12:21","nodeType":"YulFunctionCall","src":"8762:12:21"},"nativeSrc":"8762:12:21","nodeType":"YulExpressionStatement","src":"8762:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8734:5:21","nodeType":"YulIdentifier","src":"8734:5:21"},{"arguments":[{"name":"value","nativeSrc":"8745:5:21","nodeType":"YulIdentifier","src":"8745:5:21"},{"kind":"number","nativeSrc":"8752:4:21","nodeType":"YulLiteral","src":"8752:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"8741:3:21","nodeType":"YulIdentifier","src":"8741:3:21"},"nativeSrc":"8741:16:21","nodeType":"YulFunctionCall","src":"8741:16:21"}],"functionName":{"name":"eq","nativeSrc":"8731:2:21","nodeType":"YulIdentifier","src":"8731:2:21"},"nativeSrc":"8731:27:21","nodeType":"YulFunctionCall","src":"8731:27:21"}],"functionName":{"name":"iszero","nativeSrc":"8724:6:21","nodeType":"YulIdentifier","src":"8724:6:21"},"nativeSrc":"8724:35:21","nodeType":"YulFunctionCall","src":"8724:35:21"},"nativeSrc":"8721:55:21","nodeType":"YulIf","src":"8721:55:21"},{"nativeSrc":"8785:15:21","nodeType":"YulAssignment","src":"8785:15:21","value":{"name":"value","nativeSrc":"8795:5:21","nodeType":"YulIdentifier","src":"8795:5:21"},"variableNames":[{"name":"value0","nativeSrc":"8785:6:21","nodeType":"YulIdentifier","src":"8785:6:21"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nativeSrc":"8533:273:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8578:9:21","nodeType":"YulTypedName","src":"8578:9:21","type":""},{"name":"dataEnd","nativeSrc":"8589:7:21","nodeType":"YulTypedName","src":"8589:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8601:6:21","nodeType":"YulTypedName","src":"8601:6:21","type":""}],"src":"8533:273:21"},{"body":{"nativeSrc":"8892:103:21","nodeType":"YulBlock","src":"8892:103:21","statements":[{"body":{"nativeSrc":"8938:16:21","nodeType":"YulBlock","src":"8938:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8947:1:21","nodeType":"YulLiteral","src":"8947:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"8950:1:21","nodeType":"YulLiteral","src":"8950:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8940:6:21","nodeType":"YulIdentifier","src":"8940:6:21"},"nativeSrc":"8940:12:21","nodeType":"YulFunctionCall","src":"8940:12:21"},"nativeSrc":"8940:12:21","nodeType":"YulExpressionStatement","src":"8940:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8913:7:21","nodeType":"YulIdentifier","src":"8913:7:21"},{"name":"headStart","nativeSrc":"8922:9:21","nodeType":"YulIdentifier","src":"8922:9:21"}],"functionName":{"name":"sub","nativeSrc":"8909:3:21","nodeType":"YulIdentifier","src":"8909:3:21"},"nativeSrc":"8909:23:21","nodeType":"YulFunctionCall","src":"8909:23:21"},{"kind":"number","nativeSrc":"8934:2:21","nodeType":"YulLiteral","src":"8934:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8905:3:21","nodeType":"YulIdentifier","src":"8905:3:21"},"nativeSrc":"8905:32:21","nodeType":"YulFunctionCall","src":"8905:32:21"},"nativeSrc":"8902:52:21","nodeType":"YulIf","src":"8902:52:21"},{"nativeSrc":"8963:26:21","nodeType":"YulAssignment","src":"8963:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8979:9:21","nodeType":"YulIdentifier","src":"8979:9:21"}],"functionName":{"name":"mload","nativeSrc":"8973:5:21","nodeType":"YulIdentifier","src":"8973:5:21"},"nativeSrc":"8973:16:21","nodeType":"YulFunctionCall","src":"8973:16:21"},"variableNames":[{"name":"value0","nativeSrc":"8963:6:21","nodeType":"YulIdentifier","src":"8963:6:21"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"8811:184:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8858:9:21","nodeType":"YulTypedName","src":"8858:9:21","type":""},{"name":"dataEnd","nativeSrc":"8869:7:21","nodeType":"YulTypedName","src":"8869:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8881:6:21","nodeType":"YulTypedName","src":"8881:6:21","type":""}],"src":"8811:184:21"},{"body":{"nativeSrc":"9032:152:21","nodeType":"YulBlock","src":"9032:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9049:1:21","nodeType":"YulLiteral","src":"9049:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9052:77:21","nodeType":"YulLiteral","src":"9052:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"9042:6:21","nodeType":"YulIdentifier","src":"9042:6:21"},"nativeSrc":"9042:88:21","nodeType":"YulFunctionCall","src":"9042:88:21"},"nativeSrc":"9042:88:21","nodeType":"YulExpressionStatement","src":"9042:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9146:1:21","nodeType":"YulLiteral","src":"9146:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"9149:4:21","nodeType":"YulLiteral","src":"9149:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"9139:6:21","nodeType":"YulIdentifier","src":"9139:6:21"},"nativeSrc":"9139:15:21","nodeType":"YulFunctionCall","src":"9139:15:21"},"nativeSrc":"9139:15:21","nodeType":"YulExpressionStatement","src":"9139:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9170:1:21","nodeType":"YulLiteral","src":"9170:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9173:4:21","nodeType":"YulLiteral","src":"9173:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9163:6:21","nodeType":"YulIdentifier","src":"9163:6:21"},"nativeSrc":"9163:15:21","nodeType":"YulFunctionCall","src":"9163:15:21"},"nativeSrc":"9163:15:21","nodeType":"YulExpressionStatement","src":"9163:15:21"}]},"name":"panic_error_0x11","nativeSrc":"9000:184:21","nodeType":"YulFunctionDefinition","src":"9000:184:21"},{"body":{"nativeSrc":"9236:104:21","nodeType":"YulBlock","src":"9236:104:21","statements":[{"nativeSrc":"9246:39:21","nodeType":"YulAssignment","src":"9246:39:21","value":{"arguments":[{"arguments":[{"name":"x","nativeSrc":"9262:1:21","nodeType":"YulIdentifier","src":"9262:1:21"},{"kind":"number","nativeSrc":"9265:4:21","nodeType":"YulLiteral","src":"9265:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"9258:3:21","nodeType":"YulIdentifier","src":"9258:3:21"},"nativeSrc":"9258:12:21","nodeType":"YulFunctionCall","src":"9258:12:21"},{"arguments":[{"name":"y","nativeSrc":"9276:1:21","nodeType":"YulIdentifier","src":"9276:1:21"},{"kind":"number","nativeSrc":"9279:4:21","nodeType":"YulLiteral","src":"9279:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"9272:3:21","nodeType":"YulIdentifier","src":"9272:3:21"},"nativeSrc":"9272:12:21","nodeType":"YulFunctionCall","src":"9272:12:21"}],"functionName":{"name":"sub","nativeSrc":"9254:3:21","nodeType":"YulIdentifier","src":"9254:3:21"},"nativeSrc":"9254:31:21","nodeType":"YulFunctionCall","src":"9254:31:21"},"variableNames":[{"name":"diff","nativeSrc":"9246:4:21","nodeType":"YulIdentifier","src":"9246:4:21"}]},{"body":{"nativeSrc":"9312:22:21","nodeType":"YulBlock","src":"9312:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9314:16:21","nodeType":"YulIdentifier","src":"9314:16:21"},"nativeSrc":"9314:18:21","nodeType":"YulFunctionCall","src":"9314:18:21"},"nativeSrc":"9314:18:21","nodeType":"YulExpressionStatement","src":"9314:18:21"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"9300:4:21","nodeType":"YulIdentifier","src":"9300:4:21"},{"kind":"number","nativeSrc":"9306:4:21","nodeType":"YulLiteral","src":"9306:4:21","type":"","value":"0xff"}],"functionName":{"name":"gt","nativeSrc":"9297:2:21","nodeType":"YulIdentifier","src":"9297:2:21"},"nativeSrc":"9297:14:21","nodeType":"YulFunctionCall","src":"9297:14:21"},"nativeSrc":"9294:40:21","nodeType":"YulIf","src":"9294:40:21"}]},"name":"checked_sub_t_uint8","nativeSrc":"9189:151:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9218:1:21","nodeType":"YulTypedName","src":"9218:1:21","type":""},{"name":"y","nativeSrc":"9221:1:21","nodeType":"YulTypedName","src":"9221:1:21","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"9227:4:21","nodeType":"YulTypedName","src":"9227:4:21","type":""}],"src":"9189:151:21"},{"body":{"nativeSrc":"9409:412:21","nodeType":"YulBlock","src":"9409:412:21","statements":[{"nativeSrc":"9419:16:21","nodeType":"YulVariableDeclaration","src":"9419:16:21","value":{"kind":"number","nativeSrc":"9434:1:21","nodeType":"YulLiteral","src":"9434:1:21","type":"","value":"1"},"variables":[{"name":"power_1","nativeSrc":"9423:7:21","nodeType":"YulTypedName","src":"9423:7:21","type":""}]},{"nativeSrc":"9444:10:21","nodeType":"YulAssignment","src":"9444:10:21","value":{"kind":"number","nativeSrc":"9453:1:21","nodeType":"YulLiteral","src":"9453:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"9444:5:21","nodeType":"YulIdentifier","src":"9444:5:21"}]},{"nativeSrc":"9463:13:21","nodeType":"YulAssignment","src":"9463:13:21","value":{"name":"_base","nativeSrc":"9471:5:21","nodeType":"YulIdentifier","src":"9471:5:21"},"variableNames":[{"name":"base","nativeSrc":"9463:4:21","nodeType":"YulIdentifier","src":"9463:4:21"}]},{"body":{"nativeSrc":"9527:288:21","nodeType":"YulBlock","src":"9527:288:21","statements":[{"body":{"nativeSrc":"9632:22:21","nodeType":"YulBlock","src":"9632:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9634:16:21","nodeType":"YulIdentifier","src":"9634:16:21"},"nativeSrc":"9634:18:21","nodeType":"YulFunctionCall","src":"9634:18:21"},"nativeSrc":"9634:18:21","nodeType":"YulExpressionStatement","src":"9634:18:21"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"9547:4:21","nodeType":"YulIdentifier","src":"9547:4:21"},{"arguments":[{"kind":"number","nativeSrc":"9557:66:21","nodeType":"YulLiteral","src":"9557:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"base","nativeSrc":"9625:4:21","nodeType":"YulIdentifier","src":"9625:4:21"}],"functionName":{"name":"div","nativeSrc":"9553:3:21","nodeType":"YulIdentifier","src":"9553:3:21"},"nativeSrc":"9553:77:21","nodeType":"YulFunctionCall","src":"9553:77:21"}],"functionName":{"name":"gt","nativeSrc":"9544:2:21","nodeType":"YulIdentifier","src":"9544:2:21"},"nativeSrc":"9544:87:21","nodeType":"YulFunctionCall","src":"9544:87:21"},"nativeSrc":"9541:113:21","nodeType":"YulIf","src":"9541:113:21"},{"body":{"nativeSrc":"9693:29:21","nodeType":"YulBlock","src":"9693:29:21","statements":[{"nativeSrc":"9695:25:21","nodeType":"YulAssignment","src":"9695:25:21","value":{"arguments":[{"name":"power","nativeSrc":"9708:5:21","nodeType":"YulIdentifier","src":"9708:5:21"},{"name":"base","nativeSrc":"9715:4:21","nodeType":"YulIdentifier","src":"9715:4:21"}],"functionName":{"name":"mul","nativeSrc":"9704:3:21","nodeType":"YulIdentifier","src":"9704:3:21"},"nativeSrc":"9704:16:21","nodeType":"YulFunctionCall","src":"9704:16:21"},"variableNames":[{"name":"power","nativeSrc":"9695:5:21","nodeType":"YulIdentifier","src":"9695:5:21"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"9674:8:21","nodeType":"YulIdentifier","src":"9674:8:21"},{"name":"power_1","nativeSrc":"9684:7:21","nodeType":"YulIdentifier","src":"9684:7:21"}],"functionName":{"name":"and","nativeSrc":"9670:3:21","nodeType":"YulIdentifier","src":"9670:3:21"},"nativeSrc":"9670:22:21","nodeType":"YulFunctionCall","src":"9670:22:21"},"nativeSrc":"9667:55:21","nodeType":"YulIf","src":"9667:55:21"},{"nativeSrc":"9735:23:21","nodeType":"YulAssignment","src":"9735:23:21","value":{"arguments":[{"name":"base","nativeSrc":"9747:4:21","nodeType":"YulIdentifier","src":"9747:4:21"},{"name":"base","nativeSrc":"9753:4:21","nodeType":"YulIdentifier","src":"9753:4:21"}],"functionName":{"name":"mul","nativeSrc":"9743:3:21","nodeType":"YulIdentifier","src":"9743:3:21"},"nativeSrc":"9743:15:21","nodeType":"YulFunctionCall","src":"9743:15:21"},"variableNames":[{"name":"base","nativeSrc":"9735:4:21","nodeType":"YulIdentifier","src":"9735:4:21"}]},{"nativeSrc":"9771:34:21","nodeType":"YulAssignment","src":"9771:34:21","value":{"arguments":[{"name":"power_1","nativeSrc":"9787:7:21","nodeType":"YulIdentifier","src":"9787:7:21"},{"name":"exponent","nativeSrc":"9796:8:21","nodeType":"YulIdentifier","src":"9796:8:21"}],"functionName":{"name":"shr","nativeSrc":"9783:3:21","nodeType":"YulIdentifier","src":"9783:3:21"},"nativeSrc":"9783:22:21","nodeType":"YulFunctionCall","src":"9783:22:21"},"variableNames":[{"name":"exponent","nativeSrc":"9771:8:21","nodeType":"YulIdentifier","src":"9771:8:21"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"9496:8:21","nodeType":"YulIdentifier","src":"9496:8:21"},{"name":"power_1","nativeSrc":"9506:7:21","nodeType":"YulIdentifier","src":"9506:7:21"}],"functionName":{"name":"gt","nativeSrc":"9493:2:21","nodeType":"YulIdentifier","src":"9493:2:21"},"nativeSrc":"9493:21:21","nodeType":"YulFunctionCall","src":"9493:21:21"},"nativeSrc":"9485:330:21","nodeType":"YulForLoop","post":{"nativeSrc":"9515:3:21","nodeType":"YulBlock","src":"9515:3:21","statements":[]},"pre":{"nativeSrc":"9489:3:21","nodeType":"YulBlock","src":"9489:3:21","statements":[]},"src":"9485:330:21"}]},"name":"checked_exp_helper","nativeSrc":"9345:476:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"9373:5:21","nodeType":"YulTypedName","src":"9373:5:21","type":""},{"name":"exponent","nativeSrc":"9380:8:21","nodeType":"YulTypedName","src":"9380:8:21","type":""}],"returnVariables":[{"name":"power","nativeSrc":"9393:5:21","nodeType":"YulTypedName","src":"9393:5:21","type":""},{"name":"base","nativeSrc":"9400:4:21","nodeType":"YulTypedName","src":"9400:4:21","type":""}],"src":"9345:476:21"},{"body":{"nativeSrc":"9885:807:21","nodeType":"YulBlock","src":"9885:807:21","statements":[{"body":{"nativeSrc":"9923:52:21","nodeType":"YulBlock","src":"9923:52:21","statements":[{"nativeSrc":"9937:10:21","nodeType":"YulAssignment","src":"9937:10:21","value":{"kind":"number","nativeSrc":"9946:1:21","nodeType":"YulLiteral","src":"9946:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"9937:5:21","nodeType":"YulIdentifier","src":"9937:5:21"}]},{"nativeSrc":"9960:5:21","nodeType":"YulLeave","src":"9960:5:21"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"9905:8:21","nodeType":"YulIdentifier","src":"9905:8:21"}],"functionName":{"name":"iszero","nativeSrc":"9898:6:21","nodeType":"YulIdentifier","src":"9898:6:21"},"nativeSrc":"9898:16:21","nodeType":"YulFunctionCall","src":"9898:16:21"},"nativeSrc":"9895:80:21","nodeType":"YulIf","src":"9895:80:21"},{"body":{"nativeSrc":"10008:52:21","nodeType":"YulBlock","src":"10008:52:21","statements":[{"nativeSrc":"10022:10:21","nodeType":"YulAssignment","src":"10022:10:21","value":{"kind":"number","nativeSrc":"10031:1:21","nodeType":"YulLiteral","src":"10031:1:21","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"10022:5:21","nodeType":"YulIdentifier","src":"10022:5:21"}]},{"nativeSrc":"10045:5:21","nodeType":"YulLeave","src":"10045:5:21"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"9994:4:21","nodeType":"YulIdentifier","src":"9994:4:21"}],"functionName":{"name":"iszero","nativeSrc":"9987:6:21","nodeType":"YulIdentifier","src":"9987:6:21"},"nativeSrc":"9987:12:21","nodeType":"YulFunctionCall","src":"9987:12:21"},"nativeSrc":"9984:76:21","nodeType":"YulIf","src":"9984:76:21"},{"cases":[{"body":{"nativeSrc":"10096:52:21","nodeType":"YulBlock","src":"10096:52:21","statements":[{"nativeSrc":"10110:10:21","nodeType":"YulAssignment","src":"10110:10:21","value":{"kind":"number","nativeSrc":"10119:1:21","nodeType":"YulLiteral","src":"10119:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"10110:5:21","nodeType":"YulIdentifier","src":"10110:5:21"}]},{"nativeSrc":"10133:5:21","nodeType":"YulLeave","src":"10133:5:21"}]},"nativeSrc":"10089:59:21","nodeType":"YulCase","src":"10089:59:21","value":{"kind":"number","nativeSrc":"10094:1:21","nodeType":"YulLiteral","src":"10094:1:21","type":"","value":"1"}},{"body":{"nativeSrc":"10164:123:21","nodeType":"YulBlock","src":"10164:123:21","statements":[{"body":{"nativeSrc":"10199:22:21","nodeType":"YulBlock","src":"10199:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10201:16:21","nodeType":"YulIdentifier","src":"10201:16:21"},"nativeSrc":"10201:18:21","nodeType":"YulFunctionCall","src":"10201:18:21"},"nativeSrc":"10201:18:21","nodeType":"YulExpressionStatement","src":"10201:18:21"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"10184:8:21","nodeType":"YulIdentifier","src":"10184:8:21"},{"kind":"number","nativeSrc":"10194:3:21","nodeType":"YulLiteral","src":"10194:3:21","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"10181:2:21","nodeType":"YulIdentifier","src":"10181:2:21"},"nativeSrc":"10181:17:21","nodeType":"YulFunctionCall","src":"10181:17:21"},"nativeSrc":"10178:43:21","nodeType":"YulIf","src":"10178:43:21"},{"nativeSrc":"10234:25:21","nodeType":"YulAssignment","src":"10234:25:21","value":{"arguments":[{"name":"exponent","nativeSrc":"10247:8:21","nodeType":"YulIdentifier","src":"10247:8:21"},{"kind":"number","nativeSrc":"10257:1:21","nodeType":"YulLiteral","src":"10257:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10243:3:21","nodeType":"YulIdentifier","src":"10243:3:21"},"nativeSrc":"10243:16:21","nodeType":"YulFunctionCall","src":"10243:16:21"},"variableNames":[{"name":"power","nativeSrc":"10234:5:21","nodeType":"YulIdentifier","src":"10234:5:21"}]},{"nativeSrc":"10272:5:21","nodeType":"YulLeave","src":"10272:5:21"}]},"nativeSrc":"10157:130:21","nodeType":"YulCase","src":"10157:130:21","value":{"kind":"number","nativeSrc":"10162:1:21","nodeType":"YulLiteral","src":"10162:1:21","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"10076:4:21","nodeType":"YulIdentifier","src":"10076:4:21"},"nativeSrc":"10069:218:21","nodeType":"YulSwitch","src":"10069:218:21"},{"body":{"nativeSrc":"10385:70:21","nodeType":"YulBlock","src":"10385:70:21","statements":[{"nativeSrc":"10399:28:21","nodeType":"YulAssignment","src":"10399:28:21","value":{"arguments":[{"name":"base","nativeSrc":"10412:4:21","nodeType":"YulIdentifier","src":"10412:4:21"},{"name":"exponent","nativeSrc":"10418:8:21","nodeType":"YulIdentifier","src":"10418:8:21"}],"functionName":{"name":"exp","nativeSrc":"10408:3:21","nodeType":"YulIdentifier","src":"10408:3:21"},"nativeSrc":"10408:19:21","nodeType":"YulFunctionCall","src":"10408:19:21"},"variableNames":[{"name":"power","nativeSrc":"10399:5:21","nodeType":"YulIdentifier","src":"10399:5:21"}]},{"nativeSrc":"10440:5:21","nodeType":"YulLeave","src":"10440:5:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"10309:4:21","nodeType":"YulIdentifier","src":"10309:4:21"},{"kind":"number","nativeSrc":"10315:2:21","nodeType":"YulLiteral","src":"10315:2:21","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"10306:2:21","nodeType":"YulIdentifier","src":"10306:2:21"},"nativeSrc":"10306:12:21","nodeType":"YulFunctionCall","src":"10306:12:21"},{"arguments":[{"name":"exponent","nativeSrc":"10323:8:21","nodeType":"YulIdentifier","src":"10323:8:21"},{"kind":"number","nativeSrc":"10333:2:21","nodeType":"YulLiteral","src":"10333:2:21","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"10320:2:21","nodeType":"YulIdentifier","src":"10320:2:21"},"nativeSrc":"10320:16:21","nodeType":"YulFunctionCall","src":"10320:16:21"}],"functionName":{"name":"and","nativeSrc":"10302:3:21","nodeType":"YulIdentifier","src":"10302:3:21"},"nativeSrc":"10302:35:21","nodeType":"YulFunctionCall","src":"10302:35:21"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"10346:4:21","nodeType":"YulIdentifier","src":"10346:4:21"},{"kind":"number","nativeSrc":"10352:3:21","nodeType":"YulLiteral","src":"10352:3:21","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"10343:2:21","nodeType":"YulIdentifier","src":"10343:2:21"},"nativeSrc":"10343:13:21","nodeType":"YulFunctionCall","src":"10343:13:21"},{"arguments":[{"name":"exponent","nativeSrc":"10361:8:21","nodeType":"YulIdentifier","src":"10361:8:21"},{"kind":"number","nativeSrc":"10371:2:21","nodeType":"YulLiteral","src":"10371:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"10358:2:21","nodeType":"YulIdentifier","src":"10358:2:21"},"nativeSrc":"10358:16:21","nodeType":"YulFunctionCall","src":"10358:16:21"}],"functionName":{"name":"and","nativeSrc":"10339:3:21","nodeType":"YulIdentifier","src":"10339:3:21"},"nativeSrc":"10339:36:21","nodeType":"YulFunctionCall","src":"10339:36:21"}],"functionName":{"name":"or","nativeSrc":"10299:2:21","nodeType":"YulIdentifier","src":"10299:2:21"},"nativeSrc":"10299:77:21","nodeType":"YulFunctionCall","src":"10299:77:21"},"nativeSrc":"10296:159:21","nodeType":"YulIf","src":"10296:159:21"},{"nativeSrc":"10464:57:21","nodeType":"YulVariableDeclaration","src":"10464:57:21","value":{"arguments":[{"name":"base","nativeSrc":"10506:4:21","nodeType":"YulIdentifier","src":"10506:4:21"},{"name":"exponent","nativeSrc":"10512:8:21","nodeType":"YulIdentifier","src":"10512:8:21"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"10487:18:21","nodeType":"YulIdentifier","src":"10487:18:21"},"nativeSrc":"10487:34:21","nodeType":"YulFunctionCall","src":"10487:34:21"},"variables":[{"name":"power_1","nativeSrc":"10468:7:21","nodeType":"YulTypedName","src":"10468:7:21","type":""},{"name":"base_1","nativeSrc":"10477:6:21","nodeType":"YulTypedName","src":"10477:6:21","type":""}]},{"body":{"nativeSrc":"10626:22:21","nodeType":"YulBlock","src":"10626:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10628:16:21","nodeType":"YulIdentifier","src":"10628:16:21"},"nativeSrc":"10628:18:21","nodeType":"YulFunctionCall","src":"10628:18:21"},"nativeSrc":"10628:18:21","nodeType":"YulExpressionStatement","src":"10628:18:21"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"10536:7:21","nodeType":"YulIdentifier","src":"10536:7:21"},{"arguments":[{"kind":"number","nativeSrc":"10549:66:21","nodeType":"YulLiteral","src":"10549:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"base_1","nativeSrc":"10617:6:21","nodeType":"YulIdentifier","src":"10617:6:21"}],"functionName":{"name":"div","nativeSrc":"10545:3:21","nodeType":"YulIdentifier","src":"10545:3:21"},"nativeSrc":"10545:79:21","nodeType":"YulFunctionCall","src":"10545:79:21"}],"functionName":{"name":"gt","nativeSrc":"10533:2:21","nodeType":"YulIdentifier","src":"10533:2:21"},"nativeSrc":"10533:92:21","nodeType":"YulFunctionCall","src":"10533:92:21"},"nativeSrc":"10530:118:21","nodeType":"YulIf","src":"10530:118:21"},{"nativeSrc":"10657:29:21","nodeType":"YulAssignment","src":"10657:29:21","value":{"arguments":[{"name":"power_1","nativeSrc":"10670:7:21","nodeType":"YulIdentifier","src":"10670:7:21"},{"name":"base_1","nativeSrc":"10679:6:21","nodeType":"YulIdentifier","src":"10679:6:21"}],"functionName":{"name":"mul","nativeSrc":"10666:3:21","nodeType":"YulIdentifier","src":"10666:3:21"},"nativeSrc":"10666:20:21","nodeType":"YulFunctionCall","src":"10666:20:21"},"variableNames":[{"name":"power","nativeSrc":"10657:5:21","nodeType":"YulIdentifier","src":"10657:5:21"}]}]},"name":"checked_exp_unsigned","nativeSrc":"9826:866:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"9856:4:21","nodeType":"YulTypedName","src":"9856:4:21","type":""},{"name":"exponent","nativeSrc":"9862:8:21","nodeType":"YulTypedName","src":"9862:8:21","type":""}],"returnVariables":[{"name":"power","nativeSrc":"9875:5:21","nodeType":"YulTypedName","src":"9875:5:21","type":""}],"src":"9826:866:21"},{"body":{"nativeSrc":"10765:72:21","nodeType":"YulBlock","src":"10765:72:21","statements":[{"nativeSrc":"10775:56:21","nodeType":"YulAssignment","src":"10775:56:21","value":{"arguments":[{"name":"base","nativeSrc":"10805:4:21","nodeType":"YulIdentifier","src":"10805:4:21"},{"arguments":[{"name":"exponent","nativeSrc":"10815:8:21","nodeType":"YulIdentifier","src":"10815:8:21"},{"kind":"number","nativeSrc":"10825:4:21","nodeType":"YulLiteral","src":"10825:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"10811:3:21","nodeType":"YulIdentifier","src":"10811:3:21"},"nativeSrc":"10811:19:21","nodeType":"YulFunctionCall","src":"10811:19:21"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"10784:20:21","nodeType":"YulIdentifier","src":"10784:20:21"},"nativeSrc":"10784:47:21","nodeType":"YulFunctionCall","src":"10784:47:21"},"variableNames":[{"name":"power","nativeSrc":"10775:5:21","nodeType":"YulIdentifier","src":"10775:5:21"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"10697:140:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"10736:4:21","nodeType":"YulTypedName","src":"10736:4:21","type":""},{"name":"exponent","nativeSrc":"10742:8:21","nodeType":"YulTypedName","src":"10742:8:21","type":""}],"returnVariables":[{"name":"power","nativeSrc":"10755:5:21","nodeType":"YulTypedName","src":"10755:5:21","type":""}],"src":"10697:140:21"},{"body":{"nativeSrc":"10894:116:21","nodeType":"YulBlock","src":"10894:116:21","statements":[{"nativeSrc":"10904:20:21","nodeType":"YulAssignment","src":"10904:20:21","value":{"arguments":[{"name":"x","nativeSrc":"10919:1:21","nodeType":"YulIdentifier","src":"10919:1:21"},{"name":"y","nativeSrc":"10922:1:21","nodeType":"YulIdentifier","src":"10922:1:21"}],"functionName":{"name":"mul","nativeSrc":"10915:3:21","nodeType":"YulIdentifier","src":"10915:3:21"},"nativeSrc":"10915:9:21","nodeType":"YulFunctionCall","src":"10915:9:21"},"variableNames":[{"name":"product","nativeSrc":"10904:7:21","nodeType":"YulIdentifier","src":"10904:7:21"}]},{"body":{"nativeSrc":"10982:22:21","nodeType":"YulBlock","src":"10982:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10984:16:21","nodeType":"YulIdentifier","src":"10984:16:21"},"nativeSrc":"10984:18:21","nodeType":"YulFunctionCall","src":"10984:18:21"},"nativeSrc":"10984:18:21","nodeType":"YulExpressionStatement","src":"10984:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"10953:1:21","nodeType":"YulIdentifier","src":"10953:1:21"}],"functionName":{"name":"iszero","nativeSrc":"10946:6:21","nodeType":"YulIdentifier","src":"10946:6:21"},"nativeSrc":"10946:9:21","nodeType":"YulFunctionCall","src":"10946:9:21"},{"arguments":[{"name":"y","nativeSrc":"10960:1:21","nodeType":"YulIdentifier","src":"10960:1:21"},{"arguments":[{"name":"product","nativeSrc":"10967:7:21","nodeType":"YulIdentifier","src":"10967:7:21"},{"name":"x","nativeSrc":"10976:1:21","nodeType":"YulIdentifier","src":"10976:1:21"}],"functionName":{"name":"div","nativeSrc":"10963:3:21","nodeType":"YulIdentifier","src":"10963:3:21"},"nativeSrc":"10963:15:21","nodeType":"YulFunctionCall","src":"10963:15:21"}],"functionName":{"name":"eq","nativeSrc":"10957:2:21","nodeType":"YulIdentifier","src":"10957:2:21"},"nativeSrc":"10957:22:21","nodeType":"YulFunctionCall","src":"10957:22:21"}],"functionName":{"name":"or","nativeSrc":"10943:2:21","nodeType":"YulIdentifier","src":"10943:2:21"},"nativeSrc":"10943:37:21","nodeType":"YulFunctionCall","src":"10943:37:21"}],"functionName":{"name":"iszero","nativeSrc":"10936:6:21","nodeType":"YulIdentifier","src":"10936:6:21"},"nativeSrc":"10936:45:21","nodeType":"YulFunctionCall","src":"10936:45:21"},"nativeSrc":"10933:71:21","nodeType":"YulIf","src":"10933:71:21"}]},"name":"checked_mul_t_uint256","nativeSrc":"10842:168:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10873:1:21","nodeType":"YulTypedName","src":"10873:1:21","type":""},{"name":"y","nativeSrc":"10876:1:21","nodeType":"YulTypedName","src":"10876:1:21","type":""}],"returnVariables":[{"name":"product","nativeSrc":"10882:7:21","nodeType":"YulTypedName","src":"10882:7:21","type":""}],"src":"10842:168:21"},{"body":{"nativeSrc":"11061:228:21","nodeType":"YulBlock","src":"11061:228:21","statements":[{"body":{"nativeSrc":"11092:168:21","nodeType":"YulBlock","src":"11092:168:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11113:1:21","nodeType":"YulLiteral","src":"11113:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11116:77:21","nodeType":"YulLiteral","src":"11116:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11106:6:21","nodeType":"YulIdentifier","src":"11106:6:21"},"nativeSrc":"11106:88:21","nodeType":"YulFunctionCall","src":"11106:88:21"},"nativeSrc":"11106:88:21","nodeType":"YulExpressionStatement","src":"11106:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11214:1:21","nodeType":"YulLiteral","src":"11214:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"11217:4:21","nodeType":"YulLiteral","src":"11217:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"11207:6:21","nodeType":"YulIdentifier","src":"11207:6:21"},"nativeSrc":"11207:15:21","nodeType":"YulFunctionCall","src":"11207:15:21"},"nativeSrc":"11207:15:21","nodeType":"YulExpressionStatement","src":"11207:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11242:1:21","nodeType":"YulLiteral","src":"11242:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11245:4:21","nodeType":"YulLiteral","src":"11245:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11235:6:21","nodeType":"YulIdentifier","src":"11235:6:21"},"nativeSrc":"11235:15:21","nodeType":"YulFunctionCall","src":"11235:15:21"},"nativeSrc":"11235:15:21","nodeType":"YulExpressionStatement","src":"11235:15:21"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"11081:1:21","nodeType":"YulIdentifier","src":"11081:1:21"}],"functionName":{"name":"iszero","nativeSrc":"11074:6:21","nodeType":"YulIdentifier","src":"11074:6:21"},"nativeSrc":"11074:9:21","nodeType":"YulFunctionCall","src":"11074:9:21"},"nativeSrc":"11071:189:21","nodeType":"YulIf","src":"11071:189:21"},{"nativeSrc":"11269:14:21","nodeType":"YulAssignment","src":"11269:14:21","value":{"arguments":[{"name":"x","nativeSrc":"11278:1:21","nodeType":"YulIdentifier","src":"11278:1:21"},{"name":"y","nativeSrc":"11281:1:21","nodeType":"YulIdentifier","src":"11281:1:21"}],"functionName":{"name":"div","nativeSrc":"11274:3:21","nodeType":"YulIdentifier","src":"11274:3:21"},"nativeSrc":"11274:9:21","nodeType":"YulFunctionCall","src":"11274:9:21"},"variableNames":[{"name":"r","nativeSrc":"11269:1:21","nodeType":"YulIdentifier","src":"11269:1:21"}]}]},"name":"checked_div_t_uint256","nativeSrc":"11015:274:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11046:1:21","nodeType":"YulTypedName","src":"11046:1:21","type":""},{"name":"y","nativeSrc":"11049:1:21","nodeType":"YulTypedName","src":"11049:1:21","type":""}],"returnVariables":[{"name":"r","nativeSrc":"11055:1:21","nodeType":"YulTypedName","src":"11055:1:21","type":""}],"src":"11015:274:21"},{"body":{"nativeSrc":"11343:79:21","nodeType":"YulBlock","src":"11343:79:21","statements":[{"nativeSrc":"11353:17:21","nodeType":"YulAssignment","src":"11353:17:21","value":{"arguments":[{"name":"x","nativeSrc":"11365:1:21","nodeType":"YulIdentifier","src":"11365:1:21"},{"name":"y","nativeSrc":"11368:1:21","nodeType":"YulIdentifier","src":"11368:1:21"}],"functionName":{"name":"sub","nativeSrc":"11361:3:21","nodeType":"YulIdentifier","src":"11361:3:21"},"nativeSrc":"11361:9:21","nodeType":"YulFunctionCall","src":"11361:9:21"},"variableNames":[{"name":"diff","nativeSrc":"11353:4:21","nodeType":"YulIdentifier","src":"11353:4:21"}]},{"body":{"nativeSrc":"11394:22:21","nodeType":"YulBlock","src":"11394:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11396:16:21","nodeType":"YulIdentifier","src":"11396:16:21"},"nativeSrc":"11396:18:21","nodeType":"YulFunctionCall","src":"11396:18:21"},"nativeSrc":"11396:18:21","nodeType":"YulExpressionStatement","src":"11396:18:21"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"11385:4:21","nodeType":"YulIdentifier","src":"11385:4:21"},{"name":"x","nativeSrc":"11391:1:21","nodeType":"YulIdentifier","src":"11391:1:21"}],"functionName":{"name":"gt","nativeSrc":"11382:2:21","nodeType":"YulIdentifier","src":"11382:2:21"},"nativeSrc":"11382:11:21","nodeType":"YulFunctionCall","src":"11382:11:21"},"nativeSrc":"11379:37:21","nodeType":"YulIf","src":"11379:37:21"}]},"name":"checked_sub_t_uint256","nativeSrc":"11294:128:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11325:1:21","nodeType":"YulTypedName","src":"11325:1:21","type":""},{"name":"y","nativeSrc":"11328:1:21","nodeType":"YulTypedName","src":"11328:1:21","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"11334:4:21","nodeType":"YulTypedName","src":"11334:4:21","type":""}],"src":"11294:128:21"},{"body":{"nativeSrc":"11556:168:21","nodeType":"YulBlock","src":"11556:168:21","statements":[{"nativeSrc":"11566:26:21","nodeType":"YulAssignment","src":"11566:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"11578:9:21","nodeType":"YulIdentifier","src":"11578:9:21"},{"kind":"number","nativeSrc":"11589:2:21","nodeType":"YulLiteral","src":"11589:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11574:3:21","nodeType":"YulIdentifier","src":"11574:3:21"},"nativeSrc":"11574:18:21","nodeType":"YulFunctionCall","src":"11574:18:21"},"variableNames":[{"name":"tail","nativeSrc":"11566:4:21","nodeType":"YulIdentifier","src":"11566:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11608:9:21","nodeType":"YulIdentifier","src":"11608:9:21"},{"arguments":[{"name":"value0","nativeSrc":"11623:6:21","nodeType":"YulIdentifier","src":"11623:6:21"},{"kind":"number","nativeSrc":"11631:42:21","nodeType":"YulLiteral","src":"11631:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"11619:3:21","nodeType":"YulIdentifier","src":"11619:3:21"},"nativeSrc":"11619:55:21","nodeType":"YulFunctionCall","src":"11619:55:21"}],"functionName":{"name":"mstore","nativeSrc":"11601:6:21","nodeType":"YulIdentifier","src":"11601:6:21"},"nativeSrc":"11601:74:21","nodeType":"YulFunctionCall","src":"11601:74:21"},"nativeSrc":"11601:74:21","nodeType":"YulExpressionStatement","src":"11601:74:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11695:9:21","nodeType":"YulIdentifier","src":"11695:9:21"},{"kind":"number","nativeSrc":"11706:2:21","nodeType":"YulLiteral","src":"11706:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11691:3:21","nodeType":"YulIdentifier","src":"11691:3:21"},"nativeSrc":"11691:18:21","nodeType":"YulFunctionCall","src":"11691:18:21"},{"name":"value1","nativeSrc":"11711:6:21","nodeType":"YulIdentifier","src":"11711:6:21"}],"functionName":{"name":"mstore","nativeSrc":"11684:6:21","nodeType":"YulIdentifier","src":"11684:6:21"},"nativeSrc":"11684:34:21","nodeType":"YulFunctionCall","src":"11684:34:21"},"nativeSrc":"11684:34:21","nodeType":"YulExpressionStatement","src":"11684:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"11427:297:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11517:9:21","nodeType":"YulTypedName","src":"11517:9:21","type":""},{"name":"value1","nativeSrc":"11528:6:21","nodeType":"YulTypedName","src":"11528:6:21","type":""},{"name":"value0","nativeSrc":"11536:6:21","nodeType":"YulTypedName","src":"11536:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11547:4:21","nodeType":"YulTypedName","src":"11547:4:21","type":""}],"src":"11427:297:21"},{"body":{"nativeSrc":"11807:167:21","nodeType":"YulBlock","src":"11807:167:21","statements":[{"body":{"nativeSrc":"11853:16:21","nodeType":"YulBlock","src":"11853:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11862:1:21","nodeType":"YulLiteral","src":"11862:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"11865:1:21","nodeType":"YulLiteral","src":"11865:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11855:6:21","nodeType":"YulIdentifier","src":"11855:6:21"},"nativeSrc":"11855:12:21","nodeType":"YulFunctionCall","src":"11855:12:21"},"nativeSrc":"11855:12:21","nodeType":"YulExpressionStatement","src":"11855:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11828:7:21","nodeType":"YulIdentifier","src":"11828:7:21"},{"name":"headStart","nativeSrc":"11837:9:21","nodeType":"YulIdentifier","src":"11837:9:21"}],"functionName":{"name":"sub","nativeSrc":"11824:3:21","nodeType":"YulIdentifier","src":"11824:3:21"},"nativeSrc":"11824:23:21","nodeType":"YulFunctionCall","src":"11824:23:21"},{"kind":"number","nativeSrc":"11849:2:21","nodeType":"YulLiteral","src":"11849:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"11820:3:21","nodeType":"YulIdentifier","src":"11820:3:21"},"nativeSrc":"11820:32:21","nodeType":"YulFunctionCall","src":"11820:32:21"},"nativeSrc":"11817:52:21","nodeType":"YulIf","src":"11817:52:21"},{"nativeSrc":"11878:29:21","nodeType":"YulVariableDeclaration","src":"11878:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"11897:9:21","nodeType":"YulIdentifier","src":"11897:9:21"}],"functionName":{"name":"mload","nativeSrc":"11891:5:21","nodeType":"YulIdentifier","src":"11891:5:21"},"nativeSrc":"11891:16:21","nodeType":"YulFunctionCall","src":"11891:16:21"},"variables":[{"name":"value","nativeSrc":"11882:5:21","nodeType":"YulTypedName","src":"11882:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"11938:5:21","nodeType":"YulIdentifier","src":"11938:5:21"}],"functionName":{"name":"validator_revert_bool","nativeSrc":"11916:21:21","nodeType":"YulIdentifier","src":"11916:21:21"},"nativeSrc":"11916:28:21","nodeType":"YulFunctionCall","src":"11916:28:21"},"nativeSrc":"11916:28:21","nodeType":"YulExpressionStatement","src":"11916:28:21"},{"nativeSrc":"11953:15:21","nodeType":"YulAssignment","src":"11953:15:21","value":{"name":"value","nativeSrc":"11963:5:21","nodeType":"YulIdentifier","src":"11963:5:21"},"variableNames":[{"name":"value0","nativeSrc":"11953:6:21","nodeType":"YulIdentifier","src":"11953:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"11729:245:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11773:9:21","nodeType":"YulTypedName","src":"11773:9:21","type":""},{"name":"dataEnd","nativeSrc":"11784:7:21","nodeType":"YulTypedName","src":"11784:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11796:6:21","nodeType":"YulTypedName","src":"11796:6:21","type":""}],"src":"11729:245:21"},{"body":{"nativeSrc":"12060:170:21","nodeType":"YulBlock","src":"12060:170:21","statements":[{"body":{"nativeSrc":"12106:16:21","nodeType":"YulBlock","src":"12106:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12115:1:21","nodeType":"YulLiteral","src":"12115:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"12118:1:21","nodeType":"YulLiteral","src":"12118:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12108:6:21","nodeType":"YulIdentifier","src":"12108:6:21"},"nativeSrc":"12108:12:21","nodeType":"YulFunctionCall","src":"12108:12:21"},"nativeSrc":"12108:12:21","nodeType":"YulExpressionStatement","src":"12108:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12081:7:21","nodeType":"YulIdentifier","src":"12081:7:21"},{"name":"headStart","nativeSrc":"12090:9:21","nodeType":"YulIdentifier","src":"12090:9:21"}],"functionName":{"name":"sub","nativeSrc":"12077:3:21","nodeType":"YulIdentifier","src":"12077:3:21"},"nativeSrc":"12077:23:21","nodeType":"YulFunctionCall","src":"12077:23:21"},{"kind":"number","nativeSrc":"12102:2:21","nodeType":"YulLiteral","src":"12102:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"12073:3:21","nodeType":"YulIdentifier","src":"12073:3:21"},"nativeSrc":"12073:32:21","nodeType":"YulFunctionCall","src":"12073:32:21"},"nativeSrc":"12070:52:21","nodeType":"YulIf","src":"12070:52:21"},{"nativeSrc":"12131:29:21","nodeType":"YulVariableDeclaration","src":"12131:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"12150:9:21","nodeType":"YulIdentifier","src":"12150:9:21"}],"functionName":{"name":"mload","nativeSrc":"12144:5:21","nodeType":"YulIdentifier","src":"12144:5:21"},"nativeSrc":"12144:16:21","nodeType":"YulFunctionCall","src":"12144:16:21"},"variables":[{"name":"value","nativeSrc":"12135:5:21","nodeType":"YulTypedName","src":"12135:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12194:5:21","nodeType":"YulIdentifier","src":"12194:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"12169:24:21","nodeType":"YulIdentifier","src":"12169:24:21"},"nativeSrc":"12169:31:21","nodeType":"YulFunctionCall","src":"12169:31:21"},"nativeSrc":"12169:31:21","nodeType":"YulExpressionStatement","src":"12169:31:21"},{"nativeSrc":"12209:15:21","nodeType":"YulAssignment","src":"12209:15:21","value":{"name":"value","nativeSrc":"12219:5:21","nodeType":"YulIdentifier","src":"12219:5:21"},"variableNames":[{"name":"value0","nativeSrc":"12209:6:21","nodeType":"YulIdentifier","src":"12209:6:21"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"11979:251:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12026:9:21","nodeType":"YulTypedName","src":"12026:9:21","type":""},{"name":"dataEnd","nativeSrc":"12037:7:21","nodeType":"YulTypedName","src":"12037:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12049:6:21","nodeType":"YulTypedName","src":"12049:6:21","type":""}],"src":"11979:251:21"},{"body":{"nativeSrc":"12290:382:21","nodeType":"YulBlock","src":"12290:382:21","statements":[{"nativeSrc":"12300:22:21","nodeType":"YulAssignment","src":"12300:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"12314:1:21","nodeType":"YulLiteral","src":"12314:1:21","type":"","value":"1"},{"name":"data","nativeSrc":"12317:4:21","nodeType":"YulIdentifier","src":"12317:4:21"}],"functionName":{"name":"shr","nativeSrc":"12310:3:21","nodeType":"YulIdentifier","src":"12310:3:21"},"nativeSrc":"12310:12:21","nodeType":"YulFunctionCall","src":"12310:12:21"},"variableNames":[{"name":"length","nativeSrc":"12300:6:21","nodeType":"YulIdentifier","src":"12300:6:21"}]},{"nativeSrc":"12331:38:21","nodeType":"YulVariableDeclaration","src":"12331:38:21","value":{"arguments":[{"name":"data","nativeSrc":"12361:4:21","nodeType":"YulIdentifier","src":"12361:4:21"},{"kind":"number","nativeSrc":"12367:1:21","nodeType":"YulLiteral","src":"12367:1:21","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"12357:3:21","nodeType":"YulIdentifier","src":"12357:3:21"},"nativeSrc":"12357:12:21","nodeType":"YulFunctionCall","src":"12357:12:21"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"12335:18:21","nodeType":"YulTypedName","src":"12335:18:21","type":""}]},{"body":{"nativeSrc":"12408:31:21","nodeType":"YulBlock","src":"12408:31:21","statements":[{"nativeSrc":"12410:27:21","nodeType":"YulAssignment","src":"12410:27:21","value":{"arguments":[{"name":"length","nativeSrc":"12424:6:21","nodeType":"YulIdentifier","src":"12424:6:21"},{"kind":"number","nativeSrc":"12432:4:21","nodeType":"YulLiteral","src":"12432:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"12420:3:21","nodeType":"YulIdentifier","src":"12420:3:21"},"nativeSrc":"12420:17:21","nodeType":"YulFunctionCall","src":"12420:17:21"},"variableNames":[{"name":"length","nativeSrc":"12410:6:21","nodeType":"YulIdentifier","src":"12410:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12388:18:21","nodeType":"YulIdentifier","src":"12388:18:21"}],"functionName":{"name":"iszero","nativeSrc":"12381:6:21","nodeType":"YulIdentifier","src":"12381:6:21"},"nativeSrc":"12381:26:21","nodeType":"YulFunctionCall","src":"12381:26:21"},"nativeSrc":"12378:61:21","nodeType":"YulIf","src":"12378:61:21"},{"body":{"nativeSrc":"12498:168:21","nodeType":"YulBlock","src":"12498:168:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12519:1:21","nodeType":"YulLiteral","src":"12519:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"12522:77:21","nodeType":"YulLiteral","src":"12522:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"12512:6:21","nodeType":"YulIdentifier","src":"12512:6:21"},"nativeSrc":"12512:88:21","nodeType":"YulFunctionCall","src":"12512:88:21"},"nativeSrc":"12512:88:21","nodeType":"YulExpressionStatement","src":"12512:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12620:1:21","nodeType":"YulLiteral","src":"12620:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"12623:4:21","nodeType":"YulLiteral","src":"12623:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"12613:6:21","nodeType":"YulIdentifier","src":"12613:6:21"},"nativeSrc":"12613:15:21","nodeType":"YulFunctionCall","src":"12613:15:21"},"nativeSrc":"12613:15:21","nodeType":"YulExpressionStatement","src":"12613:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12648:1:21","nodeType":"YulLiteral","src":"12648:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"12651:4:21","nodeType":"YulLiteral","src":"12651:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12641:6:21","nodeType":"YulIdentifier","src":"12641:6:21"},"nativeSrc":"12641:15:21","nodeType":"YulFunctionCall","src":"12641:15:21"},"nativeSrc":"12641:15:21","nodeType":"YulExpressionStatement","src":"12641:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12454:18:21","nodeType":"YulIdentifier","src":"12454:18:21"},{"arguments":[{"name":"length","nativeSrc":"12477:6:21","nodeType":"YulIdentifier","src":"12477:6:21"},{"kind":"number","nativeSrc":"12485:2:21","nodeType":"YulLiteral","src":"12485:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12474:2:21","nodeType":"YulIdentifier","src":"12474:2:21"},"nativeSrc":"12474:14:21","nodeType":"YulFunctionCall","src":"12474:14:21"}],"functionName":{"name":"eq","nativeSrc":"12451:2:21","nodeType":"YulIdentifier","src":"12451:2:21"},"nativeSrc":"12451:38:21","nodeType":"YulFunctionCall","src":"12451:38:21"},"nativeSrc":"12448:218:21","nodeType":"YulIf","src":"12448:218:21"}]},"name":"extract_byte_array_length","nativeSrc":"12235:437:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"12270:4:21","nodeType":"YulTypedName","src":"12270:4:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12279:6:21","nodeType":"YulTypedName","src":"12279:6:21","type":""}],"src":"12235:437:21"},{"body":{"nativeSrc":"12834:241:21","nodeType":"YulBlock","src":"12834:241:21","statements":[{"nativeSrc":"12844:26:21","nodeType":"YulAssignment","src":"12844:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"12856:9:21","nodeType":"YulIdentifier","src":"12856:9:21"},{"kind":"number","nativeSrc":"12867:2:21","nodeType":"YulLiteral","src":"12867:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12852:3:21","nodeType":"YulIdentifier","src":"12852:3:21"},"nativeSrc":"12852:18:21","nodeType":"YulFunctionCall","src":"12852:18:21"},"variableNames":[{"name":"tail","nativeSrc":"12844:4:21","nodeType":"YulIdentifier","src":"12844:4:21"}]},{"nativeSrc":"12879:52:21","nodeType":"YulVariableDeclaration","src":"12879:52:21","value":{"kind":"number","nativeSrc":"12889:42:21","nodeType":"YulLiteral","src":"12889:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"12883:2:21","nodeType":"YulTypedName","src":"12883:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12947:9:21","nodeType":"YulIdentifier","src":"12947:9:21"},{"arguments":[{"name":"value0","nativeSrc":"12962:6:21","nodeType":"YulIdentifier","src":"12962:6:21"},{"name":"_1","nativeSrc":"12970:2:21","nodeType":"YulIdentifier","src":"12970:2:21"}],"functionName":{"name":"and","nativeSrc":"12958:3:21","nodeType":"YulIdentifier","src":"12958:3:21"},"nativeSrc":"12958:15:21","nodeType":"YulFunctionCall","src":"12958:15:21"}],"functionName":{"name":"mstore","nativeSrc":"12940:6:21","nodeType":"YulIdentifier","src":"12940:6:21"},"nativeSrc":"12940:34:21","nodeType":"YulFunctionCall","src":"12940:34:21"},"nativeSrc":"12940:34:21","nodeType":"YulExpressionStatement","src":"12940:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12994:9:21","nodeType":"YulIdentifier","src":"12994:9:21"},{"kind":"number","nativeSrc":"13005:2:21","nodeType":"YulLiteral","src":"13005:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12990:3:21","nodeType":"YulIdentifier","src":"12990:3:21"},"nativeSrc":"12990:18:21","nodeType":"YulFunctionCall","src":"12990:18:21"},{"arguments":[{"name":"value1","nativeSrc":"13014:6:21","nodeType":"YulIdentifier","src":"13014:6:21"},{"name":"_1","nativeSrc":"13022:2:21","nodeType":"YulIdentifier","src":"13022:2:21"}],"functionName":{"name":"and","nativeSrc":"13010:3:21","nodeType":"YulIdentifier","src":"13010:3:21"},"nativeSrc":"13010:15:21","nodeType":"YulFunctionCall","src":"13010:15:21"}],"functionName":{"name":"mstore","nativeSrc":"12983:6:21","nodeType":"YulIdentifier","src":"12983:6:21"},"nativeSrc":"12983:43:21","nodeType":"YulFunctionCall","src":"12983:43:21"},"nativeSrc":"12983:43:21","nodeType":"YulExpressionStatement","src":"12983:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13046:9:21","nodeType":"YulIdentifier","src":"13046:9:21"},{"kind":"number","nativeSrc":"13057:2:21","nodeType":"YulLiteral","src":"13057:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13042:3:21","nodeType":"YulIdentifier","src":"13042:3:21"},"nativeSrc":"13042:18:21","nodeType":"YulFunctionCall","src":"13042:18:21"},{"name":"value2","nativeSrc":"13062:6:21","nodeType":"YulIdentifier","src":"13062:6:21"}],"functionName":{"name":"mstore","nativeSrc":"13035:6:21","nodeType":"YulIdentifier","src":"13035:6:21"},"nativeSrc":"13035:34:21","nodeType":"YulFunctionCall","src":"13035:34:21"},"nativeSrc":"13035:34:21","nodeType":"YulExpressionStatement","src":"13035:34:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"12677:398:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12787:9:21","nodeType":"YulTypedName","src":"12787:9:21","type":""},{"name":"value2","nativeSrc":"12798:6:21","nodeType":"YulTypedName","src":"12798:6:21","type":""},{"name":"value1","nativeSrc":"12806:6:21","nodeType":"YulTypedName","src":"12806:6:21","type":""},{"name":"value0","nativeSrc":"12814:6:21","nodeType":"YulTypedName","src":"12814:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12825:4:21","nodeType":"YulTypedName","src":"12825:4:21","type":""}],"src":"12677:398:21"},{"body":{"nativeSrc":"13128:77:21","nodeType":"YulBlock","src":"13128:77:21","statements":[{"nativeSrc":"13138:16:21","nodeType":"YulAssignment","src":"13138:16:21","value":{"arguments":[{"name":"x","nativeSrc":"13149:1:21","nodeType":"YulIdentifier","src":"13149:1:21"},{"name":"y","nativeSrc":"13152:1:21","nodeType":"YulIdentifier","src":"13152:1:21"}],"functionName":{"name":"add","nativeSrc":"13145:3:21","nodeType":"YulIdentifier","src":"13145:3:21"},"nativeSrc":"13145:9:21","nodeType":"YulFunctionCall","src":"13145:9:21"},"variableNames":[{"name":"sum","nativeSrc":"13138:3:21","nodeType":"YulIdentifier","src":"13138:3:21"}]},{"body":{"nativeSrc":"13177:22:21","nodeType":"YulBlock","src":"13177:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13179:16:21","nodeType":"YulIdentifier","src":"13179:16:21"},"nativeSrc":"13179:18:21","nodeType":"YulFunctionCall","src":"13179:18:21"},"nativeSrc":"13179:18:21","nodeType":"YulExpressionStatement","src":"13179:18:21"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"13169:1:21","nodeType":"YulIdentifier","src":"13169:1:21"},{"name":"sum","nativeSrc":"13172:3:21","nodeType":"YulIdentifier","src":"13172:3:21"}],"functionName":{"name":"gt","nativeSrc":"13166:2:21","nodeType":"YulIdentifier","src":"13166:2:21"},"nativeSrc":"13166:10:21","nodeType":"YulFunctionCall","src":"13166:10:21"},"nativeSrc":"13163:36:21","nodeType":"YulIf","src":"13163:36:21"}]},"name":"checked_add_t_uint256","nativeSrc":"13080:125:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13111:1:21","nodeType":"YulTypedName","src":"13111:1:21","type":""},{"name":"y","nativeSrc":"13114:1:21","nodeType":"YulTypedName","src":"13114:1:21","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"13120:3:21","nodeType":"YulTypedName","src":"13120:3:21","type":""}],"src":"13080:125:21"},{"body":{"nativeSrc":"13384:182:21","nodeType":"YulBlock","src":"13384:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13401:9:21","nodeType":"YulIdentifier","src":"13401:9:21"},{"kind":"number","nativeSrc":"13412:2:21","nodeType":"YulLiteral","src":"13412:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13394:6:21","nodeType":"YulIdentifier","src":"13394:6:21"},"nativeSrc":"13394:21:21","nodeType":"YulFunctionCall","src":"13394:21:21"},"nativeSrc":"13394:21:21","nodeType":"YulExpressionStatement","src":"13394:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13435:9:21","nodeType":"YulIdentifier","src":"13435:9:21"},{"kind":"number","nativeSrc":"13446:2:21","nodeType":"YulLiteral","src":"13446:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13431:3:21","nodeType":"YulIdentifier","src":"13431:3:21"},"nativeSrc":"13431:18:21","nodeType":"YulFunctionCall","src":"13431:18:21"},{"kind":"number","nativeSrc":"13451:2:21","nodeType":"YulLiteral","src":"13451:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13424:6:21","nodeType":"YulIdentifier","src":"13424:6:21"},"nativeSrc":"13424:30:21","nodeType":"YulFunctionCall","src":"13424:30:21"},"nativeSrc":"13424:30:21","nodeType":"YulExpressionStatement","src":"13424:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13474:9:21","nodeType":"YulIdentifier","src":"13474:9:21"},{"kind":"number","nativeSrc":"13485:2:21","nodeType":"YulLiteral","src":"13485:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13470:3:21","nodeType":"YulIdentifier","src":"13470:3:21"},"nativeSrc":"13470:18:21","nodeType":"YulFunctionCall","src":"13470:18:21"},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","kind":"string","nativeSrc":"13490:34:21","nodeType":"YulLiteral","src":"13490:34:21","type":"","value":"Amount must be greater than zero"}],"functionName":{"name":"mstore","nativeSrc":"13463:6:21","nodeType":"YulIdentifier","src":"13463:6:21"},"nativeSrc":"13463:62:21","nodeType":"YulFunctionCall","src":"13463:62:21"},"nativeSrc":"13463:62:21","nodeType":"YulExpressionStatement","src":"13463:62:21"},{"nativeSrc":"13534:26:21","nodeType":"YulAssignment","src":"13534:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"13546:9:21","nodeType":"YulIdentifier","src":"13546:9:21"},{"kind":"number","nativeSrc":"13557:2:21","nodeType":"YulLiteral","src":"13557:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13542:3:21","nodeType":"YulIdentifier","src":"13542:3:21"},"nativeSrc":"13542:18:21","nodeType":"YulFunctionCall","src":"13542:18:21"},"variableNames":[{"name":"tail","nativeSrc":"13534:4:21","nodeType":"YulIdentifier","src":"13534:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13210:356:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13361:9:21","nodeType":"YulTypedName","src":"13361:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13375:4:21","nodeType":"YulTypedName","src":"13375:4:21","type":""}],"src":"13210:356:21"},{"body":{"nativeSrc":"13670:101:21","nodeType":"YulBlock","src":"13670:101:21","statements":[{"nativeSrc":"13680:26:21","nodeType":"YulAssignment","src":"13680:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"13692:9:21","nodeType":"YulIdentifier","src":"13692:9:21"},{"kind":"number","nativeSrc":"13703:2:21","nodeType":"YulLiteral","src":"13703:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13688:3:21","nodeType":"YulIdentifier","src":"13688:3:21"},"nativeSrc":"13688:18:21","nodeType":"YulFunctionCall","src":"13688:18:21"},"variableNames":[{"name":"tail","nativeSrc":"13680:4:21","nodeType":"YulIdentifier","src":"13680:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13722:9:21","nodeType":"YulIdentifier","src":"13722:9:21"},{"arguments":[{"name":"value0","nativeSrc":"13737:6:21","nodeType":"YulIdentifier","src":"13737:6:21"},{"kind":"number","nativeSrc":"13745:18:21","nodeType":"YulLiteral","src":"13745:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"13733:3:21","nodeType":"YulIdentifier","src":"13733:3:21"},"nativeSrc":"13733:31:21","nodeType":"YulFunctionCall","src":"13733:31:21"}],"functionName":{"name":"mstore","nativeSrc":"13715:6:21","nodeType":"YulIdentifier","src":"13715:6:21"},"nativeSrc":"13715:50:21","nodeType":"YulFunctionCall","src":"13715:50:21"},"nativeSrc":"13715:50:21","nodeType":"YulExpressionStatement","src":"13715:50:21"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"13571:200:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13639:9:21","nodeType":"YulTypedName","src":"13639:9:21","type":""},{"name":"value0","nativeSrc":"13650:6:21","nodeType":"YulTypedName","src":"13650:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13661:4:21","nodeType":"YulTypedName","src":"13661:4:21","type":""}],"src":"13571:200:21"},{"body":{"nativeSrc":"13950:164:21","nodeType":"YulBlock","src":"13950:164:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13967:9:21","nodeType":"YulIdentifier","src":"13967:9:21"},{"kind":"number","nativeSrc":"13978:2:21","nodeType":"YulLiteral","src":"13978:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13960:6:21","nodeType":"YulIdentifier","src":"13960:6:21"},"nativeSrc":"13960:21:21","nodeType":"YulFunctionCall","src":"13960:21:21"},"nativeSrc":"13960:21:21","nodeType":"YulExpressionStatement","src":"13960:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14001:9:21","nodeType":"YulIdentifier","src":"14001:9:21"},{"kind":"number","nativeSrc":"14012:2:21","nodeType":"YulLiteral","src":"14012:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13997:3:21","nodeType":"YulIdentifier","src":"13997:3:21"},"nativeSrc":"13997:18:21","nodeType":"YulFunctionCall","src":"13997:18:21"},{"kind":"number","nativeSrc":"14017:2:21","nodeType":"YulLiteral","src":"14017:2:21","type":"","value":"14"}],"functionName":{"name":"mstore","nativeSrc":"13990:6:21","nodeType":"YulIdentifier","src":"13990:6:21"},"nativeSrc":"13990:30:21","nodeType":"YulFunctionCall","src":"13990:30:21"},"nativeSrc":"13990:30:21","nodeType":"YulExpressionStatement","src":"13990:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14040:9:21","nodeType":"YulIdentifier","src":"14040:9:21"},{"kind":"number","nativeSrc":"14051:2:21","nodeType":"YulLiteral","src":"14051:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14036:3:21","nodeType":"YulIdentifier","src":"14036:3:21"},"nativeSrc":"14036:18:21","nodeType":"YulFunctionCall","src":"14036:18:21"},{"hexValue":"6578656375746f723a207775743f","kind":"string","nativeSrc":"14056:16:21","nodeType":"YulLiteral","src":"14056:16:21","type":"","value":"executor: wut?"}],"functionName":{"name":"mstore","nativeSrc":"14029:6:21","nodeType":"YulIdentifier","src":"14029:6:21"},"nativeSrc":"14029:44:21","nodeType":"YulFunctionCall","src":"14029:44:21"},"nativeSrc":"14029:44:21","nodeType":"YulExpressionStatement","src":"14029:44:21"},{"nativeSrc":"14082:26:21","nodeType":"YulAssignment","src":"14082:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"14094:9:21","nodeType":"YulIdentifier","src":"14094:9:21"},{"kind":"number","nativeSrc":"14105:2:21","nodeType":"YulLiteral","src":"14105:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14090:3:21","nodeType":"YulIdentifier","src":"14090:3:21"},"nativeSrc":"14090:18:21","nodeType":"YulFunctionCall","src":"14090:18:21"},"variableNames":[{"name":"tail","nativeSrc":"14082:4:21","nodeType":"YulIdentifier","src":"14082:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_bbbcd694010870aca4b5330159c65992a3109a1437ee6632b6833f21093588c0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13776:338:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13927:9:21","nodeType":"YulTypedName","src":"13927:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13941:4:21","nodeType":"YulTypedName","src":"13941:4:21","type":""}],"src":"13776:338:21"},{"body":{"nativeSrc":"14293:179:21","nodeType":"YulBlock","src":"14293:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14310:9:21","nodeType":"YulIdentifier","src":"14310:9:21"},{"kind":"number","nativeSrc":"14321:2:21","nodeType":"YulLiteral","src":"14321:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14303:6:21","nodeType":"YulIdentifier","src":"14303:6:21"},"nativeSrc":"14303:21:21","nodeType":"YulFunctionCall","src":"14303:21:21"},"nativeSrc":"14303:21:21","nodeType":"YulExpressionStatement","src":"14303:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14344:9:21","nodeType":"YulIdentifier","src":"14344:9:21"},{"kind":"number","nativeSrc":"14355:2:21","nodeType":"YulLiteral","src":"14355:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14340:3:21","nodeType":"YulIdentifier","src":"14340:3:21"},"nativeSrc":"14340:18:21","nodeType":"YulFunctionCall","src":"14340:18:21"},{"kind":"number","nativeSrc":"14360:2:21","nodeType":"YulLiteral","src":"14360:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"14333:6:21","nodeType":"YulIdentifier","src":"14333:6:21"},"nativeSrc":"14333:30:21","nodeType":"YulFunctionCall","src":"14333:30:21"},"nativeSrc":"14333:30:21","nodeType":"YulExpressionStatement","src":"14333:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14383:9:21","nodeType":"YulIdentifier","src":"14383:9:21"},{"kind":"number","nativeSrc":"14394:2:21","nodeType":"YulLiteral","src":"14394:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14379:3:21","nodeType":"YulIdentifier","src":"14379:3:21"},"nativeSrc":"14379:18:21","nodeType":"YulFunctionCall","src":"14379:18:21"},{"hexValue":"776169742074696c6c206e657874207265696e76657374206379636c65","kind":"string","nativeSrc":"14399:31:21","nodeType":"YulLiteral","src":"14399:31:21","type":"","value":"wait till next reinvest cycle"}],"functionName":{"name":"mstore","nativeSrc":"14372:6:21","nodeType":"YulIdentifier","src":"14372:6:21"},"nativeSrc":"14372:59:21","nodeType":"YulFunctionCall","src":"14372:59:21"},"nativeSrc":"14372:59:21","nodeType":"YulExpressionStatement","src":"14372:59:21"},{"nativeSrc":"14440:26:21","nodeType":"YulAssignment","src":"14440:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"14452:9:21","nodeType":"YulIdentifier","src":"14452:9:21"},{"kind":"number","nativeSrc":"14463:2:21","nodeType":"YulLiteral","src":"14463:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14448:3:21","nodeType":"YulIdentifier","src":"14448:3:21"},"nativeSrc":"14448:18:21","nodeType":"YulFunctionCall","src":"14448:18:21"},"variableNames":[{"name":"tail","nativeSrc":"14440:4:21","nodeType":"YulIdentifier","src":"14440:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_8475dfc2a61c983fde89982d493adea657965a16ea35a31669edc1d76f0cb847__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14119:353:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14270:9:21","nodeType":"YulTypedName","src":"14270:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14284:4:21","nodeType":"YulTypedName","src":"14284:4:21","type":""}],"src":"14119:353:21"},{"body":{"nativeSrc":"14651:165:21","nodeType":"YulBlock","src":"14651:165:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14668:9:21","nodeType":"YulIdentifier","src":"14668:9:21"},{"kind":"number","nativeSrc":"14679:2:21","nodeType":"YulLiteral","src":"14679:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14661:6:21","nodeType":"YulIdentifier","src":"14661:6:21"},"nativeSrc":"14661:21:21","nodeType":"YulFunctionCall","src":"14661:21:21"},"nativeSrc":"14661:21:21","nodeType":"YulExpressionStatement","src":"14661:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14702:9:21","nodeType":"YulIdentifier","src":"14702:9:21"},{"kind":"number","nativeSrc":"14713:2:21","nodeType":"YulLiteral","src":"14713:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14698:3:21","nodeType":"YulIdentifier","src":"14698:3:21"},"nativeSrc":"14698:18:21","nodeType":"YulFunctionCall","src":"14698:18:21"},{"kind":"number","nativeSrc":"14718:2:21","nodeType":"YulLiteral","src":"14718:2:21","type":"","value":"15"}],"functionName":{"name":"mstore","nativeSrc":"14691:6:21","nodeType":"YulIdentifier","src":"14691:6:21"},"nativeSrc":"14691:30:21","nodeType":"YulFunctionCall","src":"14691:30:21"},"nativeSrc":"14691:30:21","nodeType":"YulExpressionStatement","src":"14691:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14741:9:21","nodeType":"YulIdentifier","src":"14741:9:21"},{"kind":"number","nativeSrc":"14752:2:21","nodeType":"YulLiteral","src":"14752:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14737:3:21","nodeType":"YulIdentifier","src":"14737:3:21"},"nativeSrc":"14737:18:21","nodeType":"YulFunctionCall","src":"14737:18:21"},{"hexValue":"4e6f7468696e6720746f2073776170","kind":"string","nativeSrc":"14757:17:21","nodeType":"YulLiteral","src":"14757:17:21","type":"","value":"Nothing to swap"}],"functionName":{"name":"mstore","nativeSrc":"14730:6:21","nodeType":"YulIdentifier","src":"14730:6:21"},"nativeSrc":"14730:45:21","nodeType":"YulFunctionCall","src":"14730:45:21"},"nativeSrc":"14730:45:21","nodeType":"YulExpressionStatement","src":"14730:45:21"},{"nativeSrc":"14784:26:21","nodeType":"YulAssignment","src":"14784:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"14796:9:21","nodeType":"YulIdentifier","src":"14796:9:21"},{"kind":"number","nativeSrc":"14807:2:21","nodeType":"YulLiteral","src":"14807:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14792:3:21","nodeType":"YulIdentifier","src":"14792:3:21"},"nativeSrc":"14792:18:21","nodeType":"YulFunctionCall","src":"14792:18:21"},"variableNames":[{"name":"tail","nativeSrc":"14784:4:21","nodeType":"YulIdentifier","src":"14784:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_53449748a5034738d502a01b62b389ab55b3ebc840f594da71fc707f6109e0a1__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14477:339:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14628:9:21","nodeType":"YulTypedName","src":"14628:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14642:4:21","nodeType":"YulTypedName","src":"14642:4:21","type":""}],"src":"14477:339:21"},{"body":{"nativeSrc":"15006:294:21","nodeType":"YulBlock","src":"15006:294:21","statements":[{"nativeSrc":"15016:27:21","nodeType":"YulAssignment","src":"15016:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"15028:9:21","nodeType":"YulIdentifier","src":"15028:9:21"},{"kind":"number","nativeSrc":"15039:3:21","nodeType":"YulLiteral","src":"15039:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"15024:3:21","nodeType":"YulIdentifier","src":"15024:3:21"},"nativeSrc":"15024:19:21","nodeType":"YulFunctionCall","src":"15024:19:21"},"variableNames":[{"name":"tail","nativeSrc":"15016:4:21","nodeType":"YulIdentifier","src":"15016:4:21"}]},{"nativeSrc":"15052:52:21","nodeType":"YulVariableDeclaration","src":"15052:52:21","value":{"kind":"number","nativeSrc":"15062:42:21","nodeType":"YulLiteral","src":"15062:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"15056:2:21","nodeType":"YulTypedName","src":"15056:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15120:9:21","nodeType":"YulIdentifier","src":"15120:9:21"},{"arguments":[{"name":"value0","nativeSrc":"15135:6:21","nodeType":"YulIdentifier","src":"15135:6:21"},{"name":"_1","nativeSrc":"15143:2:21","nodeType":"YulIdentifier","src":"15143:2:21"}],"functionName":{"name":"and","nativeSrc":"15131:3:21","nodeType":"YulIdentifier","src":"15131:3:21"},"nativeSrc":"15131:15:21","nodeType":"YulFunctionCall","src":"15131:15:21"}],"functionName":{"name":"mstore","nativeSrc":"15113:6:21","nodeType":"YulIdentifier","src":"15113:6:21"},"nativeSrc":"15113:34:21","nodeType":"YulFunctionCall","src":"15113:34:21"},"nativeSrc":"15113:34:21","nodeType":"YulExpressionStatement","src":"15113:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15167:9:21","nodeType":"YulIdentifier","src":"15167:9:21"},{"kind":"number","nativeSrc":"15178:2:21","nodeType":"YulLiteral","src":"15178:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15163:3:21","nodeType":"YulIdentifier","src":"15163:3:21"},"nativeSrc":"15163:18:21","nodeType":"YulFunctionCall","src":"15163:18:21"},{"arguments":[{"name":"value1","nativeSrc":"15187:6:21","nodeType":"YulIdentifier","src":"15187:6:21"},{"name":"_1","nativeSrc":"15195:2:21","nodeType":"YulIdentifier","src":"15195:2:21"}],"functionName":{"name":"and","nativeSrc":"15183:3:21","nodeType":"YulIdentifier","src":"15183:3:21"},"nativeSrc":"15183:15:21","nodeType":"YulFunctionCall","src":"15183:15:21"}],"functionName":{"name":"mstore","nativeSrc":"15156:6:21","nodeType":"YulIdentifier","src":"15156:6:21"},"nativeSrc":"15156:43:21","nodeType":"YulFunctionCall","src":"15156:43:21"},"nativeSrc":"15156:43:21","nodeType":"YulExpressionStatement","src":"15156:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15219:9:21","nodeType":"YulIdentifier","src":"15219:9:21"},{"kind":"number","nativeSrc":"15230:2:21","nodeType":"YulLiteral","src":"15230:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15215:3:21","nodeType":"YulIdentifier","src":"15215:3:21"},"nativeSrc":"15215:18:21","nodeType":"YulFunctionCall","src":"15215:18:21"},{"name":"value2","nativeSrc":"15235:6:21","nodeType":"YulIdentifier","src":"15235:6:21"}],"functionName":{"name":"mstore","nativeSrc":"15208:6:21","nodeType":"YulIdentifier","src":"15208:6:21"},"nativeSrc":"15208:34:21","nodeType":"YulFunctionCall","src":"15208:34:21"},"nativeSrc":"15208:34:21","nodeType":"YulExpressionStatement","src":"15208:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15262:9:21","nodeType":"YulIdentifier","src":"15262:9:21"},{"kind":"number","nativeSrc":"15273:2:21","nodeType":"YulLiteral","src":"15273:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15258:3:21","nodeType":"YulIdentifier","src":"15258:3:21"},"nativeSrc":"15258:18:21","nodeType":"YulFunctionCall","src":"15258:18:21"},{"arguments":[{"name":"value3","nativeSrc":"15282:6:21","nodeType":"YulIdentifier","src":"15282:6:21"},{"name":"_1","nativeSrc":"15290:2:21","nodeType":"YulIdentifier","src":"15290:2:21"}],"functionName":{"name":"and","nativeSrc":"15278:3:21","nodeType":"YulIdentifier","src":"15278:3:21"},"nativeSrc":"15278:15:21","nodeType":"YulFunctionCall","src":"15278:15:21"}],"functionName":{"name":"mstore","nativeSrc":"15251:6:21","nodeType":"YulIdentifier","src":"15251:6:21"},"nativeSrc":"15251:43:21","nodeType":"YulFunctionCall","src":"15251:43:21"},"nativeSrc":"15251:43:21","nodeType":"YulExpressionStatement","src":"15251:43:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"14821:479:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14951:9:21","nodeType":"YulTypedName","src":"14951:9:21","type":""},{"name":"value3","nativeSrc":"14962:6:21","nodeType":"YulTypedName","src":"14962:6:21","type":""},{"name":"value2","nativeSrc":"14970:6:21","nodeType":"YulTypedName","src":"14970:6:21","type":""},{"name":"value1","nativeSrc":"14978:6:21","nodeType":"YulTypedName","src":"14978:6:21","type":""},{"name":"value0","nativeSrc":"14986:6:21","nodeType":"YulTypedName","src":"14986:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14997:4:21","nodeType":"YulTypedName","src":"14997:4:21","type":""}],"src":"14821:479:21"},{"body":{"nativeSrc":"15434:119:21","nodeType":"YulBlock","src":"15434:119:21","statements":[{"nativeSrc":"15444:26:21","nodeType":"YulAssignment","src":"15444:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"15456:9:21","nodeType":"YulIdentifier","src":"15456:9:21"},{"kind":"number","nativeSrc":"15467:2:21","nodeType":"YulLiteral","src":"15467:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15452:3:21","nodeType":"YulIdentifier","src":"15452:3:21"},"nativeSrc":"15452:18:21","nodeType":"YulFunctionCall","src":"15452:18:21"},"variableNames":[{"name":"tail","nativeSrc":"15444:4:21","nodeType":"YulIdentifier","src":"15444:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15486:9:21","nodeType":"YulIdentifier","src":"15486:9:21"},{"name":"value0","nativeSrc":"15497:6:21","nodeType":"YulIdentifier","src":"15497:6:21"}],"functionName":{"name":"mstore","nativeSrc":"15479:6:21","nodeType":"YulIdentifier","src":"15479:6:21"},"nativeSrc":"15479:25:21","nodeType":"YulFunctionCall","src":"15479:25:21"},"nativeSrc":"15479:25:21","nodeType":"YulExpressionStatement","src":"15479:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15524:9:21","nodeType":"YulIdentifier","src":"15524:9:21"},{"kind":"number","nativeSrc":"15535:2:21","nodeType":"YulLiteral","src":"15535:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15520:3:21","nodeType":"YulIdentifier","src":"15520:3:21"},"nativeSrc":"15520:18:21","nodeType":"YulFunctionCall","src":"15520:18:21"},{"name":"value1","nativeSrc":"15540:6:21","nodeType":"YulIdentifier","src":"15540:6:21"}],"functionName":{"name":"mstore","nativeSrc":"15513:6:21","nodeType":"YulIdentifier","src":"15513:6:21"},"nativeSrc":"15513:34:21","nodeType":"YulFunctionCall","src":"15513:34:21"},"nativeSrc":"15513:34:21","nodeType":"YulExpressionStatement","src":"15513:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"15305:248:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15395:9:21","nodeType":"YulTypedName","src":"15395:9:21","type":""},{"name":"value1","nativeSrc":"15406:6:21","nodeType":"YulTypedName","src":"15406:6:21","type":""},{"name":"value0","nativeSrc":"15414:6:21","nodeType":"YulTypedName","src":"15414:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15425:4:21","nodeType":"YulTypedName","src":"15425:4:21","type":""}],"src":"15305:248:21"},{"body":{"nativeSrc":"15666:101:21","nodeType":"YulBlock","src":"15666:101:21","statements":[{"nativeSrc":"15676:26:21","nodeType":"YulAssignment","src":"15676:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"15688:9:21","nodeType":"YulIdentifier","src":"15688:9:21"},{"kind":"number","nativeSrc":"15699:2:21","nodeType":"YulLiteral","src":"15699:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15684:3:21","nodeType":"YulIdentifier","src":"15684:3:21"},"nativeSrc":"15684:18:21","nodeType":"YulFunctionCall","src":"15684:18:21"},"variableNames":[{"name":"tail","nativeSrc":"15676:4:21","nodeType":"YulIdentifier","src":"15676:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15718:9:21","nodeType":"YulIdentifier","src":"15718:9:21"},{"arguments":[{"name":"value0","nativeSrc":"15733:6:21","nodeType":"YulIdentifier","src":"15733:6:21"},{"kind":"number","nativeSrc":"15741:18:21","nodeType":"YulLiteral","src":"15741:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"15729:3:21","nodeType":"YulIdentifier","src":"15729:3:21"},"nativeSrc":"15729:31:21","nodeType":"YulFunctionCall","src":"15729:31:21"}],"functionName":{"name":"mstore","nativeSrc":"15711:6:21","nodeType":"YulIdentifier","src":"15711:6:21"},"nativeSrc":"15711:50:21","nodeType":"YulFunctionCall","src":"15711:50:21"},"nativeSrc":"15711:50:21","nodeType":"YulExpressionStatement","src":"15711:50:21"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"15558:209:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15635:9:21","nodeType":"YulTypedName","src":"15635:9:21","type":""},{"name":"value0","nativeSrc":"15646:6:21","nodeType":"YulTypedName","src":"15646:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15657:4:21","nodeType":"YulTypedName","src":"15657:4:21","type":""}],"src":"15558:209:21"},{"body":{"nativeSrc":"15929:211:21","nodeType":"YulBlock","src":"15929:211:21","statements":[{"nativeSrc":"15939:26:21","nodeType":"YulAssignment","src":"15939:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"15951:9:21","nodeType":"YulIdentifier","src":"15951:9:21"},{"kind":"number","nativeSrc":"15962:2:21","nodeType":"YulLiteral","src":"15962:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15947:3:21","nodeType":"YulIdentifier","src":"15947:3:21"},"nativeSrc":"15947:18:21","nodeType":"YulFunctionCall","src":"15947:18:21"},"variableNames":[{"name":"tail","nativeSrc":"15939:4:21","nodeType":"YulIdentifier","src":"15939:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15981:9:21","nodeType":"YulIdentifier","src":"15981:9:21"},{"arguments":[{"name":"value0","nativeSrc":"15996:6:21","nodeType":"YulIdentifier","src":"15996:6:21"},{"kind":"number","nativeSrc":"16004:42:21","nodeType":"YulLiteral","src":"16004:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"15992:3:21","nodeType":"YulIdentifier","src":"15992:3:21"},"nativeSrc":"15992:55:21","nodeType":"YulFunctionCall","src":"15992:55:21"}],"functionName":{"name":"mstore","nativeSrc":"15974:6:21","nodeType":"YulIdentifier","src":"15974:6:21"},"nativeSrc":"15974:74:21","nodeType":"YulFunctionCall","src":"15974:74:21"},"nativeSrc":"15974:74:21","nodeType":"YulExpressionStatement","src":"15974:74:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16068:9:21","nodeType":"YulIdentifier","src":"16068:9:21"},{"kind":"number","nativeSrc":"16079:2:21","nodeType":"YulLiteral","src":"16079:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16064:3:21","nodeType":"YulIdentifier","src":"16064:3:21"},"nativeSrc":"16064:18:21","nodeType":"YulFunctionCall","src":"16064:18:21"},{"name":"value1","nativeSrc":"16084:6:21","nodeType":"YulIdentifier","src":"16084:6:21"}],"functionName":{"name":"mstore","nativeSrc":"16057:6:21","nodeType":"YulIdentifier","src":"16057:6:21"},"nativeSrc":"16057:34:21","nodeType":"YulFunctionCall","src":"16057:34:21"},"nativeSrc":"16057:34:21","nodeType":"YulExpressionStatement","src":"16057:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16111:9:21","nodeType":"YulIdentifier","src":"16111:9:21"},{"kind":"number","nativeSrc":"16122:2:21","nodeType":"YulLiteral","src":"16122:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16107:3:21","nodeType":"YulIdentifier","src":"16107:3:21"},"nativeSrc":"16107:18:21","nodeType":"YulFunctionCall","src":"16107:18:21"},{"name":"value2","nativeSrc":"16127:6:21","nodeType":"YulIdentifier","src":"16127:6:21"}],"functionName":{"name":"mstore","nativeSrc":"16100:6:21","nodeType":"YulIdentifier","src":"16100:6:21"},"nativeSrc":"16100:34:21","nodeType":"YulFunctionCall","src":"16100:34:21"},"nativeSrc":"16100:34:21","nodeType":"YulExpressionStatement","src":"16100:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"15772:368:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15882:9:21","nodeType":"YulTypedName","src":"15882:9:21","type":""},{"name":"value2","nativeSrc":"15893:6:21","nodeType":"YulTypedName","src":"15893:6:21","type":""},{"name":"value1","nativeSrc":"15901:6:21","nodeType":"YulTypedName","src":"15901:6:21","type":""},{"name":"value0","nativeSrc":"15909:6:21","nodeType":"YulTypedName","src":"15909:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15920:4:21","nodeType":"YulTypedName","src":"15920:4:21","type":""}],"src":"15772:368:21"},{"body":{"nativeSrc":"16226:103:21","nodeType":"YulBlock","src":"16226:103:21","statements":[{"body":{"nativeSrc":"16272:16:21","nodeType":"YulBlock","src":"16272:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16281:1:21","nodeType":"YulLiteral","src":"16281:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"16284:1:21","nodeType":"YulLiteral","src":"16284:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16274:6:21","nodeType":"YulIdentifier","src":"16274:6:21"},"nativeSrc":"16274:12:21","nodeType":"YulFunctionCall","src":"16274:12:21"},"nativeSrc":"16274:12:21","nodeType":"YulExpressionStatement","src":"16274:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16247:7:21","nodeType":"YulIdentifier","src":"16247:7:21"},{"name":"headStart","nativeSrc":"16256:9:21","nodeType":"YulIdentifier","src":"16256:9:21"}],"functionName":{"name":"sub","nativeSrc":"16243:3:21","nodeType":"YulIdentifier","src":"16243:3:21"},"nativeSrc":"16243:23:21","nodeType":"YulFunctionCall","src":"16243:23:21"},{"kind":"number","nativeSrc":"16268:2:21","nodeType":"YulLiteral","src":"16268:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"16239:3:21","nodeType":"YulIdentifier","src":"16239:3:21"},"nativeSrc":"16239:32:21","nodeType":"YulFunctionCall","src":"16239:32:21"},"nativeSrc":"16236:52:21","nodeType":"YulIf","src":"16236:52:21"},{"nativeSrc":"16297:26:21","nodeType":"YulAssignment","src":"16297:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"16313:9:21","nodeType":"YulIdentifier","src":"16313:9:21"}],"functionName":{"name":"mload","nativeSrc":"16307:5:21","nodeType":"YulIdentifier","src":"16307:5:21"},"nativeSrc":"16307:16:21","nodeType":"YulFunctionCall","src":"16307:16:21"},"variableNames":[{"name":"value0","nativeSrc":"16297:6:21","nodeType":"YulIdentifier","src":"16297:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"16145:184:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16192:9:21","nodeType":"YulTypedName","src":"16192:9:21","type":""},{"name":"dataEnd","nativeSrc":"16203:7:21","nodeType":"YulTypedName","src":"16203:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16215:6:21","nodeType":"YulTypedName","src":"16215:6:21","type":""}],"src":"16145:184:21"},{"body":{"nativeSrc":"16390:65:21","nodeType":"YulBlock","src":"16390:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16407:1:21","nodeType":"YulLiteral","src":"16407:1:21","type":"","value":"0"},{"name":"ptr","nativeSrc":"16410:3:21","nodeType":"YulIdentifier","src":"16410:3:21"}],"functionName":{"name":"mstore","nativeSrc":"16400:6:21","nodeType":"YulIdentifier","src":"16400:6:21"},"nativeSrc":"16400:14:21","nodeType":"YulFunctionCall","src":"16400:14:21"},"nativeSrc":"16400:14:21","nodeType":"YulExpressionStatement","src":"16400:14:21"},{"nativeSrc":"16423:26:21","nodeType":"YulAssignment","src":"16423:26:21","value":{"arguments":[{"kind":"number","nativeSrc":"16441:1:21","nodeType":"YulLiteral","src":"16441:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"16444:4:21","nodeType":"YulLiteral","src":"16444:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"16431:9:21","nodeType":"YulIdentifier","src":"16431:9:21"},"nativeSrc":"16431:18:21","nodeType":"YulFunctionCall","src":"16431:18:21"},"variableNames":[{"name":"data","nativeSrc":"16423:4:21","nodeType":"YulIdentifier","src":"16423:4:21"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"16334:121:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"16373:3:21","nodeType":"YulTypedName","src":"16373:3:21","type":""}],"returnVariables":[{"name":"data","nativeSrc":"16381:4:21","nodeType":"YulTypedName","src":"16381:4:21","type":""}],"src":"16334:121:21"},{"body":{"nativeSrc":"16541:437:21","nodeType":"YulBlock","src":"16541:437:21","statements":[{"body":{"nativeSrc":"16574:398:21","nodeType":"YulBlock","src":"16574:398:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16595:1:21","nodeType":"YulLiteral","src":"16595:1:21","type":"","value":"0"},{"name":"array","nativeSrc":"16598:5:21","nodeType":"YulIdentifier","src":"16598:5:21"}],"functionName":{"name":"mstore","nativeSrc":"16588:6:21","nodeType":"YulIdentifier","src":"16588:6:21"},"nativeSrc":"16588:16:21","nodeType":"YulFunctionCall","src":"16588:16:21"},"nativeSrc":"16588:16:21","nodeType":"YulExpressionStatement","src":"16588:16:21"},{"nativeSrc":"16617:30:21","nodeType":"YulVariableDeclaration","src":"16617:30:21","value":{"arguments":[{"kind":"number","nativeSrc":"16639:1:21","nodeType":"YulLiteral","src":"16639:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"16642:4:21","nodeType":"YulLiteral","src":"16642:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"16629:9:21","nodeType":"YulIdentifier","src":"16629:9:21"},"nativeSrc":"16629:18:21","nodeType":"YulFunctionCall","src":"16629:18:21"},"variables":[{"name":"data","nativeSrc":"16621:4:21","nodeType":"YulTypedName","src":"16621:4:21","type":""}]},{"nativeSrc":"16660:57:21","nodeType":"YulVariableDeclaration","src":"16660:57:21","value":{"arguments":[{"name":"data","nativeSrc":"16683:4:21","nodeType":"YulIdentifier","src":"16683:4:21"},{"arguments":[{"kind":"number","nativeSrc":"16693:1:21","nodeType":"YulLiteral","src":"16693:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"16700:10:21","nodeType":"YulIdentifier","src":"16700:10:21"},{"kind":"number","nativeSrc":"16712:2:21","nodeType":"YulLiteral","src":"16712:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"16696:3:21","nodeType":"YulIdentifier","src":"16696:3:21"},"nativeSrc":"16696:19:21","nodeType":"YulFunctionCall","src":"16696:19:21"}],"functionName":{"name":"shr","nativeSrc":"16689:3:21","nodeType":"YulIdentifier","src":"16689:3:21"},"nativeSrc":"16689:27:21","nodeType":"YulFunctionCall","src":"16689:27:21"}],"functionName":{"name":"add","nativeSrc":"16679:3:21","nodeType":"YulIdentifier","src":"16679:3:21"},"nativeSrc":"16679:38:21","nodeType":"YulFunctionCall","src":"16679:38:21"},"variables":[{"name":"deleteStart","nativeSrc":"16664:11:21","nodeType":"YulTypedName","src":"16664:11:21","type":""}]},{"body":{"nativeSrc":"16754:23:21","nodeType":"YulBlock","src":"16754:23:21","statements":[{"nativeSrc":"16756:19:21","nodeType":"YulAssignment","src":"16756:19:21","value":{"name":"data","nativeSrc":"16771:4:21","nodeType":"YulIdentifier","src":"16771:4:21"},"variableNames":[{"name":"deleteStart","nativeSrc":"16756:11:21","nodeType":"YulIdentifier","src":"16756:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"16736:10:21","nodeType":"YulIdentifier","src":"16736:10:21"},{"kind":"number","nativeSrc":"16748:4:21","nodeType":"YulLiteral","src":"16748:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"16733:2:21","nodeType":"YulIdentifier","src":"16733:2:21"},"nativeSrc":"16733:20:21","nodeType":"YulFunctionCall","src":"16733:20:21"},"nativeSrc":"16730:47:21","nodeType":"YulIf","src":"16730:47:21"},{"nativeSrc":"16790:41:21","nodeType":"YulVariableDeclaration","src":"16790:41:21","value":{"arguments":[{"name":"data","nativeSrc":"16804:4:21","nodeType":"YulIdentifier","src":"16804:4:21"},{"arguments":[{"kind":"number","nativeSrc":"16814:1:21","nodeType":"YulLiteral","src":"16814:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"16821:3:21","nodeType":"YulIdentifier","src":"16821:3:21"},{"kind":"number","nativeSrc":"16826:2:21","nodeType":"YulLiteral","src":"16826:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"16817:3:21","nodeType":"YulIdentifier","src":"16817:3:21"},"nativeSrc":"16817:12:21","nodeType":"YulFunctionCall","src":"16817:12:21"}],"functionName":{"name":"shr","nativeSrc":"16810:3:21","nodeType":"YulIdentifier","src":"16810:3:21"},"nativeSrc":"16810:20:21","nodeType":"YulFunctionCall","src":"16810:20:21"}],"functionName":{"name":"add","nativeSrc":"16800:3:21","nodeType":"YulIdentifier","src":"16800:3:21"},"nativeSrc":"16800:31:21","nodeType":"YulFunctionCall","src":"16800:31:21"},"variables":[{"name":"_1","nativeSrc":"16794:2:21","nodeType":"YulTypedName","src":"16794:2:21","type":""}]},{"nativeSrc":"16844:24:21","nodeType":"YulVariableDeclaration","src":"16844:24:21","value":{"name":"deleteStart","nativeSrc":"16857:11:21","nodeType":"YulIdentifier","src":"16857:11:21"},"variables":[{"name":"start","nativeSrc":"16848:5:21","nodeType":"YulTypedName","src":"16848:5:21","type":""}]},{"body":{"nativeSrc":"16942:20:21","nodeType":"YulBlock","src":"16942:20:21","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"16951:5:21","nodeType":"YulIdentifier","src":"16951:5:21"},{"kind":"number","nativeSrc":"16958:1:21","nodeType":"YulLiteral","src":"16958:1:21","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"16944:6:21","nodeType":"YulIdentifier","src":"16944:6:21"},"nativeSrc":"16944:16:21","nodeType":"YulFunctionCall","src":"16944:16:21"},"nativeSrc":"16944:16:21","nodeType":"YulExpressionStatement","src":"16944:16:21"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"16892:5:21","nodeType":"YulIdentifier","src":"16892:5:21"},{"name":"_1","nativeSrc":"16899:2:21","nodeType":"YulIdentifier","src":"16899:2:21"}],"functionName":{"name":"lt","nativeSrc":"16889:2:21","nodeType":"YulIdentifier","src":"16889:2:21"},"nativeSrc":"16889:13:21","nodeType":"YulFunctionCall","src":"16889:13:21"},"nativeSrc":"16881:81:21","nodeType":"YulForLoop","post":{"nativeSrc":"16903:26:21","nodeType":"YulBlock","src":"16903:26:21","statements":[{"nativeSrc":"16905:22:21","nodeType":"YulAssignment","src":"16905:22:21","value":{"arguments":[{"name":"start","nativeSrc":"16918:5:21","nodeType":"YulIdentifier","src":"16918:5:21"},{"kind":"number","nativeSrc":"16925:1:21","nodeType":"YulLiteral","src":"16925:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"16914:3:21","nodeType":"YulIdentifier","src":"16914:3:21"},"nativeSrc":"16914:13:21","nodeType":"YulFunctionCall","src":"16914:13:21"},"variableNames":[{"name":"start","nativeSrc":"16905:5:21","nodeType":"YulIdentifier","src":"16905:5:21"}]}]},"pre":{"nativeSrc":"16885:3:21","nodeType":"YulBlock","src":"16885:3:21","statements":[]},"src":"16881:81:21"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"16557:3:21","nodeType":"YulIdentifier","src":"16557:3:21"},{"kind":"number","nativeSrc":"16562:2:21","nodeType":"YulLiteral","src":"16562:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"16554:2:21","nodeType":"YulIdentifier","src":"16554:2:21"},"nativeSrc":"16554:11:21","nodeType":"YulFunctionCall","src":"16554:11:21"},"nativeSrc":"16551:421:21","nodeType":"YulIf","src":"16551:421:21"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"16460:518:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"16513:5:21","nodeType":"YulTypedName","src":"16513:5:21","type":""},{"name":"len","nativeSrc":"16520:3:21","nodeType":"YulTypedName","src":"16520:3:21","type":""},{"name":"startIndex","nativeSrc":"16525:10:21","nodeType":"YulTypedName","src":"16525:10:21","type":""}],"src":"16460:518:21"},{"body":{"nativeSrc":"17068:141:21","nodeType":"YulBlock","src":"17068:141:21","statements":[{"nativeSrc":"17078:125:21","nodeType":"YulAssignment","src":"17078:125:21","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"17093:4:21","nodeType":"YulIdentifier","src":"17093:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"17111:1:21","nodeType":"YulLiteral","src":"17111:1:21","type":"","value":"3"},{"name":"len","nativeSrc":"17114:3:21","nodeType":"YulIdentifier","src":"17114:3:21"}],"functionName":{"name":"shl","nativeSrc":"17107:3:21","nodeType":"YulIdentifier","src":"17107:3:21"},"nativeSrc":"17107:11:21","nodeType":"YulFunctionCall","src":"17107:11:21"},{"kind":"number","nativeSrc":"17120:66:21","nodeType":"YulLiteral","src":"17120:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nativeSrc":"17103:3:21","nodeType":"YulIdentifier","src":"17103:3:21"},"nativeSrc":"17103:84:21","nodeType":"YulFunctionCall","src":"17103:84:21"}],"functionName":{"name":"not","nativeSrc":"17099:3:21","nodeType":"YulIdentifier","src":"17099:3:21"},"nativeSrc":"17099:89:21","nodeType":"YulFunctionCall","src":"17099:89:21"}],"functionName":{"name":"and","nativeSrc":"17089:3:21","nodeType":"YulIdentifier","src":"17089:3:21"},"nativeSrc":"17089:100:21","nodeType":"YulFunctionCall","src":"17089:100:21"},{"arguments":[{"kind":"number","nativeSrc":"17195:1:21","nodeType":"YulLiteral","src":"17195:1:21","type":"","value":"1"},{"name":"len","nativeSrc":"17198:3:21","nodeType":"YulIdentifier","src":"17198:3:21"}],"functionName":{"name":"shl","nativeSrc":"17191:3:21","nodeType":"YulIdentifier","src":"17191:3:21"},"nativeSrc":"17191:11:21","nodeType":"YulFunctionCall","src":"17191:11:21"}],"functionName":{"name":"or","nativeSrc":"17086:2:21","nodeType":"YulIdentifier","src":"17086:2:21"},"nativeSrc":"17086:117:21","nodeType":"YulFunctionCall","src":"17086:117:21"},"variableNames":[{"name":"used","nativeSrc":"17078:4:21","nodeType":"YulIdentifier","src":"17078:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"16983:226:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"17045:4:21","nodeType":"YulTypedName","src":"17045:4:21","type":""},{"name":"len","nativeSrc":"17051:3:21","nodeType":"YulTypedName","src":"17051:3:21","type":""}],"returnVariables":[{"name":"used","nativeSrc":"17059:4:21","nodeType":"YulTypedName","src":"17059:4:21","type":""}],"src":"16983:226:21"},{"body":{"nativeSrc":"17310:1368:21","nodeType":"YulBlock","src":"17310:1368:21","statements":[{"nativeSrc":"17320:24:21","nodeType":"YulVariableDeclaration","src":"17320:24:21","value":{"arguments":[{"name":"src","nativeSrc":"17340:3:21","nodeType":"YulIdentifier","src":"17340:3:21"}],"functionName":{"name":"mload","nativeSrc":"17334:5:21","nodeType":"YulIdentifier","src":"17334:5:21"},"nativeSrc":"17334:10:21","nodeType":"YulFunctionCall","src":"17334:10:21"},"variables":[{"name":"newLen","nativeSrc":"17324:6:21","nodeType":"YulTypedName","src":"17324:6:21","type":""}]},{"body":{"nativeSrc":"17387:22:21","nodeType":"YulBlock","src":"17387:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"17389:16:21","nodeType":"YulIdentifier","src":"17389:16:21"},"nativeSrc":"17389:18:21","nodeType":"YulFunctionCall","src":"17389:18:21"},"nativeSrc":"17389:18:21","nodeType":"YulExpressionStatement","src":"17389:18:21"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"17359:6:21","nodeType":"YulIdentifier","src":"17359:6:21"},{"kind":"number","nativeSrc":"17367:18:21","nodeType":"YulLiteral","src":"17367:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"17356:2:21","nodeType":"YulIdentifier","src":"17356:2:21"},"nativeSrc":"17356:30:21","nodeType":"YulFunctionCall","src":"17356:30:21"},"nativeSrc":"17353:56:21","nodeType":"YulIf","src":"17353:56:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"17462:4:21","nodeType":"YulIdentifier","src":"17462:4:21"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"17500:4:21","nodeType":"YulIdentifier","src":"17500:4:21"}],"functionName":{"name":"sload","nativeSrc":"17494:5:21","nodeType":"YulIdentifier","src":"17494:5:21"},"nativeSrc":"17494:11:21","nodeType":"YulFunctionCall","src":"17494:11:21"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"17468:25:21","nodeType":"YulIdentifier","src":"17468:25:21"},"nativeSrc":"17468:38:21","nodeType":"YulFunctionCall","src":"17468:38:21"},{"name":"newLen","nativeSrc":"17508:6:21","nodeType":"YulIdentifier","src":"17508:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"17418:43:21","nodeType":"YulIdentifier","src":"17418:43:21"},"nativeSrc":"17418:97:21","nodeType":"YulFunctionCall","src":"17418:97:21"},"nativeSrc":"17418:97:21","nodeType":"YulExpressionStatement","src":"17418:97:21"},{"nativeSrc":"17524:18:21","nodeType":"YulVariableDeclaration","src":"17524:18:21","value":{"kind":"number","nativeSrc":"17541:1:21","nodeType":"YulLiteral","src":"17541:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"17528:9:21","nodeType":"YulTypedName","src":"17528:9:21","type":""}]},{"nativeSrc":"17551:23:21","nodeType":"YulVariableDeclaration","src":"17551:23:21","value":{"kind":"number","nativeSrc":"17570:4:21","nodeType":"YulLiteral","src":"17570:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"17555:11:21","nodeType":"YulTypedName","src":"17555:11:21","type":""}]},{"nativeSrc":"17583:17:21","nodeType":"YulAssignment","src":"17583:17:21","value":{"kind":"number","nativeSrc":"17596:4:21","nodeType":"YulLiteral","src":"17596:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"17583:9:21","nodeType":"YulIdentifier","src":"17583:9:21"}]},{"cases":[{"body":{"nativeSrc":"17646:775:21","nodeType":"YulBlock","src":"17646:775:21","statements":[{"nativeSrc":"17660:94:21","nodeType":"YulVariableDeclaration","src":"17660:94:21","value":{"arguments":[{"name":"newLen","nativeSrc":"17679:6:21","nodeType":"YulIdentifier","src":"17679:6:21"},{"kind":"number","nativeSrc":"17687:66:21","nodeType":"YulLiteral","src":"17687:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"17675:3:21","nodeType":"YulIdentifier","src":"17675:3:21"},"nativeSrc":"17675:79:21","nodeType":"YulFunctionCall","src":"17675:79:21"},"variables":[{"name":"loopEnd","nativeSrc":"17664:7:21","nodeType":"YulTypedName","src":"17664:7:21","type":""}]},{"nativeSrc":"17767:49:21","nodeType":"YulVariableDeclaration","src":"17767:49:21","value":{"arguments":[{"name":"slot","nativeSrc":"17811:4:21","nodeType":"YulIdentifier","src":"17811:4:21"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"17781:29:21","nodeType":"YulIdentifier","src":"17781:29:21"},"nativeSrc":"17781:35:21","nodeType":"YulFunctionCall","src":"17781:35:21"},"variables":[{"name":"dstPtr","nativeSrc":"17771:6:21","nodeType":"YulTypedName","src":"17771:6:21","type":""}]},{"nativeSrc":"17829:10:21","nodeType":"YulVariableDeclaration","src":"17829:10:21","value":{"kind":"number","nativeSrc":"17838:1:21","nodeType":"YulLiteral","src":"17838:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"17833:1:21","nodeType":"YulTypedName","src":"17833:1:21","type":""}]},{"body":{"nativeSrc":"17916:172:21","nodeType":"YulBlock","src":"17916:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"17941:6:21","nodeType":"YulIdentifier","src":"17941:6:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"17959:3:21","nodeType":"YulIdentifier","src":"17959:3:21"},{"name":"srcOffset","nativeSrc":"17964:9:21","nodeType":"YulIdentifier","src":"17964:9:21"}],"functionName":{"name":"add","nativeSrc":"17955:3:21","nodeType":"YulIdentifier","src":"17955:3:21"},"nativeSrc":"17955:19:21","nodeType":"YulFunctionCall","src":"17955:19:21"}],"functionName":{"name":"mload","nativeSrc":"17949:5:21","nodeType":"YulIdentifier","src":"17949:5:21"},"nativeSrc":"17949:26:21","nodeType":"YulFunctionCall","src":"17949:26:21"}],"functionName":{"name":"sstore","nativeSrc":"17934:6:21","nodeType":"YulIdentifier","src":"17934:6:21"},"nativeSrc":"17934:42:21","nodeType":"YulFunctionCall","src":"17934:42:21"},"nativeSrc":"17934:42:21","nodeType":"YulExpressionStatement","src":"17934:42:21"},{"nativeSrc":"17993:24:21","nodeType":"YulAssignment","src":"17993:24:21","value":{"arguments":[{"name":"dstPtr","nativeSrc":"18007:6:21","nodeType":"YulIdentifier","src":"18007:6:21"},{"kind":"number","nativeSrc":"18015:1:21","nodeType":"YulLiteral","src":"18015:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"18003:3:21","nodeType":"YulIdentifier","src":"18003:3:21"},"nativeSrc":"18003:14:21","nodeType":"YulFunctionCall","src":"18003:14:21"},"variableNames":[{"name":"dstPtr","nativeSrc":"17993:6:21","nodeType":"YulIdentifier","src":"17993:6:21"}]},{"nativeSrc":"18034:40:21","nodeType":"YulAssignment","src":"18034:40:21","value":{"arguments":[{"name":"srcOffset","nativeSrc":"18051:9:21","nodeType":"YulIdentifier","src":"18051:9:21"},{"name":"srcOffset_1","nativeSrc":"18062:11:21","nodeType":"YulIdentifier","src":"18062:11:21"}],"functionName":{"name":"add","nativeSrc":"18047:3:21","nodeType":"YulIdentifier","src":"18047:3:21"},"nativeSrc":"18047:27:21","nodeType":"YulFunctionCall","src":"18047:27:21"},"variableNames":[{"name":"srcOffset","nativeSrc":"18034:9:21","nodeType":"YulIdentifier","src":"18034:9:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"17863:1:21","nodeType":"YulIdentifier","src":"17863:1:21"},{"name":"loopEnd","nativeSrc":"17866:7:21","nodeType":"YulIdentifier","src":"17866:7:21"}],"functionName":{"name":"lt","nativeSrc":"17860:2:21","nodeType":"YulIdentifier","src":"17860:2:21"},"nativeSrc":"17860:14:21","nodeType":"YulFunctionCall","src":"17860:14:21"},"nativeSrc":"17852:236:21","nodeType":"YulForLoop","post":{"nativeSrc":"17875:28:21","nodeType":"YulBlock","src":"17875:28:21","statements":[{"nativeSrc":"17877:24:21","nodeType":"YulAssignment","src":"17877:24:21","value":{"arguments":[{"name":"i","nativeSrc":"17886:1:21","nodeType":"YulIdentifier","src":"17886:1:21"},{"name":"srcOffset_1","nativeSrc":"17889:11:21","nodeType":"YulIdentifier","src":"17889:11:21"}],"functionName":{"name":"add","nativeSrc":"17882:3:21","nodeType":"YulIdentifier","src":"17882:3:21"},"nativeSrc":"17882:19:21","nodeType":"YulFunctionCall","src":"17882:19:21"},"variableNames":[{"name":"i","nativeSrc":"17877:1:21","nodeType":"YulIdentifier","src":"17877:1:21"}]}]},"pre":{"nativeSrc":"17856:3:21","nodeType":"YulBlock","src":"17856:3:21","statements":[]},"src":"17852:236:21"},{"body":{"nativeSrc":"18136:226:21","nodeType":"YulBlock","src":"18136:226:21","statements":[{"nativeSrc":"18154:43:21","nodeType":"YulVariableDeclaration","src":"18154:43:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"18181:3:21","nodeType":"YulIdentifier","src":"18181:3:21"},{"name":"srcOffset","nativeSrc":"18186:9:21","nodeType":"YulIdentifier","src":"18186:9:21"}],"functionName":{"name":"add","nativeSrc":"18177:3:21","nodeType":"YulIdentifier","src":"18177:3:21"},"nativeSrc":"18177:19:21","nodeType":"YulFunctionCall","src":"18177:19:21"}],"functionName":{"name":"mload","nativeSrc":"18171:5:21","nodeType":"YulIdentifier","src":"18171:5:21"},"nativeSrc":"18171:26:21","nodeType":"YulFunctionCall","src":"18171:26:21"},"variables":[{"name":"lastValue","nativeSrc":"18158:9:21","nodeType":"YulTypedName","src":"18158:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"18221:6:21","nodeType":"YulIdentifier","src":"18221:6:21"},{"arguments":[{"name":"lastValue","nativeSrc":"18233:9:21","nodeType":"YulIdentifier","src":"18233:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"18260:1:21","nodeType":"YulLiteral","src":"18260:1:21","type":"","value":"3"},{"name":"newLen","nativeSrc":"18263:6:21","nodeType":"YulIdentifier","src":"18263:6:21"}],"functionName":{"name":"shl","nativeSrc":"18256:3:21","nodeType":"YulIdentifier","src":"18256:3:21"},"nativeSrc":"18256:14:21","nodeType":"YulFunctionCall","src":"18256:14:21"},{"kind":"number","nativeSrc":"18272:3:21","nodeType":"YulLiteral","src":"18272:3:21","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"18252:3:21","nodeType":"YulIdentifier","src":"18252:3:21"},"nativeSrc":"18252:24:21","nodeType":"YulFunctionCall","src":"18252:24:21"},{"kind":"number","nativeSrc":"18278:66:21","nodeType":"YulLiteral","src":"18278:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nativeSrc":"18248:3:21","nodeType":"YulIdentifier","src":"18248:3:21"},"nativeSrc":"18248:97:21","nodeType":"YulFunctionCall","src":"18248:97:21"}],"functionName":{"name":"not","nativeSrc":"18244:3:21","nodeType":"YulIdentifier","src":"18244:3:21"},"nativeSrc":"18244:102:21","nodeType":"YulFunctionCall","src":"18244:102:21"}],"functionName":{"name":"and","nativeSrc":"18229:3:21","nodeType":"YulIdentifier","src":"18229:3:21"},"nativeSrc":"18229:118:21","nodeType":"YulFunctionCall","src":"18229:118:21"}],"functionName":{"name":"sstore","nativeSrc":"18214:6:21","nodeType":"YulIdentifier","src":"18214:6:21"},"nativeSrc":"18214:134:21","nodeType":"YulFunctionCall","src":"18214:134:21"},"nativeSrc":"18214:134:21","nodeType":"YulExpressionStatement","src":"18214:134:21"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"18107:7:21","nodeType":"YulIdentifier","src":"18107:7:21"},{"name":"newLen","nativeSrc":"18116:6:21","nodeType":"YulIdentifier","src":"18116:6:21"}],"functionName":{"name":"lt","nativeSrc":"18104:2:21","nodeType":"YulIdentifier","src":"18104:2:21"},"nativeSrc":"18104:19:21","nodeType":"YulFunctionCall","src":"18104:19:21"},"nativeSrc":"18101:261:21","nodeType":"YulIf","src":"18101:261:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"18382:4:21","nodeType":"YulIdentifier","src":"18382:4:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"18396:1:21","nodeType":"YulLiteral","src":"18396:1:21","type":"","value":"1"},{"name":"newLen","nativeSrc":"18399:6:21","nodeType":"YulIdentifier","src":"18399:6:21"}],"functionName":{"name":"shl","nativeSrc":"18392:3:21","nodeType":"YulIdentifier","src":"18392:3:21"},"nativeSrc":"18392:14:21","nodeType":"YulFunctionCall","src":"18392:14:21"},{"kind":"number","nativeSrc":"18408:1:21","nodeType":"YulLiteral","src":"18408:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"18388:3:21","nodeType":"YulIdentifier","src":"18388:3:21"},"nativeSrc":"18388:22:21","nodeType":"YulFunctionCall","src":"18388:22:21"}],"functionName":{"name":"sstore","nativeSrc":"18375:6:21","nodeType":"YulIdentifier","src":"18375:6:21"},"nativeSrc":"18375:36:21","nodeType":"YulFunctionCall","src":"18375:36:21"},"nativeSrc":"18375:36:21","nodeType":"YulExpressionStatement","src":"18375:36:21"}]},"nativeSrc":"17639:782:21","nodeType":"YulCase","src":"17639:782:21","value":{"kind":"number","nativeSrc":"17644:1:21","nodeType":"YulLiteral","src":"17644:1:21","type":"","value":"1"}},{"body":{"nativeSrc":"18438:234:21","nodeType":"YulBlock","src":"18438:234:21","statements":[{"nativeSrc":"18452:14:21","nodeType":"YulVariableDeclaration","src":"18452:14:21","value":{"kind":"number","nativeSrc":"18465:1:21","nodeType":"YulLiteral","src":"18465:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"18456:5:21","nodeType":"YulTypedName","src":"18456:5:21","type":""}]},{"body":{"nativeSrc":"18501:67:21","nodeType":"YulBlock","src":"18501:67:21","statements":[{"nativeSrc":"18519:35:21","nodeType":"YulAssignment","src":"18519:35:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"18538:3:21","nodeType":"YulIdentifier","src":"18538:3:21"},{"name":"srcOffset","nativeSrc":"18543:9:21","nodeType":"YulIdentifier","src":"18543:9:21"}],"functionName":{"name":"add","nativeSrc":"18534:3:21","nodeType":"YulIdentifier","src":"18534:3:21"},"nativeSrc":"18534:19:21","nodeType":"YulFunctionCall","src":"18534:19:21"}],"functionName":{"name":"mload","nativeSrc":"18528:5:21","nodeType":"YulIdentifier","src":"18528:5:21"},"nativeSrc":"18528:26:21","nodeType":"YulFunctionCall","src":"18528:26:21"},"variableNames":[{"name":"value","nativeSrc":"18519:5:21","nodeType":"YulIdentifier","src":"18519:5:21"}]}]},"condition":{"name":"newLen","nativeSrc":"18482:6:21","nodeType":"YulIdentifier","src":"18482:6:21"},"nativeSrc":"18479:89:21","nodeType":"YulIf","src":"18479:89:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"18588:4:21","nodeType":"YulIdentifier","src":"18588:4:21"},{"arguments":[{"name":"value","nativeSrc":"18647:5:21","nodeType":"YulIdentifier","src":"18647:5:21"},{"name":"newLen","nativeSrc":"18654:6:21","nodeType":"YulIdentifier","src":"18654:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"18594:52:21","nodeType":"YulIdentifier","src":"18594:52:21"},"nativeSrc":"18594:67:21","nodeType":"YulFunctionCall","src":"18594:67:21"}],"functionName":{"name":"sstore","nativeSrc":"18581:6:21","nodeType":"YulIdentifier","src":"18581:6:21"},"nativeSrc":"18581:81:21","nodeType":"YulFunctionCall","src":"18581:81:21"},"nativeSrc":"18581:81:21","nodeType":"YulExpressionStatement","src":"18581:81:21"}]},"nativeSrc":"18430:242:21","nodeType":"YulCase","src":"18430:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"17619:6:21","nodeType":"YulIdentifier","src":"17619:6:21"},{"kind":"number","nativeSrc":"17627:2:21","nodeType":"YulLiteral","src":"17627:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"17616:2:21","nodeType":"YulIdentifier","src":"17616:2:21"},"nativeSrc":"17616:14:21","nodeType":"YulFunctionCall","src":"17616:14:21"},"nativeSrc":"17609:1063:21","nodeType":"YulSwitch","src":"17609:1063:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"17214:1464:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"17295:4:21","nodeType":"YulTypedName","src":"17295:4:21","type":""},{"name":"src","nativeSrc":"17301:3:21","nodeType":"YulTypedName","src":"17301:3:21","type":""}],"src":"17214:1464:21"},{"body":{"nativeSrc":"18820:164:21","nodeType":"YulBlock","src":"18820:164:21","statements":[{"nativeSrc":"18830:27:21","nodeType":"YulVariableDeclaration","src":"18830:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"18850:6:21","nodeType":"YulIdentifier","src":"18850:6:21"}],"functionName":{"name":"mload","nativeSrc":"18844:5:21","nodeType":"YulIdentifier","src":"18844:5:21"},"nativeSrc":"18844:13:21","nodeType":"YulFunctionCall","src":"18844:13:21"},"variables":[{"name":"length","nativeSrc":"18834:6:21","nodeType":"YulTypedName","src":"18834:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"18872:3:21","nodeType":"YulIdentifier","src":"18872:3:21"},{"arguments":[{"name":"value0","nativeSrc":"18881:6:21","nodeType":"YulIdentifier","src":"18881:6:21"},{"kind":"number","nativeSrc":"18889:4:21","nodeType":"YulLiteral","src":"18889:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18877:3:21","nodeType":"YulIdentifier","src":"18877:3:21"},"nativeSrc":"18877:17:21","nodeType":"YulFunctionCall","src":"18877:17:21"},{"name":"length","nativeSrc":"18896:6:21","nodeType":"YulIdentifier","src":"18896:6:21"}],"functionName":{"name":"mcopy","nativeSrc":"18866:5:21","nodeType":"YulIdentifier","src":"18866:5:21"},"nativeSrc":"18866:37:21","nodeType":"YulFunctionCall","src":"18866:37:21"},"nativeSrc":"18866:37:21","nodeType":"YulExpressionStatement","src":"18866:37:21"},{"nativeSrc":"18912:26:21","nodeType":"YulVariableDeclaration","src":"18912:26:21","value":{"arguments":[{"name":"pos","nativeSrc":"18926:3:21","nodeType":"YulIdentifier","src":"18926:3:21"},{"name":"length","nativeSrc":"18931:6:21","nodeType":"YulIdentifier","src":"18931:6:21"}],"functionName":{"name":"add","nativeSrc":"18922:3:21","nodeType":"YulIdentifier","src":"18922:3:21"},"nativeSrc":"18922:16:21","nodeType":"YulFunctionCall","src":"18922:16:21"},"variables":[{"name":"_1","nativeSrc":"18916:2:21","nodeType":"YulTypedName","src":"18916:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nativeSrc":"18954:2:21","nodeType":"YulIdentifier","src":"18954:2:21"},{"kind":"number","nativeSrc":"18958:1:21","nodeType":"YulLiteral","src":"18958:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"18947:6:21","nodeType":"YulIdentifier","src":"18947:6:21"},"nativeSrc":"18947:13:21","nodeType":"YulFunctionCall","src":"18947:13:21"},"nativeSrc":"18947:13:21","nodeType":"YulExpressionStatement","src":"18947:13:21"},{"nativeSrc":"18969:9:21","nodeType":"YulAssignment","src":"18969:9:21","value":{"name":"_1","nativeSrc":"18976:2:21","nodeType":"YulIdentifier","src":"18976:2:21"},"variableNames":[{"name":"end","nativeSrc":"18969:3:21","nodeType":"YulIdentifier","src":"18969:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"18683:301:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18796:3:21","nodeType":"YulTypedName","src":"18796:3:21","type":""},{"name":"value0","nativeSrc":"18801:6:21","nodeType":"YulTypedName","src":"18801:6:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18812:3:21","nodeType":"YulTypedName","src":"18812:3:21","type":""}],"src":"18683:301:21"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_addresst_uint256t_uint64(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n        let value_2 := calldataload(add(headStart, 128))\n        validator_revert_address(value_2)\n        value4 := value_2\n        value5 := calldataload(add(headStart, 160))\n        let value_3 := calldataload(add(headStart, 192))\n        if iszero(eq(value_3, and(value_3, _1))) { revert(0, 0) }\n        value6 := value_3\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n        let value_2 := calldataload(add(headStart, 128))\n        validator_revert_address(value_2)\n        value4 := value_2\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_stringliteral_f247f7c1df7c48d1adf3ebe04e09d491abca7b6e14a32a1b30359ea588b9d3d6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Shares must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        diff := sub(and(x, 0xff), and(y, 0xff))\n        if gt(diff, 0xff) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_bbbcd694010870aca4b5330159c65992a3109a1437ee6632b6833f21093588c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"executor: wut?\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8475dfc2a61c983fde89982d493adea657965a16ea35a31669edc1d76f0cb847__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"wait till next reinvest cycle\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_53449748a5034738d502a01b62b389ab55b3ebc840f594da71fc707f6109e0a1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Nothing to swap\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"468":[{"length":32,"start":10205},{"length":32,"start":10246},{"length":32,"start":10678}]},"linkReferences":{},"object":"60806040526004361061025c575f3560e01c80638456cb591161014b578063cdf456e1116100c6578063e73faa2d1161007c578063f267d91b11610062578063f267d91b14610709578063f2fde38b1461071d578063fdf262b71461073c575f80fd5b8063e73faa2d146106d6578063edf3e29e146106ea575f80fd5b8063d9d47d69116100ac578063d9d47d691461064a578063db48a5e31461065e578063dd62ed3e14610673575f80fd5b8063cdf456e114610618578063d53419a314610636575f80fd5b8063a9059cbb1161011b578063b3404efd11610101578063b3404efd146105cf578063bc4ba731146105e4578063c80b0baf146105f9575f80fd5b8063a9059cbb14610568578063ad3cb1cc14610587575f80fd5b80638456cb59146104d65780638da5cb5b146104ea57806395d89b41146105265780639ac2a0111461053a575f80fd5b80633f4ba83a116101db5780635c975abb116101ab57806370a082311161019157806370a082311461043e578063715018a6146104915780637b103999146104a5575f80fd5b80635c975abb146103e95780636e553f651461041f575f80fd5b80633f4ba83a146103995780634f1ef286146103ad5780634fe84c42146103c057806352d1902d146103d5575f80fd5b80631e1bff3f11610230578063295b930011610216578063295b930014610355578063313ce5671461036957806336b7710714610384575f80fd5b80631e1bff3f1461031757806323b872dd14610336575f80fd5b8062f714ce1461026057806306fdde0314610281578063095ea7b3146102ab57806318160ddd146102da575b5f80fd5b34801561026b575f80fd5b5061027f61027a3660046131d9565b61075b565b005b34801561028c575f80fd5b50610295610f2b565b6040516102a29190613207565b60405180910390f35b3480156102b6575f80fd5b506102ca6102c536600461323c565b610ffe565b60405190151581526020016102a2565b3480156102e5575f80fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b6040519081526020016102a2565b348015610322575f80fd5b5061027f610331366004613273565b611017565b348015610341575f80fd5b506102ca61035036600461329f565b611049565b348015610360575f80fd5b5061030961106e565b348015610374575f80fd5b50604051601281526020016102a2565b34801561038f575f80fd5b5061030960035481565b3480156103a4575f80fd5b5061027f6113c1565b61027f6103bb366004613364565b6113d3565b3480156103cb575f80fd5b5061030960075481565b3480156103e0575f80fd5b506103096113ee565b3480156103f4575f80fd5b507fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff166102ca565b34801561042a575f80fd5b5061027f6104393660046131d9565b61141c565b348015610449575f80fd5b506103096104583660046133c4565b6001600160a01b03165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00602052604090205490565b34801561049c575f80fd5b5061027f61182d565b3480156104b0575f80fd5b506002546001600160a01b03165b6040516001600160a01b0390911681526020016102a2565b3480156104e1575f80fd5b5061027f61183e565b3480156104f5575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166104be565b348015610531575f80fd5b5061029561184e565b348015610545575f80fd5b506102ca6105543660046133c4565b60086020525f908152604090205460ff1681565b348015610573575f80fd5b506102ca61058236600461323c565b61189f565b348015610592575f80fd5b506102956040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b3480156105da575f80fd5b5061030960065481565b3480156105ef575f80fd5b5061030960045481565b348015610604575f80fd5b5061027f6106133660046133fd565b6118ac565b348015610623575f80fd5b505f546104be906001600160a01b031681565b348015610641575f80fd5b5061027f611ad3565b348015610655575f80fd5b50610309611e17565b348015610669575f80fd5b5061030960055481565b34801561067e575f80fd5b5061030961068d3660046134bb565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b3480156106e1575f80fd5b50610309611ecb565b3480156106f5575f80fd5b5061027f6107043660046134e7565b61205c565b348015610714575f80fd5b506102ca6122b7565b348015610728575f80fd5b5061027f6107373660046133c4565b6122e6565b348015610747575f80fd5b506001546104be906001600160a01b031681565b61076361233c565b61076b6123bd565b5f82116107bf5760405162461bcd60e51b815260206004820181905260248201527f536861726573206d7573742062652067726561746572207468616e207a65726f60448201526064015b60405180910390fd5b335f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00602052604090205482111561083c5760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e636500000000000000000000000060448201526064016107b6565b6001546040805163313ce56760e01b815290515f926001600160a01b03169163313ce5679160048083019260209291908290030181865afa158015610883573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a79190613587565b6001546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156108f2573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061091691906135a7565b5f80546040516370a0823160e01b815230600482015292935090916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610961573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061098591906135a7565b90506109928360126135d2565b61099d90600a6136cb565b6109a790836136d9565b91505f6109d27f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b6109dc83886136d9565b6109e691906136f0565b90505f610a117f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b610a1b85896136d9565b610a2591906136f0565b9050610a313388612419565b610a3c8560126135d2565b610a4790600a6136cb565b610a5190826136f0565b9050815f610a5e82612466565b5f549091506001600160a01b031663a9059cbb89610a7c848661370f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af1158015610adc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b009190613722565b505f610b0b82612466565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b03166304cc73256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b5e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b82919061373d565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b0316633b19e84a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bf9919061373d565b5f549091506001600160a01b031663a9059cbb83610c17868861370f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af1158015610c77573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c9b9190613722565b505f5460405163a9059cbb60e01b81526001600160a01b038381166004830152602482018690529091169063a9059cbb906044016020604051808303815f875af1158015610ceb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0f9190613722565b50610d1986612466565b6001549094506001600160a01b031663a9059cbb8c610d38878a61370f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af1158015610d98573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dbc9190613722565b50610dc684612466565b5f549093506001600160a01b031663a9059cbb83610de4868861370f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af1158015610e44573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e689190613722565b505f5460405163a9059cbb60e01b81526001600160a01b038381166004830152602482018690529091169063a9059cbb906044016020604051808303815f875af1158015610eb8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610edc9190613722565b508460035f828254610eee919061370f565b909155505060017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005550610f2798505050505050505050565b5050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060917f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0091610f7c90613758565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa890613758565b8015610ff35780601f10610fca57610100808354040283529160200191610ff3565b820191905f5260205f20905b815481529060010190602001808311610fd657829003601f168201915b505050505091505090565b5f3361100b818585612598565b60019150505b92915050565b61101f6125aa565b6001600160a01b03919091165f908152600860205260409020805460ff1916911515919091179055565b5f3361105685828561261e565b6110618585856126d1565b60019150505b9392505050565b5f8060025f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110c0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110e4919061373d565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b0316631bf01e9b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611137573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061115b919061373d565b5f80546040516370a0823160e01b8152306004820152929350909182916001600160a01b0316906370a0823190602401602060405180830381865afa1580156111a6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111ca91906135a7565b6001546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611215573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061123991906135a7565b905081158015611247575080155b15611257575f9550505050505090565b5f546001600160a01b0385811691161461130b575f546040517f248391ff0000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201528582166024820152604481018490529086169063248391ff90606401602060405180830381865afa1580156112da573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112fe91906135a7565b6113089084613790565b92505b6001545f546040517f248391ff0000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529082166024820152604481018390529086169063248391ff90606401602060405180830381865afa15801561137d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113a191906135a7565b6113ab9084613790565b92506113b78284613790565b9695505050505050565b6113c96125aa565b6113d1612760565b565b6113db6127d2565b6113e4826128a2565b610f2782826128aa565b5f6113f76129ab565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b61142461233c565b61142c6123bd565b5f821161147b5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016107b6565b5f546040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303815f875af11580156114e7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061150b9190613722565b50600254604080517f04cc732500000000000000000000000000000000000000000000000000000000815290515f926001600160a01b0316916304cc73259160048083019260209291908290030181865afa15801561156c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611590919061373d565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b0316633b19e84a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115e3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611607919061373d565b90505f61161385612466565b90505f61161f82612466565b5f549091506001600160a01b031663a9059cbb8561163d848661370f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af115801561169d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116c19190613722565b505f5460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490529091169063a9059cbb906044016020604051808303815f875af1158015611711573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117359190613722565b505f611741838861370f565b90505f805f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611793573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117b79190613587565b90505f6117c58260126135d2565b6117d090600a6136cb565b6117da90846136d9565b90506117e68882612a0d565b8260035f8282546117f79190613790565b909155505060017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005550610f2795505050505050565b6118356125aa565b6113d15f612a5a565b6118466125aa565b6113d1612ad7565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060917f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0091610f7c90613758565b5f3361100b8185856126d1565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805482919068010000000000000000900460ff16806118fa5750805467ffffffffffffffff808416911610155b15611931576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80547fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000001667ffffffffffffffff8316176801000000000000000017815561197733612b32565b6119818989612b43565b611989612b55565b611991612b5d565b611999612b6d565b5f80546001600160a01b03808a1673ffffffffffffffffffffffffffffffffffffffff19928316179092556001805489841690831617905560028054928816929091169190911790556119ee846101686136d9565b60065560078490554360049081556040805163313ce56760e01b815290516001600160a01b038a169263313ce567928082019260209290918290030181865afa158015611a3d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a619190613587565b611a6c90600a6136cb565b611a78906127106136d9565b600555805468ff00000000000000001916815560405167ffffffffffffffff831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050505050565b335f9081526008602052604090205460ff16611b315760405162461bcd60e51b815260206004820152600e60248201527f6578656375746f723a207775743f00000000000000000000000000000000000060448201526064016107b6565b611b3961233c565b611b416123bd565b600754600454611b51904361370f565b11611b9e5760405162461bcd60e51b815260206004820152601d60248201527f776169742074696c6c206e657874207265696e76657374206379636c6500000060448201526064016107b6565b5f611ba7611e17565b90505f8111611bf85760405162461bcd60e51b815260206004820152600f60248201527f4e6f7468696e6720746f2073776170000000000000000000000000000000000060448201526064016107b6565b600254604080517f82755ebb00000000000000000000000000000000000000000000000000000000815290515f926001600160a01b0316916382755ebb9160048083019260209291908290030181865afa158015611c58573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c7c919061373d565b5f546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b0380841660048301526024820186905292935091169063095ea7b3906044016020604051808303815f875af1158015611ce6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d0a9190613722565b505f80546001546040517f2d6bc8ea0000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015290821660248201526044810185905230606482015290831690632d6bc8ea906084016020604051808303815f875af1158015611d85573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611da991906135a7565b43600455604080518581526020810183905291925033917f129ac658e77b551b004790e5bd957532cef552c50852a1ee0e38dd3e23fe85db910160405180910390a25050506113d160017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b5f80546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015611e5d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e8191906135a7565b90505f60045443611e92919061370f565b90505f6006548284611ea491906136d9565b611eae91906136f0565b90506005548111611ebf5780611ec3565b6005545b935050505090565b5f611ef47f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b5f03611eff57505f90565b600254604080517f1bf01e9b00000000000000000000000000000000000000000000000000000000815290515f926001600160a01b031691631bf01e9b9160048083019260209291908290030181865afa158015611f5f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f83919061373d565b90505f816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fc2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fe69190613587565b90505f611ff48260126135d2565b611fff90600a6136cb565b90505f8161200b61106e565b61201591906136d9565b90505f6120407f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b61205283670de0b6b3a76400006136d9565b6113b791906136f0565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f811580156120a65750825b90505f8267ffffffffffffffff1660011480156120c25750303b155b9050811580156120d0575080155b15612107576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000166001178555831561215257845468ff00000000000000001916680100000000000000001785555b61215b33612b32565b6121658b8b612b43565b61216d612b55565b612175612b5d565b61217d612b6d565b5f80546001600160a01b03808c1673ffffffffffffffffffffffffffffffffffffffff1992831617909255600180548b841690831617905560028054928a16929091169190911790556121d2866101686136d9565b60065560078690554360049081556040805163313ce56760e01b815290516001600160a01b038c169263313ce567928082019260209290918290030181865afa158015612221573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122459190613587565b61225090600a6136cb565b61225c906127106136d9565b60055583156122aa57845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050565b5f806122c1611e17565b9050600754600454436122d4919061370f565b1180156122e057505f81115b91505090565b6122ee6125aa565b6001600160a01b038116612330576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f60048201526024016107b6565b61233981612a5a565b50565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0080547ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016123b7576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60029055565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff16156113d1576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03821661245b576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f60048201526024016107b6565b610f27825f83612b7d565b5f8060025f9054906101000a90046001600160a01b03166001600160a01b03166385462d6f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156124b8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906124dc91906135a7565b90505f60025f9054906101000a90046001600160a01b03166001600160a01b0316634f4608a26040518163ffffffff1660e01b8152600401602060405180830381865afa15801561252f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061255391906135a7565b90508061256083866136d9565b61256a91906136f0565b949350505050565b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b6125a58383836001612ce2565b505050565b336125dc7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146113d1576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016107b6565b6001600160a01b038381165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0160209081526040808320938616835292905220545f1981146126cb57818110156126bd576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101829052604481018390526064016107b6565b6126cb84848484035f612ce2565b50505050565b6001600160a01b038316612713576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f60048201526024016107b6565b6001600160a01b038216612755576040517fec442f050000000000000000000000000000000000000000000000000000000081525f60048201526024016107b6565b6125a5838383612b7d565b612768612e0b565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061286b57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661285f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614155b156113d1576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6123396125aa565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612904575060408051601f3d908101601f19168201909252612901918101906135a7565b60015b612945576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201526024016107b6565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146129a1576040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600481018290526024016107b6565b6125a58383612e66565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113d1576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038216612a4f576040517fec442f050000000000000000000000000000000000000000000000000000000081525f60048201526024016107b6565b610f275f8383612b7d565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805473ffffffffffffffffffffffffffffffffffffffff1981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b612adf6123bd565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336127b4565b612b3a612ebb565b61233981612f22565b612b4b612ebb565b610f278282612f2a565b6113d1612ebb565b612b65612ebb565b6113d1612f8d565b612b75612ebb565b6113d1612f95565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace006001600160a01b038416612bca5781816002015f828254612bbf9190613790565b90915550612c539050565b6001600160a01b0384165f9081526020829052604090205482811015612c35576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b038616600482015260248101829052604481018490526064016107b6565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b038316612c71576002810180548390039055612c8f565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051612cd491815260200190565b60405180910390a350505050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace006001600160a01b038516612d45576040517fe602df050000000000000000000000000000000000000000000000000000000081525f60048201526024016107b6565b6001600160a01b038416612d87576040517f94280d620000000000000000000000000000000000000000000000000000000081525f60048201526024016107b6565b6001600160a01b038086165f90815260018301602090815260408083209388168352929052208390558115612e0457836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051612dfb91815260200190565b60405180910390a35b5050505050565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff166113d1576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612e6f82612fc8565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115612eb3576125a58282613064565b610f276130d6565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff166113d1576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6122ee612ebb565b612f32612ebb565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03612f7e84826137e7565b50600481016126cb83826137e7565b612572612ebb565b612f9d612ebb565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff19169055565b806001600160a01b03163b5f03613016576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016107b6565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60605f80846001600160a01b03168460405161308091906138a7565b5f60405180830381855af49150503d805f81146130b8576040519150601f19603f3d011682016040523d82523d5f602084013e6130bd565b606091505b50915091506130cd85838361310e565b95945050505050565b34156113d1576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060826131235761311e82613183565b611067565b815115801561313a57506001600160a01b0384163b155b1561317c576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024016107b6565b5080611067565b8051156131935780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0381168114612339575f80fd5b5f80604083850312156131ea575f80fd5b8235915060208301356131fc816131c5565b809150509250929050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f806040838503121561324d575f80fd5b8235613258816131c5565b946020939093013593505050565b8015158114612339575f80fd5b5f8060408385031215613284575f80fd5b823561328f816131c5565b915060208301356131fc81613266565b5f805f606084860312156132b1575f80fd5b83356132bc816131c5565b925060208401356132cc816131c5565b929592945050506040919091013590565b634e487b7160e01b5f52604160045260245ffd5b5f67ffffffffffffffff8084111561330b5761330b6132dd565b604051601f8501601f19908116603f01168101908282118183101715613333576133336132dd565b8160405280935085815286868601111561334b575f80fd5b858560208301375f602087830101525050509392505050565b5f8060408385031215613375575f80fd5b8235613380816131c5565b9150602083013567ffffffffffffffff81111561339b575f80fd5b8301601f810185136133ab575f80fd5b6133ba858235602084016132f1565b9150509250929050565b5f602082840312156133d4575f80fd5b8135611067816131c5565b5f82601f8301126133ee575f80fd5b611067838335602085016132f1565b5f805f805f805f60e0888a031215613413575f80fd5b873567ffffffffffffffff8082111561342a575f80fd5b6134368b838c016133df565b985060208a013591508082111561344b575f80fd5b6134578b838c016133df565b975060408a01359150613469826131c5565b90955060608901359061347b826131c5565b90945060808901359061348d826131c5565b90935060a0890135925060c08901359080821682146134aa575f80fd5b508091505092959891949750929550565b5f80604083850312156134cc575f80fd5b82356134d7816131c5565b915060208301356131fc816131c5565b5f805f805f8060c087890312156134fc575f80fd5b863567ffffffffffffffff80821115613513575f80fd5b61351f8a838b016133df565b97506020890135915080821115613534575f80fd5b5061354189828a016133df565b9550506040870135613552816131c5565b93506060870135613562816131c5565b92506080870135613572816131c5565b8092505060a087013590509295509295509295565b5f60208284031215613597575f80fd5b815160ff81168114611067575f80fd5b5f602082840312156135b7575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b60ff8281168282160390811115611011576110116135be565b600181815b8085111561362557815f190482111561360b5761360b6135be565b8085161561361857918102915b93841c93908002906135f0565b509250929050565b5f8261363b57506001611011565b8161364757505f611011565b816001811461365d576002811461366757613683565b6001915050611011565b60ff841115613678576136786135be565b50506001821b611011565b5060208310610133831016604e8410600b84101617156136a6575081810a611011565b6136b083836135eb565b805f19048211156136c3576136c36135be565b029392505050565b5f61106760ff84168361362d565b8082028115828204841417611011576110116135be565b5f8261370a57634e487b7160e01b5f52601260045260245ffd5b500490565b81810381811115611011576110116135be565b5f60208284031215613732575f80fd5b815161106781613266565b5f6020828403121561374d575f80fd5b8151611067816131c5565b600181811c9082168061376c57607f821691505b60208210810361378a57634e487b7160e01b5f52602260045260245ffd5b50919050565b80820180821115611011576110116135be565b601f8211156125a557805f5260205f20601f840160051c810160208510156137c85750805b601f840160051c820191505b81811015612e04575f81556001016137d4565b815167ffffffffffffffff811115613801576138016132dd565b6138158161380f8454613758565b846137a3565b602080601f831160018114613848575f84156138315750858301515b5f19600386901b1c1916600185901b17855561389f565b5f85815260208120601f198616915b8281101561387657888601518255948401946001909101908401613857565b508582101561389357878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f82518060208501845e5f92019182525091905056fea26469706673582212200715022b3d313d9ee579f9e8d21d222032148be4058dd3dec566f2d41779abeb64736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0xCDF456E1 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xE73FAA2D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF267D91B GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xF267D91B EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0xFDF262B7 EQ PUSH2 0x73C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x6D6 JUMPI DUP1 PUSH4 0xEDF3E29E EQ PUSH2 0x6EA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD9D47D69 GT PUSH2 0xAC JUMPI DUP1 PUSH4 0xD9D47D69 EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xDB48A5E3 EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x673 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xD53419A3 EQ PUSH2 0x636 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0x11B JUMPI DUP1 PUSH4 0xB3404EFD GT PUSH2 0x101 JUMPI DUP1 PUSH4 0xB3404EFD EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0xBC4BA731 EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0xC80B0BAF EQ PUSH2 0x5F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x587 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0x9AC2A011 EQ PUSH2 0x53A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x1DB JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x191 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x4A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x41F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x4FE84C42 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x3D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E1BFF3F GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x295B9300 GT PUSH2 0x216 JUMPI DUP1 PUSH4 0x295B9300 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x36B77107 EQ PUSH2 0x384 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E1BFF3F EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x336 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x31D9 JUMP JUMPDEST PUSH2 0x75B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x3207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x323C JUMP JUMPDEST PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x3273 JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x341 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x329F JUMP JUMPDEST PUSH2 0x1049 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0x106E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x3BB CALLDATASIZE PUSH1 0x4 PUSH2 0x3364 JUMP JUMPDEST PUSH2 0x13D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0x13EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND PUSH2 0x2CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x439 CALLDATASIZE PUSH1 0x4 PUSH2 0x31D9 JUMP JUMPDEST PUSH2 0x141C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x449 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0x458 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x182D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x183E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0x184E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x545 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x554 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C4 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x573 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x582 CALLDATASIZE PUSH1 0x4 PUSH2 0x323C JUMP JUMPDEST PUSH2 0x189F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x592 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x604 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x613 CALLDATASIZE PUSH1 0x4 PUSH2 0x33FD JUMP JUMPDEST PUSH2 0x18AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x623 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x4BE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x641 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x1AD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x655 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0x1E17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x669 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0x68D CALLDATASIZE PUSH1 0x4 PUSH2 0x34BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH2 0x1ECB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x704 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E7 JUMP JUMPDEST PUSH2 0x205C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x714 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x22B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x728 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x737 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C4 JUMP JUMPDEST PUSH2 0x22E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x747 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x4BE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x763 PUSH2 0x233C JUMP JUMPDEST PUSH2 0x76B PUSH2 0x23BD JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536861726573206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x883 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x3587 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x916 SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x961 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x985 SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST SWAP1 POP PUSH2 0x992 DUP4 PUSH1 0x12 PUSH2 0x35D2 JUMP JUMPDEST PUSH2 0x99D SWAP1 PUSH1 0xA PUSH2 0x36CB JUMP JUMPDEST PUSH2 0x9A7 SWAP1 DUP4 PUSH2 0x36D9 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH2 0x9D2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9DC DUP4 DUP9 PUSH2 0x36D9 JUMP JUMPDEST PUSH2 0x9E6 SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xA11 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA1B DUP6 DUP10 PUSH2 0x36D9 JUMP JUMPDEST PUSH2 0xA25 SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST SWAP1 POP PUSH2 0xA31 CALLER DUP9 PUSH2 0x2419 JUMP JUMPDEST PUSH2 0xA3C DUP6 PUSH1 0x12 PUSH2 0x35D2 JUMP JUMPDEST PUSH2 0xA47 SWAP1 PUSH1 0xA PUSH2 0x36CB JUMP JUMPDEST PUSH2 0xA51 SWAP1 DUP3 PUSH2 0x36F0 JUMP JUMPDEST SWAP1 POP DUP2 PUSH0 PUSH2 0xA5E DUP3 PUSH2 0x2466 JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP10 PUSH2 0xA7C DUP5 DUP7 PUSH2 0x370F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xADC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH0 PUSH2 0xB0B DUP3 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4CC7325 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB5E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0x373D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3B19E84A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF9 SWAP2 SWAP1 PUSH2 0x373D JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP4 PUSH2 0xC17 DUP7 DUP9 PUSH2 0x370F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC77 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC9B SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCEB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD0F SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH2 0xD19 DUP7 PUSH2 0x2466 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP13 PUSH2 0xD38 DUP8 DUP11 PUSH2 0x370F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD98 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBC SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH2 0xDC6 DUP5 PUSH2 0x2466 JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP4 PUSH2 0xDE4 DUP7 DUP9 PUSH2 0x370F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE44 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE68 SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEB8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP DUP5 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x370F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE POP PUSH2 0xF27 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP2 PUSH2 0xF7C SWAP1 PUSH2 0x3758 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFA8 SWAP1 PUSH2 0x3758 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFF3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFCA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFF3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFD6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x100B DUP2 DUP6 DUP6 PUSH2 0x2598 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x101F PUSH2 0x25AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x1056 DUP6 DUP3 DUP6 PUSH2 0x261E JUMP JUMPDEST PUSH2 0x1061 DUP6 DUP6 DUP6 PUSH2 0x26D1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10C0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10E4 SWAP2 SWAP1 PUSH2 0x373D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BF01E9B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1137 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x115B SWAP2 SWAP1 PUSH2 0x373D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11CA SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1215 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1239 SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1247 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1257 JUMPI PUSH0 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ PUSH2 0x130B JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE DUP6 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP7 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12DA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12FE SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST PUSH2 0x1308 SWAP1 DUP5 PUSH2 0x3790 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP7 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x137D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13A1 SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST PUSH2 0x13AB SWAP1 DUP5 PUSH2 0x3790 JUMP JUMPDEST SWAP3 POP PUSH2 0x13B7 DUP3 DUP5 PUSH2 0x3790 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13C9 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x13D1 PUSH2 0x2760 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13DB PUSH2 0x27D2 JUMP JUMPDEST PUSH2 0x13E4 DUP3 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0xF27 DUP3 DUP3 PUSH2 0x28AA JUMP JUMPDEST PUSH0 PUSH2 0x13F7 PUSH2 0x29AB JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH2 0x1424 PUSH2 0x233C JUMP JUMPDEST PUSH2 0x142C PUSH2 0x23BD JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x147B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14E7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x150B SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x4CC732500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x4CC7325 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x156C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1590 SWAP2 SWAP1 PUSH2 0x373D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3B19E84A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15E3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1607 SWAP2 SWAP1 PUSH2 0x373D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1613 DUP6 PUSH2 0x2466 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x161F DUP3 PUSH2 0x2466 JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 PUSH2 0x163D DUP5 DUP7 PUSH2 0x370F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x169D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16C1 SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1711 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1735 SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH0 PUSH2 0x1741 DUP4 DUP9 PUSH2 0x370F JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1793 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17B7 SWAP2 SWAP1 PUSH2 0x3587 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x17C5 DUP3 PUSH1 0x12 PUSH2 0x35D2 JUMP JUMPDEST PUSH2 0x17D0 SWAP1 PUSH1 0xA PUSH2 0x36CB JUMP JUMPDEST PUSH2 0x17DA SWAP1 DUP5 PUSH2 0x36D9 JUMP JUMPDEST SWAP1 POP PUSH2 0x17E6 DUP9 DUP3 PUSH2 0x2A0D JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x17F7 SWAP2 SWAP1 PUSH2 0x3790 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE POP PUSH2 0xF27 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1835 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x13D1 PUSH0 PUSH2 0x2A5A JUMP JUMPDEST PUSH2 0x1846 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x13D1 PUSH2 0x2AD7 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP2 PUSH2 0xF7C SWAP1 PUSH2 0x3758 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x100B DUP2 DUP6 DUP6 PUSH2 0x26D1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x18FA JUMPI POP DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0x1931 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 AND PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND OR PUSH9 0x10000000000000000 OR DUP2 SSTORE PUSH2 0x1977 CALLER PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x1981 DUP10 DUP10 PUSH2 0x2B43 JUMP JUMPDEST PUSH2 0x1989 PUSH2 0x2B55 JUMP JUMPDEST PUSH2 0x1991 PUSH2 0x2B5D JUMP JUMPDEST PUSH2 0x1999 PUSH2 0x2B6D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP10 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP9 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x19EE DUP5 PUSH2 0x168 PUSH2 0x36D9 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x7 DUP5 SWAP1 SSTORE NUMBER PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP3 PUSH4 0x313CE567 SWAP3 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A3D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A61 SWAP2 SWAP1 PUSH2 0x3587 JUMP JUMPDEST PUSH2 0x1A6C SWAP1 PUSH1 0xA PUSH2 0x36CB JUMP JUMPDEST PUSH2 0x1A78 SWAP1 PUSH2 0x2710 PUSH2 0x36D9 JUMP JUMPDEST PUSH1 0x5 SSTORE DUP1 SLOAD PUSH9 0xFF0000000000000000 NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1B31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6578656375746F723A207775743F000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x1B39 PUSH2 0x233C JUMP JUMPDEST PUSH2 0x1B41 PUSH2 0x23BD JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x4 SLOAD PUSH2 0x1B51 SWAP1 NUMBER PUSH2 0x370F JUMP JUMPDEST GT PUSH2 0x1B9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776169742074696C6C206E657874207265696E76657374206379636C65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH0 PUSH2 0x1BA7 PUSH2 0x1E17 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1BF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F20737761700000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x82755EBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x82755EBB SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C58 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C7C SWAP2 SWAP1 PUSH2 0x373D JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CE6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D0A SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2D6BC8EA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x64 DUP3 ADD MSTORE SWAP1 DUP4 AND SWAP1 PUSH4 0x2D6BC8EA SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D85 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DA9 SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST NUMBER PUSH1 0x4 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP CALLER SWAP2 PUSH32 0x129AC658E77B551B004790E5BD957532CEF552C50852A1EE0E38DD3E23FE85DB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x13D1 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E5D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E81 SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x4 SLOAD NUMBER PUSH2 0x1E92 SWAP2 SWAP1 PUSH2 0x370F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 SLOAD DUP3 DUP5 PUSH2 0x1EA4 SWAP2 SWAP1 PUSH2 0x36D9 JUMP JUMPDEST PUSH2 0x1EAE SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP2 GT PUSH2 0x1EBF JUMPI DUP1 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x5 SLOAD JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1EF4 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST PUSH0 SUB PUSH2 0x1EFF JUMPI POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x1BF01E9B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x1BF01E9B SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F5F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F83 SWAP2 SWAP1 PUSH2 0x373D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FC2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FE6 SWAP2 SWAP1 PUSH2 0x3587 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1FF4 DUP3 PUSH1 0x12 PUSH2 0x35D2 JUMP JUMPDEST PUSH2 0x1FFF SWAP1 PUSH1 0xA PUSH2 0x36CB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH2 0x200B PUSH2 0x106E JUMP JUMPDEST PUSH2 0x2015 SWAP2 SWAP1 PUSH2 0x36D9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2040 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2052 DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x36D9 JUMP JUMPDEST PUSH2 0x13B7 SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x20A6 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x20C2 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x20D0 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x2107 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x2152 JUMPI DUP5 SLOAD PUSH9 0xFF0000000000000000 NOT AND PUSH9 0x10000000000000000 OR DUP6 SSTORE JUMPDEST PUSH2 0x215B CALLER PUSH2 0x2B32 JUMP JUMPDEST PUSH2 0x2165 DUP12 DUP12 PUSH2 0x2B43 JUMP JUMPDEST PUSH2 0x216D PUSH2 0x2B55 JUMP JUMPDEST PUSH2 0x2175 PUSH2 0x2B5D JUMP JUMPDEST PUSH2 0x217D PUSH2 0x2B6D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP12 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x21D2 DUP7 PUSH2 0x168 PUSH2 0x36D9 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x7 DUP7 SWAP1 SSTORE NUMBER PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP3 PUSH4 0x313CE567 SWAP3 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2221 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2245 SWAP2 SWAP1 PUSH2 0x3587 JUMP JUMPDEST PUSH2 0x2250 SWAP1 PUSH1 0xA PUSH2 0x36CB JUMP JUMPDEST PUSH2 0x225C SWAP1 PUSH2 0x2710 PUSH2 0x36D9 JUMP JUMPDEST PUSH1 0x5 SSTORE DUP4 ISZERO PUSH2 0x22AA JUMPI DUP5 SLOAD PUSH9 0xFF0000000000000000 NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x22C1 PUSH2 0x1E17 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD PUSH1 0x4 SLOAD NUMBER PUSH2 0x22D4 SWAP2 SWAP1 PUSH2 0x370F JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x22E0 JUMPI POP PUSH0 DUP2 GT JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x22EE PUSH2 0x25AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2330 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x2339 DUP2 PUSH2 0x2A5A JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE ADD PUSH2 0x23B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x245B JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xF27 DUP3 PUSH0 DUP4 PUSH2 0x2B7D JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x85462D6F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24B8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24DC SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4F4608A2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x252F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2553 SWAP2 SWAP1 PUSH2 0x35A7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2560 DUP4 DUP7 PUSH2 0x36D9 JUMP JUMPDEST PUSH2 0x256A SWAP2 SWAP1 PUSH2 0x36F0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH2 0x25A5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2CE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH2 0x25DC PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x26CB JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x26BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x26CB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x2CE2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2713 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2755 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x25A5 DUP4 DUP4 DUP4 PUSH2 0x2B7D JUMP JUMPDEST PUSH2 0x2768 PUSH2 0x2E0B JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x286B JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x285F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2339 PUSH2 0x25AA JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2904 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2901 SWAP2 DUP2 ADD SWAP1 PUSH2 0x35A7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2945 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x29A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x25A5 DUP4 DUP4 PUSH2 0x2E66 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2A4F JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xF27 PUSH0 DUP4 DUP4 PUSH2 0x2B7D JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2ADF PUSH2 0x23BD JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x27B4 JUMP JUMPDEST PUSH2 0x2B3A PUSH2 0x2EBB JUMP JUMPDEST PUSH2 0x2339 DUP2 PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0x2B4B PUSH2 0x2EBB JUMP JUMPDEST PUSH2 0xF27 DUP3 DUP3 PUSH2 0x2F2A JUMP JUMPDEST PUSH2 0x13D1 PUSH2 0x2EBB JUMP JUMPDEST PUSH2 0x2B65 PUSH2 0x2EBB JUMP JUMPDEST PUSH2 0x13D1 PUSH2 0x2F8D JUMP JUMPDEST PUSH2 0x2B75 PUSH2 0x2EBB JUMP JUMPDEST PUSH2 0x13D1 PUSH2 0x2F95 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2BCA JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2BBF SWAP2 SWAP1 PUSH2 0x3790 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2C53 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2C35 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2C71 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2C8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2CD4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x2D45 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2D87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x2E04 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2DFB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E6F DUP3 PUSH2 0x2FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x2EB3 JUMPI PUSH2 0x25A5 DUP3 DUP3 PUSH2 0x3064 JUMP JUMPDEST PUSH2 0xF27 PUSH2 0x30D6 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22EE PUSH2 0x2EBB JUMP JUMPDEST PUSH2 0x2F32 PUSH2 0x2EBB JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x2F7E DUP5 DUP3 PUSH2 0x37E7 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x26CB DUP4 DUP3 PUSH2 0x37E7 JUMP JUMPDEST PUSH2 0x2572 PUSH2 0x2EBB JUMP JUMPDEST PUSH2 0x2F9D PUSH2 0x2EBB JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x3016 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x3080 SWAP2 SWAP1 PUSH2 0x38A7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x30B8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x30BD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x30CD DUP6 DUP4 DUP4 PUSH2 0x310E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x3123 JUMPI PUSH2 0x311E DUP3 PUSH2 0x3183 JUMP JUMPDEST PUSH2 0x1067 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x313A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x317C JUMPI PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST POP DUP1 PUSH2 0x1067 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x3193 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2339 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31EA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x31FC DUP2 PUSH2 0x31C5 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x324D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3258 DUP2 PUSH2 0x31C5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2339 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3284 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x328F DUP2 PUSH2 0x31C5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x31FC DUP2 PUSH2 0x3266 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x32B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x32BC DUP2 PUSH2 0x31C5 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x32CC DUP2 PUSH2 0x31C5 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x330B JUMPI PUSH2 0x330B PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3333 JUMPI PUSH2 0x3333 PUSH2 0x32DD JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x334B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3375 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3380 DUP2 PUSH2 0x31C5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x339B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x33AB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x33BA DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x32F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1067 DUP2 PUSH2 0x31C5 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x33EE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1067 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x32F1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3413 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x342A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3436 DUP12 DUP4 DUP13 ADD PUSH2 0x33DF JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x344B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3457 DUP12 DUP4 DUP13 ADD PUSH2 0x33DF JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3469 DUP3 PUSH2 0x31C5 JUMP JUMPDEST SWAP1 SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP1 PUSH2 0x347B DUP3 PUSH2 0x31C5 JUMP JUMPDEST SWAP1 SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP1 PUSH2 0x348D DUP3 PUSH2 0x31C5 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD SWAP1 DUP1 DUP3 AND DUP3 EQ PUSH2 0x34AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34CC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x34D7 DUP2 PUSH2 0x31C5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x31FC DUP2 PUSH2 0x31C5 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x34FC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3513 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x351F DUP11 DUP4 DUP12 ADD PUSH2 0x33DF JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3534 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3541 DUP10 DUP3 DUP11 ADD PUSH2 0x33DF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x3552 DUP2 PUSH2 0x31C5 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x3562 DUP2 PUSH2 0x31C5 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x3572 DUP2 PUSH2 0x31C5 JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3597 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1067 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x1011 JUMPI PUSH2 0x1011 PUSH2 0x35BE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x3625 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x360B JUMPI PUSH2 0x360B PUSH2 0x35BE JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x3618 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x35F0 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x363B JUMPI POP PUSH1 0x1 PUSH2 0x1011 JUMP JUMPDEST DUP2 PUSH2 0x3647 JUMPI POP PUSH0 PUSH2 0x1011 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x365D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3667 JUMPI PUSH2 0x3683 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1011 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3678 JUMPI PUSH2 0x3678 PUSH2 0x35BE JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1011 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x36A6 JUMPI POP DUP2 DUP2 EXP PUSH2 0x1011 JUMP JUMPDEST PUSH2 0x36B0 DUP4 DUP4 PUSH2 0x35EB JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x36C3 JUMPI PUSH2 0x36C3 PUSH2 0x35BE JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1067 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x362D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1011 JUMPI PUSH2 0x1011 PUSH2 0x35BE JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x370A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1011 JUMPI PUSH2 0x1011 PUSH2 0x35BE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3732 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1067 DUP2 PUSH2 0x3266 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x374D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1067 DUP2 PUSH2 0x31C5 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x376C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x378A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1011 JUMPI PUSH2 0x1011 PUSH2 0x35BE JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x25A5 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x37C8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E04 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x37D4 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3801 JUMPI PUSH2 0x3801 PUSH2 0x32DD JUMP JUMPDEST PUSH2 0x3815 DUP2 PUSH2 0x380F DUP5 SLOAD PUSH2 0x3758 JUMP JUMPDEST DUP5 PUSH2 0x37A3 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3848 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x3831 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x389F JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3876 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3857 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x3893 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD ISZERO MUL 0x2B RETURNDATASIZE BALANCE RETURNDATASIZE SWAP15 0xE5 PUSH26 0xF9E8D21D222032148BE4058DD3DEC566F2D41779ABEB64736F6C PUSH4 0x43000819 STOP CALLER ","sourceMap":"683:9261:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4996:1646;;;;;;;;;;-1:-1:-1;4996:1646:20;;;;;:::i;:::-;;:::i;:::-;;3011:144:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5505:186;;;;;;;;;;-1:-1:-1;5505:186:3;;;;;:::i;:::-;;:::i;:::-;;;1460:14:21;;1453:22;1435:41;;1423:2;1408:18;5505:186:3;1295:187:21;4191:152:3;;;;;;;;;;-1:-1:-1;4322:14:3;;4191:152;;;1633:25:21;;;1621:2;1606:18;4191:152:3;1487:177:21;9384:116:20;;;;;;;;;;-1:-1:-1;9384:116:20;;;;;:::i;:::-;;:::i;6251:244:3:-;;;;;;;;;;-1:-1:-1;6251:244:3;;;;;:::i;:::-;;:::i;8164:665:20:-;;;;;;;;;;;;;:::i;4049:82:3:-;;;;;;;;;;-1:-1:-1;4049:82:3;;4122:2;2782:36:21;;2770:2;2755:18;4049:82:3;2640:184:21;977:26:20;;;;;;;;;;;;;;;;8089:67;;;;;;;;;;;;;:::i;4158:214:2:-;;;;;;:::i;:::-;;:::i;1115:31:20:-;;;;;;;;;;;;;;;;3705:134:2;;;;;;;;;;;;;:::i;2692:145:5:-;;;;;;;;;;-1:-1:-1;1270:23:5;2821:9;;;2692:145;;3935:860:20;;;;;;;;;;-1:-1:-1;3935:860:20;;;;;:::i;:::-;;:::i;4401:171:3:-;;;;;;;;;;-1:-1:-1;4401:171:3;;;;;:::i;:::-;-1:-1:-1;;;;;4545:20:3;4466:7;4545:20;;;2359;4545;;;;;;;4401:171;3155:101:0;;;;;;;;;;;;;:::i;9280:96:20:-;;;;;;;;;;-1:-1:-1;9358:9:20;;-1:-1:-1;;;;;9358:9:20;9280:96;;;-1:-1:-1;;;;;4900:55:21;;;4882:74;;4870:2;4855:18;9280:96:20;4736:226:21;7945:63:20;;;;;;;;;;;;;:::i;2441:144:0:-;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;3268:148:3;;;;;;;;;;;;;:::i;1155:41:20:-;;;;;;;;;;-1:-1:-1;1155:41:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;4767:178:3;;;;;;;;;;-1:-1:-1;4767:178:3;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1081:27:20;;;;;;;;;;;;;;;;1010:32;;;;;;;;;;;;;;;;2485:808;;;;;;;;;;-1:-1:-1;2485:808:20;;;;;:::i;:::-;;:::i;868:24::-;;;;;;;;;;-1:-1:-1;868:24:20;;;;-1:-1:-1;;;;;868:24:20;;;6650:668;;;;;;;;;;;;;:::i;7326:329::-;;;;;;;;;;;;;:::i;1049:25::-;;;;;;;;;;;;;;;;5003:195:3;;;;;;;;;;-1:-1:-1;5003:195:3;;;;;:::i;:::-;-1:-1:-1;;;;;5162:20:3;;;5083:7;5162:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;5003:195;8837:435:20;;;;;;;;;;;;;:::i;1709:768::-;;;;;;;;;;-1:-1:-1;1709:768:20;;;;;:::i;:::-;;:::i;7663:200::-;;;;;;;;;;;;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;899:25:20:-;;;;;;;;;;-1:-1:-1;899:25:20;;;;-1:-1:-1;;;;;899:25:20;;;4996:1646;3251:21:6;:19;:21::i;:::-;2316:19:5::1;:17;:19::i;:::-;5106:1:20::2;5097:6;:10;5089:55;;;::::0;-1:-1:-1;;;5089:55:20;;8025:2:21;5089:55:20::2;::::0;::::2;8007:21:21::0;;;8044:18;;;8037:30;8103:34;8083:18;;;8076:62;8155:18;;5089:55:20::2;;;;;;;;;5173:10;4466:7:3::0;4545:20;;;2359;4545;;;;;;5188:6:20;-1:-1:-1;5163:31:20::2;5155:64;;;::::0;-1:-1:-1;;;5155:64:20;;8386:2:21;5155:64:20::2;::::0;::::2;8368:21:21::0;8425:2;8405:18;;;8398:30;8464:22;8444:18;;;8437:50;8504:18;;5155:64:20::2;8184:344:21::0;5155:64:20::2;5268:10;::::0;5253:37:::2;::::0;;-1:-1:-1;;;5253:37:20;;;;5232:18:::2;::::0;-1:-1:-1;;;;;5268:10:20::2;::::0;5253:35:::2;::::0;:37:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;5268:10;5253:37:::2;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5331:10;::::0;5324:43:::2;::::0;-1:-1:-1;;;5324:43:20;;5361:4:::2;5324:43;::::0;::::2;4882:74:21::0;5232:58:20;;-1:-1:-1;5301:20:20::2;::::0;-1:-1:-1;;;;;5331:10:20;;::::2;::::0;5324:28:::2;::::0;4855:18:21;;5324:43:20::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5378:19;5407:9:::0;;5400:42:::2;::::0;-1:-1:-1;;;5400:42:20;;5436:4:::2;5400:42;::::0;::::2;4882:74:21::0;5301:66:20;;-1:-1:-1;5378:19:20;;-1:-1:-1;;;;;5407:9:20;;::::2;::::0;5400:27:::2;::::0;4855:18:21;;5400:42:20::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5378:64:::0;-1:-1:-1;5533:17:20::2;5538:12:::0;5533:2:::2;:17;:::i;:::-;5526:25;::::0;:2:::2;:25;:::i;:::-;5510:41;::::0;;::::2;:::i;:::-;;;5564:23;5615:13;4322:14:3::0;;;4191:152;5615:13:20::2;5591:20;5600:11:::0;5591:6;:20:::2;:::i;:::-;5590:38;;;;:::i;:::-;5564:64;;5639:23;5691:13;4322:14:3::0;;;4191:152;5691:13:20::2;5666:21;5675:12:::0;5666:6;:21:::2;:::i;:::-;5665:39;;;;:::i;:::-;5639:65;;5717:25;5723:10;5735:6;5717:5;:25::i;:::-;5838:17;5843:12:::0;5838:2:::2;:17;:::i;:::-;5831:25;::::0;:2:::2;:25;:::i;:::-;5812:44;::::0;;::::2;:::i;:::-;::::0;-1:-1:-1;5892:15:20;5869:20:::2;5935:22;5892:15:::0;5935:8:::2;:22::i;:::-;5975:9;::::0;5920:37;;-1:-1:-1;;;;;;5975:9:20::2;5968:26;5995:2:::0;5999:22:::2;5920:37:::0;5999:12;:22:::2;:::i;:::-;5968:54;::::0;;::::2;::::0;;;;;;-1:-1:-1;;;;;11619:55:21;;;5968:54:20::2;::::0;::::2;11601:74:21::0;11691:18;;;11684:34;11574:18;;5968:54:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6035:13;6051:17;6060:7;6051:8;:17::i;:::-;6035:33;;6079:20;6102:9;;;;;;;;;-1:-1:-1::0;;;;;6102:9:20::2;-1:-1:-1::0;;;;;6102:25:20::2;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6079:50;;6140:16;6159:9;;;;;;;;;-1:-1:-1::0;;;;;6159:9:20::2;-1:-1:-1::0;;;;;6159:21:20::2;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6200:9;::::0;6140:42;;-1:-1:-1;;;;;;6200:9:20::2;6193:26;6220:12:::0;6234:18:::2;6244:8:::0;6234:7;:18:::2;:::i;:::-;6193:60;::::0;;::::2;::::0;;;;;;-1:-1:-1;;;;;11619:55:21;;;6193:60:20::2;::::0;::::2;11601:74:21::0;11691:18;;;11684:34;11574:18;;6193:60:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6271:9:20::2;::::0;6264:46:::2;::::0;-1:-1:-1;;;6264:46:20;;-1:-1:-1;;;;;11619:55:21;;;6264:46:20::2;::::0;::::2;11601:74:21::0;11691:18;;;11684:34;;;6271:9:20;;::::2;::::0;6264:26:::2;::::0;11574:18:21;;6264:46:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6333:25;6342:15;6333:8;:25::i;:::-;6376:10;::::0;6323:35;;-1:-1:-1;;;;;;6376:10:20::2;6369:27;6397:2:::0;6401:25:::2;6323:35:::0;6401:15;:25:::2;:::i;:::-;6369:58;::::0;;::::2;::::0;;;;;;-1:-1:-1;;;;;11619:55:21;;;6369:58:20::2;::::0;::::2;11601:74:21::0;11691:18;;;11684:34;11574:18;;6369:58:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6449:17;6458:7;6449:8;:17::i;:::-;6484:9;::::0;6438:28;;-1:-1:-1;;;;;;6484:9:20::2;6477:26;6504:12:::0;6518:18:::2;6438:28:::0;6518:7;:18:::2;:::i;:::-;6477:60;::::0;;::::2;::::0;;;;;;-1:-1:-1;;;;;11619:55:21;;;6477:60:20::2;::::0;::::2;11601:74:21::0;11691:18;;;11684:34;11574:18;;6477:60:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6555:9:20::2;::::0;6548:46:::2;::::0;-1:-1:-1;;;6548:46:20;;-1:-1:-1;;;;;11619:55:21;;;6548:46:20::2;::::0;::::2;11601:74:21::0;11691:18;;;11684:34;;;6555:9:20;;::::2;::::0;6548:26:::2;::::0;11574:18:21;;6548:46:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6622:12;6607:11;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;1805:1:6;2388:30;3969:23;-1:-1:-1;3293:20:6;;-1:-1:-1;;;;;;;;;3716:283:6;3293:20;4996:1646:20;;:::o;3011:144:3:-;3141:7;3134:14;;3056:13;;2359:20;;3134:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144;:::o;5505:186::-;5578:4;966:10:4;5632:31:3;966:10:4;5648:7:3;5657:5;5632:8;:31::i;:::-;5680:4;5673:11;;;5505:186;;;;;:::o;9384:116:20:-;2334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;9465:18:20;;;::::1;;::::0;;;:9:::1;:18;::::0;;;;:27;;-1:-1:-1;;9465:27:20::1;::::0;::::1;;::::0;;;::::1;::::0;;9384:116::o;6251:244:3:-;6338:4;966:10:4;6394:37:3;6410:4;966:10:4;6425:5:3;6394:15;:37::i;:::-;6441:26;6451:4;6457:2;6461:5;6441:9;:26::i;:::-;6484:4;6477:11;;;6251:244;;;;;;:::o;8164:665:20:-;8211:7;8231:22;8272:9;;;;;;;;;-1:-1:-1;;;;;8272:9:20;-1:-1:-1;;;;;8272:25:20;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8231:69;;8311:12;8326:9;;;;;;;;;-1:-1:-1;;;;;8326:9:20;-1:-1:-1;;;;;8326:17:20;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8356:17;8416:9;;8409:42;;-1:-1:-1;;;8409:42:20;;8445:4;8409:42;;;4882:74:21;8311:34:20;;-1:-1:-1;8356:17:20;;;;-1:-1:-1;;;;;8416:9:20;;8409:27;;4855:18:21;;8409:42:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8489:10;;8482:43;;-1:-1:-1;;;8482:43:20;;8519:4;8482:43;;;4882:74:21;8390:61:20;;-1:-1:-1;8462:17:20;;-1:-1:-1;;;;;8489:10:20;;;;8482:28;;4855:18:21;;8482:43:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8462:63;-1:-1:-1;8542:16:20;;:37;;;;-1:-1:-1;8562:17:20;;8542:37;8538:51;;;8588:1;8581:8;;;;;;;8164:665;:::o;8538:51::-;8606:9;;-1:-1:-1;;;;;8606:17:20;;;:9;;:17;8602:80;;8653:9;;8638:44;;;;;-1:-1:-1;;;;;8653:9:20;;;8638:44;;;12940:34:21;13010:15;;;12990:18;;;12983:43;13042:18;;;13035:34;;;8638:14:20;;;;;;12852:18:21;;8638:44:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8625:57;;;;:::i;:::-;;;8602:80;8721:10;;;8733:9;8706:51;;;;;-1:-1:-1;;;;;8721:10:20;;;8706:51;;;12940:34:21;8733:9:20;;;12990:18:21;;;12983:43;13042:18;;;13035:34;;;8706:14:20;;;;;;12852:18:21;;8706:51:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8693:64;;;;:::i;:::-;;-1:-1:-1;8768:24:20;8781:11;8693:64;8768:24;:::i;:::-;;8164:665;-1:-1:-1;;;;;;8164:665:20:o;8089:67::-;2334:13:0;:11;:13::i;:::-;8138:10:20::1;:8;:10::i;:::-;8089:67::o:0;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;3705:134::-:0;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;1327:66:9::1;3705:134:2::0;:::o;3935:860:20:-;3251:21:6;:19;:21::i;:::-;2316:19:5::1;:17;:19::i;:::-;4044:1:20::2;4035:6;:10;4027:55;;;::::0;-1:-1:-1;;;4027:55:20;;13412:2:21;4027:55:20::2;::::0;::::2;13394:21:21::0;;;13431:18;;;13424:30;13490:34;13470:18;;;13463:62;13542:18;;4027:55:20::2;13210:356:21::0;4027:55:20::2;4102:9;::::0;4095:65:::2;::::0;;;;4126:10:::2;4095:65;::::0;::::2;12940:34:21::0;4146:4:20::2;12990:18:21::0;;;12983:43;13042:18;;;13035:34;;;-1:-1:-1;;;;;4102:9:20;;::::2;::::0;4095:30:::2;::::0;12852:18:21;;4095:65:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4196:9:20::2;::::0;:27:::2;::::0;;;;;;;4173:20:::2;::::0;-1:-1:-1;;;;;4196:9:20::2;::::0;:25:::2;::::0;:27:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;:9;:27:::2;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4173:50;;4234:16;4253:9;;;;;;;;;-1:-1:-1::0;;;;;4253:9:20::2;-1:-1:-1::0;;;;;4253:21:20::2;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4234:42;;4289:12;4304:16;4313:6;4304:8;:16::i;:::-;4289:31;;4331:13;4347:17;4356:7;4347:8;:17::i;:::-;4384:9;::::0;4331:33;;-1:-1:-1;;;;;;4384:9:20::2;4377:26;4404:12:::0;4418:18:::2;4331:33:::0;4418:7;:18:::2;:::i;:::-;4377:60;::::0;;::::2;::::0;;;;;;-1:-1:-1;;;;;11619:55:21;;;4377:60:20::2;::::0;::::2;11601:74:21::0;11691:18;;;11684:34;11574:18;;4377:60:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4455:9:20::2;::::0;4448:46:::2;::::0;-1:-1:-1;;;4448:46:20;;-1:-1:-1;;;;;11619:55:21;;;4448:46:20::2;::::0;::::2;11601:74:21::0;11691:18;;;11684:34;;;4455:9:20;;::::2;::::0;4448:26:::2;::::0;11574:18:21;;4448:46:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4507:19:20::2;4529:16;4538:7:::0;4529:6;:16:::2;:::i;:::-;4507:38;;4556:17;4591:9:::0;::::2;;;;;;;;-1:-1:-1::0;;;;;4591:9:20::2;-1:-1:-1::0;;;;;4576:34:20::2;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4556:56:::0;-1:-1:-1;4653:20:20::2;4697:16;4556:56:::0;4697:2:::2;:16;:::i;:::-;4690:24;::::0;:2:::2;:24;:::i;:::-;4676:38;::::0;:11;:38:::2;:::i;:::-;4653:61;;4725:23;4731:2;4735:12;4725:5;:23::i;:::-;4776:11;4761;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;1805:1:6;2388:30;3969:23;-1:-1:-1;3293:20:6;;-1:-1:-1;;;;;;3716:283:6;3155:101:0;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;7945:63:20:-:0;2334:13:0;:11;:13::i;:::-;7992:8:20::1;:6;:8::i;3268:148:3:-:0;3400:9;3393:16;;3315:13;;2359:20;;3393:16;;;:::i;4767:178::-;4836:4;966:10:4;4890:27:3;966:10:4;4907:2:3;4911:5;4890:9;:27::i;2485:808:20:-;8870:21:1;6431:15;;2755:8:20;;8870:21:1;6431:15;;;;;;:44;;-1:-1:-1;6450:14:1;;:25;;;;:14;;:25;;6431:44;6427:105;;;6498:23;;;;;;;;;;;;;;6427:105;6541:24;;6575:22;;6541:24;;;6575:22;;;;;2776:26:20::1;2791:10;2776:14;:26::i;:::-;2813:28;2826:5;2833:7;2813:12;:28::i;:::-;2852:24;:22;:24::i;:::-;2887;:22;:24::i;:::-;2922:17;:15;:17::i;:::-;2952:9;:22:::0;;-1:-1:-1;;;;;2952:22:20;;::::1;-1:-1:-1::0;;2952:22:20;;::::1;;::::0;;;;2985:24;;;;::::1;::::0;;::::1;;::::0;;3020:9:::1;:47:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;3095:23:::1;3101:17:::0;3095:3:::1;:23;:::i;:::-;3080:12;:38:::0;3129:16:::1;:36:::0;;;3196:12:::1;3176:17;:32:::0;;;3246:39:::1;::::0;;-1:-1:-1;;;3246:39:20;;;;-1:-1:-1;;;;;3246:37:20;::::1;::::0;::::1;::::0;:39;;::::1;::::0;::::1;::::0;;;;;;;;:37;:39:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3240:45;::::0;:2:::1;:45;:::i;:::-;3232:53;::::0;:5:::1;:53;:::i;:::-;3219:10;:66:::0;6618:23:1;;-1:-1:-1;;6618:23:1;;;6656:20;;13745:18:21;13733:31;;13715:50;;6656:20:1;;13703:2:21;13688:18;6656:20:1;;;;;;;6291:392;2485:808:20;;;;;;;;:::o;6650:668::-;3354:10;3344:21;;;;:9;:21;;;;;;;;3336:48;;;;-1:-1:-1;;;3336:48:20;;13978:2:21;3336:48:20;;;13960:21:21;14017:2;13997:18;;;13990:30;14056:16;14036:18;;;14029:44;14090:18;;3336:48:20;13776:338:21;3336:48:20;3251:21:6::1;:19;:21::i;:::-;2316:19:5::2;:17;:19::i;:::-;6780:16:20::3;::::0;6759:17:::3;::::0;6744:32:::3;::::0;:12:::3;:32;:::i;:::-;6743:53;6735:95;;;::::0;-1:-1:-1;;;6735:95:20;;14321:2:21;6735:95:20::3;::::0;::::3;14303:21:21::0;14360:2;14340:18;;;14333:30;14399:31;14379:18;;;14372:59;14448:18;;6735:95:20::3;14119:353:21::0;6735:95:20::3;6843:14;6860:17;:15;:17::i;:::-;6843:34;;6923:1;6911:9;:13;6903:41;;;::::0;-1:-1:-1;;;6903:41:20;;14679:2:21;6903:41:20::3;::::0;::::3;14661:21:21::0;14718:2;14698:18;;;14691:30;14757:17;14737:18;;;14730:45;14792:18;;6903:41:20::3;14477:339:21::0;6903:41:20::3;7001:9;::::0;:28:::3;::::0;;;;;;;6957:24:::3;::::0;-1:-1:-1;;;;;7001:9:20::3;::::0;:26:::3;::::0;:28:::3;::::0;;::::3;::::0;::::3;::::0;;;;;;;;:9;:28:::3;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7048:9;::::0;7041:54:::3;::::0;;;;-1:-1:-1;;;;;11619:55:21;;;7041:54:20::3;::::0;::::3;11601:74:21::0;11691:18;;;11684:34;;;6957:73:20;;-1:-1:-1;7048:9:20;::::3;::::0;7041:25:::3;::::0;11574:18:21;;7041:54:20::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;7108:21:20::3;7151:9:::0;;;7162:10;7132:67:::3;::::0;;;;-1:-1:-1;;;;;7151:9:20;;::::3;7132:67;::::0;::::3;15113:34:21::0;7162:10:20;;::::3;15163:18:21::0;;;15156:43;15215:18;;;15208:34;;;7193:4:20::3;15258:18:21::0;;;15251:43;7132:18:20;;::::3;::::0;::::3;::::0;15024:19:21;;7132:67:20::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7230:12;7210:17;:32:::0;7260:50:::3;::::0;;15479:25:21;;;15535:2;15520:18;;15513:34;;;7108:91:20;;-1:-1:-1;7273:10:20::3;::::0;7260:50:::3;::::0;15452:18:21;7260:50:20::3;;;;;;;6724:594;;;3293:20:6::1;1805:1:::0;2388:30;3969:23;3716:283;7326:329:20;7374:4;7418:9;;7411:42;;-1:-1:-1;;;7411:42:20;;7447:4;7411:42;;;4882:74:21;7374:4:20;;-1:-1:-1;;;;;7418:9:20;;7411:27;;4855:18:21;;7411:42:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7391:62;;7464:14;7496:17;;7481:12;:32;;;;:::i;:::-;7464:49;;7524:14;7570:12;;7557:9;7542:12;:24;;;;:::i;:::-;7541:41;;;;:::i;:::-;7524:58;;7612:10;;7600:9;:22;:47;;7638:9;7600:47;;;7625:10;;7600:47;7593:54;;;;;7326:329;:::o;8837:435::-;8881:7;8905:13;4322:14:3;;;4191:152;8905:13:20;8922:1;8905:18;8901:32;;-1:-1:-1;8932:1:20;;8837:435::o;8901:32::-;8961:9;;:19;;;;;;;;8946:12;;-1:-1:-1;;;;;8961:9:20;;:17;;:19;;;;;;;;;;;;;;:9;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8946:34;;8991:14;9023:4;-1:-1:-1;;;;;9008:29:20;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8991:48;-1:-1:-1;9050:14:20;9074:13;8991:48;9074:2;:13;:::i;:::-;9067:21;;:2;:21;:::i;:::-;9050:38;;9099:25;9146:6;9127:16;:14;:16::i;:::-;:25;;;;:::i;:::-;9099:53;;9163:23;9218:13;4322:14:3;;;4191:152;9218:13:20;9190:24;:17;9210:4;9190:24;:::i;:::-;9189:42;;;;:::i;1709:768::-;8870:21:1;4302:15;;;;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4951:18;;;;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;5013:22:1;;;;;4979:67;1960:26:20::1;1975:10;1960:14;:26::i;:::-;1997:28;2010:5;2017:7;1997:12;:28::i;:::-;2036:24;:22;:24::i;:::-;2071;:22;:24::i;:::-;2106:17;:15;:17::i;:::-;2136:9;:22:::0;;-1:-1:-1;;;;;2136:22:20;;::::1;-1:-1:-1::0;;2136:22:20;;::::1;;::::0;;;;2169:24;;;;::::1;::::0;;::::1;;::::0;;2204:9:::1;:47:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2279:23:::1;2285:17:::0;2279:3:::1;:23;:::i;:::-;2264:12;:38:::0;2313:16:::1;:36:::0;;;2380:12:::1;2360:17;:32:::0;;;2430:39:::1;::::0;;-1:-1:-1;;;2430:39:20;;;;-1:-1:-1;;;;;2430:37:20;::::1;::::0;::::1;::::0;:39;;::::1;::::0;::::1;::::0;;;;;;;;:37;:39:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2424:45;::::0;:2:::1;:45;:::i;:::-;2416:53;::::0;:5:::1;:53;:::i;:::-;2403:10;:66:::0;5066:101:1;;;;5100:23;;-1:-1:-1;;5100:23:1;;;5142:14;;-1:-1:-1;13715:50:21;;5142:14:1;;13703:2:21;13688:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;1709:768:20;;;;;;:::o;7663:200::-;7712:4;7729:14;7746:17;:15;:17::i;:::-;7729:34;;7819:16;;7798:17;;7783:12;:32;;;;:::i;:::-;7782:53;7781:74;;;;;7853:1;7841:9;:13;7781:74;7774:81;;;7663:200;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;::::1;::::0;;3562:1:::1;3534:31;::::0;::::1;4882:74:21::0;4855:18;;3534:31:0::1;4736:226:21::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;3326:384:6:-;2388:30;3526:9;;:20;;3522:88;;3569:30;;;;;;;;;;;;;;3522:88;1847:1;3684:19;;3326:384::o;2905:128:5:-;1270:23;2821:9;;;2966:61;;;3001:15;;;;;;;;;;;;;;9522:206:3;-1:-1:-1;;;;;9592:21:3;;9588:89;;9636:30;;;;;9663:1;9636:30;;;4882:74:21;4855:18;;9636:30:3;4736:226:21;9588:89:3;9686:35;9694:7;9711:1;9715:5;9686:7;:35::i;9712:229:20:-;9769:7;9789:16;9808:9;;;;;;;;;-1:-1:-1;;;;;9808:9:20;-1:-1:-1;;;;;9808:20:20;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9789:41;;9841:17;9861:9;;;;;;;;;-1:-1:-1;;;;;9861:9:20;-1:-1:-1;;;;;9861:21:20;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9841:43;-1:-1:-1;9841:43:20;9903:17;9912:8;9903:6;:17;:::i;:::-;9902:31;;;;:::i;:::-;9895:38;9712:229;-1:-1:-1;;;;9712:229:20:o;3716:283:6:-;1805:1;2388:30;3969:23;3716:283::o;10264:128:3:-;10348:37;10357:5;10364:7;10373:5;10380:4;10348:8;:37::i;:::-;10264:128;;;:::o;2658:162:0:-;966:10:4;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;;;;966:10:4;2763:40:0;;;4882:74:21;4855:18;;2763:40:0;4736:226:21;11993:477:3;-1:-1:-1;;;;;5162:20:3;;;12092:24;5162:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;-1:-1:-1;;12158:37:3;;12154:310;;12234:5;12215:16;:24;12211:130;;;12266:60;;;;;-1:-1:-1;;;;;15992:55:21;;12266:60:3;;;15974:74:21;16064:18;;;16057:34;;;16107:18;;;16100:34;;;15947:18;;12266:60:3;15772:368:21;12211:130:3;12382:57;12391:5;12398:7;12426:5;12407:16;:24;12433:5;12382:8;:57::i;:::-;12082:388;11993:477;;;:::o;6868:300::-;-1:-1:-1;;;;;6951:18:3;;6947:86;;6992:30;;;;;7019:1;6992:30;;;4882:74:21;4855:18;;6992:30:3;4736:226:21;6947:86:3;-1:-1:-1;;;;;7046:16:3;;7042:86;;7085:32;;;;;7114:1;7085:32;;;4882:74:21;4855:18;;7085:32:3;4736:226:21;7042:86:3;7137:24;7145:4;7151:2;7155:5;7137:7;:24::i;3674:178:5:-;2563:16;:14;:16::i;:::-;1270:23;3791:17;;-1:-1:-1;;3791:17:5::1;::::0;;3823:22:::1;966:10:4::0;3832:12:5::1;3823:22;::::0;-1:-1:-1;;;;;4900:55:21;;;4882:74;;4870:2;4855:18;3823:22:5::1;;;;;;;3722:130;3674:178::o:0;4599:312:2:-;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;1327:66:9;2035:53;-1:-1:-1;;;;;2035:53:9;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;3672:84:20;2334:13:0;:11;:13::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;;;;-1:-1:-1;;;;;4900:55:21;;6513:60:2;;;4882:74:21;4855:18;;6513:60:2;4736:226:21;6147:437:2;1327:66:9;6245:40:2;;6241:120;;6312:34;;;;;;;;1633:25:21;;;1606:18;;6312:34:2;1487:177:21;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;;;;;;;;;;;;;8996:208:3;-1:-1:-1;;;;;9066:21:3;;9062:91;;9110:32;;;;;9139:1;9110:32;;;4882:74:21;4855:18;;9110:32:3;4736:226:21;9062:91:3;9162:35;9178:1;9182:7;9191:5;9162:7;:35::i;3774:248:0:-;1313:22;3923:8;;-1:-1:-1;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;3366:176:5:-;2316:19;:17;:19::i;:::-;1270:23;3484:16;;-1:-1:-1;;3484:16:5::1;3496:4;3484:16;::::0;;3515:20:::1;966:10:4::0;3522:12:5::1;887:96:4::0;1847:127:0;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;2577:147:3:-:0;6931:20:1;:18;:20::i;:::-;2679:38:3::1;2702:5;2709:7;2679:22;:38::i;2968:67:2:-:0;6931:20:1;:18;:20::i;2540:111:6:-;6931:20:1;:18;:20::i;:::-;2610:34:6::1;:32;:34::i;1836:97:5:-:0;6931:20:1;:18;:20::i;:::-;1899:27:5::1;:25;:27::i;7483:1170:3:-:0;2359:20;-1:-1:-1;;;;;7625:18:3;;7621:546;;7779:5;7761:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7621:546:3;;-1:-1:-1;7621:546:3;;-1:-1:-1;;;;;7837:17:3;;7815:19;7837:17;;;;;;;;;;;7872:19;;;7868:115;;;7918:50;;;;;-1:-1:-1;;;;;15992:55:21;;7918:50:3;;;15974:74:21;16064:18;;;16057:34;;;16107:18;;;16100:34;;;15947:18;;7918:50:3;15772:368:21;7868:115:3;-1:-1:-1;;;;;8103:17:3;;:11;:17;;;;;;;;;;8123:19;;;;8103:39;;7621:546;-1:-1:-1;;;;;8181:16:3;;8177:429;;8344:14;;;:23;;;;;;;8177:429;;;-1:-1:-1;;;;;8557:15:3;;:11;:15;;;;;;;;;;:24;;;;;;8177:429;8636:2;-1:-1:-1;;;;;8621:25:3;8630:4;-1:-1:-1;;;;;8621:25:3;;8640:5;8621:25;;;;1633::21;;1621:2;1606:18;;1487:177;8621:25:3;;;;;;;;7558:1095;7483:1170;;;:::o;11224:487::-;2359:20;-1:-1:-1;;;;;11389:19:3;;11385:89;;11431:32;;;;;11460:1;11431:32;;;4882:74:21;4855:18;;11431:32:3;4736:226:21;11385:89:3;-1:-1:-1;;;;;11487:21:3;;11483:90;;11531:31;;;;;11559:1;11531:31;;;4882:74:21;4855:18;;11531:31:3;4736:226:21;11483:90:3;-1:-1:-1;;;;;11582:20:3;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11629:76;;;;11679:7;-1:-1:-1;;;;;11663:31:3;11672:5;-1:-1:-1;;;;;11663:31:3;;11688:5;11663:31;;;;1633:25:21;;1621:2;1606:18;;1487:177;11663:31:3;;;;;;;;11629:76;11322:389;11224:487;;;;:::o;3105:126:5:-;1270:23;2821:9;;;3163:62;;3199:15;;;;;;;;;;;;;;2779:335:9;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:9;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:1:-;8870:21;8560:40;;;;;;7146:73;;7191:17;;;;;;;;;;;;;;1980:235:0;6931:20:1;:18;:20::i;2730:216:3:-;6931:20:1;:18;:20::i;:::-;2359::3;2895:7;:15:::1;2905:5:::0;2895:7;:15:::1;:::i;:::-;-1:-1:-1::0;2920:9:3::1;::::0;::::1;:19;2932:7:::0;2920:9;:19:::1;:::i;2657:183:6:-:0;6931:20:1;:18;:20::i;1939:156:5:-;6931:20:1;:18;:20::i;:::-;1270:23:5;2071:17;;-1:-1:-1;;2071:17:5::1;::::0;;1939:156::o;2186:281:9:-;2263:17;-1:-1:-1;;;;;2263:29:9;;2296:1;2263:34;2259:119;;2320:47;;;;;-1:-1:-1;;;;;4900:55:21;;2320:47:9;;;4882:74:21;4855:18;;2320:47:9;4736:226:21;2259:119:9;1327:66;2387:73;;-1:-1:-1;;2387:73:9;-1:-1:-1;;;;;2387:73:9;;;;;;;;;;2186:281::o;4106:253:13:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:13;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:13:o;6598:122:9:-;6648:9;:13;6644:70;;6684:19;;;;;;;;;;;;;;4625:582:13;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:13;;;:23;5045:49;5041:119;;;5121:24;;;;;-1:-1:-1;;;;;4900:55:21;;5121:24:13;;;4882:74:21;4855:18;;5121:24:13;4736:226:21;5041:119:13;-1:-1:-1;5180:10:13;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;14:154:21;-1:-1:-1;;;;;93:5:21;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:315;241:6;249;302:2;290:9;281:7;277:23;273:32;270:52;;;318:1;315;308:12;270:52;354:9;341:23;331:33;;414:2;403:9;399:18;386:32;427:31;452:5;427:31;:::i;:::-;477:5;467:15;;;173:315;;;;;:::o;493:477::-;642:2;631:9;624:21;605:4;674:6;668:13;717:6;712:2;701:9;697:18;690:34;776:6;771:2;763:6;759:15;754:2;743:9;739:18;733:50;832:1;827:2;818:6;807:9;803:22;799:31;792:42;961:2;-1:-1:-1;;886:2:21;878:6;874:15;870:88;859:9;855:104;851:113;843:121;;;493:477;;;;:::o;975:315::-;1043:6;1051;1104:2;1092:9;1083:7;1079:23;1075:32;1072:52;;;1120:1;1117;1110:12;1072:52;1159:9;1146:23;1178:31;1203:5;1178:31;:::i;:::-;1228:5;1280:2;1265:18;;;;1252:32;;-1:-1:-1;;;975:315:21:o;1669:118::-;1755:5;1748:13;1741:21;1734:5;1731:32;1721:60;;1777:1;1774;1767:12;1792:382;1857:6;1865;1918:2;1906:9;1897:7;1893:23;1889:32;1886:52;;;1934:1;1931;1924:12;1886:52;1973:9;1960:23;1992:31;2017:5;1992:31;:::i;:::-;2042:5;-1:-1:-1;2099:2:21;2084:18;;2071:32;2112:30;2071:32;2112:30;:::i;2179:456::-;2256:6;2264;2272;2325:2;2313:9;2304:7;2300:23;2296:32;2293:52;;;2341:1;2338;2331:12;2293:52;2380:9;2367:23;2399:31;2424:5;2399:31;:::i;:::-;2449:5;-1:-1:-1;2506:2:21;2491:18;;2478:32;2519:33;2478:32;2519:33;:::i;:::-;2179:456;;2571:7;;-1:-1:-1;;;2625:2:21;2610:18;;;;2597:32;;2179:456::o;2829:184::-;-1:-1:-1;;;2878:1:21;2871:88;2978:4;2975:1;2968:15;3002:4;2999:1;2992:15;3018:690;3082:5;3112:18;3153:2;3145:6;3142:14;3139:40;;;3159:18;;:::i;:::-;3293:2;3287:9;3359:2;3347:15;;-1:-1:-1;;3343:24:21;;;3369:2;3339:33;3335:42;3323:55;;;3393:18;;;3413:22;;;3390:46;3387:72;;;3439:18;;:::i;:::-;3479:10;3475:2;3468:22;3508:6;3499:15;;3538:6;3530;3523:22;3578:3;3569:6;3564:3;3560:16;3557:25;3554:45;;;3595:1;3592;3585:12;3554:45;3645:6;3640:3;3633:4;3625:6;3621:17;3608:44;3700:1;3693:4;3684:6;3676;3672:19;3668:30;3661:41;;;;3018:690;;;;;:::o;3713:584::-;3790:6;3798;3851:2;3839:9;3830:7;3826:23;3822:32;3819:52;;;3867:1;3864;3857:12;3819:52;3906:9;3893:23;3925:31;3950:5;3925:31;:::i;:::-;3975:5;-1:-1:-1;4031:2:21;4016:18;;4003:32;4058:18;4047:30;;4044:50;;;4090:1;4087;4080:12;4044:50;4113:22;;4166:4;4158:13;;4154:27;-1:-1:-1;4144:55:21;;4195:1;4192;4185:12;4144:55;4218:73;4283:7;4278:2;4265:16;4260:2;4256;4252:11;4218:73;:::i;:::-;4208:83;;;3713:584;;;;;:::o;4484:247::-;4543:6;4596:2;4584:9;4575:7;4571:23;4567:32;4564:52;;;4612:1;4609;4602:12;4564:52;4651:9;4638:23;4670:31;4695:5;4670:31;:::i;4967:221::-;5010:5;5063:3;5056:4;5048:6;5044:17;5040:27;5030:55;;5081:1;5078;5071:12;5030:55;5103:79;5178:3;5169:6;5156:20;5149:4;5141:6;5137:17;5103:79;:::i;5193:1196::-;5325:6;5333;5341;5349;5357;5365;5373;5426:3;5414:9;5405:7;5401:23;5397:33;5394:53;;;5443:1;5440;5433:12;5394:53;5483:9;5470:23;5512:18;5553:2;5545:6;5542:14;5539:34;;;5569:1;5566;5559:12;5539:34;5592:50;5634:7;5625:6;5614:9;5610:22;5592:50;:::i;:::-;5582:60;;5695:2;5684:9;5680:18;5667:32;5651:48;;5724:2;5714:8;5711:16;5708:36;;;5740:1;5737;5730:12;5708:36;5763:52;5807:7;5796:8;5785:9;5781:24;5763:52;:::i;:::-;5753:62;;5865:2;5854:9;5850:18;5837:32;5824:45;;5878:31;5903:5;5878:31;:::i;:::-;5928:5;;-1:-1:-1;5985:2:21;5970:18;;5957:32;;5998:33;5957:32;5998:33;:::i;:::-;6050:7;;-1:-1:-1;6109:3:21;6094:19;;6081:33;;6123;6081;6123;:::i;:::-;6175:7;;-1:-1:-1;6229:3:21;6214:19;;6201:33;;-1:-1:-1;6286:3:21;6271:19;;6258:33;;6322:16;;;6310:29;;6300:57;;6353:1;6350;6343:12;6300:57;;6376:7;6366:17;;;5193:1196;;;;;;;;;;:::o;6394:388::-;6462:6;6470;6523:2;6511:9;6502:7;6498:23;6494:32;6491:52;;;6539:1;6536;6529:12;6491:52;6578:9;6565:23;6597:31;6622:5;6597:31;:::i;:::-;6647:5;-1:-1:-1;6704:2:21;6689:18;;6676:32;6717:33;6676:32;6717:33;:::i;6787:1031::-;6911:6;6919;6927;6935;6943;6951;7004:3;6992:9;6983:7;6979:23;6975:33;6972:53;;;7021:1;7018;7011:12;6972:53;7061:9;7048:23;7090:18;7131:2;7123:6;7120:14;7117:34;;;7147:1;7144;7137:12;7117:34;7170:50;7212:7;7203:6;7192:9;7188:22;7170:50;:::i;:::-;7160:60;;7273:2;7262:9;7258:18;7245:32;7229:48;;7302:2;7292:8;7289:16;7286:36;;;7318:1;7315;7308:12;7286:36;;7341:52;7385:7;7374:8;7363:9;7359:24;7341:52;:::i;:::-;7331:62;;;7443:2;7432:9;7428:18;7415:32;7456:31;7481:5;7456:31;:::i;:::-;7506:5;-1:-1:-1;7563:2:21;7548:18;;7535:32;7576:33;7535:32;7576:33;:::i;:::-;7628:7;-1:-1:-1;7687:3:21;7672:19;;7659:33;7701;7659;7701;:::i;:::-;7753:7;7743:17;;;7807:3;7796:9;7792:19;7779:33;7769:43;;6787:1031;;;;;;;;:::o;8533:273::-;8601:6;8654:2;8642:9;8633:7;8629:23;8625:32;8622:52;;;8670:1;8667;8660:12;8622:52;8702:9;8696:16;8752:4;8745:5;8741:16;8734:5;8731:27;8721:55;;8772:1;8769;8762:12;8811:184;8881:6;8934:2;8922:9;8913:7;8909:23;8905:32;8902:52;;;8950:1;8947;8940:12;8902:52;-1:-1:-1;8973:16:21;;8811:184;-1:-1:-1;8811:184:21:o;9000:::-;-1:-1:-1;;;9049:1:21;9042:88;9149:4;9146:1;9139:15;9173:4;9170:1;9163:15;9189:151;9279:4;9272:12;;;9258;;;9254:31;;9297:14;;9294:40;;;9314:18;;:::i;9345:476::-;9434:1;9471:5;9434:1;9485:330;9506:7;9496:8;9493:21;9485:330;;;9625:4;-1:-1:-1;;9553:77:21;9547:4;9544:87;9541:113;;;9634:18;;:::i;:::-;9684:7;9674:8;9670:22;9667:55;;;9704:16;;;;9667:55;9783:22;;;;9743:15;;;;9485:330;;;9489:3;9345:476;;;;;:::o;9826:866::-;9875:5;9905:8;9895:80;;-1:-1:-1;9946:1:21;9960:5;;9895:80;9994:4;9984:76;;-1:-1:-1;10031:1:21;10045:5;;9984:76;10076:4;10094:1;10089:59;;;;10162:1;10157:130;;;;10069:218;;10089:59;10119:1;10110:10;;10133:5;;;10157:130;10194:3;10184:8;10181:17;10178:43;;;10201:18;;:::i;:::-;-1:-1:-1;;10257:1:21;10243:16;;10272:5;;10069:218;;10371:2;10361:8;10358:16;10352:3;10346:4;10343:13;10339:36;10333:2;10323:8;10320:16;10315:2;10309:4;10306:12;10302:35;10299:77;10296:159;;;-1:-1:-1;10408:19:21;;;10440:5;;10296:159;10487:34;10512:8;10506:4;10487:34;:::i;:::-;10617:6;-1:-1:-1;;10545:79:21;10536:7;10533:92;10530:118;;;10628:18;;:::i;:::-;10666:20;;9826:866;-1:-1:-1;;;9826:866:21:o;10697:140::-;10755:5;10784:47;10825:4;10815:8;10811:19;10805:4;10784:47;:::i;10842:168::-;10915:9;;;10946;;10963:15;;;10957:22;;10943:37;10933:71;;10984:18;;:::i;11015:274::-;11055:1;11081;11071:189;;-1:-1:-1;;;11113:1:21;11106:88;11217:4;11214:1;11207:15;11245:4;11242:1;11235:15;11071:189;-1:-1:-1;11274:9:21;;11015:274::o;11294:128::-;11361:9;;;11382:11;;;11379:37;;;11396:18;;:::i;11729:245::-;11796:6;11849:2;11837:9;11828:7;11824:23;11820:32;11817:52;;;11865:1;11862;11855:12;11817:52;11897:9;11891:16;11916:28;11938:5;11916:28;:::i;11979:251::-;12049:6;12102:2;12090:9;12081:7;12077:23;12073:32;12070:52;;;12118:1;12115;12108:12;12070:52;12150:9;12144:16;12169:31;12194:5;12169:31;:::i;12235:437::-;12314:1;12310:12;;;;12357;;;12378:61;;12432:4;12424:6;12420:17;12410:27;;12378:61;12485:2;12477:6;12474:14;12454:18;12451:38;12448:218;;-1:-1:-1;;;12519:1:21;12512:88;12623:4;12620:1;12613:15;12651:4;12648:1;12641:15;12448:218;;12235:437;;;:::o;13080:125::-;13145:9;;;13166:10;;;13163:36;;;13179:18;;:::i;16460:518::-;16562:2;16557:3;16554:11;16551:421;;;16598:5;16595:1;16588:16;16642:4;16639:1;16629:18;16712:2;16700:10;16696:19;16693:1;16689:27;16683:4;16679:38;16748:4;16736:10;16733:20;16730:47;;;-1:-1:-1;16771:4:21;16730:47;16826:2;16821:3;16817:12;16814:1;16810:20;16804:4;16800:31;16790:41;;16881:81;16899:2;16892:5;16889:13;16881:81;;;16958:1;16944:16;;16925:1;16914:13;16881:81;;17214:1464;17340:3;17334:10;17367:18;17359:6;17356:30;17353:56;;;17389:18;;:::i;:::-;17418:97;17508:6;17468:38;17500:4;17494:11;17468:38;:::i;:::-;17462:4;17418:97;:::i;:::-;17570:4;;17627:2;17616:14;;17644:1;17639:782;;;;18465:1;18482:6;18479:89;;;-1:-1:-1;18534:19:21;;;18528:26;18479:89;-1:-1:-1;;17111:1:21;17107:11;;;17103:84;17099:89;17089:100;17195:1;17191:11;;;17086:117;18581:81;;17609:1063;;17639:782;16407:1;16400:14;;;16444:4;16431:18;;-1:-1:-1;;17675:79:21;;;17852:236;17866:7;17863:1;17860:14;17852:236;;;17955:19;;;17949:26;17934:42;;18047:27;;;;18015:1;18003:14;;;;17882:19;;17852:236;;;17856:3;18116:6;18107:7;18104:19;18101:261;;;18177:19;;;18171:26;-1:-1:-1;;18260:1:21;18256:14;;;18272:3;18252:24;18248:97;18244:102;18229:118;18214:134;;18101:261;;;18408:1;18399:6;18396:1;18392:14;18388:22;18382:4;18375:36;17609:1063;;;;;17214:1464;;:::o;18683:301::-;18812:3;18850:6;18844:13;18896:6;18889:4;18881:6;18877:17;18872:3;18866:37;18958:1;18922:16;;18947:13;;;-1:-1:-1;18922:16:21;18683:301;-1:-1:-1;18683:301:21:o"},"gasEstimates":{"creation":{"codeDepositCost":"2915800","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"24809","balanceOf(address)":"2595","baseAsset()":"2403","canSystemDeposit()":"infinite","decimals()":"266","deposit(uint256,address)":"infinite","executors(address)":"2634","getAmountToSwap()":"infinite","initialize(string,string,address,address,address,uint256)":"infinite","lastDeposit()":"2406","lastInvestedBlock()":"2383","maxPerSwap()":"2383","name()":"infinite","owner()":"2398","pause()":"infinite","paused()":"2371","proxiableUUID()":"infinite","quoteAsset()":"2446","registry()":"2430","reinitialize(string,string,address,address,address,uint256,uint64)":"infinite","reinvestDuration()":"2384","renounceOwnership()":"infinite","setExecutor(address,bool)":"infinite","swapDuration()":"2361","symbol()":"infinite","systemDeposit()":"infinite","totalSupply()":"2393","totalValuation()":"infinite","transfer(address,uint256)":"51283","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"infinite","unitPrice()":"infinite","unpause()":"infinite","upgradeToAndCall(address,bytes)":"infinite","withdraw(uint256,address)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite","_haircut(uint256)":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","baseAsset()":"cdf456e1","canSystemDeposit()":"f267d91b","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","executors(address)":"9ac2a011","getAmountToSwap()":"d9d47d69","initialize(string,string,address,address,address,uint256)":"edf3e29e","lastDeposit()":"36b77107","lastInvestedBlock()":"bc4ba731","maxPerSwap()":"db48a5e3","name()":"06fdde03","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","proxiableUUID()":"52d1902d","quoteAsset()":"fdf262b7","registry()":"7b103999","reinitialize(string,string,address,address,address,uint256,uint64)":"c80b0baf","reinvestDuration()":"4fe84c42","renounceOwnership()":"715018a6","setExecutor(address,bool)":"1e1bff3f","swapDuration()":"b3404efd","symbol()":"95d89b41","systemDeposit()":"d53419a3","totalSupply()":"18160ddd","totalValuation()":"295b9300","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unitPrice()":"e73faa2d","unpause()":"3f4ba83a","upgradeToAndCall(address,bytes)":"4f1ef286","withdraw(uint256,address)":"00f714ce"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"ExecuteTrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canSystemDeposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"executors\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAmountToSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_baseAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_registryAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_reinvestDuration\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastInvestedBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPerSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_baseAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_registryAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_reinvestDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reinvestDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allow\",\"type\":\"bool\"}],\"name\":\"setExecutor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"deposit(uint256,address)\":{\"details\":\"Deposits assetA into the pool.\",\"params\":{\"amount\":\"The amount of assetA to deposit.\",\"to\":\"The address to receive pool tokens.\"}},\"initialize(string,string,address,address,address,uint256)\":{\"details\":\"Initializes the BaluniV1DCA contract.\",\"params\":{\"_baseAsset\":\"The address of the base asset.\",\"_name\":\"The name of the token.\",\"_quoteAsset\":\"The address of the quote asset.\",\"_registryAddress\":\"The address of the registry contract.\",\"_reinvestDuration\":\"The duration between reinvestments.\",\"_symbol\":\"The symbol of the token.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"pause pool, restricting certain operations\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"unpause pool, enabling certain operations\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"withdraw(uint256,address)\":{\"details\":\"Withdraws assetA and assetB from the pool.\",\"params\":{\"shares\":\"The amount of pool tokens to redeem.\",\"to\":\"The address to receive assetA and assetB.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vaults/BaluniV1DCAVault.sol\":\"BaluniV1DCAVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {ContextUpgradeable} from \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {IERC20Errors} from \\\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\\n    struct ERC20Storage {\\n        mapping(address account => uint256) _balances;\\n\\n        mapping(address account => mapping(address spender => uint256)) _allowances;\\n\\n        uint256 _totalSupply;\\n\\n        string _name;\\n        string _symbol;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC20\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\\n\\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\\n        assembly {\\n            $.slot := ERC20StorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            $._totalSupply += value;\\n        } else {\\n            uint256 fromBalance = $._balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                $._balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                $._totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                $._balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        $._allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\\n    struct PausableStorage {\\n        bool _paused;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Pausable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\\n\\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\\n        assembly {\\n            $.slot := PausableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        PausableStorage storage $ = _getPausableStorage();\\n        $._paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        PausableStorage storage $ = _getPausableStorage();\\n        return $._paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        PausableStorage storage $ = _getPausableStorage();\\n        $._paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        PausableStorage storage $ = _getPausableStorage();\\n        $._paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\\n    struct ReentrancyGuardStorage {\\n        uint256 _status;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ReentrancyGuard\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\\n\\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\\n        assembly {\\n            $.slot := ReentrancyGuardStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if ($._status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        $._status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        return $._status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/interfaces/IBaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Oracle {\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\\r\\n\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation);\\r\\n}\\r\\n\",\"keccak256\":\"0x2bc62f7640b15a1772de630216f6fe6aa7a719cb6cf0255befdde19ec8de785a\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolRegistry(address _baluniPoolRegistry) external;\\r\\n\\r\\n    function setBaluniVaultRegistry(address _baluniPoolRegistry) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniVaultRegistry() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolRegistry() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x7e73b74ed81791ac27ab8e6f5877d7d6c969567be86125ee3ce2c77825487127\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Swapper.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Swapper {\\r\\n    function singleSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 amountOut);\\r\\n    function multiHopSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        address token2,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 amountOut);\\r\\n}\\r\\n\",\"keccak256\":\"0x8113df3342115499d21149fa3fe70412cb6bdbf79766870f929b3845e1d2a0fe\",\"license\":\"GNU AGPLv3\"},\"contracts/vaults/BaluniV1DCAVault.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol';\\r\\n\\r\\nimport '../interfaces/IBaluniV1Registry.sol';\\r\\nimport '../interfaces/IBaluniV1Swapper.sol';\\r\\nimport '../interfaces/IBaluniV1Oracle.sol';\\r\\n\\r\\ncontract BaluniV1DCAVault is\\r\\n    Initializable,\\r\\n    UUPSUpgradeable,\\r\\n    OwnableUpgradeable,\\r\\n    ERC20Upgradeable,\\r\\n    ReentrancyGuardUpgradeable,\\r\\n    PausableUpgradeable\\r\\n{\\r\\n    address public baseAsset;\\r\\n    address public quoteAsset;\\r\\n\\r\\n    IBaluniV1Registry private _registry;\\r\\n\\r\\n    uint256 public lastDeposit;\\r\\n    uint256 public lastInvestedBlock;\\r\\n    uint256 public maxPerSwap;\\r\\n    uint256 public swapDuration;\\r\\n    uint256 public reinvestDuration;\\r\\n\\r\\n    mapping(address => bool) public executors;\\r\\n\\r\\n    event ExecuteTrade(address indexed sender, uint256 amountIn, uint256 amountOut);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the BaluniV1DCA contract.\\r\\n     * @param _name The name of the token.\\r\\n     * @param _symbol The symbol of the token.\\r\\n     * @param _baseAsset The address of the base asset.\\r\\n     * @param _quoteAsset The address of the quote asset.\\r\\n     * @param _registryAddress The address of the registry contract.\\r\\n     * @param _reinvestDuration The duration between reinvestments.\\r\\n     */\\r\\n    function initialize(\\r\\n        string memory _name,\\r\\n        string memory _symbol,\\r\\n        address _baseAsset,\\r\\n        address _quoteAsset,\\r\\n        address _registryAddress,\\r\\n        uint256 _reinvestDuration\\r\\n    ) external initializer {\\r\\n        __Ownable_init(msg.sender);\\r\\n        __ERC20_init(_name, _symbol);\\r\\n        __UUPSUpgradeable_init();\\r\\n        __ReentrancyGuard_init();\\r\\n        __Pausable_init();\\r\\n\\r\\n        baseAsset = _baseAsset;\\r\\n        quoteAsset = _quoteAsset;\\r\\n        _registry = IBaluniV1Registry(_registryAddress);\\r\\n\\r\\n        swapDuration = 360 * _reinvestDuration;\\r\\n        reinvestDuration = _reinvestDuration;\\r\\n        lastInvestedBlock = block.number;\\r\\n        maxPerSwap = 10000 * 10 ** ERC20Upgradeable(_baseAsset).decimals();\\r\\n    }\\r\\n\\r\\n    function reinitialize(\\r\\n        string memory _name,\\r\\n        string memory _symbol,\\r\\n        address _baseAsset,\\r\\n        address _quoteAsset,\\r\\n        address _registryAddress,\\r\\n        uint256 _reinvestDuration,\\r\\n        uint64 _version\\r\\n    ) external reinitializer(_version) {\\r\\n        __Ownable_init(msg.sender);\\r\\n        __ERC20_init(_name, _symbol);\\r\\n        __UUPSUpgradeable_init();\\r\\n        __ReentrancyGuard_init();\\r\\n        __Pausable_init();\\r\\n\\r\\n        baseAsset = _baseAsset;\\r\\n        quoteAsset = _quoteAsset;\\r\\n        _registry = IBaluniV1Registry(_registryAddress);\\r\\n\\r\\n        swapDuration = 360 * _reinvestDuration;\\r\\n        reinvestDuration = _reinvestDuration;\\r\\n        lastInvestedBlock = block.number;\\r\\n        maxPerSwap = 10000 * 10 ** ERC20Upgradeable(_baseAsset).decimals();\\r\\n    }\\r\\n\\r\\n    modifier onlyExecutor() {\\r\\n        require(executors[msg.sender], 'executor: wut?');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to authorize an upgrade to a new implementation contract.\\r\\n     * @param newImplementation The address of the new implementation contract.\\r\\n     * @notice This function can only be called by the contract owner.\\r\\n     */\\r\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n    /**\\r\\n     * @dev Deposits assetA into the pool.\\r\\n     * @param amount The amount of assetA to deposit.\\r\\n     * @param to The address to receive pool tokens.\\r\\n     */\\r\\n    function deposit(uint256 amount, address to) external nonReentrant whenNotPaused {\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n        IERC20(baseAsset).transferFrom(msg.sender, address(this), amount);\\r\\n\\r\\n        address baluniRouter = _registry.getBaluniRouter();\\r\\n        address treasury = _registry.getTreasury();\\r\\n\\r\\n        uint hairCut = _haircut(amount);\\r\\n        uint hairCut2 = _haircut(hairCut);\\r\\n\\r\\n        IERC20(baseAsset).transfer(baluniRouter, hairCut - hairCut2);\\r\\n        IERC20(baseAsset).transfer(treasury, hairCut2);\\r\\n\\r\\n        uint256 amountAfter = amount - hairCut;\\r\\n        uint8 baseDecimal = IERC20Metadata(baseAsset).decimals();\\r\\n\\r\\n        // scale up amount\\r\\n        uint256 amountScaled = amountAfter * 10 ** (18 - baseDecimal);\\r\\n        _mint(to, amountScaled);\\r\\n\\r\\n        lastDeposit += amountAfter;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Withdraws assetA and assetB from the pool.\\r\\n     * @param shares The amount of pool tokens to redeem.\\r\\n     * @param to The address to receive assetA and assetB.\\r\\n     */\\r\\n    function withdraw(uint256 shares, address to) external nonReentrant whenNotPaused {\\r\\n        require(shares > 0, 'Shares must be greater than zero');\\r\\n        require(balanceOf(msg.sender) >= shares, 'Insufficient balance');\\r\\n\\r\\n        uint8 quoteDecimal = IERC20Metadata(quoteAsset).decimals();\\r\\n        uint256 quoteBalance = IERC20(quoteAsset).balanceOf(address(this));\\r\\n        uint256 baseBalance = IERC20(baseAsset).balanceOf(address(this));\\r\\n\\r\\n        // scale up totalDeposit and accumualteAssetB\\r\\n        quoteBalance *= 10 ** (18 - quoteDecimal);\\r\\n\\r\\n        uint256 withdrawAmountA = (shares * baseBalance) / totalSupply();\\r\\n        uint256 withdrawAmountB = (shares * quoteBalance) / totalSupply();\\r\\n\\r\\n        _burn(msg.sender, shares);\\r\\n\\r\\n        // scale down totalDeposit and accumualteAssetB\\r\\n        withdrawAmountB /= 10 ** (18 - quoteDecimal);\\r\\n\\r\\n        uint256 amountToSend = withdrawAmountA;\\r\\n\\r\\n        uint hairCut = _haircut(amountToSend);\\r\\n        IERC20(baseAsset).transfer(to, amountToSend - hairCut);\\r\\n\\r\\n        uint hairCut2 = _haircut(hairCut);\\r\\n        address baluniRouter = _registry.getBaluniRouter();\\r\\n        address treasury = _registry.getTreasury();\\r\\n        IERC20(baseAsset).transfer(baluniRouter, hairCut - hairCut2);\\r\\n        IERC20(baseAsset).transfer(treasury, hairCut2);\\r\\n\\r\\n        hairCut = _haircut(withdrawAmountB);\\r\\n        IERC20(quoteAsset).transfer(to, withdrawAmountB - hairCut);\\r\\n        hairCut2 = _haircut(hairCut);\\r\\n        IERC20(baseAsset).transfer(baluniRouter, hairCut - hairCut2);\\r\\n        IERC20(baseAsset).transfer(treasury, hairCut2);\\r\\n\\r\\n        lastDeposit -= amountToSend;\\r\\n    }\\r\\n\\r\\n    function systemDeposit() external onlyExecutor nonReentrant whenNotPaused {\\r\\n        require((block.number - lastInvestedBlock) > reinvestDuration, 'wait till next reinvest cycle');\\r\\n\\r\\n        uint amtToSwap = getAmountToSwap(); // return 1e18\\r\\n        require(amtToSwap > 0, 'Nothing to swap');\\r\\n\\r\\n        IBaluniV1Swapper swapper = IBaluniV1Swapper(_registry.getBaluniSwapper());\\r\\n        IERC20(baseAsset).approve(address(swapper), amtToSwap);\\r\\n\\r\\n        uint256 quoteReceived = swapper.singleSwap(baseAsset, quoteAsset, amtToSwap, address(this));\\r\\n        lastInvestedBlock = block.number;\\r\\n\\r\\n        emit ExecuteTrade(msg.sender, amtToSwap, quoteReceived);\\r\\n    }\\r\\n\\r\\n    function getAmountToSwap() public view returns (uint) {\\r\\n        uint baseTokenBal = IERC20(baseAsset).balanceOf(address(this));\\r\\n        uint blockDiff = block.number - lastInvestedBlock;\\r\\n        uint toSwapQty = (baseTokenBal * blockDiff) / swapDuration;\\r\\n        return toSwapQty > maxPerSwap ? maxPerSwap : toSwapQty;\\r\\n    }\\r\\n\\r\\n    function canSystemDeposit() public view returns (bool) {\\r\\n        uint amtToSwap = getAmountToSwap();\\r\\n        return ((block.number - lastInvestedBlock) > reinvestDuration) && (amtToSwap > 0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev pause pool, restricting certain operations\\r\\n     */\\r\\n    function pause() external onlyOwner {\\r\\n        _pause();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev unpause pool, enabling certain operations\\r\\n     */\\r\\n    function unpause() external onlyOwner {\\r\\n        _unpause();\\r\\n    }\\r\\n\\r\\n    function totalValuation() public view returns (uint256) {\\r\\n        IBaluniV1Oracle oracle = IBaluniV1Oracle(_registry.getBaluniOracle());\\r\\n        address USDC = _registry.getUSDC();\\r\\n        uint256 valuation = 0;\\r\\n\\r\\n        uint baseBalance = IERC20(baseAsset).balanceOf(address(this));\\r\\n        uint balanceQuote = IERC20(quoteAsset).balanceOf(address(this));\\r\\n\\r\\n        if (baseBalance == 0 && balanceQuote == 0) return 0;\\r\\n\\r\\n        if (baseAsset != USDC) valuation += oracle.convert(baseAsset, USDC, baseBalance);\\r\\n        valuation += oracle.convert(quoteAsset, baseAsset, balanceQuote);\\r\\n        valuation += baseBalance;\\r\\n\\r\\n        return valuation;\\r\\n    }\\r\\n\\r\\n    function unitPrice() external view returns (uint256) {\\r\\n        if (totalSupply() == 0) return 0;\\r\\n\\r\\n        address USDC = _registry.getUSDC();\\r\\n        uint8 decimals = IERC20Metadata(USDC).decimals();\\r\\n        uint256 factor = 10 ** (18 - decimals);\\r\\n        uint256 valuationScaledUp = totalValuation() * factor;\\r\\n        uint256 unitPriceScaled = (valuationScaledUp * 1e18) / totalSupply();\\r\\n        return unitPriceScaled;\\r\\n    }\\r\\n\\r\\n    function registry() external view returns (address) {\\r\\n        return address(_registry);\\r\\n    }\\r\\n\\r\\n    function setExecutor(address _wallet, bool _allow) external onlyOwner {\\r\\n        executors[_wallet] = _allow;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the fee amount based on the provided amount using the haircut formula.\\r\\n     * @param amount The amount to calculate the fee for.\\r\\n     * @return The fee amount.\\r\\n     */\\r\\n    function _haircut(uint256 amount) internal view returns (uint256) {\\r\\n        uint256 _BPS_FEE = _registry.getBPS_FEE();\\r\\n        uint256 _BPS_BASE = _registry.getBPS_BASE();\\r\\n        return (amount * _BPS_FEE) / _BPS_BASE;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1433d75629c7e11a1d715fe20fb5b2398a183319d5625f933ee42b34de5fc9ff\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3286,"contract":"contracts/vaults/BaluniV1DCAVault.sol:BaluniV1DCAVault","label":"baseAsset","offset":0,"slot":"0","type":"t_address"},{"astId":3288,"contract":"contracts/vaults/BaluniV1DCAVault.sol:BaluniV1DCAVault","label":"quoteAsset","offset":0,"slot":"1","type":"t_address"},{"astId":3291,"contract":"contracts/vaults/BaluniV1DCAVault.sol:BaluniV1DCAVault","label":"_registry","offset":0,"slot":"2","type":"t_contract(IBaluniV1Registry)2787"},{"astId":3293,"contract":"contracts/vaults/BaluniV1DCAVault.sol:BaluniV1DCAVault","label":"lastDeposit","offset":0,"slot":"3","type":"t_uint256"},{"astId":3295,"contract":"contracts/vaults/BaluniV1DCAVault.sol:BaluniV1DCAVault","label":"lastInvestedBlock","offset":0,"slot":"4","type":"t_uint256"},{"astId":3297,"contract":"contracts/vaults/BaluniV1DCAVault.sol:BaluniV1DCAVault","label":"maxPerSwap","offset":0,"slot":"5","type":"t_uint256"},{"astId":3299,"contract":"contracts/vaults/BaluniV1DCAVault.sol:BaluniV1DCAVault","label":"swapDuration","offset":0,"slot":"6","type":"t_uint256"},{"astId":3301,"contract":"contracts/vaults/BaluniV1DCAVault.sol:BaluniV1DCAVault","label":"reinvestDuration","offset":0,"slot":"7","type":"t_uint256"},{"astId":3305,"contract":"contracts/vaults/BaluniV1DCAVault.sol:BaluniV1DCAVault","label":"executors","offset":0,"slot":"8","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IBaluniV1Registry)2787":{"encoding":"inplace","label":"contract IBaluniV1Registry","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}