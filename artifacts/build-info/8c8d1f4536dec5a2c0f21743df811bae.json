{"id":"8c8d1f4536dec5a2c0f21743df811bae","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/BaluniV1Pool.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\n\r\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\n\r\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\r\nimport './interfaces/IBaluniV1Registry.sol';\r\nimport './interfaces/IBaluniV1Rebalancer.sol';\r\nimport './interfaces/IBaluniV1Oracle.sol';\r\n\r\ncontract BaluniV1Pool is\r\n    Initializable,\r\n    UUPSUpgradeable,\r\n    OwnableUpgradeable,\r\n    ERC20Upgradeable,\r\n    ReentrancyGuardUpgradeable\r\n{\r\n    AssetInfo[] public assetInfos;\r\n\r\n    uint256 public trigger;\r\n    uint256 public ONE;\r\n    address public baseAsset;\r\n    uint256 private scalingFactor;\r\n\r\n    IBaluniV1Registry public registry;\r\n\r\n    mapping(address => uint256) public reserves;\r\n\r\n    struct AssetInfo {\r\n        address asset;\r\n        uint256 weight;\r\n        uint256 slippage; // Nuovo parametro per lo slippage\r\n    }\r\n\r\n    event RebalancePerformed(address indexed by, address[] assets);\r\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\r\n    event Burn(address indexed user, uint256 sharesBurned);\r\n    event Mint(address indexed to, uint256 sharesMinted);\r\n    event Swap(\r\n        address indexed user,\r\n        address indexed fromToken,\r\n        address indexed toToken,\r\n        uint256 amountIn,\r\n        uint256 amountOut\r\n    );\r\n\r\n    function initialize(\r\n        address[] memory _assets,\r\n        uint256[] memory _weights,\r\n        uint256 _trigger,\r\n        address _registry\r\n    ) external initializer {\r\n        __Ownable_init(msg.sender);\r\n        __ERC20_init('Baluni LP', 'BALUNI-LP');\r\n        registry = IBaluniV1Registry(_registry);\r\n        ONE = 1e18;\r\n        bool result = initializeAssets(_assets, _weights);\r\n        require(result, 'Initialization failed');\r\n\r\n        trigger = _trigger;\r\n        baseAsset = registry.getUSDC();\r\n        scalingFactor = 10 ** (18 - 6);\r\n        require(baseAsset != address(0), 'Invalid base asset address');\r\n\r\n        uint256 totalWeight = 0;\r\n\r\n        for (uint256 i = 0; i < _weights.length; i++) {\r\n            totalWeight += _weights[i];\r\n        }\r\n\r\n        require(totalWeight == 10000, 'Invalid weights');\r\n    }\r\n\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n    modifier onlyPeriphery() {\r\n        address periphery = registry.getBaluniPoolPeriphery();\r\n        require(msg.sender == periphery, 'Only Periphery');\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Initializes the assets and their weights for the pool.\r\n     * @param _assets The array of asset addresses.\r\n     * @param _weights The array of weights corresponding to each asset.\r\n     */\r\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal returns (bool) {\r\n        address rebalancer = registry.getBaluniRebalancer();\r\n\r\n        require(registry.getBaluniRebalancer() != address(0), 'Invalid rebalancer address');\r\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\r\n\r\n        for (uint256 i = 0; i < _assets.length; i++) {\r\n            require(_assets[i] != address(0), 'Invalid asset address');\r\n            require(_weights[i] > 0, 'Invalid weight');\r\n\r\n            assetInfos.push(\r\n                AssetInfo({\r\n                    asset: _assets[i],\r\n                    weight: _weights[i],\r\n                    slippage: 0 // Imposta slippage iniziale a 1%\r\n                })\r\n            );\r\n\r\n            IERC20 asset = IERC20(_assets[i]);\r\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\r\n                asset.approve(address(rebalancer), type(uint256).max);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\r\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\r\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\r\n     * @param receiver The address to receive the minted liquidity tokens.\r\n     */\r\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\r\n        require(isRebalanceNeeded(), 'Rebalance not needed');\r\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation(); // 6dec\r\n\r\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations); // 6dec\r\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\r\n\r\n        totalAddedLiquidity *= scalingFactor;\r\n\r\n        uint256[] memory amounts = new uint256[](assetInfos.length);\r\n\r\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\r\n            if (amountsToAdd[i] > 0) {\r\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\r\n            }\r\n        }\r\n\r\n        _mint(receiver, totalAddedLiquidity);\r\n\r\n        // Aggiorna lo slippage in base ai nuovi pesi\r\n        updateSlippage();\r\n\r\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\r\n\r\n        return amounts;\r\n    }\r\n\r\n    /**\r\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\r\n     *\r\n     * Requirements:\r\n     * - `fromToken` and `toToken` must be different tokens.\r\n     * - `amount` must be greater than zero.\r\n     * - Sufficient liquidity of `toToken` must be available in the contract.\r\n     *\r\n     * Emits a `Swap` event with the details of the swap.\r\n     *\r\n     * Updates the reserves after the swap.\r\n     *\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of `fromToken` to swap.\r\n     * @param receiver The address to receive the swapped tokens.\r\n     * @return amountOut The amount of `toToken` received after the swap.\r\n     */\r\n    function swap(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external nonReentrant returns (uint256 amountOut) {\r\n        uint256 _BPS_FEE = registry.getBPS_FEE();\r\n        require(fromToken != toToken, 'Cannot swap the same token');\r\n        require(amount > 0, 'Amount must be greater than zero');\r\n        reserves[fromToken] += amount;\r\n\r\n        uint256 receivedAmount = getAmountOutWithSlippage(fromToken, toToken, amount);\r\n        require(getAssetReserve(toToken) >= receivedAmount, 'Insufficient Liquidity');\r\n        reserves[toToken] += receivedAmount;\r\n\r\n        uint256 fee = (receivedAmount * _BPS_FEE) / 10000;\r\n        amountOut = receivedAmount - fee;\r\n\r\n        require(amountOut > 0, 'Amount to send must be greater than 0');\r\n\r\n        // Aggiorna lo slippage in base ai pesi degli asset coinvolti nello swap\r\n        updateSlippage();\r\n\r\n        emit Swap(receiver, fromToken, toToken, amount, amountOut);\r\n\r\n        return amountOut;\r\n    }\r\n    /**\r\n     * @dev Calcola l'importo effettivo di `toToken` ricevuto tenendo conto dello slippage.\r\n     * @param fromToken The address of the token being swapped from.\r\n     * @param toToken The address of the token being swapped to.\r\n     * @param amount The amount of `fromToken` being swapped.\r\n     * @return The amount of `toToken` received after applying slippage.\r\n     */\r\n    function getAmountOutWithSlippage(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) public view returns (uint256) {\r\n        uint256 amountOut = getAmountOut(fromToken, toToken, amount);\r\n\r\n        uint256 slippageFrom = getSlippage(fromToken);\r\n        uint256 slippageTo = getSlippage(toToken);\r\n\r\n        uint256 fromTokenWeight = getTokenWeight(fromToken);\r\n        uint256 toTokenWeight = getTokenWeight(toToken);\r\n\r\n        // Calcola slippage\r\n        uint256 slippageFromAmount = ((amountOut * slippageFrom)) / 10000;\r\n        uint256 slippageToAmount = (amountOut * slippageTo) / 10000;\r\n\r\n        // Se fromToken è sovrappeso, sottrai slippageFromAmount da amountOut\r\n        if (fromTokenWeight > getDeviationForToken(fromToken)) {\r\n            amountOut = amountOut - slippageFromAmount;\r\n        } else {\r\n            // Altrimenti, aggiungi slippageFromAmount ad amountOut\r\n            amountOut = amountOut + slippageFromAmount;\r\n        }\r\n\r\n        // Se toToken è sottopeso, aggiungi slippageToAmount ad amountOut\r\n        if (toTokenWeight < getDeviationForToken(toToken)) {\r\n            amountOut = amountOut + slippageToAmount;\r\n        } else {\r\n            // Altrimenti, sottrai slippageToAmount da amountOut\r\n            amountOut = amountOut - slippageToAmount;\r\n        }\r\n\r\n        return amountOut;\r\n    }\r\n\r\n    /**\r\n     * @dev Restituisce lo slippage attuale per un dato token.\r\n     * @param token The address of the token.\r\n     * @return Lo slippage attuale per il token.\r\n     */\r\n    function getSlippage(address token) public view returns (uint256) {\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            if (assetInfos[i].asset == token) {\r\n                return assetInfos[i].slippage;\r\n            }\r\n        }\r\n        return 0; // Default slippage se non trovato\r\n    }\r\n\r\n    /**\r\n     * @dev Funzione per aggiornare lo slippage in base ai pesi degli asset.\r\n     */\r\n    function updateSlippage() internal {\r\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\r\n        uint256 _BPS_FEE = registry.getBPS_FEE();\r\n\r\n        uint256 sdf = 100; // scale down factor applied to the deviation\r\n        uint256 slippageLimit = 300;\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            uint256 previousSlippage = assetInfos[i].slippage;\r\n            if (deviations[i] <= sdf) {\r\n                // 1%\r\n                assetInfos[i].slippage = sdf;\r\n                continue;\r\n            }\r\n            if (directions[i]) {\r\n                assetInfos[i].slippage += deviations[i] / sdf;\r\n\r\n                require(assetInfos[i].slippage >= previousSlippage, 'Overflow incrementing slippage');\r\n            } else {\r\n                if (assetInfos[i].slippage > deviations[i]) {\r\n                    assetInfos[i].slippage -= deviations[i] / sdf;\r\n\r\n                    require(assetInfos[i].slippage <= previousSlippage, 'Underflow decrementing slippage');\r\n                } else {\r\n                    //assetInfos[i].slippage = 0;\r\n                    assetInfos[i].slippage += deviations[i] / sdf;\r\n                }\r\n            }\r\n\r\n            if (assetInfos[i].slippage > slippageLimit) {\r\n                // 5.3%\r\n                assetInfos[i].slippage = slippageLimit;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getTokenWeight(address token) public view returns (uint256) {\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            if (assetInfos[i].asset == token) {\r\n                return assetInfos[i].weight;\r\n            }\r\n        }\r\n        return 0; // Default weight se non trovato\r\n    }\r\n\r\n    function getDeviationForToken(address token) public view returns (uint256) {\r\n        (, uint256[] memory deviations) = getDeviation();\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            if (assetInfos[i].asset == token) {\r\n                return deviations[i];\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function getSlippages() external view returns (uint256[] memory) {\r\n        uint256[] memory slippages = new uint256[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            slippages[i] = assetInfos[i].slippage;\r\n        }\r\n        return slippages;\r\n    }\r\n\r\n    /**\r\n     * @dev Mints new tokens and adds them to the specified address.\r\n     * @param to The address to which the new tokens will be minted.\r\n     * @return The amount of tokens minted.\r\n     */\r\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\r\n        uint256 totalSupply = totalSupply();\r\n        uint256 totalValue = 0;\r\n        uint256[] memory _reserves = getReserves();\r\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\r\n        require(assetInfos.length > 0, 'No assets');\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            address asset = assetInfos[i].asset;\r\n            uint256 valuation;\r\n            if (asset == baseAsset) {\r\n                valuation = amounts[i];\r\n                continue;\r\n            }\r\n            valuation = _convertTokenToBase(asset, amounts[i]);\r\n            totalValue += valuation;\r\n        }\r\n\r\n        require(totalValue > 0, 'Total value must be greater than 0');\r\n\r\n        uint256 toMint;\r\n\r\n        if (totalSupply == 0) {\r\n            toMint = totalValue * scalingFactor;\r\n        } else {\r\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\r\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\r\n            toMint = ((totalValue * scalingFactor) * totalSupply) / (totalLiquidity * scalingFactor);\r\n        }\r\n        require(toMint != 0, 'Mint qty is 0');\r\n\r\n        _mint(to, toMint);\r\n\r\n        updateSlippage();\r\n\r\n        emit Mint(to, toMint);\r\n\r\n        return toMint;\r\n    }\r\n\r\n    /**\r\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\r\n     * @param to The address to transfer the underlying assets to.\r\n     * @notice This function can only be called by the periphery contract.\r\n     * @notice The pool tokens must have a balance greater than 0.\r\n     * @notice The total supply of pool tokens must be greater than 0.\r\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\r\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\r\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\r\n     * @notice If any transfer fails, the function reverts the entire operation.\r\n     * @notice After the transfers, the function updates the reserves of the pool.\r\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\r\n     */\r\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\r\n        uint256 _BPS_FEE = registry.getBPS_FEE();\r\n        address periphery = registry.getBaluniPoolPeriphery();\r\n\r\n        uint256 share = balanceOf(address(this));\r\n        require(share > 0, 'Share must be greater than 0');\r\n\r\n        uint256 totalSupply = totalSupply();\r\n        require(totalSupply > 0, 'No liquidity');\r\n\r\n        uint256[] memory amounts = new uint256[](assetInfos.length);\r\n        uint256 fee = (share * _BPS_FEE) / 10000;\r\n        uint256 shareAfterFee = share - fee;\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\r\n                address(this),\r\n                assetInfos[i].asset\r\n            );\r\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\r\n        }\r\n\r\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient BALUNI liquidity');\r\n\r\n        address treasury = registry.getTreasury();\r\n        bool feeTransferSuccess = IERC20(address(this)).transfer(treasury, fee);\r\n        require(feeTransferSuccess, 'Fee transfer failed');\r\n\r\n        _burn(address(this), shareAfterFee);\r\n\r\n        updateSlippage();\r\n\r\n        emit Burn(to, shareAfterFee);\r\n\r\n        return amounts;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\r\n     * @param fromToken The address of the token being swapped from.\r\n     * @param toToken The address of the token being swapped to.\r\n     * @param amount The amount of `fromToken` being swapped.\r\n     * @return The amount of `toToken` that will be received.\r\n     */\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\r\n        IBaluniV1Oracle baluniOracle = IBaluniV1Oracle(registry.getBaluniOracle());\r\n        require(registry.getBaluniOracle() != address(0), 'Invalid oracle address');\r\n        uint256 amountOut = baluniOracle.convert(fromToken, toToken, amount);\r\n        return amountOut;\r\n    }\r\n\r\n    /**\r\n     * @dev Performs rebalance\r\n     */\r\n    function performRebalanceIfNeeded()\r\n        external\r\n        onlyPeriphery\r\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove)\r\n    {\r\n        require(isRebalanceNeeded(), 'Rebalance not needed');\r\n        return _performRebalanceIfNeeded();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\r\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\r\n     */\r\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\r\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\r\n        uint256 numAssets = assetInfos.length;\r\n\r\n        directions = new bool[](numAssets);\r\n        deviations = new uint256[](numAssets);\r\n\r\n        for (uint256 i = 0; i < numAssets; i++) {\r\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\r\n            uint256 targetWeight = assetInfos[i].weight;\r\n\r\n            if (currentWeight > targetWeight) {\r\n                deviations[i] = currentWeight - targetWeight;\r\n                directions[i] = true;\r\n            } else {\r\n                deviations[i] = targetWeight - currentWeight;\r\n                directions[i] = false;\r\n            }\r\n        }\r\n\r\n        return (directions, deviations);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the liquidity of a specific asset in the pool.\r\n     * @param assetIndex The index of the asset.\r\n     * @return The liquidity of the asset.\r\n     */\r\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\r\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\r\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\r\n        return usdValuations[assetIndex];\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\r\n     * @return totalVal The total valuation of the pool.\r\n     * @return valuations An array of individual valuations.\r\n     */\r\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\r\n        (totalVal, valuations) = _computeTotalValuation();\r\n        return (totalVal, valuations);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total liquidity of the pool.\r\n     * @return The total liquidity of the pool.\r\n     */\r\n    function liquidity() external view returns (uint256) {\r\n        (uint256 totalVal, ) = _computeTotalValuation();\r\n        return totalVal;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the unit price of the pool.\r\n     * @return The unit price of the pool.\r\n     */\r\n    function unitPrice() external view returns (uint256) {\r\n        uint256 baseDecimal = IERC20Metadata(baseAsset).decimals();\r\n        uint256 factor = 10 ** (18 - baseDecimal);\r\n        (uint256 totalVal, ) = _computeTotalValuation();\r\n        uint256 totalSupply = totalSupply();\r\n        if (totalSupply == 0) {\r\n            return 0;\r\n        }\r\n        return (((totalVal * factor) / totalSupply) * ONE);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an array of reserves for each asset in the pool.\r\n     * @return An array of reserves.\r\n     */\r\n    function getReserves() public view returns (uint256[] memory) {\r\n        address periphery = registry.getBaluniPoolPeriphery();\r\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the reserve amount of the specified asset.\r\n     * @param asset The address of the asset.\r\n     * @return The reserve amount of the asset.\r\n     */\r\n    function getAssetReserve(address asset) public view returns (uint256) {\r\n        address periphery = registry.getBaluniPoolPeriphery();\r\n        return IBaluniV1PoolPeriphery(periphery).getAssetReserve(address(this), asset);\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the list of assets in the pool.\r\n     * @return An array of addresses representing the assets.\r\n     */\r\n    function getAssets() external view returns (address[] memory) {\r\n        address[] memory assets = new address[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            assets[i] = assetInfos[i].asset;\r\n        }\r\n        return assets;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the list of weights associated with the assets in the pool.\r\n     * @return An array of uint256 values representing the weights.\r\n     */\r\n    function getWeights() external view returns (uint256[] memory) {\r\n        uint256[] memory weights = new uint256[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            weights[i] = assetInfos[i].weight;\r\n        }\r\n        return weights;\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the total valuation of the assets in the pool.\r\n     * @return totalValuation The total valuation of the assets.\r\n     * @return valuations An array of valuations for each asset in the pool.\r\n     */\r\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\r\n        uint256 numAssets = assetInfos.length;\r\n        valuations = new uint256[](numAssets);\r\n        for (uint256 i = 0; i < numAssets; i++) {\r\n            address asset = assetInfos[i].asset;\r\n            uint256 assetReserve = getAssetReserve(address(asset));\r\n\r\n            if ((address(asset) == baseAsset)) {\r\n                valuations[i] = assetReserve;\r\n            } else {\r\n                uint256 valuation = _convertTokenToBase(address(asset), assetReserve);\r\n                valuations[i] = valuation;\r\n            }\r\n            totalValuation += valuations[i];\r\n        }\r\n        return (totalValuation, valuations);\r\n    }\r\n\r\n    /**\r\n     * @dev Performs rebalance if needed.\r\n     * This function retrieves the assets and weights from the `assetInfos` array,\r\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\r\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\r\n     * @notice This function should only be called internally.\r\n     */\r\n    function _performRebalanceIfNeeded() internal returns (uint256[] memory, uint256[] memory) {\r\n        address periphery = registry.getBaluniPoolPeriphery();\r\n        address rebalancer = registry.getBaluniRebalancer();\r\n\r\n        address[] memory assets = new address[](assetInfos.length);\r\n        uint256[] memory weights = new uint256[](assetInfos.length);\r\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\r\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\r\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\r\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            assets[i] = assetInfos[i].asset;\r\n            weights[i] = assetInfos[i].weight;\r\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\r\n        }\r\n\r\n        uint256[] memory balances = getReserves();\r\n\r\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\r\n\r\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\r\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\r\n            } else {\r\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\r\n            }\r\n        }\r\n\r\n        emit RebalancePerformed(msg.sender, assets);\r\n\r\n        return (amountsToAdd, amountsToRemove);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the total added liquidity based on the amounts to add.\r\n     * @param amountsToAdd An array of amounts to add for each asset.\r\n     * @return totalAddedLiquidity The total added liquidity.\r\n     */\r\n    function _calculateTotalAddedLiquidity(\r\n        uint256[] memory amountsToAdd\r\n    ) internal view returns (uint256 totalAddedLiquidity) {\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            totalAddedLiquidity += amountsToAdd[i];\r\n        }\r\n        return totalAddedLiquidity;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\r\n     * @param totalValuation The total valuation of the pool.\r\n     * @param valuations An array of current valuations for each asset.\r\n     * @return amountsToAdd An array of amounts to add to each asset.\r\n     */\r\n    function _calculateAmountsToAdd(\r\n        uint256 totalValuation,\r\n        uint256[] memory valuations\r\n    ) internal view returns (uint256[] memory amountsToAdd) {\r\n        amountsToAdd = new uint256[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\r\n            if (valuations[i] < targetValuation) {\r\n                amountsToAdd[i] = targetValuation - valuations[i];\r\n            }\r\n        }\r\n\r\n        return amountsToAdd;\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\r\n     * @param index The index of the asset in the assetInfos array.\r\n     * @param amountToAdd The amount of native tokens to add as liquidity.\r\n     */\r\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\r\n        if (assetInfos[index].asset == baseAsset) return amountToAdd;\r\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\r\n        require(tokenAmount > 0, 'Invalid token amount to add');\r\n        return tokenAmount;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified amount of native token to the corresponding token amount.\r\n     * @param toToken The address of the native token to convert from.\r\n     * @param amount The amount of native token to convert.\r\n     * @return The corresponding token amount.\r\n     */\r\n    function _convertBaseToToken(address toToken, uint256 amount) internal view returns (uint256) {\r\n        return getAmountOut(baseAsset, toToken, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified token to the native token using the rebalancer contract.\r\n     * @param fromToken The address of the token to convert from.\r\n     * @param amount The amount of tokens to convert.\r\n     * @return tokenAmount The converted amount of tokens.\r\n     */\r\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 tokenAmount) {\r\n        return getAmountOut(fromToken, baseAsset, amount);\r\n    }\r\n\r\n    // return true if one of the deviation overcome the trigger\r\n    /**\r\n     * @dev Checks if rebalancing is needed for the pool.\r\n     * @return A boolean value indicating whether rebalancing is needed or not.\r\n     */\r\n    function isRebalanceNeeded() public view returns (bool) {\r\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\r\n        for (uint256 i = 0; i < deviations.length; i++) {\r\n            if (directions[i] && deviations[i] > trigger) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n"},"contracts/BaluniV1PoolRegistry.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\nimport './interfaces/IBaluniV1Registry.sol';\r\nimport './interfaces/IBaluniV1Pool.sol';\r\n\r\ncontract BaluniV1PoolRegistry is Initializable, UUPSUpgradeable, OwnableUpgradeable {\r\n    address[] public allPools;\r\n\r\n    IBaluniV1Registry public registry;\r\n\r\n    mapping(address => mapping(address => address)) public getPool;\r\n\r\n    event PoolCreated(address indexed pool, address[] assets);\r\n\r\n    function initialize(address _register) public initializer {\r\n        __UUPSUpgradeable_init();\r\n        __Ownable_init(msg.sender);\r\n        registry = IBaluniV1Registry(_register);\r\n    }\r\n\r\n    function reinitialize(address _register, uint64 _version) public reinitializer(_version) {\r\n        registry = IBaluniV1Registry(_register);\r\n    }\r\n\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n    function addPool(address poolAddress) external onlyOwner {\r\n        require(poolAddress != address(0), 'BaluniV1PoolFactory: INVALID_POOL_ADDRESS');\r\n        allPools.push(poolAddress);\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves all the pools created by the factory.\r\n     * @return An array of pool addresses.\r\n     */\r\n    function getAllPools() external view returns (address[] memory) {\r\n        return allPools;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the number of pools created by the factory.\r\n     * @return The count of pools.\r\n     */\r\n    function getPoolsCount() external view returns (uint256) {\r\n        return allPools.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the assets of a specific pool.\r\n     * @param poolAddress The address of the pool.\r\n     * @return An array of asset addresses.\r\n     */\r\n    function getPoolAssets(address poolAddress) external view returns (address[] memory) {\r\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n        return pool.getAssets();\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the pool address based on the given assets.\r\n     * @param asset1 The address of the first asset.\r\n     * @param asset2 The address of the second asset.\r\n     * @return The address of the pool.\r\n     */\r\n    function getPoolByAssets(address asset1, address asset2) external view returns (address) {\r\n        return address(getPool[asset1][asset2]);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an array of pool addresses that contain the specified token.\r\n     * @param token The address of the token to search for.\r\n     * @return An array of pool addresses.\r\n     */\r\n    function getPoolsByAsset(address token) external view returns (address[] memory) {\r\n        address[] memory pools = new address[](allPools.length);\r\n        uint256 count = 0;\r\n\r\n        for (uint256 i = 0; i < allPools.length; i++) {\r\n            IBaluniV1Pool pool = IBaluniV1Pool(allPools[i]);\r\n            address[] memory assets = pool.getAssets();\r\n\r\n            for (uint256 j = 0; j < assets.length; j++) {\r\n                if (assets[j] == token) {\r\n                    pools[count] = address(pool);\r\n                    count++;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (count == pools.length) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        address[] memory result = new address[](count);\r\n        for (uint256 i = 0; i < count; i++) {\r\n            result[i] = pools[i];\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function poolExist(address _pool) external view returns (bool) {\r\n        for (uint256 i = 0; i < allPools.length; i++) {\r\n            if (allPools[i] == _pool) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n"},"contracts/interfaces/IBaluniV1Oracle.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Oracle {\r\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\r\n\r\n    function convertScaled(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) external view returns (uint256 valuation);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Pool.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\ninterface IBaluniV1Pool {\r\n    // Views\r\n    function rebalancer() external view returns (address);\r\n\r\n    function assets(uint256 index) external view returns (address);\r\n\r\n    function weights(uint256 index) external view returns (uint256);\r\n\r\n    function trigger() external view returns (uint256);\r\n\r\n    function ONE() external view returns (uint256);\r\n\r\n    function router() external view returns (address);\r\n\r\n    function getReserves() external view returns (uint256[] memory);\r\n\r\n    function getAssets() external view returns (address[] memory);\r\n\r\n    function getAssetReserve(address asset) external view returns (uint256);\r\n\r\n    function getWeights() external view returns (uint256[] memory);\r\n\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n\r\n    function performRebalanceIfNeeded()\r\n        external\r\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove);\r\n\r\n    function getDeviation() external view returns (bool[] memory directions, uint256[] memory deviations);\r\n\r\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256);\r\n\r\n    function liquidity() external view returns (uint256);\r\n\r\n    function unitPrice() external view returns (uint256);\r\n\r\n    function swap(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external returns (uint256 toSend);\r\n\r\n    function mint(address to, uint256[] memory amounts) external returns (uint256);\r\n\r\n    function burn(address to) external returns (uint256[] memory);\r\n\r\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations);\r\n\r\n    function rebalanceWeights(address receiver) external returns (uint256[] memory);\r\n\r\n    struct AssetInfo {\r\n        address asset;\r\n        uint256 weight;\r\n    }\r\n\r\n    function assetInfos(uint _index) external view returns (AssetInfo memory);\r\n\r\n    // Events\r\n    event RebalancePerformed(address indexed by, address[] assets);\r\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\r\n    event Burn(address indexed user, uint256 sharesBurned);\r\n    event Mint(address indexed to, uint256 sharesMinted);\r\n    event Swap(\r\n        address indexed user,\r\n        address indexed fromToken,\r\n        address indexed toToken,\r\n        uint256 amountIn,\r\n        uint256 amountOut\r\n    );\r\n}\r\n"},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\n/**\r\n * @title IBaluniV1PoolPeriphery\r\n * @dev Interface for the BaluniV1PoolPeriphery contract.\r\n */\r\ninterface IBaluniV1PoolPeriphery {\r\n    /**\r\n     * @dev Swaps tokens in a BaluniV1Pool.\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of tokens to swap.\r\n     * @param receiver The address of the receiver.\r\n     * @return The amount of tokens received after the swap.\r\n     */\r\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\r\n\r\n    /**\r\n     * @dev Performs batch swaps between multiple token pairs.\r\n     * @param fromTokens An array of addresses representing the tokens to swap from.\r\n     * @param toTokens An array of addresses representing the tokens to swap to.\r\n     * @param amounts An array of amounts representing the amounts to swap.\r\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\r\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\r\n     */\r\n    function batchSwap(\r\n        address[] calldata fromTokens,\r\n        address[] calldata toTokens,\r\n        uint256[] calldata amounts,\r\n        address[] calldata receivers\r\n    ) external returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Rebalances weights in a pool.\r\n     * @param poolAddress The address of the pool.\r\n     * @param receiver The address of the receiver.\r\n     */\r\n    function rebalanceWeights(address poolAddress, address receiver) external;\r\n\r\n    /**\r\n     * @dev Adds liquidity to a BaluniV1Pool.\r\n     * @param amounts An array of amounts for each asset to add as liquidity.\r\n     * @param poolAddress The address of the pool.\r\n     * @param receiver The address of the receiver.\r\n     */\r\n    function addLiquidity(uint256[] memory amounts, address poolAddress, address receiver) external returns (uint256);\r\n\r\n    /**\r\n     * @dev Removes liquidity from a BaluniV1Pool.\r\n     * @param share The amount of liquidity tokens to remove.\r\n     * @param poolAddress The address of the pool.\r\n     * @param receiver The address of the receiver.\r\n     */\r\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external;\r\n\r\n    /**\r\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of tokens to swap.\r\n     * @return The amount of tokens received after the swap.\r\n     */\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Performs rebalance if needed for the given tokens.\r\n     * @param poolAddress The address of the token pool to rebalance.\r\n     */\r\n    function performRebalanceIfNeeded(address poolAddress) external;\r\n\r\n    /**\r\n     * @dev Returns an array of pool addresses that contain the given token.\r\n     * @param token The address of the token to search for.\r\n     * @return An array of pool addresses.\r\n     */\r\n    function getPoolsContainingToken(address token) external view returns (address[] memory);\r\n\r\n    /**\r\n     * @dev Returns the version of the contract.\r\n     * @return The version string.\r\n     */\r\n    function getVersion() external view returns (uint64);\r\n\r\n    /**\r\n     * @dev Returns the reserves of the pool.\r\n     * @param pool The address of the pool.\r\n     * @return An array of reserves.\r\n     */\r\n    function getReserves(address pool) external view returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Returns the reserve of a specific asset in a pool.\r\n     * @param pool The address of the pool.\r\n     * @param asset The address of the asset.\r\n     * @return The reserve of the asset.\r\n     */\r\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Rebalancer {\r\n    struct RebalanceVars {\r\n        uint256 length;\r\n        uint256 totalValue;\r\n        uint256 finalUsdBalance;\r\n        uint256 overweightVaultsLength;\r\n        uint256 underweightVaultsLength;\r\n        uint256 totalActiveWeight;\r\n        uint256 amountOut;\r\n        uint256[] overweightVaults;\r\n        uint256[] overweightAmounts;\r\n        uint256[] underweightVaults;\r\n        uint256[] underweightAmounts;\r\n        uint256[] balances;\r\n    }\r\n\r\n    // Functions\r\n    function rebalance(\r\n        uint256[] memory balances,\r\n        address[] calldata assets,\r\n        uint256[] calldata weights,\r\n        uint256 limit,\r\n        address sender,\r\n        address receiver,\r\n        address baseAsset\r\n    ) external;\r\n\r\n    function checkRebalance(\r\n        uint256[] memory balances,\r\n        address[] calldata assets,\r\n        uint256[] calldata weights,\r\n        uint256 limit,\r\n        address sender,\r\n        address baseAsset\r\n    ) external view returns (RebalanceVars memory);\r\n\r\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Registry.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\n/**\r\n * @title IBaluniV1Registry\r\n * @dev Interface for the BaluniV1Registry contract.\r\n */\r\ninterface IBaluniV1Registry {\r\n    function setUniswapFactory(address _uniswapFactory) external;\r\n\r\n    function setUniswapRouter(address _uniswapRouter) external;\r\n\r\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\r\n\r\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\r\n\r\n    function setBaluniSwapper(address _baluniSwapper) external;\r\n\r\n    function setBaluniOracle(address _baluniOracle) external;\r\n\r\n    function setBaluniPoolFactory(address _baluniPoolFactory) external;\r\n\r\n    function setBaluniRebalancer(address _baluniRebalancer) external;\r\n\r\n    function setBaluniRouter(address _baluniRouter) external;\r\n\r\n    function setBaluniRegistry(address _baluniRegistry) external;\r\n\r\n    function setWNATIVE(address _WNATIVE) external;\r\n\r\n    function setUSDC(address _USDC) external;\r\n\r\n    function setTreasury(address _treasury) external;\r\n\r\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\r\n\r\n    function setBPS_FEE(uint256 __BPS_FEE) external;\r\n\r\n    function getUniswapFactory() external view returns (address);\r\n\r\n    function getUniswapRouter() external view returns (address);\r\n\r\n    function getBaluniSwapper() external view returns (address);\r\n\r\n    function getBaluniOracle() external view returns (address);\r\n\r\n    function getBaluniAgentFactory() external view returns (address);\r\n\r\n    function getBaluniPoolPeriphery() external view returns (address);\r\n\r\n    function getBaluniPoolFactory() external view returns (address);\r\n\r\n    function getBaluniRebalancer() external view returns (address);\r\n\r\n    function getBaluniRouter() external view returns (address);\r\n\r\n    function getBaluniRegistry() external view returns (address);\r\n\r\n    function getWNATIVE() external view returns (address);\r\n\r\n    function getUSDC() external view returns (address);\r\n\r\n    function get1inchSpotAgg() external view returns (address);\r\n\r\n    function getBPS_FEE() external view returns (uint256);\r\n\r\n    function getMAX_BPS_FEE() external view returns (uint256);\r\n\r\n    function getBPS_BASE() external view returns (uint256);\r\n\r\n    function getTreasury() external view returns (address);\r\n\r\n    function setStaticOracle(address _staticOracle) external;\r\n\r\n    function getStaticOracle() external view returns (address);\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/BaluniV1Pool.sol:294:9:\n    |\n294 |         uint256 _BPS_FEE = registry.getBPS_FEE();\n    |         ^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":11162,"file":"contracts/BaluniV1Pool.sol","start":11146},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":1294,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,1293,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1872],"IERC1822Proxiable":[1432],"Initializable":[448],"UUPSUpgradeable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1433,"src":"141:88:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1873,"src":"230:84:2","symbolAliases":[{"foreign":{"id":453,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":449,"src":"315:50:2","symbolAliases":[{"foreign":{"id":455,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":458,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1023:13:2"},"id":459,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":460,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":1432,"src":"1038:17:2"},"id":461,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":630,"linearizedBaseContracts":[630,1432,448],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":468,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":630,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":472,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":630,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":475,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":480,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":480,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":487,"nodeType":"Block","src":"2643:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2653:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2653:13:2"},{"id":486,"nodeType":"PlaceholderStatement","src":"2676:1:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2124:493:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":488,"name":"onlyProxy","nameLocation":"2631:9:2","nodeType":"ModifierDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2640:2:2"},"src":"2622:62:2","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"2914:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":491,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2924:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2924:20:2"},{"id":494,"nodeType":"PlaceholderStatement","src":"2954:1:2"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"2690:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":496,"name":"notDelegated","nameLocation":"2899:12:2","nodeType":"ModifierDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2911:2:2"},"src":"2890:72:2","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"3028:7:2","statements":[]},"id":502,"implemented":true,"kind":"function","modifiers":[{"id":499,"kind":"modifierInvocation","modifierName":{"id":498,"name":"onlyInitializing","nameLocations":["3011:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3011:16:2"},"nodeType":"ModifierInvocation","src":"3011:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2977:22:2","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2999:2:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3028:0:2"},"scope":630,"src":"2968:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"3111:7:2","statements":[]},"id":508,"implemented":true,"kind":"function","modifiers":[{"id":505,"kind":"modifierInvocation","modifierName":{"id":504,"name":"onlyInitializing","nameLocations":["3094:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3094:16:2"},"nodeType":"ModifierInvocation","src":"3094:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3050:32:2","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3082:2:2"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"3111:0:2"},"scope":630,"src":"3041:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1431],"body":{"id":519,"nodeType":"Block","src":"3783:56:2","statements":[{"expression":{"expression":{"id":516,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"3800:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1872_$","typeString":"type(library ERC1967Utils)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3813:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1599,"src":"3800:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":515,"id":518,"nodeType":"Return","src":"3793:39:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"3123:577:2","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":520,"implemented":true,"kind":"function","modifiers":[{"id":512,"kind":"modifierInvocation","modifierName":{"id":511,"name":"notDelegated","nameLocations":["3752:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":496,"src":"3752:12:2"},"nodeType":"ModifierInvocation","src":"3752:12:2"}],"name":"proxiableUUID","nameLocation":"3714:13:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"3727:2:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"3774:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3773:9:2"},"scope":630,"src":"3705:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":539,"nodeType":"Block","src":"4263:109:2","statements":[{"expression":{"arguments":[{"id":531,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4291:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4273:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"4273:36:2"},{"expression":{"arguments":[{"id":535,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4341:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4319:46:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"3845:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":540,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"onlyProxy","nameLocations":["4253:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":488,"src":"4253:9:2"},"nodeType":"ModifierInvocation","src":"4253:9:2"}],"name":"upgradeToAndCall","nameLocation":"4167:16:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"newImplementation","nameLocation":"4192:17:2","nodeType":"VariableDeclaration","scope":540,"src":"4184:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"4224:4:2","nodeType":"VariableDeclaration","scope":540,"src":"4211:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4183:46:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"4263:0:2"},"scope":630,"src":"4158:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"4644:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4679:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":548,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4688:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4671:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"4749:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1872_$","typeString":"type(library ERC1967Utils)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":1630,"src":"4749:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":553,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4785:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4671:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"4654:251:2","trueBody":{"id":559,"nodeType":"Block","src":"4844:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4865:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"RevertStatement","src":"4858:36:2"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4378:216:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4608:11:2","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"4619:2:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4644:0:2"},"scope":630,"src":"4599:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"5080:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":568,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5102:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":570,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5111:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"IfStatement","src":"5090:145:2","trueBody":{"id":575,"nodeType":"Block","src":"5119:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5195:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"RevertStatement","src":"5188:36:2"}]}}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4917:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5037:18:2","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"5055:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"5080:0:2"},"scope":630,"src":"5028:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"5247:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":584,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5633:17:2","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"newImplementation","nameLocation":"5659:17:2","nodeType":"VariableDeclaration","scope":584,"src":"5651:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:27:2"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"5694:0:2"},"scope":630,"src":"5624:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"6137:453:2","statements":[{"clauses":[{"block":{"id":617,"nodeType":"Block","src":"6227:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6245:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":601,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"6253:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1872_$","typeString":"type(library ERC1967Utils)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6266:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1599,"src":"6253:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6245:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"IfStatement","src":"6241:120:2","trueBody":{"id":608,"nodeType":"Block","src":"6287:74:2","statements":[{"errorCall":{"arguments":[{"id":605,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6341:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":604,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6312:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"RevertStatement","src":"6305:41:2"}]}},{"expression":{"arguments":[{"id":613,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6404:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6423:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":610,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"6374:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1872_$","typeString":"type(library ERC1967Utils)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":1691,"src":"6374:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"6374:54:2"}]},"errorName":"","id":618,"nodeType":"TryCatchClause","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"slot","nameLocation":"6221:4:2","nodeType":"VariableDeclaration","scope":618,"src":"6213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6212:14:2"},"src":"6204:235:2"},{"block":{"id":625,"nodeType":"Block","src":"6446:138:2","statements":[{"errorCall":{"arguments":[{"id":622,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":619,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"6513:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1872_$","typeString":"type(library ERC1967Utils)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":1604,"src":"6513:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"RevertStatement","src":"6506:67:2"}]},"errorName":"","id":626,"nodeType":"TryCatchClause","src":"6440:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":593,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6169:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6151:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$1432_$","typeString":"type(contract IERC1822Proxiable)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$1432","typeString":"contract IERC1822Proxiable"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6188:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":1431,"src":"6151:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":627,"nodeType":"TryStatement","src":"6147:437:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"5701:346:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6061:21:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"newImplementation","nameLocation":"6091:17:2","nodeType":"VariableDeclaration","scope":629,"src":"6083:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6083:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"6123:4:2","nodeType":"VariableDeclaration","scope":629,"src":"6110:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6082:46:2"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"6137:0:2"},"scope":630,"src":"6052:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":631,"src":"986:5606:2","usedErrors":[211,214,475,480,1604,1617,2514,2517],"usedEvents":[219,1583]}],"src":"115:6478:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"ERC20Upgradeable":[1247],"IERC20":[2475],"IERC20Errors":[1474],"IERC20Metadata":[2501],"Initializable":[448]},"id":1248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":2476,"src":"131:70:3","symbolAliases":[{"foreign":{"id":633,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":2502,"src":"202:97:3","symbolAliases":[{"foreign":{"id":635,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"210:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1294,"src":"300:70:3","symbolAliases":[{"foreign":{"id":637,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"308:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1570,"src":"371:83:3","symbolAliases":[{"foreign":{"id":639,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"379:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":449,"src":"455:66:3","symbolAliases":[{"foreign":{"id":641,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"463:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":644,"name":"Initializable","nameLocations":["1614:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1614:13:3"},"id":645,"nodeType":"InheritanceSpecifier","src":"1614:13:3"},{"baseName":{"id":646,"name":"ContextUpgradeable","nameLocations":["1629:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"1629:18:3"},"id":647,"nodeType":"InheritanceSpecifier","src":"1629:18:3"},{"baseName":{"id":648,"name":"IERC20","nameLocations":["1649:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":2475,"src":"1649:6:3"},"id":649,"nodeType":"InheritanceSpecifier","src":"1649:6:3"},{"baseName":{"id":650,"name":"IERC20Metadata","nameLocations":["1657:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":2501,"src":"1657:14:3"},"id":651,"nodeType":"InheritanceSpecifier","src":"1657:14:3"},{"baseName":{"id":652,"name":"IERC20Errors","nameLocations":["1673:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1474,"src":"1673:12:3"},"id":653,"nodeType":"InheritanceSpecifier","src":"1673:12:3"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"523:1052:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1247,"linearizedBaseContracts":[1247,1474,2501,2475,1293,448],"name":"ERC20Upgradeable","nameLocation":"1594:16:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Upgradeable.ERC20Storage","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"1692:63:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC20"},"id":671,"members":[{"constant":false,"id":658,"mutability":"mutable","name":"_balances","nameLocation":"1826:9:3","nodeType":"VariableDeclaration","scope":671,"src":"1790:45:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":657,"keyName":"account","keyNameLocation":"1806:7:3","keyType":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"1798:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1790:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"_allowances","nameLocation":"1910:11:3","nodeType":"VariableDeclaration","scope":671,"src":"1846:75:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":663,"keyName":"account","keyNameLocation":"1862:7:3","keyType":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"1854:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1846:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":662,"keyName":"spender","keyNameLocation":"1889:7:3","keyType":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1873:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"_totalSupply","nameLocation":"1940:12:3","nodeType":"VariableDeclaration","scope":671,"src":"1932:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1932:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"_name","nameLocation":"1970:5:3","nodeType":"VariableDeclaration","scope":671,"src":"1963:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":667,"name":"string","nodeType":"ElementaryTypeName","src":"1963:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"_symbol","nameLocation":"1992:7:3","nodeType":"VariableDeclaration","scope":671,"src":"1985:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":669,"name":"string","nodeType":"ElementaryTypeName","src":"1985:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC20Storage","nameLocation":"1767:12:3","nodeType":"StructDefinition","scope":1247,"src":"1760:246:3","visibility":"public"},{"constant":true,"id":674,"mutability":"constant","name":"ERC20StorageLocation","nameLocation":"2146:20:3","nodeType":"VariableDeclaration","scope":1247,"src":"2121:114:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2121:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2169:66:3","typeDescriptions":{"typeIdentifier":"t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1","typeString":"int_const 3743...(69 digits omitted)...2592"},"value":"0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"},"visibility":"private"},{"body":{"id":681,"nodeType":"Block","src":"2316:79:3","statements":[{"AST":{"nativeSrc":"2335:54:3","nodeType":"YulBlock","src":"2335:54:3","statements":[{"nativeSrc":"2349:30:3","nodeType":"YulAssignment","src":"2349:30:3","value":{"name":"ERC20StorageLocation","nativeSrc":"2359:20:3","nodeType":"YulIdentifier","src":"2359:20:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2349:6:3","nodeType":"YulIdentifier","src":"2349:6:3"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":678,"isOffset":false,"isSlot":true,"src":"2349:6:3","suffix":"slot","valueSize":1},{"declaration":674,"isOffset":false,"isSlot":false,"src":"2359:20:3","valueSize":1}],"id":680,"nodeType":"InlineAssembly","src":"2326:63:3"}]},"id":682,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC20Storage","nameLocation":"2251:16:3","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[],"src":"2267:2:3"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"$","nameLocation":"2313:1:3","nodeType":"VariableDeclaration","scope":682,"src":"2292:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":677,"nodeType":"UserDefinedTypeName","pathNode":{"id":676,"name":"ERC20Storage","nameLocations":["2292:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"2292:12:3"},"referencedDeclaration":671,"src":"2292:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"src":"2291:24:3"},"scope":1247,"src":"2242:153:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":697,"nodeType":"Block","src":"2669:55:3","statements":[{"expression":{"arguments":[{"id":693,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"2702:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":694,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"2709:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":692,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2679:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2679:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"2679:38:3"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"2401:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":698,"implemented":true,"kind":"function","modifiers":[{"id":690,"kind":"modifierInvocation","modifierName":{"id":689,"name":"onlyInitializing","nameLocations":["2652:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2652:16:3"},"nodeType":"ModifierInvocation","src":"2652:16:3"}],"name":"__ERC20_init","nameLocation":"2586:12:3","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"name_","nameLocation":"2613:5:3","nodeType":"VariableDeclaration","scope":698,"src":"2599:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":684,"name":"string","nodeType":"ElementaryTypeName","src":"2599:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"symbol_","nameLocation":"2634:7:3","nodeType":"VariableDeclaration","scope":698,"src":"2620:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":686,"name":"string","nodeType":"ElementaryTypeName","src":"2620:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2598:44:3"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[],"src":"2669:0:3"},"scope":1247,"src":"2577:147:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":725,"nodeType":"Block","src":"2832:114:3","statements":[{"assignments":[709],"declarations":[{"constant":false,"id":709,"mutability":"mutable","name":"$","nameLocation":"2863:1:3","nodeType":"VariableDeclaration","scope":725,"src":"2842:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":708,"nodeType":"UserDefinedTypeName","pathNode":{"id":707,"name":"ERC20Storage","nameLocations":["2842:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"2842:12:3"},"referencedDeclaration":671,"src":"2842:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":712,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":710,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"2867:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2867:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2842:43:3"},{"expression":{"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":713,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"2895:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2897:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":668,"src":"2895:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":716,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"2905:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2895:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":718,"nodeType":"ExpressionStatement","src":"2895:15:3"},{"expression":{"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":719,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"2920:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2922:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":670,"src":"2920:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":722,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"2932:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2920:19:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":724,"nodeType":"ExpressionStatement","src":"2920:19:3"}]},"id":726,"implemented":true,"kind":"function","modifiers":[{"id":705,"kind":"modifierInvocation","modifierName":{"id":704,"name":"onlyInitializing","nameLocations":["2815:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2815:16:3"},"nodeType":"ModifierInvocation","src":"2815:16:3"}],"name":"__ERC20_init_unchained","nameLocation":"2739:22:3","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"name_","nameLocation":"2776:5:3","nodeType":"VariableDeclaration","scope":726,"src":"2762:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":699,"name":"string","nodeType":"ElementaryTypeName","src":"2762:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"symbol_","nameLocation":"2797:7:3","nodeType":"VariableDeclaration","scope":726,"src":"2783:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":701,"name":"string","nodeType":"ElementaryTypeName","src":"2783:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2761:44:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"2832:0:3"},"scope":1247,"src":"2730:216:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2488],"body":{"id":741,"nodeType":"Block","src":"3071:84:3","statements":[{"assignments":[734],"declarations":[{"constant":false,"id":734,"mutability":"mutable","name":"$","nameLocation":"3102:1:3","nodeType":"VariableDeclaration","scope":741,"src":"3081:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":733,"nodeType":"UserDefinedTypeName","pathNode":{"id":732,"name":"ERC20Storage","nameLocations":["3081:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"3081:12:3"},"referencedDeclaration":671,"src":"3081:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":737,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":735,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3106:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3106:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3081:43:3"},{"expression":{"expression":{"id":738,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"3141:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":668,"src":"3141:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":731,"id":740,"nodeType":"Return","src":"3134:14:3"}]},"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"2952:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":742,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3020:4:3","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"3024:2:3"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"3056:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":729,"name":"string","nodeType":"ElementaryTypeName","src":"3056:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3055:15:3"},"scope":1247,"src":"3011:144:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2494],"body":{"id":757,"nodeType":"Block","src":"3330:86:3","statements":[{"assignments":[750],"declarations":[{"constant":false,"id":750,"mutability":"mutable","name":"$","nameLocation":"3361:1:3","nodeType":"VariableDeclaration","scope":757,"src":"3340:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":749,"nodeType":"UserDefinedTypeName","pathNode":{"id":748,"name":"ERC20Storage","nameLocations":["3340:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"3340:12:3"},"referencedDeclaration":671,"src":"3340:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":753,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":751,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3365:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3340:43:3"},{"expression":{"expression":{"id":754,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3400:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3402:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":670,"src":"3400:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":747,"id":756,"nodeType":"Return","src":"3393:16:3"}]},"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"3161:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":758,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3277:6:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"3283:2:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":758,"src":"3315:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"3315:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3314:15:3"},"scope":1247,"src":"3268:148:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2500],"body":{"id":766,"nodeType":"Block","src":"4105:26:3","statements":[{"expression":{"hexValue":"3138","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4122:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":763,"id":765,"nodeType":"Return","src":"4115:9:3"}]},"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"3422:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":767,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"4058:8:3","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"4066:2:3"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"4098:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":761,"name":"uint8","nodeType":"ElementaryTypeName","src":"4098:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4097:7:3"},"scope":1247,"src":"4049:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2424],"body":{"id":782,"nodeType":"Block","src":"4252:91:3","statements":[{"assignments":[775],"declarations":[{"constant":false,"id":775,"mutability":"mutable","name":"$","nameLocation":"4283:1:3","nodeType":"VariableDeclaration","scope":782,"src":"4262:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":774,"nodeType":"UserDefinedTypeName","pathNode":{"id":773,"name":"ERC20Storage","nameLocations":["4262:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"4262:12:3"},"referencedDeclaration":671,"src":"4262:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":778,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":776,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4287:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4262:43:3"},{"expression":{"expression":{"id":779,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"4322:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4324:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"4322:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":772,"id":781,"nodeType":"Return","src":"4315:21:3"}]},"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"4137:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":783,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"4200:11:3","nodeType":"FunctionDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[],"src":"4211:2:3"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"4243:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"4243:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4242:9:3"},"scope":1247,"src":"4191:152:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2432],"body":{"id":802,"nodeType":"Block","src":"4475:97:3","statements":[{"assignments":[793],"declarations":[{"constant":false,"id":793,"mutability":"mutable","name":"$","nameLocation":"4506:1:3","nodeType":"VariableDeclaration","scope":802,"src":"4485:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":792,"nodeType":"UserDefinedTypeName","pathNode":{"id":791,"name":"ERC20Storage","nameLocations":["4485:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"4485:12:3"},"referencedDeclaration":671,"src":"4485:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":796,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":794,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4510:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4510:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4485:43:3"},{"expression":{"baseExpression":{"expression":{"id":797,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"4545:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4547:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"4545:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":800,"indexExpression":{"id":799,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4557:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4545:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":790,"id":801,"nodeType":"Return","src":"4538:27:3"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"4349:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":803,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4410:9:3","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"account","nameLocation":"4428:7:3","nodeType":"VariableDeclaration","scope":803,"src":"4420:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"4420:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:17:3"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":803,"src":"4466:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"4466:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4465:9:3"},"scope":1247,"src":"4401:171:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2442],"body":{"id":826,"nodeType":"Block","src":"4842:103:3","statements":[{"assignments":[814],"declarations":[{"constant":false,"id":814,"mutability":"mutable","name":"owner","nameLocation":"4860:5:3","nodeType":"VariableDeclaration","scope":826,"src":"4852:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"4852:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":817,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":815,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"4868:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4868:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4852:28:3"},{"expression":{"arguments":[{"id":819,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4900:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"4907:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"4911:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":818,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"4890:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4890:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"ExpressionStatement","src":"4890:27:3"},{"expression":{"hexValue":"74727565","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4934:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":812,"id":825,"nodeType":"Return","src":"4927:11:3"}]},"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"4578:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":827,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4776:8:3","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"to","nameLocation":"4793:2:3","nodeType":"VariableDeclaration","scope":827,"src":"4785:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"4785:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"value","nameLocation":"4805:5:3","nodeType":"VariableDeclaration","scope":827,"src":"4797:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"4797:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4784:27:3"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":827,"src":"4836:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":810,"name":"bool","nodeType":"ElementaryTypeName","src":"4836:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4835:6:3"},"scope":1247,"src":"4767:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2452],"body":{"id":850,"nodeType":"Block","src":"5092:106:3","statements":[{"assignments":[839],"declarations":[{"constant":false,"id":839,"mutability":"mutable","name":"$","nameLocation":"5123:1:3","nodeType":"VariableDeclaration","scope":850,"src":"5102:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":838,"nodeType":"UserDefinedTypeName","pathNode":{"id":837,"name":"ERC20Storage","nameLocations":["5102:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"5102:12:3"},"referencedDeclaration":671,"src":"5102:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":842,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":840,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5127:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5127:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5102:43:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":843,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5162:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5164:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":664,"src":"5162:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":846,"indexExpression":{"id":845,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"5176:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":848,"indexExpression":{"id":847,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"5183:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":836,"id":849,"nodeType":"Return","src":"5155:36:3"}]},"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"4951:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":851,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"5012:9:3","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"owner","nameLocation":"5030:5:3","nodeType":"VariableDeclaration","scope":851,"src":"5022:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"5022:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"spender","nameLocation":"5045:7:3","nodeType":"VariableDeclaration","scope":851,"src":"5037:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"5037:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5021:32:3"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"5083:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"5083:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5082:9:3"},"scope":1247,"src":"5003:195:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2462],"body":{"id":874,"nodeType":"Block","src":"5584:107:3","statements":[{"assignments":[862],"declarations":[{"constant":false,"id":862,"mutability":"mutable","name":"owner","nameLocation":"5602:5:3","nodeType":"VariableDeclaration","scope":874,"src":"5594:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"5594:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":865,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":863,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5610:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5594:28:3"},{"expression":{"arguments":[{"id":867,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5641:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"5648:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"5657:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":866,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1130,"src":"5632:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"ExpressionStatement","src":"5632:31:3"},{"expression":{"hexValue":"74727565","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5680:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":860,"id":873,"nodeType":"Return","src":"5673:11:3"}]},"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"5204:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":875,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5514:7:3","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"spender","nameLocation":"5530:7:3","nodeType":"VariableDeclaration","scope":875,"src":"5522:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"5522:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"value","nameLocation":"5547:5:3","nodeType":"VariableDeclaration","scope":875,"src":"5539:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"5539:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5521:32:3"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":875,"src":"5578:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":858,"name":"bool","nodeType":"ElementaryTypeName","src":"5578:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5577:6:3"},"scope":1247,"src":"5505:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2474],"body":{"id":906,"nodeType":"Block","src":"6344:151:3","statements":[{"assignments":[888],"declarations":[{"constant":false,"id":888,"mutability":"mutable","name":"spender","nameLocation":"6362:7:3","nodeType":"VariableDeclaration","scope":906,"src":"6354:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"6354:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":891,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":889,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"6372:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6372:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6354:30:3"},{"expression":{"arguments":[{"id":893,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6410:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":894,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"6416:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6425:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":892,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"6394:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6394:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":897,"nodeType":"ExpressionStatement","src":"6394:37:3"},{"expression":{"arguments":[{"id":899,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6451:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":900,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"6457:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6461:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":898,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"6441:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6441:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":903,"nodeType":"ExpressionStatement","src":"6441:26:3"},{"expression":{"hexValue":"74727565","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6484:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":886,"id":905,"nodeType":"Return","src":"6477:11:3"}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"5697:549:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":907,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6260:12:3","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"from","nameLocation":"6281:4:3","nodeType":"VariableDeclaration","scope":907,"src":"6273:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"6273:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":880,"mutability":"mutable","name":"to","nameLocation":"6295:2:3","nodeType":"VariableDeclaration","scope":907,"src":"6287:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"6287:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"value","nameLocation":"6307:5:3","nodeType":"VariableDeclaration","scope":907,"src":"6299:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"6299:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6272:41:3"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":907,"src":"6338:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":884,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6337:6:3"},"scope":1247,"src":"6251:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":953,"nodeType":"Block","src":"6937:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6951:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6967:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6959:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"6959:7:3","typeDescriptions":{}}},"id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6959:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6951:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":931,"nodeType":"IfStatement","src":"6947:86:3","trueBody":{"id":930,"nodeType":"Block","src":"6971:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7019:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7011:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"7011:7:3","typeDescriptions":{}}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":923,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"6992:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6992:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":929,"nodeType":"RevertStatement","src":"6985:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":932,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7046:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7060:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7052:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"7052:7:3","typeDescriptions":{}}},"id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7052:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7046:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":946,"nodeType":"IfStatement","src":"7042:86:3","trueBody":{"id":945,"nodeType":"Block","src":"7064:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7114:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7106:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"7106:7:3","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":938,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"7085:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7085:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"RevertStatement","src":"7078:39:3"}]}},{"expression":{"arguments":[{"id":948,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"7145:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":949,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7151:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"7155:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":947,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"7137:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7137:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"ExpressionStatement","src":"7137:24:3"}]},"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"6501:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":954,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6877:9:3","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"from","nameLocation":"6895:4:3","nodeType":"VariableDeclaration","scope":954,"src":"6887:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"6887:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"to","nameLocation":"6909:2:3","nodeType":"VariableDeclaration","scope":954,"src":"6901:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"6901:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"value","nameLocation":"6921:5:3","nodeType":"VariableDeclaration","scope":954,"src":"6913:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"6913:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6886:41:3"},"returnParameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"6937:0:3"},"scope":1247,"src":"6868:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1045,"nodeType":"Block","src":"7558:1095:3","statements":[{"assignments":[966],"declarations":[{"constant":false,"id":966,"mutability":"mutable","name":"$","nameLocation":"7589:1:3","nodeType":"VariableDeclaration","scope":1045,"src":"7568:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":965,"nodeType":"UserDefinedTypeName","pathNode":{"id":964,"name":"ERC20Storage","nameLocations":["7568:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"7568:12:3"},"referencedDeclaration":671,"src":"7568:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":969,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":967,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"7593:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7568:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":970,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7625:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7641:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7633:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"7633:7:3","typeDescriptions":{}}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7633:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7625:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1012,"nodeType":"Block","src":"7801:366:3","statements":[{"assignments":[984],"declarations":[{"constant":false,"id":984,"mutability":"mutable","name":"fromBalance","nameLocation":"7823:11:3","nodeType":"VariableDeclaration","scope":1012,"src":"7815:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"7815:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":989,"initialValue":{"baseExpression":{"expression":{"id":985,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"7837:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7839:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"7837:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":988,"indexExpression":{"id":987,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7849:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7837:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7815:39:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7872:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7886:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7872:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1000,"nodeType":"IfStatement","src":"7868:115:3","trueBody":{"id":999,"nodeType":"Block","src":"7893:90:3","statements":[{"errorCall":{"arguments":[{"id":994,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7943:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7949:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7962:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":993,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7918:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7918:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":998,"nodeType":"RevertStatement","src":"7911:57:3"}]}},{"id":1011,"nodeType":"UncheckedBlock","src":"7996:161:3","statements":[{"expression":{"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1001,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8103:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8105:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"8103:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1005,"indexExpression":{"id":1003,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"8115:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8103:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1006,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"8123:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8137:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8123:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8103:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1010,"nodeType":"ExpressionStatement","src":"8103:39:3"}]}]},"id":1013,"nodeType":"IfStatement","src":"7621:546:3","trueBody":{"id":982,"nodeType":"Block","src":"7645:150:3","statements":[{"expression":{"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":976,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"7761:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7763:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"7761:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7779:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7761:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ExpressionStatement","src":"7761:23:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1014,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8181:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8195:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8187:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"8187:7:3","typeDescriptions":{}}},"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8187:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8181:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1037,"nodeType":"Block","src":"8398:208:3","statements":[{"id":1036,"nodeType":"UncheckedBlock","src":"8412:184:3","statements":[{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1028,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8557:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8559:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"8557:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1032,"indexExpression":{"id":1030,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8569:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8557:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8576:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8557:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1035,"nodeType":"ExpressionStatement","src":"8557:24:3"}]}]},"id":1038,"nodeType":"IfStatement","src":"8177:429:3","trueBody":{"id":1027,"nodeType":"Block","src":"8199:193:3","statements":[{"id":1026,"nodeType":"UncheckedBlock","src":"8213:169:3","statements":[{"expression":{"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1020,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8344:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8346:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"8344:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8362:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8344:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1025,"nodeType":"ExpressionStatement","src":"8344:23:3"}]}]}},{"eventCall":{"arguments":[{"id":1040,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"8630:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8636:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8640:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1039,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"8621:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8621:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"EmitStatement","src":"8616:30:3"}]},"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"7174:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7492:7:3","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"from","nameLocation":"7508:4:3","nodeType":"VariableDeclaration","scope":1046,"src":"7500:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"7500:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"to","nameLocation":"7522:2:3","nodeType":"VariableDeclaration","scope":1046,"src":"7514:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"7514:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"value","nameLocation":"7534:5:3","nodeType":"VariableDeclaration","scope":1046,"src":"7526:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"7526:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7499:41:3"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"7558:0:3"},"scope":1247,"src":"7483:1170:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1078,"nodeType":"Block","src":"9052:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"9066:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9077:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"9077:7:3","typeDescriptions":{}}},"id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9077:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9066:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1068,"nodeType":"IfStatement","src":"9062:91:3","trueBody":{"id":1067,"nodeType":"Block","src":"9089:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9139:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9131:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"9131:7:3","typeDescriptions":{}}},"id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9131:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1060,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"9110:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9110:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1066,"nodeType":"RevertStatement","src":"9103:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9170:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"9170:7:3","typeDescriptions":{}}},"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9170:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"9182:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"9191:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1069,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"9162:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9162:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"ExpressionStatement","src":"9162:35:3"}]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"8659:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9005:5:3","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"account","nameLocation":"9019:7:3","nodeType":"VariableDeclaration","scope":1079,"src":"9011:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"9011:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"value","nameLocation":"9036:5:3","nodeType":"VariableDeclaration","scope":1079,"src":"9028:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"9028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9010:32:3"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"9052:0:3"},"scope":1247,"src":"8996:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1111,"nodeType":"Block","src":"9578:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1087,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9592:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9611:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9603:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"9603:7:3","typeDescriptions":{}}},"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9603:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9592:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1101,"nodeType":"IfStatement","src":"9588:89:3","trueBody":{"id":1100,"nodeType":"Block","src":"9615:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9663:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"9655:7:3","typeDescriptions":{}}},"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9655:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1093,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"9636:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9636:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"RevertStatement","src":"9629:37:3"}]}},{"expression":{"arguments":[{"id":1103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9694:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9711:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9703:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"9703:7:3","typeDescriptions":{}}},"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9703:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"9715:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1102,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"9686:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9686:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1110,"nodeType":"ExpressionStatement","src":"9686:35:3"}]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"9210:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1112,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9531:5:3","nodeType":"FunctionDefinition","parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"account","nameLocation":"9545:7:3","nodeType":"VariableDeclaration","scope":1112,"src":"9537:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"9537:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"value","nameLocation":"9562:5:3","nodeType":"VariableDeclaration","scope":1112,"src":"9554:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"9554:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9536:32:3"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[],"src":"9578:0:3"},"scope":1247,"src":"9522:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1129,"nodeType":"Block","src":"10338:54:3","statements":[{"expression":{"arguments":[{"id":1123,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"10357:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1124,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"10364:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"10373:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10380:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1122,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1198,"src":"10348:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10348:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1128,"nodeType":"ExpressionStatement","src":"10348:37:3"}]},"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"9734:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10273:8:3","nodeType":"FunctionDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"owner","nameLocation":"10290:5:3","nodeType":"VariableDeclaration","scope":1130,"src":"10282:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"10282:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"spender","nameLocation":"10305:7:3","nodeType":"VariableDeclaration","scope":1130,"src":"10297:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"10297:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"value","nameLocation":"10322:5:3","nodeType":"VariableDeclaration","scope":1130,"src":"10314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"10314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10281:47:3"},"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[],"src":"10338:0:3"},"scope":1247,"src":"10264:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1197,"nodeType":"Block","src":"11322:389:3","statements":[{"assignments":[1144],"declarations":[{"constant":false,"id":1144,"mutability":"mutable","name":"$","nameLocation":"11353:1:3","nodeType":"VariableDeclaration","scope":1197,"src":"11332:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1143,"nodeType":"UserDefinedTypeName","pathNode":{"id":1142,"name":"ERC20Storage","nameLocations":["11332:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"11332:12:3"},"referencedDeclaration":671,"src":"11332:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1147,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1145,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"11357:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11357:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11332:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1148,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11389:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11406:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11398:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"11398:7:3","typeDescriptions":{}}},"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11398:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11389:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1162,"nodeType":"IfStatement","src":"11385:89:3","trueBody":{"id":1161,"nodeType":"Block","src":"11410:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11460:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11452:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"11452:7:3","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11452:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1154,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"11431:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11431:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1160,"nodeType":"RevertStatement","src":"11424:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1163,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11487:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11506:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11498:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"11498:7:3","typeDescriptions":{}}},"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11498:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11487:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1177,"nodeType":"IfStatement","src":"11483:90:3","trueBody":{"id":1176,"nodeType":"Block","src":"11510:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11559:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11551:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:3","typeDescriptions":{}}},"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11551:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1169,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"11531:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11531:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1175,"nodeType":"RevertStatement","src":"11524:38:3"}]}},{"expression":{"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"11582:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11584:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":664,"src":"11582:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1183,"indexExpression":{"id":1180,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11596:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11582:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1184,"indexExpression":{"id":1181,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11603:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11582:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"11614:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11582:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1187,"nodeType":"ExpressionStatement","src":"11582:37:3"},{"condition":{"id":1188,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"11633:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"11629:76:3","trueBody":{"id":1195,"nodeType":"Block","src":"11644:61:3","statements":[{"eventCall":{"arguments":[{"id":1190,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11672:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1191,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11679:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"11688:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"11663:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11663:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1194,"nodeType":"EmitStatement","src":"11658:36:3"}]}}]},"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"10398:821:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"11233:8:3","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"owner","nameLocation":"11250:5:3","nodeType":"VariableDeclaration","scope":1198,"src":"11242:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"11242:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"spender","nameLocation":"11265:7:3","nodeType":"VariableDeclaration","scope":1198,"src":"11257:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"11257:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"value","nameLocation":"11282:5:3","nodeType":"VariableDeclaration","scope":1198,"src":"11274:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"11274:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"emitEvent","nameLocation":"11294:9:3","nodeType":"VariableDeclaration","scope":1198,"src":"11289:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1138,"name":"bool","nodeType":"ElementaryTypeName","src":"11289:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11241:63:3"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"11322:0:3"},"scope":1247,"src":"11224:487:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1245,"nodeType":"Block","src":"12082:388:3","statements":[{"assignments":[1209],"declarations":[{"constant":false,"id":1209,"mutability":"mutable","name":"currentAllowance","nameLocation":"12100:16:3","nodeType":"VariableDeclaration","scope":1245,"src":"12092:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"12092:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1214,"initialValue":{"arguments":[{"id":1211,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"12129:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1212,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12136:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1210,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"12119:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12119:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12092:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1215,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12158:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12183:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"12183:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1216,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12178:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12178:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12192:3:3","memberName":"max","nodeType":"MemberAccess","src":"12178:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12158:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1244,"nodeType":"IfStatement","src":"12154:310:3","trueBody":{"id":1243,"nodeType":"Block","src":"12197:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12215:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12234:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12215:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1232,"nodeType":"IfStatement","src":"12211:130:3","trueBody":{"id":1231,"nodeType":"Block","src":"12241:100:3","statements":[{"errorCall":{"arguments":[{"id":1226,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12293:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1227,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12302:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12320:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1225,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12266:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1230,"nodeType":"RevertStatement","src":"12259:67:3"}]}},{"id":1242,"nodeType":"UncheckedBlock","src":"12354:100:3","statements":[{"expression":{"arguments":[{"id":1234,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"12391:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1235,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12398:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12407:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12426:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12407:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12433:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1233,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1198,"src":"12382:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1241,"nodeType":"ExpressionStatement","src":"12382:57:3"}]}]}}]},"documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"11717:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"12002:15:3","nodeType":"FunctionDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"owner","nameLocation":"12026:5:3","nodeType":"VariableDeclaration","scope":1246,"src":"12018:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"12018:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"spender","nameLocation":"12041:7:3","nodeType":"VariableDeclaration","scope":1246,"src":"12033:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"12033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1205,"mutability":"mutable","name":"value","nameLocation":"12058:5:3","nodeType":"VariableDeclaration","scope":1246,"src":"12050:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"12050:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12017:47:3"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[],"src":"12082:0:3"},"scope":1247,"src":"11993:477:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1248,"src":"1576:10896:3","usedErrors":[211,214,1444,1449,1454,1463,1468,1473],"usedEvents":[219,2409,2418]}],"src":"105:12368:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"Initializable":[448]},"id":1294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1249,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":449,"src":"126:63:4","symbolAliases":[{"foreign":{"id":1250,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1253,"name":"Initializable","nameLocations":["728:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:4"},"id":1254,"nodeType":"InheritanceSpecifier","src":"728:13:4"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"191:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1293,"linearizedBaseContracts":[1293,448],"name":"ContextUpgradeable","nameLocation":"706:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1259,"nodeType":"Block","src":"800:7:4","statements":[]},"id":1260,"implemented":true,"kind":"function","modifiers":[{"id":1257,"kind":"modifierInvocation","modifierName":{"id":1256,"name":"onlyInitializing","nameLocations":["783:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:4"},"nodeType":"ModifierInvocation","src":"783:16:4"}],"name":"__Context_init","nameLocation":"757:14:4","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[],"src":"771:2:4"},"returnParameters":{"id":1258,"nodeType":"ParameterList","parameters":[],"src":"800:0:4"},"scope":1293,"src":"748:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1265,"nodeType":"Block","src":"875:7:4","statements":[]},"id":1266,"implemented":true,"kind":"function","modifiers":[{"id":1263,"kind":"modifierInvocation","modifierName":{"id":1262,"name":"onlyInitializing","nameLocations":["858:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:4"},"nodeType":"ModifierInvocation","src":"858:16:4"}],"name":"__Context_init_unchained","nameLocation":"822:24:4","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"846:2:4"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[],"src":"875:0:4"},"scope":1293,"src":"813:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1274,"nodeType":"Block","src":"949:34:4","statements":[{"expression":{"expression":{"id":1271,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:4","memberName":"sender","nodeType":"MemberAccess","src":"966:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1270,"id":1273,"nodeType":"Return","src":"959:17:4"}]},"id":1275,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:4","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[],"src":"906:2:4"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"940:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:4"},"scope":1293,"src":"887:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"1056:32:4","statements":[{"expression":{"expression":{"id":1280,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:4","memberName":"data","nodeType":"MemberAccess","src":"1073:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1279,"id":1282,"nodeType":"Return","src":"1066:15:4"}]},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:4","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"1006:2:4"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1284,"src":"1040:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1277,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:4"},"scope":1293,"src":"989:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1291,"nodeType":"Block","src":"1166:25:4","statements":[{"expression":{"hexValue":"30","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1288,"id":1290,"nodeType":"Return","src":"1176:8:4"}]},"id":1292,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:4","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[],"src":"1123:2:4"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1292,"src":"1157:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:4"},"scope":1293,"src":"1094:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1294,"src":"688:505:4","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"Initializable":[448],"ReentrancyGuardUpgradeable":[1422]},"id":1423,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1295,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1423,"sourceUnit":449,"src":"134:63:5","symbolAliases":[{"foreign":{"id":1296,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"142:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1299,"name":"Initializable","nameLocations":["998:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"998:13:5"},"id":1300,"nodeType":"InheritanceSpecifier","src":"998:13:5"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"199:750:5","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1422,"linearizedBaseContracts":[1422,448],"name":"ReentrancyGuardUpgradeable","nameLocation":"968:26:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1303,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1791:11:5","nodeType":"VariableDeclaration","scope":1422,"src":"1766:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"1766:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1805:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1306,"mutability":"constant","name":"ENTERED","nameLocation":"1837:7:5","nodeType":"VariableDeclaration","scope":1422,"src":"1812:36:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"1812:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1847:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"canonicalName":"ReentrancyGuardUpgradeable.ReentrancyGuardStorage","documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"1855:73:5","text":"@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"},"id":1310,"members":[{"constant":false,"id":1309,"mutability":"mutable","name":"_status","nameLocation":"1981:7:5","nodeType":"VariableDeclaration","scope":1310,"src":"1973:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1973:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReentrancyGuardStorage","nameLocation":"1940:22:5","nodeType":"StructDefinition","scope":1422,"src":"1933:62:5","visibility":"public"},{"constant":true,"id":1313,"mutability":"constant","name":"ReentrancyGuardStorageLocation","nameLocation":"2145:30:5","nodeType":"VariableDeclaration","scope":1422,"src":"2120:124:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2120:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2178:66:5","typeDescriptions":{"typeIdentifier":"t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1","typeString":"int_const 7031...(69 digits omitted)...8416"},"value":"0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"},"visibility":"private"},{"body":{"id":1320,"nodeType":"Block","src":"2345:89:5","statements":[{"AST":{"nativeSrc":"2364:64:5","nodeType":"YulBlock","src":"2364:64:5","statements":[{"nativeSrc":"2378:40:5","nodeType":"YulAssignment","src":"2378:40:5","value":{"name":"ReentrancyGuardStorageLocation","nativeSrc":"2388:30:5","nodeType":"YulIdentifier","src":"2388:30:5"},"variableNames":[{"name":"$.slot","nativeSrc":"2378:6:5","nodeType":"YulIdentifier","src":"2378:6:5"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1317,"isOffset":false,"isSlot":true,"src":"2378:6:5","suffix":"slot","valueSize":1},{"declaration":1313,"isOffset":false,"isSlot":false,"src":"2388:30:5","valueSize":1}],"id":1319,"nodeType":"InlineAssembly","src":"2355:73:5"}]},"id":1321,"implemented":true,"kind":"function","modifiers":[],"name":"_getReentrancyGuardStorage","nameLocation":"2260:26:5","nodeType":"FunctionDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[],"src":"2286:2:5"},"returnParameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"$","nameLocation":"2342:1:5","nodeType":"VariableDeclaration","scope":1321,"src":"2311:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1316,"nodeType":"UserDefinedTypeName","pathNode":{"id":1315,"name":"ReentrancyGuardStorage","nameLocations":["2311:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1310,"src":"2311:22:5"},"referencedDeclaration":1310,"src":"2311:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"src":"2310:34:5"},"scope":1422,"src":"2251:183:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"2440:52:5","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1324,"name":"ReentrancyGuardReentrantCall","nameLocation":"2503:28:5","nodeType":"ErrorDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"2531:2:5"},"src":"2497:37:5"},{"body":{"id":1332,"nodeType":"Block","src":"2600:51:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1329,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"2610:32:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2610:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1331,"nodeType":"ExpressionStatement","src":"2610:34:5"}]},"id":1333,"implemented":true,"kind":"function","modifiers":[{"id":1327,"kind":"modifierInvocation","modifierName":{"id":1326,"name":"onlyInitializing","nameLocations":["2583:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2583:16:5"},"nodeType":"ModifierInvocation","src":"2583:16:5"}],"name":"__ReentrancyGuard_init","nameLocation":"2549:22:5","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[],"src":"2571:2:5"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[],"src":"2600:0:5"},"scope":1422,"src":"2540:111:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1350,"nodeType":"Block","src":"2727:113:5","statements":[{"assignments":[1340],"declarations":[{"constant":false,"id":1340,"mutability":"mutable","name":"$","nameLocation":"2768:1:5","nodeType":"VariableDeclaration","scope":1350,"src":"2737:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1339,"nodeType":"UserDefinedTypeName","pathNode":{"id":1338,"name":"ReentrancyGuardStorage","nameLocations":["2737:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1310,"src":"2737:22:5"},"referencedDeclaration":1310,"src":"2737:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1343,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1341,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"2772:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1310_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2737:63:5"},{"expression":{"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1344,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"2810:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2812:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1309,"src":"2810:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1347,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"2822:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2810:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1349,"nodeType":"ExpressionStatement","src":"2810:23:5"}]},"id":1351,"implemented":true,"kind":"function","modifiers":[{"id":1336,"kind":"modifierInvocation","modifierName":{"id":1335,"name":"onlyInitializing","nameLocations":["2710:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2710:16:5"},"nodeType":"ModifierInvocation","src":"2710:16:5"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2666:32:5","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[],"src":"2698:2:5"},"returnParameters":{"id":1337,"nodeType":"ParameterList","parameters":[],"src":"2727:0:5"},"scope":1422,"src":"2657:183:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1361,"nodeType":"Block","src":"3241:79:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1354,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"3251:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"ExpressionStatement","src":"3251:21:5"},{"id":1357,"nodeType":"PlaceholderStatement","src":"3282:1:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1358,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"3293:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3293:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1360,"nodeType":"ExpressionStatement","src":"3293:20:5"}]},"documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"2846:366:5","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1362,"name":"nonReentrant","nameLocation":"3226:12:5","nodeType":"ModifierDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[],"src":"3238:2:5"},"src":"3217:103:5","virtual":false,"visibility":"internal"},{"body":{"id":1386,"nodeType":"Block","src":"3365:345:5","statements":[{"assignments":[1367],"declarations":[{"constant":false,"id":1367,"mutability":"mutable","name":"$","nameLocation":"3406:1:5","nodeType":"VariableDeclaration","scope":1386,"src":"3375:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1366,"nodeType":"UserDefinedTypeName","pathNode":{"id":1365,"name":"ReentrancyGuardStorage","nameLocations":["3375:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1310,"src":"3375:22:5"},"referencedDeclaration":1310,"src":"3375:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1370,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1368,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"3410:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1310_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3375:63:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1371,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"3526:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3528:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1309,"src":"3526:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1373,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"3539:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3526:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1379,"nodeType":"IfStatement","src":"3522:88:5","trueBody":{"id":1378,"nodeType":"Block","src":"3548:62:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1375,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"3569:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3569:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1377,"nodeType":"RevertStatement","src":"3562:37:5"}]}},{"expression":{"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"3684:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3686:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1309,"src":"3684:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1383,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"3696:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3684:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1385,"nodeType":"ExpressionStatement","src":"3684:19:5"}]},"id":1387,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"3335:19:5","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[],"src":"3354:2:5"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"3365:0:5"},"scope":1422,"src":"3326:384:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1402,"nodeType":"Block","src":"3754:245:5","statements":[{"assignments":[1392],"declarations":[{"constant":false,"id":1392,"mutability":"mutable","name":"$","nameLocation":"3795:1:5","nodeType":"VariableDeclaration","scope":1402,"src":"3764:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1391,"nodeType":"UserDefinedTypeName","pathNode":{"id":1390,"name":"ReentrancyGuardStorage","nameLocations":["3764:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1310,"src":"3764:22:5"},"referencedDeclaration":1310,"src":"3764:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1395,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1393,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"3799:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1310_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3799:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3764:63:5"},{"expression":{"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1396,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"3969:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3971:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1309,"src":"3969:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1399,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"3981:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3969:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1401,"nodeType":"ExpressionStatement","src":"3969:23:5"}]},"id":1403,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"3725:18:5","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[],"src":"3743:2:5"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[],"src":"3754:0:5"},"scope":1422,"src":"3716:283:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1420,"nodeType":"Block","src":"4242:117:5","statements":[{"assignments":[1411],"declarations":[{"constant":false,"id":1411,"mutability":"mutable","name":"$","nameLocation":"4283:1:5","nodeType":"VariableDeclaration","scope":1420,"src":"4252:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1410,"nodeType":"UserDefinedTypeName","pathNode":{"id":1409,"name":"ReentrancyGuardStorage","nameLocations":["4252:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":1310,"src":"4252:22:5"},"referencedDeclaration":1310,"src":"4252:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1414,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1412,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"4287:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1310_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4252:63:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1415,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"4332:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1310_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4334:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1309,"src":"4332:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1417,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"4345:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4332:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1408,"id":1419,"nodeType":"Return","src":"4325:27:5"}]},"documentation":{"id":1404,"nodeType":"StructuredDocumentation","src":"4005:168:5","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"4187:23:5","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[],"src":"4210:2:5"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1421,"src":"4236:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1406,"name":"bool","nodeType":"ElementaryTypeName","src":"4236:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:6:5"},"scope":1422,"src":"4178:181:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1423,"src":"950:3411:5","usedErrors":[211,214,1324],"usedEvents":[219]}],"src":"109:4253:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[1432]},"id":1433,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1424,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"139:203:6","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":1432,"linearizedBaseContracts":[1432],"name":"IERC1822Proxiable","nameLocation":"353:17:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1426,"nodeType":"StructuredDocumentation","src":"377:438:6","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":1431,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:6","nodeType":"FunctionDefinition","parameters":{"id":1427,"nodeType":"ParameterList","parameters":[],"src":"842:2:6"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1431,"src":"868:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:6"},"scope":1432,"src":"820:57:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1433,"src":"343:536:6","usedErrors":[],"usedEvents":[]}],"src":"113:767:6"},"id":6},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1569],"IERC20Errors":[1474],"IERC721Errors":[1522]},"id":1570,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1434,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"138:139:7","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":1474,"linearizedBaseContracts":[1474],"name":"IERC20Errors","nameLocation":"288:12:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"307:309:7","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":1444,"name":"ERC20InsufficientBalance","nameLocation":"627:24:7","nodeType":"ErrorDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"sender","nameLocation":"660:6:7","nodeType":"VariableDeclaration","scope":1444,"src":"652:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1440,"mutability":"mutable","name":"balance","nameLocation":"676:7:7","nodeType":"VariableDeclaration","scope":1444,"src":"668:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1439,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"needed","nameLocation":"693:6:7","nodeType":"VariableDeclaration","scope":1444,"src":"685:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:7"},"src":"621:80:7"},{"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"707:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":1449,"name":"ERC20InvalidSender","nameLocation":"870:18:7","nodeType":"ErrorDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"sender","nameLocation":"897:6:7","nodeType":"VariableDeclaration","scope":1449,"src":"889:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1446,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:7"},"src":"864:41:7"},{"documentation":{"id":1450,"nodeType":"StructuredDocumentation","src":"911:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":1454,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:7","nodeType":"ErrorDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:7","nodeType":"VariableDeclaration","scope":1454,"src":"1102:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:7"},"src":"1075:45:7"},{"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"1126:345:7","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":1463,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:7","nodeType":"ErrorDefinition","parameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"spender","nameLocation":"1517:7:7","nodeType":"VariableDeclaration","scope":1463,"src":"1509:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1456,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1459,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:7","nodeType":"VariableDeclaration","scope":1463,"src":"1526:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"needed","nameLocation":"1553:6:7","nodeType":"VariableDeclaration","scope":1463,"src":"1545:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:7"},"src":"1476:85:7"},{"documentation":{"id":1464,"nodeType":"StructuredDocumentation","src":"1567:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":1468,"name":"ERC20InvalidApprover","nameLocation":"1752:20:7","nodeType":"ErrorDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"approver","nameLocation":"1781:8:7","nodeType":"VariableDeclaration","scope":1468,"src":"1773:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:7"},"src":"1746:45:7"},{"documentation":{"id":1469,"nodeType":"StructuredDocumentation","src":"1797:195:7","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":1473,"name":"ERC20InvalidSpender","nameLocation":"2003:19:7","nodeType":"ErrorDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"spender","nameLocation":"2031:7:7","nodeType":"VariableDeclaration","scope":1473,"src":"2023:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1470,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:7"},"src":"1997:43:7"}],"scope":1570,"src":"278:1764:7","usedErrors":[1444,1449,1454,1463,1468,1473],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"2044:141:7","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":1522,"linearizedBaseContracts":[1522],"name":"IERC721Errors","nameLocation":"2196:13:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1476,"nodeType":"StructuredDocumentation","src":"2216:219:7","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":1480,"name":"ERC721InvalidOwner","nameLocation":"2446:18:7","nodeType":"ErrorDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"owner","nameLocation":"2473:5:7","nodeType":"VariableDeclaration","scope":1480,"src":"2465:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1477,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:7"},"src":"2440:40:7"},{"documentation":{"id":1481,"nodeType":"StructuredDocumentation","src":"2486:132:7","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":1485,"name":"ERC721NonexistentToken","nameLocation":"2629:22:7","nodeType":"ErrorDefinition","parameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:7","nodeType":"VariableDeclaration","scope":1485,"src":"2652:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1482,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:7"},"src":"2623:46:7"},{"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"2675:289:7","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":1494,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:7","nodeType":"ErrorDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"sender","nameLocation":"3004:6:7","nodeType":"VariableDeclaration","scope":1494,"src":"2996:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:7","nodeType":"VariableDeclaration","scope":1494,"src":"3012:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"owner","nameLocation":"3037:5:7","nodeType":"VariableDeclaration","scope":1494,"src":"3029:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1491,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:7"},"src":"2969:75:7"},{"documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"3050:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":1499,"name":"ERC721InvalidSender","nameLocation":"3213:19:7","nodeType":"ErrorDefinition","parameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"sender","nameLocation":"3241:6:7","nodeType":"VariableDeclaration","scope":1499,"src":"3233:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:7"},"src":"3207:42:7"},{"documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"3255:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":1504,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:7","nodeType":"ErrorDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:7","nodeType":"VariableDeclaration","scope":1504,"src":"3447:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1501,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:7"},"src":"3419:46:7"},{"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"3471:247:7","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":1511,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:7","nodeType":"ErrorDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"operator","nameLocation":"3764:8:7","nodeType":"VariableDeclaration","scope":1511,"src":"3756:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:7","nodeType":"VariableDeclaration","scope":1511,"src":"3774:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:7"},"src":"3723:68:7"},{"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"3797:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":1516,"name":"ERC721InvalidApprover","nameLocation":"3982:21:7","nodeType":"ErrorDefinition","parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"approver","nameLocation":"4012:8:7","nodeType":"VariableDeclaration","scope":1516,"src":"4004:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:7"},"src":"3976:46:7"},{"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"4028:197:7","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":1521,"name":"ERC721InvalidOperator","nameLocation":"4236:21:7","nodeType":"ErrorDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"operator","nameLocation":"4266:8:7","nodeType":"VariableDeclaration","scope":1521,"src":"4258:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:7"},"src":"4230:46:7"}],"scope":1570,"src":"2186:2092:7","usedErrors":[1480,1485,1494,1499,1504,1511,1516,1521],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"4280:143:7","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":1569,"linearizedBaseContracts":[1569],"name":"IERC1155Errors","nameLocation":"4434:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"4455:361:7","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":1534,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:7","nodeType":"ErrorDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"sender","nameLocation":"4862:6:7","nodeType":"VariableDeclaration","scope":1534,"src":"4854:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1528,"mutability":"mutable","name":"balance","nameLocation":"4878:7:7","nodeType":"VariableDeclaration","scope":1534,"src":"4870:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1530,"mutability":"mutable","name":"needed","nameLocation":"4895:6:7","nodeType":"VariableDeclaration","scope":1534,"src":"4887:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:7","nodeType":"VariableDeclaration","scope":1534,"src":"4903:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:7"},"src":"4821:99:7"},{"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"4926:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":1539,"name":"ERC1155InvalidSender","nameLocation":"5089:20:7","nodeType":"ErrorDefinition","parameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"sender","nameLocation":"5118:6:7","nodeType":"VariableDeclaration","scope":1539,"src":"5110:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1536,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:7"},"src":"5083:43:7"},{"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"5132:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":1544,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:7","nodeType":"ErrorDefinition","parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:7","nodeType":"VariableDeclaration","scope":1544,"src":"5325:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:7"},"src":"5296:47:7"},{"documentation":{"id":1545,"nodeType":"StructuredDocumentation","src":"5349:256:7","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1551,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:7","nodeType":"ErrorDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"operator","nameLocation":"5653:8:7","nodeType":"VariableDeclaration","scope":1551,"src":"5645:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"owner","nameLocation":"5671:5:7","nodeType":"VariableDeclaration","scope":1551,"src":"5663:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1548,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:7"},"src":"5610:68:7"},{"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"5684:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1556,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:7","nodeType":"ErrorDefinition","parameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"approver","nameLocation":"5900:8:7","nodeType":"VariableDeclaration","scope":1556,"src":"5892:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:7"},"src":"5863:47:7"},{"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"5916:197:7","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1561,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:7","nodeType":"ErrorDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"operator","nameLocation":"6155:8:7","nodeType":"VariableDeclaration","scope":1561,"src":"6147:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1558,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:7"},"src":"6118:47:7"},{"documentation":{"id":1562,"nodeType":"StructuredDocumentation","src":"6171:280:7","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1568,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:7","nodeType":"ErrorDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:7","nodeType":"VariableDeclaration","scope":1568,"src":"6488:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1566,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:7","nodeType":"VariableDeclaration","scope":1568,"src":"6507:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:7"},"src":"6456:73:7"}],"scope":1570,"src":"4424:2107:7","usedErrors":[1534,1539,1544,1551,1556,1561,1568],"usedEvents":[]}],"src":"112:6420:7"},"id":7},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2754],"ERC1967Utils":[1872],"IBeacon":[1882],"StorageSlot":[2894]},"id":1873,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1571,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:8"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":1573,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1873,"sourceUnit":1883,"src":"140:46:8","symbolAliases":[{"foreign":{"id":1572,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"148:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1575,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1873,"sourceUnit":2755,"src":"187:48:8","symbolAliases":[{"foreign":{"id":1574,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"195:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":1577,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1873,"sourceUnit":2895,"src":"236:56:8","symbolAliases":[{"foreign":{"id":1576,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"244:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"294:154:8","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":1872,"linearizedBaseContracts":[1872],"name":"ERC1967Utils","nameLocation":"457:12:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"660:68:8","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":1583,"name":"Upgraded","nameLocation":"739:8:8","nodeType":"EventDefinition","parameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:8","nodeType":"VariableDeclaration","scope":1583,"src":"748:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:8"},"src":"733:47:8"},{"anonymous":false,"documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"786:67:8","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":1590,"name":"AdminChanged","nameLocation":"864:12:8","nodeType":"EventDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:8","nodeType":"VariableDeclaration","scope":1590,"src":"877:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1588,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:8","nodeType":"VariableDeclaration","scope":1590,"src":"900:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1587,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:8"},"src":"858:60:8"},{"anonymous":false,"documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"924:59:8","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":1595,"name":"BeaconUpgraded","nameLocation":"994:14:8","nodeType":"EventDefinition","parameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:8","nodeType":"VariableDeclaration","scope":1595,"src":"1009:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:8"},"src":"988:45:8"},{"constant":true,"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"1039:170:8","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":1599,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:8","nodeType":"VariableDeclaration","scope":1872,"src":"1279:114:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:8","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"1400:69:8","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":1604,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:8","nodeType":"ErrorDefinition","parameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:8","nodeType":"VariableDeclaration","scope":1604,"src":"1509:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1601,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:8"},"src":"1474:59:8"},{"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"1539:60:8","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":1609,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:8","nodeType":"ErrorDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"admin","nameLocation":"1638:5:8","nodeType":"VariableDeclaration","scope":1609,"src":"1630:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:8"},"src":"1604:41:8"},{"documentation":{"id":1610,"nodeType":"StructuredDocumentation","src":"1651:61:8","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":1614,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:8","nodeType":"ErrorDefinition","parameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:8","nodeType":"VariableDeclaration","scope":1614,"src":"1744:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1611,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:8"},"src":"1717:43:8"},{"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"1766:82:8","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":1617,"name":"ERC1967NonPayable","nameLocation":"1859:17:8","nodeType":"ErrorDefinition","parameters":{"id":1616,"nodeType":"ParameterList","parameters":[],"src":"1876:2:8"},"src":"1853:26:8"},{"body":{"id":1629,"nodeType":"Block","src":"2018:77:8","statements":[{"expression":{"expression":{"arguments":[{"id":1625,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"2062:19:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1623,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"2035:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2894_$","typeString":"type(library StorageSlot)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2816,"src":"2035:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2790_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2790_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2789,"src":"2035:53:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1622,"id":1628,"nodeType":"Return","src":"2028:60:8"}]},"documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"1885:67:8","text":" @dev Returns the current implementation address."},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:8","nodeType":"FunctionDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[],"src":"1983:2:8"},"returnParameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1630,"src":"2009:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1620,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:8"},"scope":1872,"src":"1957:138:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"2249:218:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1636,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2263:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:8","memberName":"code","nodeType":"MemberAccess","src":"2263:22:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:8","memberName":"length","nodeType":"MemberAccess","src":"2263:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1646,"nodeType":"IfStatement","src":"2259:119:8","trueBody":{"id":1645,"nodeType":"Block","src":"2299:79:8","statements":[{"errorCall":{"arguments":[{"id":1642,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2349:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1641,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"2320:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1644,"nodeType":"RevertStatement","src":"2313:54:8"}]}},{"expression":{"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1650,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"2414:19:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1647,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"2387:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2894_$","typeString":"type(library StorageSlot)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2816,"src":"2387:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2790_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2790_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2789,"src":"2387:53:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1653,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2443:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1655,"nodeType":"ExpressionStatement","src":"2387:73:8"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"2101:80:8","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:8","nodeType":"FunctionDefinition","parameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:8","nodeType":"VariableDeclaration","scope":1657,"src":"2214:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:8"},"returnParameters":{"id":1635,"nodeType":"ParameterList","parameters":[],"src":"2249:0:8"},"scope":1872,"src":"2186:281:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1690,"nodeType":"Block","src":"2860:254:8","statements":[{"expression":{"arguments":[{"id":1666,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2889:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1665,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"2870:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1668,"nodeType":"ExpressionStatement","src":"2870:37:8"},{"eventCall":{"arguments":[{"id":1670,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2931:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1669,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2922:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1672,"nodeType":"EmitStatement","src":"2917:32:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1673,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2964:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:8","memberName":"length","nodeType":"MemberAccess","src":"2964:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1688,"nodeType":"Block","src":"3065:43:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1685,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"3079:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1687,"nodeType":"ExpressionStatement","src":"3079:18:8"}]},"id":1689,"nodeType":"IfStatement","src":"2960:148:8","trueBody":{"id":1684,"nodeType":"Block","src":"2981:78:8","statements":[{"expression":{"arguments":[{"id":1680,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"3024:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1681,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"3043:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1677,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"2995:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2754_$","typeString":"type(library Address)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:8","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2673,"src":"2995:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1683,"nodeType":"ExpressionStatement","src":"2995:53:8"}]}}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"2473:301:8","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":1691,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:8","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:8","nodeType":"VariableDeclaration","scope":1691,"src":"2805:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1659,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"data","nameLocation":"2845:4:8","nodeType":"VariableDeclaration","scope":1691,"src":"2832:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1661,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:8"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[],"src":"2860:0:8"},"scope":1872,"src":"2779:335:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"3120:145:8","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":1695,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:8","nodeType":"VariableDeclaration","scope":1872,"src":"3335:105:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:8","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":1707,"nodeType":"Block","src":"3844:68:8","statements":[{"expression":{"expression":{"arguments":[{"id":1703,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"3888:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1701,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"3861:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2894_$","typeString":"type(library StorageSlot)"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2816,"src":"3861:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2790_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2790_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2789,"src":"3861:44:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1700,"id":1706,"nodeType":"Return","src":"3854:51:8"}]},"documentation":{"id":1696,"nodeType":"StructuredDocumentation","src":"3447:340:8","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":1708,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:8","nodeType":"FunctionDefinition","parameters":{"id":1697,"nodeType":"ParameterList","parameters":[],"src":"3809:2:8"},"returnParameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1708,"src":"3835:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:8"},"scope":1872,"src":"3792:120:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1738,"nodeType":"Block","src":"4039:172:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1714,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"4053:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:8","typeDescriptions":{}}},"id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1728,"nodeType":"IfStatement","src":"4049:91:8","trueBody":{"id":1727,"nodeType":"Block","src":"4077:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:8","typeDescriptions":{}}},"id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1720,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"4098:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1726,"nodeType":"RevertStatement","src":"4091:38:8"}]}},{"expression":{"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1732,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"4176:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1729,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"4149:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2894_$","typeString":"type(library StorageSlot)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2816,"src":"4149:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2790_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2790_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2789,"src":"4149:44:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1735,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"4196:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1737,"nodeType":"ExpressionStatement","src":"4149:55:8"}]},"documentation":{"id":1709,"nodeType":"StructuredDocumentation","src":"3918:71:8","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":1739,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:8","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:8","nodeType":"VariableDeclaration","scope":1739,"src":"4013:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1710,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:8"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[],"src":"4039:0:8"},"scope":1872,"src":"3994:217:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1755,"nodeType":"Block","src":"4379:85:8","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1746,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"4407:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1748,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4419:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1745,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"4394:12:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1750,"nodeType":"EmitStatement","src":"4389:39:8"},{"expression":{"arguments":[{"id":1752,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4448:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1751,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"4438:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1754,"nodeType":"ExpressionStatement","src":"4438:19:8"}]},"documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"4217:109:8","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1756,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:8","nodeType":"FunctionDefinition","parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:8","nodeType":"VariableDeclaration","scope":1756,"src":"4352:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1741,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:8"},"returnParameters":{"id":1744,"nodeType":"ParameterList","parameters":[],"src":"4379:0:8"},"scope":1872,"src":"4331:133:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"4470:201:8","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1760,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:8","nodeType":"VariableDeclaration","scope":1872,"src":"4741:106:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:8","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1772,"nodeType":"Block","src":"4963:69:8","statements":[{"expression":{"expression":{"arguments":[{"id":1768,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5007:11:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1766,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"4980:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2894_$","typeString":"type(library StorageSlot)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2816,"src":"4980:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2790_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2790_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2789,"src":"4980:45:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1765,"id":1771,"nodeType":"Return","src":"4973:52:8"}]},"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"4854:51:8","text":" @dev Returns the current beacon."},"id":1773,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:8","nodeType":"FunctionDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[],"src":"4928:2:8"},"returnParameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1773,"src":"4954:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:8"},"scope":1872,"src":"4910:122:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1818,"nodeType":"Block","src":"5161:390:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1779,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"5175:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:8","memberName":"code","nodeType":"MemberAccess","src":"5175:14:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:8","memberName":"length","nodeType":"MemberAccess","src":"5175:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1789,"nodeType":"IfStatement","src":"5171:95:8","trueBody":{"id":1788,"nodeType":"Block","src":"5203:63:8","statements":[{"errorCall":{"arguments":[{"id":1785,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"5245:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1784,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"5224:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1787,"nodeType":"RevertStatement","src":"5217:38:8"}]}},{"expression":{"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1793,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5303:11:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1790,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"5276:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2894_$","typeString":"type(library StorageSlot)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2816,"src":"5276:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2790_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2790_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2789,"src":"5276:45:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1796,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"5324:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1798,"nodeType":"ExpressionStatement","src":"5276:57:8"},{"assignments":[1800],"declarations":[{"constant":false,"id":1800,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:8","nodeType":"VariableDeclaration","scope":1818,"src":"5344:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1806,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1802,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"5383:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1801,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"5375:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1882_$","typeString":"type(contract IBeacon)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1882","typeString":"contract IBeacon"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:8","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1881,"src":"5375:33:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1807,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"5424:20:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:8","memberName":"code","nodeType":"MemberAccess","src":"5424:25:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:8","memberName":"length","nodeType":"MemberAccess","src":"5424:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1817,"nodeType":"IfStatement","src":"5420:125:8","trueBody":{"id":1816,"nodeType":"Block","src":"5463:82:8","statements":[{"errorCall":{"arguments":[{"id":1813,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"5513:20:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1812,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"5484:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1815,"nodeType":"RevertStatement","src":"5477:57:8"}]}}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"5038:71:8","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1819,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:8","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:8","nodeType":"VariableDeclaration","scope":1819,"src":"5134:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:8"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[],"src":"5161:0:8"},"scope":1872,"src":"5114:437:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1856,"nodeType":"Block","src":"6155:254:8","statements":[{"expression":{"arguments":[{"id":1828,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"6176:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1827,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"6165:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1830,"nodeType":"ExpressionStatement","src":"6165:21:8"},{"eventCall":{"arguments":[{"id":1832,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"6216:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1831,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"6201:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1834,"nodeType":"EmitStatement","src":"6196:30:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1835,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"6241:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:8","memberName":"length","nodeType":"MemberAccess","src":"6241:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1854,"nodeType":"Block","src":"6360:43:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1851,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"6374:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1853,"nodeType":"ExpressionStatement","src":"6374:18:8"}]},"id":1855,"nodeType":"IfStatement","src":"6237:166:8","trueBody":{"id":1850,"nodeType":"Block","src":"6258:96:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1843,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"6309:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1842,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"6301:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1882_$","typeString":"type(contract IBeacon)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1882","typeString":"contract IBeacon"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:8","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1881,"src":"6301:33:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1847,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"6338:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1839,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"6272:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2754_$","typeString":"type(library Address)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:8","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2673,"src":"6272:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1849,"nodeType":"ExpressionStatement","src":"6272:71:8"}]}}]},"documentation":{"id":1820,"nodeType":"StructuredDocumentation","src":"5557:514:8","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1857,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:8","nodeType":"FunctionDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:8","nodeType":"VariableDeclaration","scope":1857,"src":"6108:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"data","nameLocation":"6140:4:8","nodeType":"VariableDeclaration","scope":1857,"src":"6127:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1823,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:8"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[],"src":"6155:0:8"},"scope":1872,"src":"6076:333:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1870,"nodeType":"Block","src":"6634:86:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1861,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:8","memberName":"value","nodeType":"MemberAccess","src":"6648:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1869,"nodeType":"IfStatement","src":"6644:70:8","trueBody":{"id":1868,"nodeType":"Block","src":"6663:51:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1865,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"6684:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1867,"nodeType":"RevertStatement","src":"6677:26:8"}]}}]},"documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"6415:178:8","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:8","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[],"src":"6623:2:8"},"returnParameters":{"id":1860,"nodeType":"ParameterList","parameters":[],"src":"6634:0:8"},"scope":1872,"src":"6598:122:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1873,"src":"449:6273:8","usedErrors":[1604,1609,1614,1617],"usedEvents":[1583,1590,1595]}],"src":"114:6609:8"},"id":8},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1882]},"id":1883,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1874,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1875,"nodeType":"StructuredDocumentation","src":"134:79:9","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1882,"linearizedBaseContracts":[1882],"name":"IBeacon","nameLocation":"224:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"238:168:9","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1881,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:9","nodeType":"FunctionDefinition","parameters":{"id":1877,"nodeType":"ParameterList","parameters":[],"src":"434:2:9"},"returnParameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1881,"src":"460:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:9"},"scope":1882,"src":"411:58:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1883,"src":"214:257:9","usedErrors":[],"usedEvents":[]}],"src":"108:364:9"},"id":9},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2784],"ERC20":[2397],"IERC20":[2475],"IERC20Errors":[1474],"IERC20Metadata":[2501]},"id":2398,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1884,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1886,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2398,"sourceUnit":2476,"src":"131:36:10","symbolAliases":[{"foreign":{"id":1885,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"139:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1888,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2398,"sourceUnit":2502,"src":"168:63:10","symbolAliases":[{"foreign":{"id":1887,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"176:14:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1890,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2398,"sourceUnit":2785,"src":"232:48:10","symbolAliases":[{"foreign":{"id":1889,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"240:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1892,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2398,"sourceUnit":1570,"src":"281:65:10","symbolAliases":[{"foreign":{"id":1891,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"289:12:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1894,"name":"Context","nameLocations":["1428:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2784,"src":"1428:7:10"},"id":1895,"nodeType":"InheritanceSpecifier","src":"1428:7:10"},{"baseName":{"id":1896,"name":"IERC20","nameLocations":["1437:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":2475,"src":"1437:6:10"},"id":1897,"nodeType":"InheritanceSpecifier","src":"1437:6:10"},{"baseName":{"id":1898,"name":"IERC20Metadata","nameLocations":["1445:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":2501,"src":"1445:14:10"},"id":1899,"nodeType":"InheritanceSpecifier","src":"1445:14:10"},{"baseName":{"id":1900,"name":"IERC20Errors","nameLocations":["1461:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1474,"src":"1461:12:10"},"id":1901,"nodeType":"InheritanceSpecifier","src":"1461:12:10"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1893,"nodeType":"StructuredDocumentation","src":"348:1052:10","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":2397,"linearizedBaseContracts":[2397,1474,2501,2475,2784],"name":"ERC20","nameLocation":"1419:5:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1905,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:10","nodeType":"VariableDeclaration","scope":2397,"src":"1480:53:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1904,"keyName":"account","keyNameLocation":"1496:7:10","keyType":{"id":1902,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1911,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:10","nodeType":"VariableDeclaration","scope":2397,"src":"1540:83:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1910,"keyName":"account","keyNameLocation":"1556:7:10","keyType":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1909,"keyName":"spender","keyNameLocation":"1583:7:10","keyType":{"id":1907,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1913,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:10","nodeType":"VariableDeclaration","scope":2397,"src":"1630:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1912,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1915,"mutability":"mutable","name":"_name","nameLocation":"1680:5:10","nodeType":"VariableDeclaration","scope":2397,"src":"1665:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1914,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1917,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:10","nodeType":"VariableDeclaration","scope":2397,"src":"1691:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1916,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1933,"nodeType":"Block","src":"1952:57:10","statements":[{"expression":{"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1925,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"1962:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1926,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"1970:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1928,"nodeType":"ExpressionStatement","src":"1962:13:10"},{"expression":{"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1929,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"1985:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1930,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"1995:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1932,"nodeType":"ExpressionStatement","src":"1985:17:10"}]},"documentation":{"id":1918,"nodeType":"StructuredDocumentation","src":"1720:171:10","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1934,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"name_","nameLocation":"1922:5:10","nodeType":"VariableDeclaration","scope":1934,"src":"1908:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1919,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1922,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:10","nodeType":"VariableDeclaration","scope":1934,"src":"1929:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1921,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:10"},"returnParameters":{"id":1924,"nodeType":"ParameterList","parameters":[],"src":"1952:0:10"},"scope":2397,"src":"1896:113:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2488],"body":{"id":1942,"nodeType":"Block","src":"2134:29:10","statements":[{"expression":{"id":1940,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2151:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1939,"id":1941,"nodeType":"Return","src":"2144:12:10"}]},"documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"2015:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1943,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:10","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[],"src":"2087:2:10"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1943,"src":"2119:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1937,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:10"},"scope":2397,"src":"2074:89:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2494],"body":{"id":1951,"nodeType":"Block","src":"2338:31:10","statements":[{"expression":{"id":1949,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"2355:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1948,"id":1950,"nodeType":"Return","src":"2348:14:10"}]},"documentation":{"id":1944,"nodeType":"StructuredDocumentation","src":"2169:102:10","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1952,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:10","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[],"src":"2291:2:10"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1952,"src":"2323:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1946,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:10"},"scope":2397,"src":"2276:93:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2500],"body":{"id":1960,"nodeType":"Block","src":"3058:26:10","statements":[{"expression":{"hexValue":"3138","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1957,"id":1959,"nodeType":"Return","src":"3068:9:10"}]},"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"2375:622:10","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1961,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:10","nodeType":"FunctionDefinition","parameters":{"id":1954,"nodeType":"ParameterList","parameters":[],"src":"3019:2:10"},"returnParameters":{"id":1957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1961,"src":"3051:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1955,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:10"},"scope":2397,"src":"3002:82:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2424],"body":{"id":1969,"nodeType":"Block","src":"3205:36:10","statements":[{"expression":{"id":1967,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"3222:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1966,"id":1968,"nodeType":"Return","src":"3215:19:10"}]},"documentation":{"id":1962,"nodeType":"StructuredDocumentation","src":"3090:49:10","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1970,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:10","nodeType":"FunctionDefinition","parameters":{"id":1963,"nodeType":"ParameterList","parameters":[],"src":"3164:2:10"},"returnParameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1970,"src":"3196:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:10"},"scope":2397,"src":"3144:97:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2432],"body":{"id":1982,"nodeType":"Block","src":"3373:42:10","statements":[{"expression":{"baseExpression":{"id":1978,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"3390:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1980,"indexExpression":{"id":1979,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"3400:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1977,"id":1981,"nodeType":"Return","src":"3383:25:10"}]},"documentation":{"id":1971,"nodeType":"StructuredDocumentation","src":"3247:47:10","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1983,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:10","nodeType":"FunctionDefinition","parameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"account","nameLocation":"3326:7:10","nodeType":"VariableDeclaration","scope":1983,"src":"3318:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1972,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:10"},"returnParameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1983,"src":"3364:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:10"},"scope":2397,"src":"3299:116:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2442],"body":{"id":2006,"nodeType":"Block","src":"3685:103:10","statements":[{"assignments":[1994],"declarations":[{"constant":false,"id":1994,"mutability":"mutable","name":"owner","nameLocation":"3703:5:10","nodeType":"VariableDeclaration","scope":2006,"src":"3695:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1993,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1997,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1995,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"3711:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:10"},{"expression":{"arguments":[{"id":1999,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"3743:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2000,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"3750:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"3754:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1998,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"3733:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2003,"nodeType":"ExpressionStatement","src":"3733:27:10"},{"expression":{"hexValue":"74727565","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1992,"id":2005,"nodeType":"Return","src":"3770:11:10"}]},"documentation":{"id":1984,"nodeType":"StructuredDocumentation","src":"3421:184:10","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:10","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"to","nameLocation":"3636:2:10","nodeType":"VariableDeclaration","scope":2007,"src":"3628:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1985,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1988,"mutability":"mutable","name":"value","nameLocation":"3648:5:10","nodeType":"VariableDeclaration","scope":2007,"src":"3640:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:10"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2007,"src":"3679:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1990,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:10"},"scope":2397,"src":"3610:178:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2452],"body":{"id":2023,"nodeType":"Block","src":"3935:51:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2017,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"3952:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2019,"indexExpression":{"id":2018,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"3964:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2021,"indexExpression":{"id":2020,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"3971:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2016,"id":2022,"nodeType":"Return","src":"3945:34:10"}]},"documentation":{"id":2008,"nodeType":"StructuredDocumentation","src":"3794:47:10","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":2024,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:10","nodeType":"FunctionDefinition","parameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"owner","nameLocation":"3873:5:10","nodeType":"VariableDeclaration","scope":2024,"src":"3865:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2009,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"spender","nameLocation":"3888:7:10","nodeType":"VariableDeclaration","scope":2024,"src":"3880:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2011,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:10"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2024,"src":"3926:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:10"},"scope":2397,"src":"3846:140:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2462],"body":{"id":2047,"nodeType":"Block","src":"4372:107:10","statements":[{"assignments":[2035],"declarations":[{"constant":false,"id":2035,"mutability":"mutable","name":"owner","nameLocation":"4390:5:10","nodeType":"VariableDeclaration","scope":2047,"src":"4382:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2034,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2038,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2036,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"4398:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:10"},{"expression":{"arguments":[{"id":2040,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"4429:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2041,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"4436:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"4445:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2039,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2288,2348],"referencedDeclaration":2288,"src":"4420:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2044,"nodeType":"ExpressionStatement","src":"4420:31:10"},{"expression":{"hexValue":"74727565","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2033,"id":2046,"nodeType":"Return","src":"4461:11:10"}]},"documentation":{"id":2025,"nodeType":"StructuredDocumentation","src":"3992:296:10","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":2048,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:10","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"spender","nameLocation":"4318:7:10","nodeType":"VariableDeclaration","scope":2048,"src":"4310:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2026,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"value","nameLocation":"4335:5:10","nodeType":"VariableDeclaration","scope":2048,"src":"4327:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:10"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2048,"src":"4366:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2031,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:10"},"scope":2397,"src":"4293:186:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2474],"body":{"id":2079,"nodeType":"Block","src":"5132:151:10","statements":[{"assignments":[2061],"declarations":[{"constant":false,"id":2061,"mutability":"mutable","name":"spender","nameLocation":"5150:7:10","nodeType":"VariableDeclaration","scope":2079,"src":"5142:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2060,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2064,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2062,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"5160:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:10"},{"expression":{"arguments":[{"id":2066,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"5198:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2067,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"5204:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"5213:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2065,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"5182:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2070,"nodeType":"ExpressionStatement","src":"5182:37:10"},{"expression":{"arguments":[{"id":2072,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"5239:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2073,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"5245:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"5249:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2071,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"5229:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2076,"nodeType":"ExpressionStatement","src":"5229:26:10"},{"expression":{"hexValue":"74727565","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2059,"id":2078,"nodeType":"Return","src":"5265:11:10"}]},"documentation":{"id":2049,"nodeType":"StructuredDocumentation","src":"4485:549:10","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":2080,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:10","nodeType":"FunctionDefinition","parameters":{"id":2056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"from","nameLocation":"5069:4:10","nodeType":"VariableDeclaration","scope":2080,"src":"5061:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2050,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2053,"mutability":"mutable","name":"to","nameLocation":"5083:2:10","nodeType":"VariableDeclaration","scope":2080,"src":"5075:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2052,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2055,"mutability":"mutable","name":"value","nameLocation":"5095:5:10","nodeType":"VariableDeclaration","scope":2080,"src":"5087:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2054,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:10"},"returnParameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2080,"src":"5126:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2057,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:10"},"scope":2397,"src":"5039:244:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2126,"nodeType":"Block","src":"5725:231:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2090,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"5739:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2091,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:10","typeDescriptions":{}}},"id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2104,"nodeType":"IfStatement","src":"5735:86:10","trueBody":{"id":2103,"nodeType":"Block","src":"5759:62:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2097,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:10","typeDescriptions":{}}},"id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2096,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"5780:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2102,"nodeType":"RevertStatement","src":"5773:37:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2105,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"5834:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2106,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:10","typeDescriptions":{}}},"id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2119,"nodeType":"IfStatement","src":"5830:86:10","trueBody":{"id":2118,"nodeType":"Block","src":"5852:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2112,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:10","typeDescriptions":{}}},"id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2111,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"5873:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2117,"nodeType":"RevertStatement","src":"5866:39:10"}]}},{"expression":{"arguments":[{"id":2121,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"5933:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2122,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"5939:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"5943:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2120,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"5925:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2125,"nodeType":"ExpressionStatement","src":"5925:24:10"}]},"documentation":{"id":2081,"nodeType":"StructuredDocumentation","src":"5289:362:10","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2127,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:10","nodeType":"FunctionDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"from","nameLocation":"5683:4:10","nodeType":"VariableDeclaration","scope":2127,"src":"5675:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2082,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2085,"mutability":"mutable","name":"to","nameLocation":"5697:2:10","nodeType":"VariableDeclaration","scope":2127,"src":"5689:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2084,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2087,"mutability":"mutable","name":"value","nameLocation":"5709:5:10","nodeType":"VariableDeclaration","scope":2127,"src":"5701:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:10"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[],"src":"5725:0:10"},"scope":2397,"src":"5656:300:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2203,"nodeType":"Block","src":"6346:1032:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2137,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"6360:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2138,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:10","typeDescriptions":{}}},"id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2174,"nodeType":"Block","src":"6534:362:10","statements":[{"assignments":[2149],"declarations":[{"constant":false,"id":2149,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:10","nodeType":"VariableDeclaration","scope":2174,"src":"6548:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2148,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2153,"initialValue":{"baseExpression":{"id":2150,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"6570:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2152,"indexExpression":{"id":2151,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"6580:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2154,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"6603:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"6617:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2164,"nodeType":"IfStatement","src":"6599:115:10","trueBody":{"id":2163,"nodeType":"Block","src":"6624:90:10","statements":[{"errorCall":{"arguments":[{"id":2158,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"6674:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2159,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"6680:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"6693:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2157,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"6649:24:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2162,"nodeType":"RevertStatement","src":"6642:57:10"}]}},{"id":2173,"nodeType":"UncheckedBlock","src":"6727:159:10","statements":[{"expression":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2165,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"6834:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2167,"indexExpression":{"id":2166,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"6844:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2168,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"6852:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"6866:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2172,"nodeType":"ExpressionStatement","src":"6834:37:10"}]}]},"id":2175,"nodeType":"IfStatement","src":"6356:540:10","trueBody":{"id":2147,"nodeType":"Block","src":"6380:148:10","statements":[{"expression":{"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2143,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"6496:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"6512:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2146,"nodeType":"ExpressionStatement","src":"6496:21:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2176,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"6910:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:10","typeDescriptions":{}}},"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2195,"nodeType":"Block","src":"7125:206:10","statements":[{"id":2194,"nodeType":"UncheckedBlock","src":"7139:182:10","statements":[{"expression":{"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2188,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"7284:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2190,"indexExpression":{"id":2189,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"7294:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"7301:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2193,"nodeType":"ExpressionStatement","src":"7284:22:10"}]}]},"id":2196,"nodeType":"IfStatement","src":"6906:425:10","trueBody":{"id":2187,"nodeType":"Block","src":"6928:191:10","statements":[{"id":2186,"nodeType":"UncheckedBlock","src":"6942:167:10","statements":[{"expression":{"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2182,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"7073:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"7089:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2185,"nodeType":"ExpressionStatement","src":"7073:21:10"}]}]}},{"eventCall":{"arguments":[{"id":2198,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"7355:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2199,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"7361:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"7365:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2197,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"7346:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2202,"nodeType":"EmitStatement","src":"7341:30:10"}]},"documentation":{"id":2128,"nodeType":"StructuredDocumentation","src":"5962:304:10","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":2204,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:10","nodeType":"FunctionDefinition","parameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"from","nameLocation":"6296:4:10","nodeType":"VariableDeclaration","scope":2204,"src":"6288:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2129,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"to","nameLocation":"6310:2:10","nodeType":"VariableDeclaration","scope":2204,"src":"6302:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2131,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2134,"mutability":"mutable","name":"value","nameLocation":"6322:5:10","nodeType":"VariableDeclaration","scope":2204,"src":"6314:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2133,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:10"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[],"src":"6346:0:10"},"scope":2397,"src":"6271:1107:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2236,"nodeType":"Block","src":"7777:152:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2212,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"7791:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2213,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:10","typeDescriptions":{}}},"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2226,"nodeType":"IfStatement","src":"7787:91:10","trueBody":{"id":2225,"nodeType":"Block","src":"7814:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2219,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:10","typeDescriptions":{}}},"id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2218,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"7835:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2224,"nodeType":"RevertStatement","src":"7828:39:10"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:10","typeDescriptions":{}}},"id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2232,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"7907:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"7916:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2227,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"7887:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2235,"nodeType":"ExpressionStatement","src":"7887:35:10"}]},"documentation":{"id":2205,"nodeType":"StructuredDocumentation","src":"7384:332:10","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2237,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:10","nodeType":"FunctionDefinition","parameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2207,"mutability":"mutable","name":"account","nameLocation":"7744:7:10","nodeType":"VariableDeclaration","scope":2237,"src":"7736:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2206,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2209,"mutability":"mutable","name":"value","nameLocation":"7761:5:10","nodeType":"VariableDeclaration","scope":2237,"src":"7753:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2208,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:10"},"returnParameters":{"id":2211,"nodeType":"ParameterList","parameters":[],"src":"7777:0:10"},"scope":2397,"src":"7721:208:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2269,"nodeType":"Block","src":"8303:150:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2245,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"8317:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:10","typeDescriptions":{}}},"id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2259,"nodeType":"IfStatement","src":"8313:89:10","trueBody":{"id":2258,"nodeType":"Block","src":"8340:62:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:10","typeDescriptions":{}}},"id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2251,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"8361:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2257,"nodeType":"RevertStatement","src":"8354:37:10"}]}},{"expression":{"arguments":[{"id":2261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"8419:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2262,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:10","typeDescriptions":{}}},"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"8440:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2260,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"8411:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2268,"nodeType":"ExpressionStatement","src":"8411:35:10"}]},"documentation":{"id":2238,"nodeType":"StructuredDocumentation","src":"7935:307:10","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":2270,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:10","nodeType":"FunctionDefinition","parameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2240,"mutability":"mutable","name":"account","nameLocation":"8270:7:10","nodeType":"VariableDeclaration","scope":2270,"src":"8262:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2239,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2242,"mutability":"mutable","name":"value","nameLocation":"8287:5:10","nodeType":"VariableDeclaration","scope":2270,"src":"8279:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2241,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:10"},"returnParameters":{"id":2244,"nodeType":"ParameterList","parameters":[],"src":"8303:0:10"},"scope":2397,"src":"8247:206:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2287,"nodeType":"Block","src":"9063:54:10","statements":[{"expression":{"arguments":[{"id":2281,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"9082:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2282,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"9089:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"9098:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2280,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2288,2348],"referencedDeclaration":2348,"src":"9073:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2286,"nodeType":"ExpressionStatement","src":"9073:37:10"}]},"documentation":{"id":2271,"nodeType":"StructuredDocumentation","src":"8459:525:10","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2288,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:10","nodeType":"FunctionDefinition","parameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"owner","nameLocation":"9015:5:10","nodeType":"VariableDeclaration","scope":2288,"src":"9007:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2272,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"spender","nameLocation":"9030:7:10","nodeType":"VariableDeclaration","scope":2288,"src":"9022:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2274,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"value","nameLocation":"9047:5:10","nodeType":"VariableDeclaration","scope":2288,"src":"9039:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:10"},"returnParameters":{"id":2279,"nodeType":"ParameterList","parameters":[],"src":"9063:0:10"},"scope":2397,"src":"8989:128:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2347,"nodeType":"Block","src":"10047:334:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2300,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"10061:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2301,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:10","typeDescriptions":{}}},"id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2314,"nodeType":"IfStatement","src":"10057:89:10","trueBody":{"id":2313,"nodeType":"Block","src":"10082:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2307,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:10","typeDescriptions":{}}},"id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2306,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"10103:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2312,"nodeType":"RevertStatement","src":"10096:39:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2315,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"10159:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2316,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:10","typeDescriptions":{}}},"id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2329,"nodeType":"IfStatement","src":"10155:90:10","trueBody":{"id":2328,"nodeType":"Block","src":"10182:63:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2322,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:10","typeDescriptions":{}}},"id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2321,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"10203:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2327,"nodeType":"RevertStatement","src":"10196:38:10"}]}},{"expression":{"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2330,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"10254:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2333,"indexExpression":{"id":2331,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"10266:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2334,"indexExpression":{"id":2332,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"10273:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"10284:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2337,"nodeType":"ExpressionStatement","src":"10254:35:10"},{"condition":{"id":2338,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"10303:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2346,"nodeType":"IfStatement","src":"10299:76:10","trueBody":{"id":2345,"nodeType":"Block","src":"10314:61:10","statements":[{"eventCall":{"arguments":[{"id":2340,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"10342:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2341,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"10349:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"10358:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2339,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"10333:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2344,"nodeType":"EmitStatement","src":"10328:36:10"}]}}]},"documentation":{"id":2289,"nodeType":"StructuredDocumentation","src":"9123:821:10","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":2348,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:10","nodeType":"FunctionDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"owner","nameLocation":"9975:5:10","nodeType":"VariableDeclaration","scope":2348,"src":"9967:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2290,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"spender","nameLocation":"9990:7:10","nodeType":"VariableDeclaration","scope":2348,"src":"9982:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2292,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"value","nameLocation":"10007:5:10","nodeType":"VariableDeclaration","scope":2348,"src":"9999:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2294,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2297,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:10","nodeType":"VariableDeclaration","scope":2348,"src":"10014:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2296,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:10"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[],"src":"10047:0:10"},"scope":2397,"src":"9949:432:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2395,"nodeType":"Block","src":"10752:388:10","statements":[{"assignments":[2359],"declarations":[{"constant":false,"id":2359,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:10","nodeType":"VariableDeclaration","scope":2395,"src":"10762:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2358,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2364,"initialValue":{"arguments":[{"id":2361,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"10799:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2362,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"10806:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2360,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"10789:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2365,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"10828:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":2368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2366,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:10","memberName":"max","nodeType":"MemberAccess","src":"10848:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2394,"nodeType":"IfStatement","src":"10824:310:10","trueBody":{"id":2393,"nodeType":"Block","src":"10867:267:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2372,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"10885:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"10904:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2382,"nodeType":"IfStatement","src":"10881:130:10","trueBody":{"id":2381,"nodeType":"Block","src":"10911:100:10","statements":[{"errorCall":{"arguments":[{"id":2376,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"10963:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2377,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"10972:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"10990:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2375,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"10936:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2380,"nodeType":"RevertStatement","src":"10929:67:10"}]}},{"id":2392,"nodeType":"UncheckedBlock","src":"11024:100:10","statements":[{"expression":{"arguments":[{"id":2384,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"11061:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2385,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"11068:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2386,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"11077:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"11096:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2383,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2288,2348],"referencedDeclaration":2348,"src":"11052:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2391,"nodeType":"ExpressionStatement","src":"11052:57:10"}]}]}}]},"documentation":{"id":2349,"nodeType":"StructuredDocumentation","src":"10387:271:10","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":2396,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:10","nodeType":"FunctionDefinition","parameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"owner","nameLocation":"10696:5:10","nodeType":"VariableDeclaration","scope":2396,"src":"10688:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2350,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2353,"mutability":"mutable","name":"spender","nameLocation":"10711:7:10","nodeType":"VariableDeclaration","scope":2396,"src":"10703:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2352,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2355,"mutability":"mutable","name":"value","nameLocation":"10728:5:10","nodeType":"VariableDeclaration","scope":2396,"src":"10720:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2354,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:10"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[],"src":"10752:0:10"},"scope":2397,"src":"10663:477:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2398,"src":"1401:9741:10","usedErrors":[1444,1449,1454,1463,1468,1473],"usedEvents":[2409,2418]}],"src":"105:11038:10"},"id":10},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2475]},"id":2476,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2399,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2400,"nodeType":"StructuredDocumentation","src":"132:70:11","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":2475,"linearizedBaseContracts":[2475],"name":"IERC20","nameLocation":"213:6:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"226:158:11","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2409,"name":"Transfer","nameLocation":"395:8:11","nodeType":"EventDefinition","parameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:11","nodeType":"VariableDeclaration","scope":2409,"src":"404:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2402,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2405,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:11","nodeType":"VariableDeclaration","scope":2409,"src":"426:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2404,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2407,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:11","nodeType":"VariableDeclaration","scope":2409,"src":"446:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:11"},"src":"389:72:11"},{"anonymous":false,"documentation":{"id":2410,"nodeType":"StructuredDocumentation","src":"467:148:11","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2418,"name":"Approval","nameLocation":"626:8:11","nodeType":"EventDefinition","parameters":{"id":2417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:11","nodeType":"VariableDeclaration","scope":2418,"src":"635:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2411,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2414,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:11","nodeType":"VariableDeclaration","scope":2418,"src":"658:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2413,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2416,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:11","nodeType":"VariableDeclaration","scope":2418,"src":"683:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2415,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:11"},"src":"620:78:11"},{"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"704:65:11","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2424,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:11","nodeType":"FunctionDefinition","parameters":{"id":2420,"nodeType":"ParameterList","parameters":[],"src":"794:2:11"},"returnParameters":{"id":2423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2424,"src":"820:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:11"},"scope":2475,"src":"774:55:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"835:71:11","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2432,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:11","nodeType":"FunctionDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"account","nameLocation":"938:7:11","nodeType":"VariableDeclaration","scope":2432,"src":"930:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2426,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:11"},"returnParameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2432,"src":"970:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2429,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:11"},"scope":2475,"src":"911:68:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2433,"nodeType":"StructuredDocumentation","src":"985:213:11","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2442,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:11","nodeType":"FunctionDefinition","parameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"to","nameLocation":"1229:2:11","nodeType":"VariableDeclaration","scope":2442,"src":"1221:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2434,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"value","nameLocation":"1241:5:11","nodeType":"VariableDeclaration","scope":2442,"src":"1233:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:11"},"returnParameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2442,"src":"1266:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2439,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:11"},"scope":2475,"src":"1203:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"1278:264:11","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2452,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:11","nodeType":"FunctionDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"owner","nameLocation":"1574:5:11","nodeType":"VariableDeclaration","scope":2452,"src":"1566:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2447,"mutability":"mutable","name":"spender","nameLocation":"1589:7:11","nodeType":"VariableDeclaration","scope":2452,"src":"1581:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2446,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:11"},"returnParameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2452,"src":"1621:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2449,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:11"},"scope":2475,"src":"1547:83:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2453,"nodeType":"StructuredDocumentation","src":"1636:667:11","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2462,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:11","nodeType":"FunctionDefinition","parameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"spender","nameLocation":"2333:7:11","nodeType":"VariableDeclaration","scope":2462,"src":"2325:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2457,"mutability":"mutable","name":"value","nameLocation":"2350:5:11","nodeType":"VariableDeclaration","scope":2462,"src":"2342:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2456,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:11"},"returnParameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2462,"src":"2375:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2459,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:11"},"scope":2475,"src":"2308:73:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2463,"nodeType":"StructuredDocumentation","src":"2387:297:11","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2474,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:11","nodeType":"FunctionDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"from","nameLocation":"2719:4:11","nodeType":"VariableDeclaration","scope":2474,"src":"2711:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2464,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2467,"mutability":"mutable","name":"to","nameLocation":"2733:2:11","nodeType":"VariableDeclaration","scope":2474,"src":"2725:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2466,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"value","nameLocation":"2745:5:11","nodeType":"VariableDeclaration","scope":2474,"src":"2737:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:11"},"returnParameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2474,"src":"2770:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2471,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:11"},"scope":2475,"src":"2689:87:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2476,"src":"203:2575:11","usedErrors":[],"usedEvents":[2409,2418]}],"src":"106:2673:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2475],"IERC20Metadata":[2501]},"id":2502,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2477,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2479,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2502,"sourceUnit":2476,"src":"151:37:12","symbolAliases":[{"foreign":{"id":2478,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"159:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2481,"name":"IERC20","nameLocations":["305:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":2475,"src":"305:6:12"},"id":2482,"nodeType":"InheritanceSpecifier","src":"305:6:12"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2480,"nodeType":"StructuredDocumentation","src":"190:86:12","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":2501,"linearizedBaseContracts":[2501,2475],"name":"IERC20Metadata","nameLocation":"287:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"318:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2488,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:12","nodeType":"FunctionDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[],"src":"390:2:12"},"returnParameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2488,"src":"416:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2485,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:12"},"scope":2501,"src":"377:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2489,"nodeType":"StructuredDocumentation","src":"437:56:12","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2494,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:12","nodeType":"FunctionDefinition","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[],"src":"513:2:12"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2494,"src":"539:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2491,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:12"},"scope":2501,"src":"498:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2495,"nodeType":"StructuredDocumentation","src":"560:65:12","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2500,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:12","nodeType":"FunctionDefinition","parameters":{"id":2496,"nodeType":"ParameterList","parameters":[],"src":"647:2:12"},"returnParameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2500,"src":"673:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2497,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:12"},"scope":2501,"src":"630:50:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2502,"src":"277:405:12","usedErrors":[],"usedEvents":[2409,2418]}],"src":"125:558:12"},"id":12},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2754]},"id":2755,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2503,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2504,"nodeType":"StructuredDocumentation","src":"127:67:13","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2754,"linearizedBaseContracts":[2754],"name":"Address","nameLocation":"203:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2505,"nodeType":"StructuredDocumentation","src":"217:94:13","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":2509,"name":"AddressInsufficientBalance","nameLocation":"322:26:13","nodeType":"ErrorDefinition","parameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"account","nameLocation":"357:7:13","nodeType":"VariableDeclaration","scope":2509,"src":"349:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2506,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:13"},"src":"316:50:13"},{"documentation":{"id":2510,"nodeType":"StructuredDocumentation","src":"372:75:13","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2514,"name":"AddressEmptyCode","nameLocation":"458:16:13","nodeType":"ErrorDefinition","parameters":{"id":2513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"target","nameLocation":"483:6:13","nodeType":"VariableDeclaration","scope":2514,"src":"475:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2511,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:13"},"src":"452:39:13"},{"documentation":{"id":2515,"nodeType":"StructuredDocumentation","src":"497:89:13","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":2517,"name":"FailedInnerCall","nameLocation":"597:15:13","nodeType":"ErrorDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[],"src":"612:2:13"},"src":"591:24:13"},{"body":{"id":2557,"nodeType":"Block","src":"1602:260:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2527,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2754","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2754","typeString":"library Address"}],"id":2526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2525,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:13","typeDescriptions":{}}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:13","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2530,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"1640:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2540,"nodeType":"IfStatement","src":"1612:109:13","trueBody":{"id":2539,"nodeType":"Block","src":"1648:73:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2535,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2754","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2754","typeString":"library Address"}],"id":2534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2533,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:13","typeDescriptions":{}}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2532,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"1669:26:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2538,"nodeType":"RevertStatement","src":"1662:48:13"}]}},{"assignments":[2542,null],"declarations":[{"constant":false,"id":2542,"mutability":"mutable","name":"success","nameLocation":"1737:7:13","nodeType":"VariableDeclaration","scope":2557,"src":"1732:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2541,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2549,"initialValue":{"arguments":[{"hexValue":"","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2543,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"1750:9:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:13","memberName":"call","nodeType":"MemberAccess","src":"1750:14:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2545,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"1772:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:13"},{"condition":{"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:13","subExpression":{"id":2550,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"1798:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2556,"nodeType":"IfStatement","src":"1793:63:13","trueBody":{"id":2555,"nodeType":"Block","src":"1807:49:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2552,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"1828:15:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2554,"nodeType":"RevertStatement","src":"1821:24:13"}]}}]},"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"621:905:13","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2558,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:13","nodeType":"FunctionDefinition","parameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:13","nodeType":"VariableDeclaration","scope":2558,"src":"1550:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2522,"mutability":"mutable","name":"amount","nameLocation":"1585:6:13","nodeType":"VariableDeclaration","scope":2558,"src":"1577:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:13"},"returnParameters":{"id":2524,"nodeType":"ParameterList","parameters":[],"src":"1602:0:13"},"scope":2754,"src":"1531:331:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2574,"nodeType":"Block","src":"2794:62:13","statements":[{"expression":{"arguments":[{"id":2569,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"2833:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2570,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"2841:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2568,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"2811:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2567,"id":2573,"nodeType":"Return","src":"2804:45:13"}]},"documentation":{"id":2559,"nodeType":"StructuredDocumentation","src":"1868:832:13","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2575,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:13","nodeType":"FunctionDefinition","parameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"target","nameLocation":"2735:6:13","nodeType":"VariableDeclaration","scope":2575,"src":"2727:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2560,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2563,"mutability":"mutable","name":"data","nameLocation":"2756:4:13","nodeType":"VariableDeclaration","scope":2575,"src":"2743:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2562,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:13"},"returnParameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2575,"src":"2780:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2565,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:13"},"scope":2754,"src":"2705:151:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2620,"nodeType":"Block","src":"3293:279:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2589,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2754","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2754","typeString":"library Address"}],"id":2588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2587,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:13","typeDescriptions":{}}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:13","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"3331:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2602,"nodeType":"IfStatement","src":"3303:108:13","trueBody":{"id":2601,"nodeType":"Block","src":"3338:73:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2597,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2754","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2754","typeString":"library Address"}],"id":2596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2595,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:13","typeDescriptions":{}}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2594,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"3359:26:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2600,"nodeType":"RevertStatement","src":"3352:48:13"}]}},{"assignments":[2604,2606],"declarations":[{"constant":false,"id":2604,"mutability":"mutable","name":"success","nameLocation":"3426:7:13","nodeType":"VariableDeclaration","scope":2620,"src":"3421:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2603,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2606,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:13","nodeType":"VariableDeclaration","scope":2620,"src":"3435:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2605,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2613,"initialValue":{"arguments":[{"id":2611,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"3488:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2607,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"3462:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:13","memberName":"call","nodeType":"MemberAccess","src":"3462:11:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"3481:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:13"},{"expression":{"arguments":[{"id":2615,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"3537:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2616,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"3545:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2617,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"3554:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2614,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"3510:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2586,"id":2619,"nodeType":"Return","src":"3503:62:13"}]},"documentation":{"id":2576,"nodeType":"StructuredDocumentation","src":"2862:313:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2621,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:13","nodeType":"FunctionDefinition","parameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"target","nameLocation":"3219:6:13","nodeType":"VariableDeclaration","scope":2621,"src":"3211:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2577,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2580,"mutability":"mutable","name":"data","nameLocation":"3240:4:13","nodeType":"VariableDeclaration","scope":2621,"src":"3227:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2579,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2582,"mutability":"mutable","name":"value","nameLocation":"3254:5:13","nodeType":"VariableDeclaration","scope":2621,"src":"3246:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:13"},"returnParameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2621,"src":"3279:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2584,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:13"},"scope":2754,"src":"3180:392:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2646,"nodeType":"Block","src":"3811:154:13","statements":[{"assignments":[2632,2634],"declarations":[{"constant":false,"id":2632,"mutability":"mutable","name":"success","nameLocation":"3827:7:13","nodeType":"VariableDeclaration","scope":2646,"src":"3822:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2631,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2634,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:13","nodeType":"VariableDeclaration","scope":2646,"src":"3836:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2633,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2639,"initialValue":{"arguments":[{"id":2637,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"3881:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2635,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"3863:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:13","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:13","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:13"},{"expression":{"arguments":[{"id":2641,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"3930:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2642,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"3938:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2643,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"3947:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2640,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"3903:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2630,"id":2645,"nodeType":"Return","src":"3896:62:13"}]},"documentation":{"id":2622,"nodeType":"StructuredDocumentation","src":"3578:128:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2647,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:13","nodeType":"FunctionDefinition","parameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"target","nameLocation":"3747:6:13","nodeType":"VariableDeclaration","scope":2647,"src":"3739:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2623,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2626,"mutability":"mutable","name":"data","nameLocation":"3768:4:13","nodeType":"VariableDeclaration","scope":2647,"src":"3755:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2625,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:13"},"returnParameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2647,"src":"3797:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2628,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:13"},"scope":2754,"src":"3711:254:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2672,"nodeType":"Block","src":"4203:156:13","statements":[{"assignments":[2658,2660],"declarations":[{"constant":false,"id":2658,"mutability":"mutable","name":"success","nameLocation":"4219:7:13","nodeType":"VariableDeclaration","scope":2672,"src":"4214:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2657,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2660,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:13","nodeType":"VariableDeclaration","scope":2672,"src":"4228:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2659,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2665,"initialValue":{"arguments":[{"id":2663,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"4275:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2661,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"4255:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:13","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:13","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:13"},{"expression":{"arguments":[{"id":2667,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"4324:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2668,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"4332:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2669,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"4341:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2666,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"4297:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2656,"id":2671,"nodeType":"Return","src":"4290:62:13"}]},"documentation":{"id":2648,"nodeType":"StructuredDocumentation","src":"3971:130:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2673,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:13","nodeType":"FunctionDefinition","parameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2650,"mutability":"mutable","name":"target","nameLocation":"4144:6:13","nodeType":"VariableDeclaration","scope":2673,"src":"4136:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"data","nameLocation":"4165:4:13","nodeType":"VariableDeclaration","scope":2673,"src":"4152:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2651,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:13"},"returnParameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2673,"src":"4189:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2654,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:13"},"scope":2754,"src":"4106:253:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2712,"nodeType":"Block","src":"4783:424:13","statements":[{"condition":{"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:13","subExpression":{"id":2685,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"4798:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2710,"nodeType":"Block","src":"4857:344:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2692,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"5045:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:13","memberName":"length","nodeType":"MemberAccess","src":"5045:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2696,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"5071:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:13","memberName":"code","nodeType":"MemberAccess","src":"5071:11:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:13","memberName":"length","nodeType":"MemberAccess","src":"5071:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2707,"nodeType":"IfStatement","src":"5041:119:13","trueBody":{"id":2706,"nodeType":"Block","src":"5096:64:13","statements":[{"errorCall":{"arguments":[{"id":2703,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"5138:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2702,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"5121:16:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2705,"nodeType":"RevertStatement","src":"5114:31:13"}]}},{"expression":{"id":2708,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"5180:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2684,"id":2709,"nodeType":"Return","src":"5173:17:13"}]},"id":2711,"nodeType":"IfStatement","src":"4793:408:13","trueBody":{"id":2691,"nodeType":"Block","src":"4807:44:13","statements":[{"expression":{"arguments":[{"id":2688,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"4829:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2687,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"4821:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2690,"nodeType":"ExpressionStatement","src":"4821:19:13"}]}}]},"documentation":{"id":2674,"nodeType":"StructuredDocumentation","src":"4365:255:13","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":2713,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:13","nodeType":"FunctionDefinition","parameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"target","nameLocation":"4678:6:13","nodeType":"VariableDeclaration","scope":2713,"src":"4670:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2675,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2678,"mutability":"mutable","name":"success","nameLocation":"4699:7:13","nodeType":"VariableDeclaration","scope":2713,"src":"4694:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2677,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:13","nodeType":"VariableDeclaration","scope":2713,"src":"4716:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2679,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:13"},"returnParameters":{"id":2684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2713,"src":"4769:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2682,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:13"},"scope":2754,"src":"4625:582:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2734,"nodeType":"Block","src":"5509:122:13","statements":[{"condition":{"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:13","subExpression":{"id":2723,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"5524:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2732,"nodeType":"Block","src":"5583:42:13","statements":[{"expression":{"id":2730,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"5604:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2722,"id":2731,"nodeType":"Return","src":"5597:17:13"}]},"id":2733,"nodeType":"IfStatement","src":"5519:106:13","trueBody":{"id":2729,"nodeType":"Block","src":"5533:44:13","statements":[{"expression":{"arguments":[{"id":2726,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"5555:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2725,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"5547:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2728,"nodeType":"ExpressionStatement","src":"5547:19:13"}]}}]},"documentation":{"id":2714,"nodeType":"StructuredDocumentation","src":"5213:189:13","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":2735,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:13","nodeType":"FunctionDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"success","nameLocation":"5438:7:13","nodeType":"VariableDeclaration","scope":2735,"src":"5433:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2715,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2718,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:13","nodeType":"VariableDeclaration","scope":2735,"src":"5447:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2717,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:13"},"returnParameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2735,"src":"5495:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2720,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:13"},"scope":2754,"src":"5407:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2752,"nodeType":"Block","src":"5798:461:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2741,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"5874:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:13","memberName":"length","nodeType":"MemberAccess","src":"5874:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2750,"nodeType":"Block","src":"6204:49:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2747,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"6225:15:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2749,"nodeType":"RevertStatement","src":"6218:24:13"}]},"id":2751,"nodeType":"IfStatement","src":"5870:383:13","trueBody":{"id":2746,"nodeType":"Block","src":"5897:301:13","statements":[{"AST":{"nativeSrc":"6055:133:13","nodeType":"YulBlock","src":"6055:133:13","statements":[{"nativeSrc":"6073:40:13","nodeType":"YulVariableDeclaration","src":"6073:40:13","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:13","nodeType":"YulIdentifier","src":"6102:10:13"}],"functionName":{"name":"mload","nativeSrc":"6096:5:13","nodeType":"YulIdentifier","src":"6096:5:13"},"nativeSrc":"6096:17:13","nodeType":"YulFunctionCall","src":"6096:17:13"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:13","nodeType":"YulTypedName","src":"6077:15:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:13","nodeType":"YulLiteral","src":"6141:2:13","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:13","nodeType":"YulIdentifier","src":"6145:10:13"}],"functionName":{"name":"add","nativeSrc":"6137:3:13","nodeType":"YulIdentifier","src":"6137:3:13"},"nativeSrc":"6137:19:13","nodeType":"YulFunctionCall","src":"6137:19:13"},{"name":"returndata_size","nativeSrc":"6158:15:13","nodeType":"YulIdentifier","src":"6158:15:13"}],"functionName":{"name":"revert","nativeSrc":"6130:6:13","nodeType":"YulIdentifier","src":"6130:6:13"},"nativeSrc":"6130:44:13","nodeType":"YulFunctionCall","src":"6130:44:13"},"nativeSrc":"6130:44:13","nodeType":"YulExpressionStatement","src":"6130:44:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2738,"isOffset":false,"isSlot":false,"src":"6102:10:13","valueSize":1},{"declaration":2738,"isOffset":false,"isSlot":false,"src":"6145:10:13","valueSize":1}],"id":2745,"nodeType":"InlineAssembly","src":"6046:142:13"}]}}]},"documentation":{"id":2736,"nodeType":"StructuredDocumentation","src":"5637:101:13","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2753,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:13","nodeType":"FunctionDefinition","parameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:13","nodeType":"VariableDeclaration","scope":2753,"src":"5760:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2737,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:13"},"returnParameters":{"id":2740,"nodeType":"ParameterList","parameters":[],"src":"5798:0:13"},"scope":2754,"src":"5743:516:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2755,"src":"195:6066:13","usedErrors":[2509,2514,2517],"usedEvents":[]}],"src":"101:6161:13"},"id":13},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2784]},"id":2785,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2756,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2757,"nodeType":"StructuredDocumentation","src":"127:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2784,"linearizedBaseContracts":[2784],"name":"Context","nameLocation":"642:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2765,"nodeType":"Block","src":"718:34:14","statements":[{"expression":{"expression":{"id":2762,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:14","memberName":"sender","nodeType":"MemberAccess","src":"735:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2761,"id":2764,"nodeType":"Return","src":"728:17:14"}]},"id":2766,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:14","nodeType":"FunctionDefinition","parameters":{"id":2758,"nodeType":"ParameterList","parameters":[],"src":"675:2:14"},"returnParameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2766,"src":"709:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2759,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:14"},"scope":2784,"src":"656:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2774,"nodeType":"Block","src":"825:32:14","statements":[{"expression":{"expression":{"id":2771,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:14","memberName":"data","nodeType":"MemberAccess","src":"842:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2770,"id":2773,"nodeType":"Return","src":"835:15:14"}]},"id":2775,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:14","nodeType":"FunctionDefinition","parameters":{"id":2767,"nodeType":"ParameterList","parameters":[],"src":"775:2:14"},"returnParameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2775,"src":"809:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2768,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:14"},"scope":2784,"src":"758:99:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2782,"nodeType":"Block","src":"935:25:14","statements":[{"expression":{"hexValue":"30","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2779,"id":2781,"nodeType":"Return","src":"945:8:14"}]},"id":2783,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:14","nodeType":"FunctionDefinition","parameters":{"id":2776,"nodeType":"ParameterList","parameters":[],"src":"892:2:14"},"returnParameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2783,"src":"926:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:14"},"scope":2784,"src":"863:97:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2785,"src":"624:338:14","usedErrors":[],"usedEvents":[]}],"src":"101:862:14"},"id":14},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2894]},"id":2895,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2786,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"219:1025:15","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2894,"linearizedBaseContracts":[2894],"name":"StorageSlot","nameLocation":"1253:11:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2790,"members":[{"constant":false,"id":2789,"mutability":"mutable","name":"value","nameLocation":"1308:5:15","nodeType":"VariableDeclaration","scope":2790,"src":"1300:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2788,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:15","nodeType":"StructDefinition","scope":2894,"src":"1271:49:15","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2793,"members":[{"constant":false,"id":2792,"mutability":"mutable","name":"value","nameLocation":"1360:5:15","nodeType":"VariableDeclaration","scope":2793,"src":"1355:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2791,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:15","nodeType":"StructDefinition","scope":2894,"src":"1326:46:15","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2796,"members":[{"constant":false,"id":2795,"mutability":"mutable","name":"value","nameLocation":"1415:5:15","nodeType":"VariableDeclaration","scope":2796,"src":"1407:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:15","nodeType":"StructDefinition","scope":2894,"src":"1378:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2799,"members":[{"constant":false,"id":2798,"mutability":"mutable","name":"value","nameLocation":"1470:5:15","nodeType":"VariableDeclaration","scope":2799,"src":"1462:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2797,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:15","nodeType":"StructDefinition","scope":2894,"src":"1433:49:15","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2802,"members":[{"constant":false,"id":2801,"mutability":"mutable","name":"value","nameLocation":"1523:5:15","nodeType":"VariableDeclaration","scope":2802,"src":"1516:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2800,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:15","nodeType":"StructDefinition","scope":2894,"src":"1488:47:15","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2805,"members":[{"constant":false,"id":2804,"mutability":"mutable","name":"value","nameLocation":"1574:5:15","nodeType":"VariableDeclaration","scope":2805,"src":"1568:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2803,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:15","nodeType":"StructDefinition","scope":2894,"src":"1541:45:15","visibility":"public"},{"body":{"id":2815,"nodeType":"Block","src":"1768:106:15","statements":[{"AST":{"nativeSrc":"1830:38:15","nodeType":"YulBlock","src":"1830:38:15","statements":[{"nativeSrc":"1844:14:15","nodeType":"YulAssignment","src":"1844:14:15","value":{"name":"slot","nativeSrc":"1854:4:15","nodeType":"YulIdentifier","src":"1854:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:15","nodeType":"YulIdentifier","src":"1844:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2812,"isOffset":false,"isSlot":true,"src":"1844:6:15","suffix":"slot","valueSize":1},{"declaration":2808,"isOffset":false,"isSlot":false,"src":"1854:4:15","valueSize":1}],"id":2814,"nodeType":"InlineAssembly","src":"1821:47:15"}]},"documentation":{"id":2806,"nodeType":"StructuredDocumentation","src":"1592:87:15","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2816,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:15","nodeType":"FunctionDefinition","parameters":{"id":2809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"mutability":"mutable","name":"slot","nameLocation":"1716:4:15","nodeType":"VariableDeclaration","scope":2816,"src":"1708:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:15"},"returnParameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2812,"mutability":"mutable","name":"r","nameLocation":"1765:1:15","nodeType":"VariableDeclaration","scope":2816,"src":"1745:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2790_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2811,"nodeType":"UserDefinedTypeName","pathNode":{"id":2810,"name":"AddressSlot","nameLocations":["1745:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2790,"src":"1745:11:15"},"referencedDeclaration":2790,"src":"1745:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2790_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:15"},"scope":2894,"src":"1684:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2826,"nodeType":"Block","src":"2056:106:15","statements":[{"AST":{"nativeSrc":"2118:38:15","nodeType":"YulBlock","src":"2118:38:15","statements":[{"nativeSrc":"2132:14:15","nodeType":"YulAssignment","src":"2132:14:15","value":{"name":"slot","nativeSrc":"2142:4:15","nodeType":"YulIdentifier","src":"2142:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:15","nodeType":"YulIdentifier","src":"2132:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2823,"isOffset":false,"isSlot":true,"src":"2132:6:15","suffix":"slot","valueSize":1},{"declaration":2819,"isOffset":false,"isSlot":false,"src":"2142:4:15","valueSize":1}],"id":2825,"nodeType":"InlineAssembly","src":"2109:47:15"}]},"documentation":{"id":2817,"nodeType":"StructuredDocumentation","src":"1880:87:15","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2827,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:15","nodeType":"FunctionDefinition","parameters":{"id":2820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"slot","nameLocation":"2004:4:15","nodeType":"VariableDeclaration","scope":2827,"src":"1996:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2818,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:15"},"returnParameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"r","nameLocation":"2053:1:15","nodeType":"VariableDeclaration","scope":2827,"src":"2033:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2793_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2822,"nodeType":"UserDefinedTypeName","pathNode":{"id":2821,"name":"BooleanSlot","nameLocations":["2033:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2793,"src":"2033:11:15"},"referencedDeclaration":2793,"src":"2033:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2793_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:15"},"scope":2894,"src":"1972:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2837,"nodeType":"Block","src":"2344:106:15","statements":[{"AST":{"nativeSrc":"2406:38:15","nodeType":"YulBlock","src":"2406:38:15","statements":[{"nativeSrc":"2420:14:15","nodeType":"YulAssignment","src":"2420:14:15","value":{"name":"slot","nativeSrc":"2430:4:15","nodeType":"YulIdentifier","src":"2430:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:15","nodeType":"YulIdentifier","src":"2420:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2834,"isOffset":false,"isSlot":true,"src":"2420:6:15","suffix":"slot","valueSize":1},{"declaration":2830,"isOffset":false,"isSlot":false,"src":"2430:4:15","valueSize":1}],"id":2836,"nodeType":"InlineAssembly","src":"2397:47:15"}]},"documentation":{"id":2828,"nodeType":"StructuredDocumentation","src":"2168:87:15","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2838,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:15","nodeType":"FunctionDefinition","parameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"slot","nameLocation":"2292:4:15","nodeType":"VariableDeclaration","scope":2838,"src":"2284:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2829,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:15"},"returnParameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2834,"mutability":"mutable","name":"r","nameLocation":"2341:1:15","nodeType":"VariableDeclaration","scope":2838,"src":"2321:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2796_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2833,"nodeType":"UserDefinedTypeName","pathNode":{"id":2832,"name":"Bytes32Slot","nameLocations":["2321:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2796,"src":"2321:11:15"},"referencedDeclaration":2796,"src":"2321:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2796_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:15"},"scope":2894,"src":"2260:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2848,"nodeType":"Block","src":"2632:106:15","statements":[{"AST":{"nativeSrc":"2694:38:15","nodeType":"YulBlock","src":"2694:38:15","statements":[{"nativeSrc":"2708:14:15","nodeType":"YulAssignment","src":"2708:14:15","value":{"name":"slot","nativeSrc":"2718:4:15","nodeType":"YulIdentifier","src":"2718:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:15","nodeType":"YulIdentifier","src":"2708:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2845,"isOffset":false,"isSlot":true,"src":"2708:6:15","suffix":"slot","valueSize":1},{"declaration":2841,"isOffset":false,"isSlot":false,"src":"2718:4:15","valueSize":1}],"id":2847,"nodeType":"InlineAssembly","src":"2685:47:15"}]},"documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"2456:87:15","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2849,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:15","nodeType":"FunctionDefinition","parameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"slot","nameLocation":"2580:4:15","nodeType":"VariableDeclaration","scope":2849,"src":"2572:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:15"},"returnParameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"mutability":"mutable","name":"r","nameLocation":"2629:1:15","nodeType":"VariableDeclaration","scope":2849,"src":"2609:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2799_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2844,"nodeType":"UserDefinedTypeName","pathNode":{"id":2843,"name":"Uint256Slot","nameLocations":["2609:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2799,"src":"2609:11:15"},"referencedDeclaration":2799,"src":"2609:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2799_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:15"},"scope":2894,"src":"2548:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2859,"nodeType":"Block","src":"2917:106:15","statements":[{"AST":{"nativeSrc":"2979:38:15","nodeType":"YulBlock","src":"2979:38:15","statements":[{"nativeSrc":"2993:14:15","nodeType":"YulAssignment","src":"2993:14:15","value":{"name":"slot","nativeSrc":"3003:4:15","nodeType":"YulIdentifier","src":"3003:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:15","nodeType":"YulIdentifier","src":"2993:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2856,"isOffset":false,"isSlot":true,"src":"2993:6:15","suffix":"slot","valueSize":1},{"declaration":2852,"isOffset":false,"isSlot":false,"src":"3003:4:15","valueSize":1}],"id":2858,"nodeType":"InlineAssembly","src":"2970:47:15"}]},"documentation":{"id":2850,"nodeType":"StructuredDocumentation","src":"2744:86:15","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2860,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:15","nodeType":"FunctionDefinition","parameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"slot","nameLocation":"2866:4:15","nodeType":"VariableDeclaration","scope":2860,"src":"2858:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:15"},"returnParameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2856,"mutability":"mutable","name":"r","nameLocation":"2914:1:15","nodeType":"VariableDeclaration","scope":2860,"src":"2895:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2802_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2855,"nodeType":"UserDefinedTypeName","pathNode":{"id":2854,"name":"StringSlot","nameLocations":["2895:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2802,"src":"2895:10:15"},"referencedDeclaration":2802,"src":"2895:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2802_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:15"},"scope":2894,"src":"2835:188:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2870,"nodeType":"Block","src":"3225:112:15","statements":[{"AST":{"nativeSrc":"3287:44:15","nodeType":"YulBlock","src":"3287:44:15","statements":[{"nativeSrc":"3301:20:15","nodeType":"YulAssignment","src":"3301:20:15","value":{"name":"store.slot","nativeSrc":"3311:10:15","nodeType":"YulIdentifier","src":"3311:10:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:15","nodeType":"YulIdentifier","src":"3301:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2867,"isOffset":false,"isSlot":true,"src":"3301:6:15","suffix":"slot","valueSize":1},{"declaration":2863,"isOffset":false,"isSlot":true,"src":"3311:10:15","suffix":"slot","valueSize":1}],"id":2869,"nodeType":"InlineAssembly","src":"3278:53:15"}]},"documentation":{"id":2861,"nodeType":"StructuredDocumentation","src":"3029:101:15","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2871,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:15","nodeType":"FunctionDefinition","parameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"store","nameLocation":"3173:5:15","nodeType":"VariableDeclaration","scope":2871,"src":"3158:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2862,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:15"},"returnParameters":{"id":2868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2867,"mutability":"mutable","name":"r","nameLocation":"3222:1:15","nodeType":"VariableDeclaration","scope":2871,"src":"3203:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2802_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2866,"nodeType":"UserDefinedTypeName","pathNode":{"id":2865,"name":"StringSlot","nameLocations":["3203:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2802,"src":"3203:10:15"},"referencedDeclaration":2802,"src":"3203:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2802_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:15"},"scope":2894,"src":"3135:202:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2881,"nodeType":"Block","src":"3513:106:15","statements":[{"AST":{"nativeSrc":"3575:38:15","nodeType":"YulBlock","src":"3575:38:15","statements":[{"nativeSrc":"3589:14:15","nodeType":"YulAssignment","src":"3589:14:15","value":{"name":"slot","nativeSrc":"3599:4:15","nodeType":"YulIdentifier","src":"3599:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:15","nodeType":"YulIdentifier","src":"3589:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2878,"isOffset":false,"isSlot":true,"src":"3589:6:15","suffix":"slot","valueSize":1},{"declaration":2874,"isOffset":false,"isSlot":false,"src":"3599:4:15","valueSize":1}],"id":2880,"nodeType":"InlineAssembly","src":"3566:47:15"}]},"documentation":{"id":2872,"nodeType":"StructuredDocumentation","src":"3343:85:15","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2882,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:15","nodeType":"FunctionDefinition","parameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"slot","nameLocation":"3463:4:15","nodeType":"VariableDeclaration","scope":2882,"src":"3455:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:15"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"r","nameLocation":"3510:1:15","nodeType":"VariableDeclaration","scope":2882,"src":"3492:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2805_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2877,"nodeType":"UserDefinedTypeName","pathNode":{"id":2876,"name":"BytesSlot","nameLocations":["3492:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2805,"src":"3492:9:15"},"referencedDeclaration":2805,"src":"3492:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2805_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:15"},"scope":2894,"src":"3433:186:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2892,"nodeType":"Block","src":"3816:112:15","statements":[{"AST":{"nativeSrc":"3878:44:15","nodeType":"YulBlock","src":"3878:44:15","statements":[{"nativeSrc":"3892:20:15","nodeType":"YulAssignment","src":"3892:20:15","value":{"name":"store.slot","nativeSrc":"3902:10:15","nodeType":"YulIdentifier","src":"3902:10:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:15","nodeType":"YulIdentifier","src":"3892:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2889,"isOffset":false,"isSlot":true,"src":"3892:6:15","suffix":"slot","valueSize":1},{"declaration":2885,"isOffset":false,"isSlot":true,"src":"3902:10:15","suffix":"slot","valueSize":1}],"id":2891,"nodeType":"InlineAssembly","src":"3869:53:15"}]},"documentation":{"id":2883,"nodeType":"StructuredDocumentation","src":"3625:99:15","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2893,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:15","nodeType":"FunctionDefinition","parameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"store","nameLocation":"3765:5:15","nodeType":"VariableDeclaration","scope":2893,"src":"3751:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2884,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:15"},"returnParameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"r","nameLocation":"3813:1:15","nodeType":"VariableDeclaration","scope":2893,"src":"3795:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2805_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2888,"nodeType":"UserDefinedTypeName","pathNode":{"id":2887,"name":"BytesSlot","nameLocations":["3795:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2805,"src":"3795:9:15"},"referencedDeclaration":2805,"src":"3795:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2805_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:15"},"scope":2894,"src":"3729:199:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2895,"src":"1245:2685:15","usedErrors":[],"usedEvents":[]}],"src":"193:3738:15"},"id":15},"contracts/BaluniV1Pool.sol":{"ast":{"absolutePath":"contracts/BaluniV1Pool.sol","exportedSymbols":{"BaluniV1Pool":[5171],"ContextUpgradeable":[1293],"ERC1967Utils":[1872],"ERC20Upgradeable":[1247],"IBaluniV1Oracle":[5524],"IBaluniV1PoolPeriphery":[5851],"IBaluniV1Rebalancer":[5936],"IBaluniV1Registry":[6110],"IERC1822Proxiable":[1432],"IERC20":[2475],"IERC20Errors":[1474],"IERC20Metadata":[2501],"Initializable":[448],"OwnableUpgradeable":[194],"ReentrancyGuardUpgradeable":[1422],"UUPSUpgradeable":[630]},"id":5172,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2896,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:16"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":2897,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5172,"sourceUnit":1248,"src":"1468:78:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2898,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5172,"sourceUnit":195,"src":"1548:75:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":2899,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5172,"sourceUnit":1423,"src":"1625:82:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":2900,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5172,"sourceUnit":449,"src":"1709:75:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":2901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5172,"sourceUnit":631,"src":"1786:77:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1PoolPeriphery.sol","file":"./interfaces/IBaluniV1PoolPeriphery.sol","id":2902,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5172,"sourceUnit":5852,"src":"1867:49:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","file":"./interfaces/IBaluniV1Registry.sol","id":2903,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5172,"sourceUnit":6111,"src":"1918:44:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","file":"./interfaces/IBaluniV1Rebalancer.sol","id":2904,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5172,"sourceUnit":5937,"src":"1964:46:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Oracle.sol","file":"./interfaces/IBaluniV1Oracle.sol","id":2905,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5172,"sourceUnit":5525,"src":"2012:42:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2906,"name":"Initializable","nameLocations":["2088:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"2088:13:16"},"id":2907,"nodeType":"InheritanceSpecifier","src":"2088:13:16"},{"baseName":{"id":2908,"name":"UUPSUpgradeable","nameLocations":["2108:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"2108:15:16"},"id":2909,"nodeType":"InheritanceSpecifier","src":"2108:15:16"},{"baseName":{"id":2910,"name":"OwnableUpgradeable","nameLocations":["2130:18:16"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"2130:18:16"},"id":2911,"nodeType":"InheritanceSpecifier","src":"2130:18:16"},{"baseName":{"id":2912,"name":"ERC20Upgradeable","nameLocations":["2155:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":1247,"src":"2155:16:16"},"id":2913,"nodeType":"InheritanceSpecifier","src":"2155:16:16"},{"baseName":{"id":2914,"name":"ReentrancyGuardUpgradeable","nameLocations":["2178:26:16"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"2178:26:16"},"id":2915,"nodeType":"InheritanceSpecifier","src":"2178:26:16"}],"canonicalName":"BaluniV1Pool","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5171,"linearizedBaseContracts":[5171,1422,1247,1474,2501,2475,194,1293,630,1432,448],"name":"BaluniV1Pool","nameLocation":"2067:12:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"d14ef46d","id":2919,"mutability":"mutable","name":"assetInfos","nameLocation":"2232:10:16","nodeType":"VariableDeclaration","scope":5171,"src":"2213:29:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo[]"},"typeName":{"baseType":{"id":2917,"nodeType":"UserDefinedTypeName","pathNode":{"id":2916,"name":"AssetInfo","nameLocations":["2213:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2941,"src":"2213:9:16"},"referencedDeclaration":2941,"src":"2213:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage_ptr","typeString":"struct BaluniV1Pool.AssetInfo"}},"id":2918,"nodeType":"ArrayTypeName","src":"2213:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage_ptr","typeString":"struct BaluniV1Pool.AssetInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"7fec8d38","id":2921,"mutability":"mutable","name":"trigger","nameLocation":"2266:7:16","nodeType":"VariableDeclaration","scope":5171,"src":"2251:22:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c2ee3a08","id":2923,"mutability":"mutable","name":"ONE","nameLocation":"2295:3:16","nodeType":"VariableDeclaration","scope":5171,"src":"2280:18:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2922,"name":"uint256","nodeType":"ElementaryTypeName","src":"2280:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"cdf456e1","id":2925,"mutability":"mutable","name":"baseAsset","nameLocation":"2320:9:16","nodeType":"VariableDeclaration","scope":5171,"src":"2305:24:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2924,"name":"address","nodeType":"ElementaryTypeName","src":"2305:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2927,"mutability":"mutable","name":"scalingFactor","nameLocation":"2352:13:16","nodeType":"VariableDeclaration","scope":5171,"src":"2336:29:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2926,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"7b103999","id":2930,"mutability":"mutable","name":"registry","nameLocation":"2399:8:16","nodeType":"VariableDeclaration","scope":5171,"src":"2374:33:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"},"typeName":{"id":2929,"nodeType":"UserDefinedTypeName","pathNode":{"id":2928,"name":"IBaluniV1Registry","nameLocations":["2374:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":6110,"src":"2374:17:16"},"referencedDeclaration":6110,"src":"2374:17:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"visibility":"public"},{"constant":false,"functionSelector":"d66bd524","id":2934,"mutability":"mutable","name":"reserves","nameLocation":"2451:8:16","nodeType":"VariableDeclaration","scope":5171,"src":"2416:43:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2933,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2931,"name":"address","nodeType":"ElementaryTypeName","src":"2424:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2416:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"2435:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"canonicalName":"BaluniV1Pool.AssetInfo","id":2941,"members":[{"constant":false,"id":2936,"mutability":"mutable","name":"asset","nameLocation":"2504:5:16","nodeType":"VariableDeclaration","scope":2941,"src":"2496:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2935,"name":"address","nodeType":"ElementaryTypeName","src":"2496:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2938,"mutability":"mutable","name":"weight","nameLocation":"2528:6:16","nodeType":"VariableDeclaration","scope":2941,"src":"2520:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2937,"name":"uint256","nodeType":"ElementaryTypeName","src":"2520:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2940,"mutability":"mutable","name":"slippage","nameLocation":"2553:8:16","nodeType":"VariableDeclaration","scope":2941,"src":"2545:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"2545:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AssetInfo","nameLocation":"2475:9:16","nodeType":"StructDefinition","scope":5171,"src":"2468:136:16","visibility":"public"},{"anonymous":false,"eventSelector":"279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8","id":2948,"name":"RebalancePerformed","nameLocation":"2618:18:16","nodeType":"EventDefinition","parameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2943,"indexed":true,"mutability":"mutable","name":"by","nameLocation":"2653:2:16","nodeType":"VariableDeclaration","scope":2948,"src":"2637:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2942,"name":"address","nodeType":"ElementaryTypeName","src":"2637:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2946,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2667:6:16","nodeType":"VariableDeclaration","scope":2948,"src":"2657:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2944,"name":"address","nodeType":"ElementaryTypeName","src":"2657:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2945,"nodeType":"ArrayTypeName","src":"2657:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2636:38:16"},"src":"2612:63:16"},{"anonymous":false,"eventSelector":"a95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e","id":2955,"name":"WeightsRebalanced","nameLocation":"2687:17:16","nodeType":"EventDefinition","parameters":{"id":2954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2950,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2721:4:16","nodeType":"VariableDeclaration","scope":2955,"src":"2705:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2949,"name":"address","nodeType":"ElementaryTypeName","src":"2705:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2953,"indexed":false,"mutability":"mutable","name":"amountsAdded","nameLocation":"2737:12:16","nodeType":"VariableDeclaration","scope":2955,"src":"2727:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2727:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2952,"nodeType":"ArrayTypeName","src":"2727:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2704:46:16"},"src":"2681:70:16"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":2961,"name":"Burn","nameLocation":"2763:4:16","nodeType":"EventDefinition","parameters":{"id":2960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2784:4:16","nodeType":"VariableDeclaration","scope":2961,"src":"2768:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2956,"name":"address","nodeType":"ElementaryTypeName","src":"2768:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2959,"indexed":false,"mutability":"mutable","name":"sharesBurned","nameLocation":"2798:12:16","nodeType":"VariableDeclaration","scope":2961,"src":"2790:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2958,"name":"uint256","nodeType":"ElementaryTypeName","src":"2790:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:44:16"},"src":"2757:55:16"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":2967,"name":"Mint","nameLocation":"2824:4:16","nodeType":"EventDefinition","parameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2845:2:16","nodeType":"VariableDeclaration","scope":2967,"src":"2829:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2962,"name":"address","nodeType":"ElementaryTypeName","src":"2829:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2965,"indexed":false,"mutability":"mutable","name":"sharesMinted","nameLocation":"2857:12:16","nodeType":"VariableDeclaration","scope":2967,"src":"2849:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"2849:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2828:42:16"},"src":"2818:53:16"},{"anonymous":false,"eventSelector":"cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062","id":2979,"name":"Swap","nameLocation":"2883:4:16","nodeType":"EventDefinition","parameters":{"id":2978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2969,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2914:4:16","nodeType":"VariableDeclaration","scope":2979,"src":"2898:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2968,"name":"address","nodeType":"ElementaryTypeName","src":"2898:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2971,"indexed":true,"mutability":"mutable","name":"fromToken","nameLocation":"2945:9:16","nodeType":"VariableDeclaration","scope":2979,"src":"2929:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2970,"name":"address","nodeType":"ElementaryTypeName","src":"2929:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2973,"indexed":true,"mutability":"mutable","name":"toToken","nameLocation":"2981:7:16","nodeType":"VariableDeclaration","scope":2979,"src":"2965:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2972,"name":"address","nodeType":"ElementaryTypeName","src":"2965:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2975,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"3007:8:16","nodeType":"VariableDeclaration","scope":2979,"src":"2999:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2974,"name":"uint256","nodeType":"ElementaryTypeName","src":"2999:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2977,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"3034:9:16","nodeType":"VariableDeclaration","scope":2979,"src":"3026:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2976,"name":"uint256","nodeType":"ElementaryTypeName","src":"3026:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2887:163:16"},"src":"2877:174:16"},{"body":{"id":3085,"nodeType":"Block","src":"3233:670:16","statements":[{"expression":{"arguments":[{"expression":{"id":2995,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3259:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3263:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3259:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2994,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"3244:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2998,"nodeType":"ExpressionStatement","src":"3244:26:16"},{"expression":{"arguments":[{"hexValue":"42616c756e69204c50","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3294:11:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffab3cad7a41854f5c383caa9a930fe1ab39b32cbc67d790708a7a9f02409818","typeString":"literal_string \"Baluni LP\""},"value":"Baluni LP"},{"hexValue":"42414c554e492d4c50","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3307:11:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9cdad270784d4cf630085b188c6ca83632e4ebde5d7094eec6989a900521298","typeString":"literal_string \"BALUNI-LP\""},"value":"BALUNI-LP"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ffab3cad7a41854f5c383caa9a930fe1ab39b32cbc67d790708a7a9f02409818","typeString":"literal_string \"Baluni LP\""},{"typeIdentifier":"t_stringliteral_e9cdad270784d4cf630085b188c6ca83632e4ebde5d7094eec6989a900521298","typeString":"literal_string \"BALUNI-LP\""}],"id":2999,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"3281:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3003,"nodeType":"ExpressionStatement","src":"3281:38:16"},{"expression":{"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3004,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"3330:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3006,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"3359:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3005,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"3341:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$6110_$","typeString":"type(contract IBaluniV1Registry)"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3341:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"src":"3330:39:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":3009,"nodeType":"ExpressionStatement","src":"3330:39:16"},{"expression":{"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3010,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"3380:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31653138","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3386:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"3380:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3013,"nodeType":"ExpressionStatement","src":"3380:10:16"},{"assignments":[3015],"declarations":[{"constant":false,"id":3015,"mutability":"mutable","name":"result","nameLocation":"3406:6:16","nodeType":"VariableDeclaration","scope":3085,"src":"3401:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3014,"name":"bool","nodeType":"ElementaryTypeName","src":"3401:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3020,"initialValue":{"arguments":[{"id":3017,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"3432:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":3018,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"3441:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3016,"name":"initializeAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"3415:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (address[] memory,uint256[] memory) returns (bool)"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3401:49:16"},{"expression":{"arguments":[{"id":3022,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"3469:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a6174696f6e206661696c6564","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3477:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4","typeString":"literal_string \"Initialization failed\""},"value":"Initialization failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4","typeString":"literal_string \"Initialization failed\""}],"id":3021,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3461:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3461:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3025,"nodeType":"ExpressionStatement","src":"3461:40:16"},{"expression":{"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3026,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"3514:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3027,"name":"_trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"3524:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3514:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3029,"nodeType":"ExpressionStatement","src":"3514:18:16"},{"expression":{"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3030,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"3543:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3031,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"3555:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3564:7:16","memberName":"getUSDC","nodeType":"MemberAccess","referencedDeclaration":6074,"src":"3555:16:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3555:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3543:30:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3035,"nodeType":"ExpressionStatement","src":"3543:30:16"},{"expression":{"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3036,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"3584:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"id":3042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3600:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"id":3040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":3038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3607:2:16","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"36","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3612:1:16","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"3607:6:16","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"}}],"id":3041,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3606:8:16","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"}},"src":"3600:14:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"}},"src":"3584:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3044,"nodeType":"ExpressionStatement","src":"3584:30:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"3633:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3654:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3646:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3047,"name":"address","nodeType":"ElementaryTypeName","src":"3646:7:16","typeDescriptions":{}}},"id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3646:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3633:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420626173652061737365742061646472657373","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3658:28:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_391a75680d8ec99739af126cde56833526e4b720a416f24f1d7ee98c294a45b1","typeString":"literal_string \"Invalid base asset address\""},"value":"Invalid base asset address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_391a75680d8ec99739af126cde56833526e4b720a416f24f1d7ee98c294a45b1","typeString":"literal_string \"Invalid base asset address\""}],"id":3045,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3625:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3625:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3054,"nodeType":"ExpressionStatement","src":"3625:62:16"},{"assignments":[3056],"declarations":[{"constant":false,"id":3056,"mutability":"mutable","name":"totalWeight","nameLocation":"3708:11:16","nodeType":"VariableDeclaration","scope":3085,"src":"3700:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3055,"name":"uint256","nodeType":"ElementaryTypeName","src":"3700:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3058,"initialValue":{"hexValue":"30","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3722:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3700:23:16"},{"body":{"id":3076,"nodeType":"Block","src":"3782:53:16","statements":[{"expression":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3070,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"3797:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3071,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"3812:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3073,"indexExpression":{"id":3072,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"3821:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3812:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3797:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3075,"nodeType":"ExpressionStatement","src":"3797:26:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3063,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"3756:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3064,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"3760:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3769:6:16","memberName":"length","nodeType":"MemberAccess","src":"3760:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3756:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3077,"initializationExpression":{"assignments":[3060],"declarations":[{"constant":false,"id":3060,"mutability":"mutable","name":"i","nameLocation":"3749:1:16","nodeType":"VariableDeclaration","scope":3077,"src":"3741:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"3741:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3062,"initialValue":{"hexValue":"30","id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3753:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3741:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3777:3:16","subExpression":{"id":3067,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"3777:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3069,"nodeType":"ExpressionStatement","src":"3777:3:16"},"nodeType":"ForStatement","src":"3736:99:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3079,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"3855:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3130303030","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3870:5:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3855:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642077656967687473","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3877:17:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89","typeString":"literal_string \"Invalid weights\""},"value":"Invalid weights"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89","typeString":"literal_string \"Invalid weights\""}],"id":3078,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3847:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3847:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3084,"nodeType":"ExpressionStatement","src":"3847:48:16"}]},"functionSelector":"228835ac","id":3086,"implemented":true,"kind":"function","modifiers":[{"id":2992,"kind":"modifierInvocation","modifierName":{"id":2991,"name":"initializer","nameLocations":["3221:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"3221:11:16"},"nodeType":"ModifierInvocation","src":"3221:11:16"}],"name":"initialize","nameLocation":"3068:10:16","nodeType":"FunctionDefinition","parameters":{"id":2990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"_assets","nameLocation":"3106:7:16","nodeType":"VariableDeclaration","scope":3086,"src":"3089:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2980,"name":"address","nodeType":"ElementaryTypeName","src":"3089:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2981,"nodeType":"ArrayTypeName","src":"3089:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2985,"mutability":"mutable","name":"_weights","nameLocation":"3141:8:16","nodeType":"VariableDeclaration","scope":3086,"src":"3124:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"3124:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2984,"nodeType":"ArrayTypeName","src":"3124:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2987,"mutability":"mutable","name":"_trigger","nameLocation":"3168:8:16","nodeType":"VariableDeclaration","scope":3086,"src":"3160:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2986,"name":"uint256","nodeType":"ElementaryTypeName","src":"3160:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2989,"mutability":"mutable","name":"_registry","nameLocation":"3195:9:16","nodeType":"VariableDeclaration","scope":3086,"src":"3187:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2988,"name":"address","nodeType":"ElementaryTypeName","src":"3187:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3078:133:16"},"returnParameters":{"id":2993,"nodeType":"ParameterList","parameters":[],"src":"3233:0:16"},"scope":5171,"src":"3059:844:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[584],"body":{"id":3094,"nodeType":"Block","src":"3993:2:16","statements":[]},"id":3095,"implemented":true,"kind":"function","modifiers":[{"id":3092,"kind":"modifierInvocation","modifierName":{"id":3091,"name":"onlyOwner","nameLocations":["3983:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3983:9:16"},"nodeType":"ModifierInvocation","src":"3983:9:16"}],"name":"_authorizeUpgrade","nameLocation":"3920:17:16","nodeType":"FunctionDefinition","overrides":{"id":3090,"nodeType":"OverrideSpecifier","overrides":[],"src":"3974:8:16"},"parameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"newImplementation","nameLocation":"3946:17:16","nodeType":"VariableDeclaration","scope":3095,"src":"3938:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3087,"name":"address","nodeType":"ElementaryTypeName","src":"3938:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3937:27:16"},"returnParameters":{"id":3093,"nodeType":"ParameterList","parameters":[],"src":"3993:0:16"},"scope":5171,"src":"3911:84:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3112,"nodeType":"Block","src":"4028:145:16","statements":[{"assignments":[3098],"declarations":[{"constant":false,"id":3098,"mutability":"mutable","name":"periphery","nameLocation":"4047:9:16","nodeType":"VariableDeclaration","scope":3112,"src":"4039:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3097,"name":"address","nodeType":"ElementaryTypeName","src":"4039:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3102,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3099,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"4059:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4068:22:16","memberName":"getBaluniPoolPeriphery","nodeType":"MemberAccess","referencedDeclaration":6044,"src":"4059:31:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4039:53:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3104,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4111:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4115:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4111:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3106,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"4125:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4111:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920506572697068657279","id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4136:16:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2","typeString":"literal_string \"Only Periphery\""},"value":"Only Periphery"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2","typeString":"literal_string \"Only Periphery\""}],"id":3103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4103:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3110,"nodeType":"ExpressionStatement","src":"4103:50:16"},{"id":3111,"nodeType":"PlaceholderStatement","src":"4164:1:16"}]},"id":3113,"name":"onlyPeriphery","nameLocation":"4012:13:16","nodeType":"ModifierDefinition","parameters":{"id":3096,"nodeType":"ParameterList","parameters":[],"src":"4025:2:16"},"src":"4003:170:16","virtual":false,"visibility":"internal"},{"body":{"id":3240,"nodeType":"Block","src":"4497:938:16","statements":[{"assignments":[3126],"declarations":[{"constant":false,"id":3126,"mutability":"mutable","name":"rebalancer","nameLocation":"4516:10:16","nodeType":"VariableDeclaration","scope":3240,"src":"4508:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3125,"name":"address","nodeType":"ElementaryTypeName","src":"4508:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3130,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3127,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"4529:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4538:19:16","memberName":"getBaluniRebalancer","nodeType":"MemberAccess","referencedDeclaration":6054,"src":"4529:28:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4529:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4508:51:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3132,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"4580:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4589:19:16","memberName":"getBaluniRebalancer","nodeType":"MemberAccess","referencedDeclaration":6054,"src":"4580:28:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4580:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4622:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4614:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3135,"name":"address","nodeType":"ElementaryTypeName","src":"4614:7:16","typeDescriptions":{}}},"id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4580:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726562616c616e6365722061646472657373","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4626:28:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b3262886d4e83856703b764357b6a852eb26ef34a7982063b49217460e097ddc","typeString":"literal_string \"Invalid rebalancer address\""},"value":"Invalid rebalancer address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b3262886d4e83856703b764357b6a852eb26ef34a7982063b49217460e097ddc","typeString":"literal_string \"Invalid rebalancer address\""}],"id":3131,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4572:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4572:83:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3142,"nodeType":"ExpressionStatement","src":"4572:83:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3144,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"4674:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4682:6:16","memberName":"length","nodeType":"MemberAccess","src":"4674:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3146,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"4692:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4701:6:16","memberName":"length","nodeType":"MemberAccess","src":"4692:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4674:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d61746368","id":3149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4709:36:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""},"value":"Assets and weights length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""}],"id":3143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4666:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4666:80:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3151,"nodeType":"ExpressionStatement","src":"4666:80:16"},{"body":{"id":3236,"nodeType":"Block","src":"4804:602:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3164,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"4827:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3166,"indexExpression":{"id":3165,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"4835:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4827:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4849:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4841:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3167,"name":"address","nodeType":"ElementaryTypeName","src":"4841:7:16","typeDescriptions":{}}},"id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4841:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4827:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061737365742061646472657373","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4853:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92","typeString":"literal_string \"Invalid asset address\""},"value":"Invalid asset address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92","typeString":"literal_string \"Invalid asset address\""}],"id":3163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4819:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4819:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3174,"nodeType":"ExpressionStatement","src":"4819:58:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3176,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"4900:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3178,"indexExpression":{"id":3177,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"4909:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4900:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4914:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4900:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420776569676874","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4917:16:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19","typeString":"literal_string \"Invalid weight\""},"value":"Invalid weight"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19","typeString":"literal_string \"Invalid weight\""}],"id":3175,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4892:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4892:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3183,"nodeType":"ExpressionStatement","src":"4892:42:16"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":3188,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"5025:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3190,"indexExpression":{"id":3189,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"5033:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5025:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3191,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"5066:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3193,"indexExpression":{"id":3192,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"5075:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5066:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":3194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5110:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3187,"name":"AssetInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"4985:9:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AssetInfo_$2941_storage_ptr_$","typeString":"type(struct BaluniV1Pool.AssetInfo storage pointer)"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5018:5:16","5058:6:16","5100:8:16"],"names":["asset","weight","slippage"],"nodeType":"FunctionCall","src":"4985:180:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_memory_ptr","typeString":"struct BaluniV1Pool.AssetInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AssetInfo_$2941_memory_ptr","typeString":"struct BaluniV1Pool.AssetInfo memory"}],"expression":{"id":3184,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"4951:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4962:4:16","memberName":"push","nodeType":"MemberAccess","src":"4951:15:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage_ptr_$_t_struct$_AssetInfo_$2941_storage_$returns$__$attached_to$_t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage_ptr_$","typeString":"function (struct BaluniV1Pool.AssetInfo storage ref[] storage pointer,struct BaluniV1Pool.AssetInfo storage ref)"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4951:229:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3197,"nodeType":"ExpressionStatement","src":"4951:229:16"},{"assignments":[3200],"declarations":[{"constant":false,"id":3200,"mutability":"mutable","name":"asset","nameLocation":"5204:5:16","nodeType":"VariableDeclaration","scope":3236,"src":"5197:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2475","typeString":"contract IERC20"},"typeName":{"id":3199,"nodeType":"UserDefinedTypeName","pathNode":{"id":3198,"name":"IERC20","nameLocations":["5197:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":2475,"src":"5197:6:16"},"referencedDeclaration":2475,"src":"5197:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2475","typeString":"contract IERC20"}},"visibility":"internal"}],"id":3206,"initialValue":{"arguments":[{"baseExpression":{"id":3202,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"5219:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3204,"indexExpression":{"id":3203,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"5227:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5219:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3201,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"5212:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2475_$","typeString":"type(contract IERC20)"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5212:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2475","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"5197:33:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3211,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5273:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$5171","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$5171","typeString":"contract BaluniV1Pool"}],"id":3210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5265:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3209,"name":"address","nodeType":"ElementaryTypeName","src":"5265:7:16","typeDescriptions":{}}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5265:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3215,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"5288:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5280:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3213,"name":"address","nodeType":"ElementaryTypeName","src":"5280:7:16","typeDescriptions":{}}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3207,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"5249:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2475","typeString":"contract IERC20"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5255:9:16","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"5249:15:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5249:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5304:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5249:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3235,"nodeType":"IfStatement","src":"5245:150:16","trueBody":{"id":3234,"nodeType":"Block","src":"5307:88:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3225,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"5348:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5340:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3223,"name":"address","nodeType":"ElementaryTypeName","src":"5340:7:16","typeDescriptions":{}}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5340:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5366:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3228,"name":"uint256","nodeType":"ElementaryTypeName","src":"5366:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3227,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5361:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5375:3:16","memberName":"max","nodeType":"MemberAccess","src":"5361:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3220,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"5326:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2475","typeString":"contract IERC20"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5332:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2462,"src":"5326:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5326:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3233,"nodeType":"ExpressionStatement","src":"5326:53:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3156,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"4779:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3157,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"4783:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4791:6:16","memberName":"length","nodeType":"MemberAccess","src":"4783:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4779:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3237,"initializationExpression":{"assignments":[3153],"declarations":[{"constant":false,"id":3153,"mutability":"mutable","name":"i","nameLocation":"4772:1:16","nodeType":"VariableDeclaration","scope":3237,"src":"4764:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3152,"name":"uint256","nodeType":"ElementaryTypeName","src":"4764:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3155,"initialValue":{"hexValue":"30","id":3154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4776:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4764:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4799:3:16","subExpression":{"id":3160,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"4799:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3162,"nodeType":"ExpressionStatement","src":"4799:3:16"},"nodeType":"ForStatement","src":"4759:647:16"},{"expression":{"hexValue":"74727565","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5423:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3124,"id":3239,"nodeType":"Return","src":"5416:11:16"}]},"documentation":{"id":3114,"nodeType":"StructuredDocumentation","src":"4181:207:16","text":" @dev Initializes the assets and their weights for the pool.\n @param _assets The array of asset addresses.\n @param _weights The array of weights corresponding to each asset."},"id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"initializeAssets","nameLocation":"4403:16:16","nodeType":"FunctionDefinition","parameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3117,"mutability":"mutable","name":"_assets","nameLocation":"4437:7:16","nodeType":"VariableDeclaration","scope":3241,"src":"4420:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3115,"name":"address","nodeType":"ElementaryTypeName","src":"4420:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3116,"nodeType":"ArrayTypeName","src":"4420:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3120,"mutability":"mutable","name":"_weights","nameLocation":"4463:8:16","nodeType":"VariableDeclaration","scope":3241,"src":"4446:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3119,"nodeType":"ArrayTypeName","src":"4446:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4419:53:16"},"returnParameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3241,"src":"4491:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3122,"name":"bool","nodeType":"ElementaryTypeName","src":"4491:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4490:6:16"},"scope":5171,"src":"4394:1041:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3345,"nodeType":"Block","src":"5928:899:16","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3253,"name":"isRebalanceNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"5947:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5947:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526562616c616e6365206e6f74206e6565646564","id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5968:22:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""},"value":"Rebalance not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""}],"id":3252,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5939:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5939:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3257,"nodeType":"ExpressionStatement","src":"5939:52:16"},{"assignments":[3259,3262],"declarations":[{"constant":false,"id":3259,"mutability":"mutable","name":"totalValuation","nameLocation":"6011:14:16","nodeType":"VariableDeclaration","scope":3345,"src":"6003:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3258,"name":"uint256","nodeType":"ElementaryTypeName","src":"6003:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3262,"mutability":"mutable","name":"valuations","nameLocation":"6044:10:16","nodeType":"VariableDeclaration","scope":3345,"src":"6027:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3260,"name":"uint256","nodeType":"ElementaryTypeName","src":"6027:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3261,"nodeType":"ArrayTypeName","src":"6027:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3265,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3263,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"6058:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6058:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"6002:80:16"},{"assignments":[3270],"declarations":[{"constant":false,"id":3270,"mutability":"mutable","name":"amountsToAdd","nameLocation":"6120:12:16","nodeType":"VariableDeclaration","scope":3345,"src":"6103:29:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"6103:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3269,"nodeType":"ArrayTypeName","src":"6103:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3275,"initialValue":{"arguments":[{"id":3272,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"6158:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3273,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"6174:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3271,"name":"_calculateAmountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"6135:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256[] memory) view returns (uint256[] memory)"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6135:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6103:82:16"},{"assignments":[3277],"declarations":[{"constant":false,"id":3277,"mutability":"mutable","name":"totalAddedLiquidity","nameLocation":"6212:19:16","nodeType":"VariableDeclaration","scope":3345,"src":"6204:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"6204:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3281,"initialValue":{"arguments":[{"id":3279,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"6264:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3278,"name":"_calculateTotalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"6234:29:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) view returns (uint256)"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6234:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6204:73:16"},{"expression":{"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3282,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"6290:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"id":3283,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"6313:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6290:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3285,"nodeType":"ExpressionStatement","src":"6290:36:16"},{"assignments":[3290],"declarations":[{"constant":false,"id":3290,"mutability":"mutable","name":"amounts","nameLocation":"6356:7:16","nodeType":"VariableDeclaration","scope":3345,"src":"6339:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"6339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3289,"nodeType":"ArrayTypeName","src":"6339:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3297,"initialValue":{"arguments":[{"expression":{"id":3294,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"6380:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6391:6:16","memberName":"length","nodeType":"MemberAccess","src":"6380:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6366:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3291,"name":"uint256","nodeType":"ElementaryTypeName","src":"6370:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3292,"nodeType":"ArrayTypeName","src":"6370:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6366:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6339:59:16"},{"body":{"id":3327,"nodeType":"Block","src":"6461:138:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3309,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"6480:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3311,"indexExpression":{"id":3310,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"6493:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6480:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6498:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6480:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3326,"nodeType":"IfStatement","src":"6476:112:16","trueBody":{"id":3325,"nodeType":"Block","src":"6501:87:16","statements":[{"expression":{"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3314,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"6520:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3316,"indexExpression":{"id":3315,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"6528:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6520:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3318,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"6553:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3319,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"6556:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3321,"indexExpression":{"id":3320,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"6569:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6556:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3317,"name":"_calculateLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"6533:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6533:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6520:52:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3324,"nodeType":"ExpressionStatement","src":"6520:52:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3302,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"6431:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3303,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"6435:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6448:6:16","memberName":"length","nodeType":"MemberAccess","src":"6435:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6431:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3328,"initializationExpression":{"assignments":[3299],"declarations":[{"constant":false,"id":3299,"mutability":"mutable","name":"i","nameLocation":"6424:1:16","nodeType":"VariableDeclaration","scope":3328,"src":"6416:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3298,"name":"uint256","nodeType":"ElementaryTypeName","src":"6416:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3301,"initialValue":{"hexValue":"30","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6428:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6416:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6456:3:16","subExpression":{"id":3306,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"6456:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3308,"nodeType":"ExpressionStatement","src":"6456:3:16"},"nodeType":"ForStatement","src":"6411:188:16"},{"expression":{"arguments":[{"id":3330,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"6617:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3331,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"6627:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3329,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"6611:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6611:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3333,"nodeType":"ExpressionStatement","src":"6611:36:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3334,"name":"updateSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"6715:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6715:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3336,"nodeType":"ExpressionStatement","src":"6715:16:16"},{"eventCall":{"arguments":[{"expression":{"id":3338,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6767:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6771:6:16","memberName":"sender","nodeType":"MemberAccess","src":"6767:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3340,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"6779:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3337,"name":"WeightsRebalanced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"6749:17:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory)"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3342,"nodeType":"EmitStatement","src":"6744:48:16"},{"expression":{"id":3343,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"6812:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3251,"id":3344,"nodeType":"Return","src":"6805:14:16"}]},"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"5443:385:16","text":" @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\n transferring the calculated amounts from the user to the pool, minting the total added liquidity,\n updating the reserves, and emitting an event to indicate the rebalancing of weights.\n @param receiver The address to receive the minted liquidity tokens."},"functionSelector":"0723c999","id":3346,"implemented":true,"kind":"function","modifiers":[{"id":3247,"kind":"modifierInvocation","modifierName":{"id":3246,"name":"onlyPeriphery","nameLocations":["5887:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":3113,"src":"5887:13:16"},"nodeType":"ModifierInvocation","src":"5887:13:16"}],"name":"rebalanceWeights","nameLocation":"5843:16:16","nodeType":"FunctionDefinition","parameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"receiver","nameLocation":"5868:8:16","nodeType":"VariableDeclaration","scope":3346,"src":"5860:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3243,"name":"address","nodeType":"ElementaryTypeName","src":"5860:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5859:18:16"},"returnParameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3346,"src":"5910:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3248,"name":"uint256","nodeType":"ElementaryTypeName","src":"5910:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3249,"nodeType":"ArrayTypeName","src":"5910:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5909:18:16"},"scope":5171,"src":"5834:993:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3446,"nodeType":"Block","src":"7803:851:16","statements":[{"assignments":[3363],"declarations":[{"constant":false,"id":3363,"mutability":"mutable","name":"_BPS_FEE","nameLocation":"7822:8:16","nodeType":"VariableDeclaration","scope":3446,"src":"7814:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3362,"name":"uint256","nodeType":"ElementaryTypeName","src":"7814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3367,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3364,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"7833:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7842:10:16","memberName":"getBPS_FEE","nodeType":"MemberAccess","referencedDeclaration":6084,"src":"7833:19:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7833:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7814:40:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3369,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"7873:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3370,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"7886:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7873:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742073776170207468652073616d6520746f6b656e","id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7895:28:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23","typeString":"literal_string \"Cannot swap the same token\""},"value":"Cannot swap the same token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23","typeString":"literal_string \"Cannot swap the same token\""}],"id":3368,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7865:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:59:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3374,"nodeType":"ExpressionStatement","src":"7865:59:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3376,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"7943:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7952:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7943:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":3379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7955:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":3375,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7935:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7935:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3381,"nodeType":"ExpressionStatement","src":"7935:55:16"},{"expression":{"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3382,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"8001:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3384,"indexExpression":{"id":3383,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"8010:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8001:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3385,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"8024:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8001:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3387,"nodeType":"ExpressionStatement","src":"8001:29:16"},{"assignments":[3389],"declarations":[{"constant":false,"id":3389,"mutability":"mutable","name":"receivedAmount","nameLocation":"8051:14:16","nodeType":"VariableDeclaration","scope":3446,"src":"8043:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"8043:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3395,"initialValue":{"arguments":[{"id":3391,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"8093:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3392,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"8104:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3393,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"8113:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3390,"name":"getAmountOutWithSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"8068:24:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8068:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8043:77:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3398,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"8155:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3397,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"8139:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8139:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3400,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"8167:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8139:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204c6971756964697479","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8183:24:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""},"value":"Insufficient Liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""}],"id":3396,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8131:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8131:77:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3404,"nodeType":"ExpressionStatement","src":"8131:77:16"},{"expression":{"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3405,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"8219:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3407,"indexExpression":{"id":3406,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"8228:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8219:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3408,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"8240:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8219:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3410,"nodeType":"ExpressionStatement","src":"8219:35:16"},{"assignments":[3412],"declarations":[{"constant":false,"id":3412,"mutability":"mutable","name":"fee","nameLocation":"8275:3:16","nodeType":"VariableDeclaration","scope":3446,"src":"8267:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3411,"name":"uint256","nodeType":"ElementaryTypeName","src":"8267:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3419,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3413,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"8282:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3414,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"8299:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8282:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8281:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8311:5:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"8281:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8267:49:16"},{"expression":{"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3420,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"8327:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3421,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"8339:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3422,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"8356:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8339:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3425,"nodeType":"ExpressionStatement","src":"8327:32:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3427,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"8380:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8392:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8380:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7420746f2073656e64206d7573742062652067726561746572207468616e2030","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8395:39:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec","typeString":"literal_string \"Amount to send must be greater than 0\""},"value":"Amount to send must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec","typeString":"literal_string \"Amount to send must be greater than 0\""}],"id":3426,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8372:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8372:63:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3432,"nodeType":"ExpressionStatement","src":"8372:63:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3433,"name":"updateSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"8530:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8530:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3435,"nodeType":"ExpressionStatement","src":"8530:16:16"},{"eventCall":{"arguments":[{"id":3437,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"8569:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3438,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"8579:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3439,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"8590:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3440,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"8599:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3441,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"8607:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3436,"name":"Swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"8564:4:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8564:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3443,"nodeType":"EmitStatement","src":"8559:58:16"},{"expression":{"id":3444,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"8637:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3361,"id":3445,"nodeType":"Return","src":"8630:16:16"}]},"documentation":{"id":3347,"nodeType":"StructuredDocumentation","src":"6835:785:16","text":" @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\n Requirements:\n - `fromToken` and `toToken` must be different tokens.\n - `amount` must be greater than zero.\n - Sufficient liquidity of `toToken` must be available in the contract.\n Emits a `Swap` event with the details of the swap.\n Updates the reserves after the swap.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of `fromToken` to swap.\n @param receiver The address to receive the swapped tokens.\n @return amountOut The amount of `toToken` received after the swap."},"functionSelector":"6e81221c","id":3447,"implemented":true,"kind":"function","modifiers":[{"id":3358,"kind":"modifierInvocation","modifierName":{"id":3357,"name":"nonReentrant","nameLocations":["7762:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1362,"src":"7762:12:16"},"nodeType":"ModifierInvocation","src":"7762:12:16"}],"name":"swap","nameLocation":"7635:4:16","nodeType":"FunctionDefinition","parameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"fromToken","nameLocation":"7658:9:16","nodeType":"VariableDeclaration","scope":3447,"src":"7650:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3348,"name":"address","nodeType":"ElementaryTypeName","src":"7650:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3351,"mutability":"mutable","name":"toToken","nameLocation":"7686:7:16","nodeType":"VariableDeclaration","scope":3447,"src":"7678:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3350,"name":"address","nodeType":"ElementaryTypeName","src":"7678:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3353,"mutability":"mutable","name":"amount","nameLocation":"7712:6:16","nodeType":"VariableDeclaration","scope":3447,"src":"7704:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3352,"name":"uint256","nodeType":"ElementaryTypeName","src":"7704:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3355,"mutability":"mutable","name":"receiver","nameLocation":"7737:8:16","nodeType":"VariableDeclaration","scope":3447,"src":"7729:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3354,"name":"address","nodeType":"ElementaryTypeName","src":"7729:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7639:113:16"},"returnParameters":{"id":3361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3360,"mutability":"mutable","name":"amountOut","nameLocation":"7792:9:16","nodeType":"VariableDeclaration","scope":3447,"src":"7784:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3359,"name":"uint256","nodeType":"ElementaryTypeName","src":"7784:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7783:19:16"},"scope":5171,"src":"7626:1028:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3552,"nodeType":"Block","src":"9194:1222:16","statements":[{"assignments":[3460],"declarations":[{"constant":false,"id":3460,"mutability":"mutable","name":"amountOut","nameLocation":"9213:9:16","nodeType":"VariableDeclaration","scope":3552,"src":"9205:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3459,"name":"uint256","nodeType":"ElementaryTypeName","src":"9205:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3466,"initialValue":{"arguments":[{"id":3462,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"9238:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3463,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"9249:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3464,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"9258:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3461,"name":"getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"9225:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9225:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9205:60:16"},{"assignments":[3468],"declarations":[{"constant":false,"id":3468,"mutability":"mutable","name":"slippageFrom","nameLocation":"9286:12:16","nodeType":"VariableDeclaration","scope":3552,"src":"9278:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"9278:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3472,"initialValue":{"arguments":[{"id":3470,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"9313:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3469,"name":"getSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"9301:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9301:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9278:45:16"},{"assignments":[3474],"declarations":[{"constant":false,"id":3474,"mutability":"mutable","name":"slippageTo","nameLocation":"9342:10:16","nodeType":"VariableDeclaration","scope":3552,"src":"9334:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3473,"name":"uint256","nodeType":"ElementaryTypeName","src":"9334:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3478,"initialValue":{"arguments":[{"id":3476,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"9367:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3475,"name":"getSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"9355:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9355:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9334:41:16"},{"assignments":[3480],"declarations":[{"constant":false,"id":3480,"mutability":"mutable","name":"fromTokenWeight","nameLocation":"9396:15:16","nodeType":"VariableDeclaration","scope":3552,"src":"9388:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"9388:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3484,"initialValue":{"arguments":[{"id":3482,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"9429:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3481,"name":"getTokenWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"9414:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9414:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9388:51:16"},{"assignments":[3486],"declarations":[{"constant":false,"id":3486,"mutability":"mutable","name":"toTokenWeight","nameLocation":"9458:13:16","nodeType":"VariableDeclaration","scope":3552,"src":"9450:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3485,"name":"uint256","nodeType":"ElementaryTypeName","src":"9450:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3490,"initialValue":{"arguments":[{"id":3488,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"9489:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3487,"name":"getTokenWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"9474:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9474:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9450:47:16"},{"assignments":[3492],"declarations":[{"constant":false,"id":3492,"mutability":"mutable","name":"slippageFromAmount","nameLocation":"9547:18:16","nodeType":"VariableDeclaration","scope":3552,"src":"9539:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"9539:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3500,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3493,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"9570:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3494,"name":"slippageFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"9582:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9570:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9569:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9568:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9599:5:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"9568:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9539:65:16"},{"assignments":[3502],"declarations":[{"constant":false,"id":3502,"mutability":"mutable","name":"slippageToAmount","nameLocation":"9623:16:16","nodeType":"VariableDeclaration","scope":3552,"src":"9615:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3501,"name":"uint256","nodeType":"ElementaryTypeName","src":"9615:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3509,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3503,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"9643:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3504,"name":"slippageTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"9655:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9643:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9642:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9669:5:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"9642:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9615:59:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3510,"name":"fromTokenWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"9771:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"id":3512,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"9810:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3511,"name":"getDeviationForToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"9789:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9789:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9771:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3528,"nodeType":"Block","src":"9897:138:16","statements":[{"expression":{"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3522,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"9981:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3523,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"9993:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3524,"name":"slippageFromAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"10005:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9993:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9981:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3527,"nodeType":"ExpressionStatement","src":"9981:42:16"}]},"id":3529,"nodeType":"IfStatement","src":"9767:268:16","trueBody":{"id":3521,"nodeType":"Block","src":"9822:69:16","statements":[{"expression":{"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3515,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"9837:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3516,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"9849:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3517,"name":"slippageFromAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"9861:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9837:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3520,"nodeType":"ExpressionStatement","src":"9837:42:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3530,"name":"toTokenWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"10127:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":3532,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"10164:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3531,"name":"getDeviationForToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"10143:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10143:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10127:45:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3548,"nodeType":"Block","src":"10247:133:16","statements":[{"expression":{"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3542,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"10328:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3543,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"10340:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3544,"name":"slippageToAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"10352:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10340:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10328:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3547,"nodeType":"ExpressionStatement","src":"10328:40:16"}]},"id":3549,"nodeType":"IfStatement","src":"10123:257:16","trueBody":{"id":3541,"nodeType":"Block","src":"10174:67:16","statements":[{"expression":{"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3535,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"10189:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3536,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"10201:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3537,"name":"slippageToAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"10213:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10189:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3540,"nodeType":"ExpressionStatement","src":"10189:40:16"}]}},{"expression":{"id":3550,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"10399:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3458,"id":3551,"nodeType":"Return","src":"10392:16:16"}]},"documentation":{"id":3448,"nodeType":"StructuredDocumentation","src":"8660:378:16","text":" @dev Calcola l'importo effettivo di `toToken` ricevuto tenendo conto dello slippage.\n @param fromToken The address of the token being swapped from.\n @param toToken The address of the token being swapped to.\n @param amount The amount of `fromToken` being swapped.\n @return The amount of `toToken` received after applying slippage."},"functionSelector":"a1f241cc","id":3553,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOutWithSlippage","nameLocation":"9053:24:16","nodeType":"FunctionDefinition","parameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"fromToken","nameLocation":"9096:9:16","nodeType":"VariableDeclaration","scope":3553,"src":"9088:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3449,"name":"address","nodeType":"ElementaryTypeName","src":"9088:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3452,"mutability":"mutable","name":"toToken","nameLocation":"9124:7:16","nodeType":"VariableDeclaration","scope":3553,"src":"9116:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3451,"name":"address","nodeType":"ElementaryTypeName","src":"9116:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3454,"mutability":"mutable","name":"amount","nameLocation":"9150:6:16","nodeType":"VariableDeclaration","scope":3553,"src":"9142:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"9142:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9077:86:16"},"returnParameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3553,"src":"9185:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3456,"name":"uint256","nodeType":"ElementaryTypeName","src":"9185:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9184:9:16"},"scope":5171,"src":"9044:1372:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3589,"nodeType":"Block","src":"10669:244:16","statements":[{"body":{"id":3585,"nodeType":"Block","src":"10728:124:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3572,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"10747:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3574,"indexExpression":{"id":3573,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"10758:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10747:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10761:5:16","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2936,"src":"10747:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3576,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"10770:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10747:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3584,"nodeType":"IfStatement","src":"10743:98:16","trueBody":{"id":3583,"nodeType":"Block","src":"10777:64:16","statements":[{"expression":{"expression":{"baseExpression":{"id":3578,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"10803:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3580,"indexExpression":{"id":3579,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"10814:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10803:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10817:8:16","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"10803:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3560,"id":3582,"nodeType":"Return","src":"10796:29:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3565,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"10700:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3566,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"10704:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10715:6:16","memberName":"length","nodeType":"MemberAccess","src":"10704:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10700:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3586,"initializationExpression":{"assignments":[3562],"declarations":[{"constant":false,"id":3562,"mutability":"mutable","name":"i","nameLocation":"10693:1:16","nodeType":"VariableDeclaration","scope":3586,"src":"10685:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3561,"name":"uint256","nodeType":"ElementaryTypeName","src":"10685:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3564,"initialValue":{"hexValue":"30","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10697:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10685:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10723:3:16","subExpression":{"id":3569,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"10723:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3571,"nodeType":"ExpressionStatement","src":"10723:3:16"},"nodeType":"ForStatement","src":"10680:172:16"},{"expression":{"hexValue":"30","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3560,"id":3588,"nodeType":"Return","src":"10862:8:16"}]},"documentation":{"id":3554,"nodeType":"StructuredDocumentation","src":"10424:173:16","text":" @dev Restituisce lo slippage attuale per un dato token.\n @param token The address of the token.\n @return Lo slippage attuale per il token."},"functionSelector":"12899068","id":3590,"implemented":true,"kind":"function","modifiers":[],"name":"getSlippage","nameLocation":"10612:11:16","nodeType":"FunctionDefinition","parameters":{"id":3557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3556,"mutability":"mutable","name":"token","nameLocation":"10632:5:16","nodeType":"VariableDeclaration","scope":3590,"src":"10624:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3555,"name":"address","nodeType":"ElementaryTypeName","src":"10624:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10623:15:16"},"returnParameters":{"id":3560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3590,"src":"10660:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3558,"name":"uint256","nodeType":"ElementaryTypeName","src":"10660:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10659:9:16"},"scope":5171,"src":"10603:310:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3739,"nodeType":"Block","src":"11052:1350:16","statements":[{"assignments":[3598,3601],"declarations":[{"constant":false,"id":3598,"mutability":"mutable","name":"directions","nameLocation":"11078:10:16","nodeType":"VariableDeclaration","scope":3739,"src":"11064:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3596,"name":"bool","nodeType":"ElementaryTypeName","src":"11064:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3597,"nodeType":"ArrayTypeName","src":"11064:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"deviations","nameLocation":"11107:10:16","nodeType":"VariableDeclaration","scope":3739,"src":"11090:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3599,"name":"uint256","nodeType":"ElementaryTypeName","src":"11090:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3600,"nodeType":"ArrayTypeName","src":"11090:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3604,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3602,"name":"getDeviation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"11121:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (bool[] memory,uint256[] memory)"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11121:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"11063:72:16"},{"assignments":[3606],"declarations":[{"constant":false,"id":3606,"mutability":"mutable","name":"_BPS_FEE","nameLocation":"11154:8:16","nodeType":"VariableDeclaration","scope":3739,"src":"11146:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3605,"name":"uint256","nodeType":"ElementaryTypeName","src":"11146:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3610,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3607,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"11165:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11174:10:16","memberName":"getBPS_FEE","nodeType":"MemberAccess","referencedDeclaration":6084,"src":"11165:19:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11165:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11146:40:16"},{"assignments":[3612],"declarations":[{"constant":false,"id":3612,"mutability":"mutable","name":"sdf","nameLocation":"11207:3:16","nodeType":"VariableDeclaration","scope":3739,"src":"11199:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3611,"name":"uint256","nodeType":"ElementaryTypeName","src":"11199:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3614,"initialValue":{"hexValue":"313030","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11213:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"VariableDeclarationStatement","src":"11199:17:16"},{"assignments":[3616],"declarations":[{"constant":false,"id":3616,"mutability":"mutable","name":"slippageLimit","nameLocation":"11281:13:16","nodeType":"VariableDeclaration","scope":3739,"src":"11273:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3618,"initialValue":{"hexValue":"333030","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11297:3:16","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},"nodeType":"VariableDeclarationStatement","src":"11273:27:16"},{"body":{"id":3737,"nodeType":"Block","src":"11361:1034:16","statements":[{"assignments":[3631],"declarations":[{"constant":false,"id":3631,"mutability":"mutable","name":"previousSlippage","nameLocation":"11384:16:16","nodeType":"VariableDeclaration","scope":3737,"src":"11376:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3630,"name":"uint256","nodeType":"ElementaryTypeName","src":"11376:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3636,"initialValue":{"expression":{"baseExpression":{"id":3632,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"11403:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3634,"indexExpression":{"id":3633,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"11414:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11403:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11417:8:16","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"11403:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11376:49:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3637,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"11444:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3639,"indexExpression":{"id":3638,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"11455:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11444:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3640,"name":"sdf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"11461:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11444:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3651,"nodeType":"IfStatement","src":"11440:139:16","trueBody":{"id":3650,"nodeType":"Block","src":"11466:113:16","statements":[{"expression":{"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3642,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"11508:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3644,"indexExpression":{"id":3643,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"11519:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11508:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11522:8:16","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"11508:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3646,"name":"sdf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"11533:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11508:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3648,"nodeType":"ExpressionStatement","src":"11508:28:16"},{"id":3649,"nodeType":"Continue","src":"11555:8:16"}]}},{"condition":{"baseExpression":{"id":3652,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"11597:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3654,"indexExpression":{"id":3653,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"11608:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11597:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3720,"nodeType":"Block","src":"11804:422:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3677,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"11827:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3679,"indexExpression":{"id":3678,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"11838:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11827:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11841:8:16","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"11827:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"id":3681,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"11852:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3683,"indexExpression":{"id":3682,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"11863:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11852:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11827:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3718,"nodeType":"Block","src":"12072:139:16","statements":[{"expression":{"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3707,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"12146:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3709,"indexExpression":{"id":3708,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"12157:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12146:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12160:8:16","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"12146:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3711,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"12172:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3713,"indexExpression":{"id":3712,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"12183:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12172:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3714,"name":"sdf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"12188:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12172:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12146:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3717,"nodeType":"ExpressionStatement","src":"12146:45:16"}]},"id":3719,"nodeType":"IfStatement","src":"11823:388:16","trueBody":{"id":3706,"nodeType":"Block","src":"11867:199:16","statements":[{"expression":{"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3685,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"11890:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3687,"indexExpression":{"id":3686,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"11901:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11890:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11904:8:16","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"11890:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3689,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"11916:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3691,"indexExpression":{"id":3690,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"11927:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11916:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3692,"name":"sdf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"11932:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11916:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11890:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3695,"nodeType":"ExpressionStatement","src":"11890:45:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3697,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"11968:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3699,"indexExpression":{"id":3698,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"11979:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11968:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11982:8:16","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"11968:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3701,"name":"previousSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"11994:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11968:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e646572666c6f772064656372656d656e74696e6720736c697070616765","id":3703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12012:33:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7fe042c7e90969a67f580740cd6d07f084ba832097aca9eaaa282ad95462461f","typeString":"literal_string \"Underflow decrementing slippage\""},"value":"Underflow decrementing slippage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7fe042c7e90969a67f580740cd6d07f084ba832097aca9eaaa282ad95462461f","typeString":"literal_string \"Underflow decrementing slippage\""}],"id":3696,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11960:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11960:86:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3705,"nodeType":"ExpressionStatement","src":"11960:86:16"}]}}]},"id":3721,"nodeType":"IfStatement","src":"11593:633:16","trueBody":{"id":3676,"nodeType":"Block","src":"11612:186:16","statements":[{"expression":{"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3655,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"11631:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3657,"indexExpression":{"id":3656,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"11642:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11631:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11645:8:16","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"11631:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3659,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"11657:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3661,"indexExpression":{"id":3660,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"11668:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11657:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3662,"name":"sdf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"11673:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11657:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11631:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3665,"nodeType":"ExpressionStatement","src":"11631:45:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3667,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"11705:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3669,"indexExpression":{"id":3668,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"11716:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11705:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11719:8:16","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"11705:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3671,"name":"previousSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"11731:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11705:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f766572666c6f7720696e6372656d656e74696e6720736c697070616765","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11749:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9500bef01f061c69a5831abd395429bc0d4bf975a9340af0622098e5d0422cc6","typeString":"literal_string \"Overflow incrementing slippage\""},"value":"Overflow incrementing slippage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9500bef01f061c69a5831abd395429bc0d4bf975a9340af0622098e5d0422cc6","typeString":"literal_string \"Overflow incrementing slippage\""}],"id":3666,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11697:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11697:85:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3675,"nodeType":"ExpressionStatement","src":"11697:85:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3722,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"12246:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3724,"indexExpression":{"id":3723,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"12257:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12246:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12260:8:16","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"12246:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3726,"name":"slippageLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"12271:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12246:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3736,"nodeType":"IfStatement","src":"12242:142:16","trueBody":{"id":3735,"nodeType":"Block","src":"12286:98:16","statements":[{"expression":{"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3728,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"12330:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3730,"indexExpression":{"id":3729,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"12341:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12330:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12344:8:16","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"12330:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3732,"name":"slippageLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"12355:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12330:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3734,"nodeType":"ExpressionStatement","src":"12330:38:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3623,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"11333:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3624,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"11337:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11348:6:16","memberName":"length","nodeType":"MemberAccess","src":"11337:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3738,"initializationExpression":{"assignments":[3620],"declarations":[{"constant":false,"id":3620,"mutability":"mutable","name":"i","nameLocation":"11326:1:16","nodeType":"VariableDeclaration","scope":3738,"src":"11318:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3619,"name":"uint256","nodeType":"ElementaryTypeName","src":"11318:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3622,"initialValue":{"hexValue":"30","id":3621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11330:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11318:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11356:3:16","subExpression":{"id":3627,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"11356:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3629,"nodeType":"ExpressionStatement","src":"11356:3:16"},"nodeType":"ForStatement","src":"11313:1082:16"}]},"documentation":{"id":3591,"nodeType":"StructuredDocumentation","src":"10921:90:16","text":" @dev Funzione per aggiornare lo slippage in base ai pesi degli asset."},"id":3740,"implemented":true,"kind":"function","modifiers":[],"name":"updateSlippage","nameLocation":"11026:14:16","nodeType":"FunctionDefinition","parameters":{"id":3592,"nodeType":"ParameterList","parameters":[],"src":"11040:2:16"},"returnParameters":{"id":3593,"nodeType":"ParameterList","parameters":[],"src":"11052:0:16"},"scope":5171,"src":"11017:1385:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3775,"nodeType":"Block","src":"12479:240:16","statements":[{"body":{"id":3771,"nodeType":"Block","src":"12538:122:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3758,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"12557:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3760,"indexExpression":{"id":3759,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"12568:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12557:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12571:5:16","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2936,"src":"12557:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3762,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"12580:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12557:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3770,"nodeType":"IfStatement","src":"12553:96:16","trueBody":{"id":3769,"nodeType":"Block","src":"12587:62:16","statements":[{"expression":{"expression":{"baseExpression":{"id":3764,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"12613:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3766,"indexExpression":{"id":3765,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"12624:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12613:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12627:6:16","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2938,"src":"12613:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3746,"id":3768,"nodeType":"Return","src":"12606:27:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3751,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"12510:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3752,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"12514:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12525:6:16","memberName":"length","nodeType":"MemberAccess","src":"12514:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12510:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3772,"initializationExpression":{"assignments":[3748],"declarations":[{"constant":false,"id":3748,"mutability":"mutable","name":"i","nameLocation":"12503:1:16","nodeType":"VariableDeclaration","scope":3772,"src":"12495:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"12495:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3750,"initialValue":{"hexValue":"30","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12507:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12495:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12533:3:16","subExpression":{"id":3755,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"12533:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3757,"nodeType":"ExpressionStatement","src":"12533:3:16"},"nodeType":"ForStatement","src":"12490:170:16"},{"expression":{"hexValue":"30","id":3773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12677:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3746,"id":3774,"nodeType":"Return","src":"12670:8:16"}]},"functionSelector":"250aa683","id":3776,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenWeight","nameLocation":"12419:14:16","nodeType":"FunctionDefinition","parameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"mutability":"mutable","name":"token","nameLocation":"12442:5:16","nodeType":"VariableDeclaration","scope":3776,"src":"12434:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3741,"name":"address","nodeType":"ElementaryTypeName","src":"12434:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12433:15:16"},"returnParameters":{"id":3746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3776,"src":"12470:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"12470:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12469:9:16"},"scope":5171,"src":"12410:309:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3818,"nodeType":"Block","src":"12802:259:16","statements":[{"assignments":[null,3787],"declarations":[null,{"constant":false,"id":3787,"mutability":"mutable","name":"deviations","nameLocation":"12833:10:16","nodeType":"VariableDeclaration","scope":3818,"src":"12816:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3785,"name":"uint256","nodeType":"ElementaryTypeName","src":"12816:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3786,"nodeType":"ArrayTypeName","src":"12816:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3790,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3788,"name":"getDeviation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"12847:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (bool[] memory,uint256[] memory)"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12847:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12813:48:16"},{"body":{"id":3814,"nodeType":"Block","src":"12920:115:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3802,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"12939:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3804,"indexExpression":{"id":3803,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"12950:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12939:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12953:5:16","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2936,"src":"12939:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3806,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"12962:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12939:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3813,"nodeType":"IfStatement","src":"12935:89:16","trueBody":{"id":3812,"nodeType":"Block","src":"12969:55:16","statements":[{"expression":{"baseExpression":{"id":3808,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"12995:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3810,"indexExpression":{"id":3809,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"13006:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12995:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3782,"id":3811,"nodeType":"Return","src":"12988:20:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"12892:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3796,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"12896:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12907:6:16","memberName":"length","nodeType":"MemberAccess","src":"12896:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12892:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3815,"initializationExpression":{"assignments":[3792],"declarations":[{"constant":false,"id":3792,"mutability":"mutable","name":"i","nameLocation":"12885:1:16","nodeType":"VariableDeclaration","scope":3815,"src":"12877:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3791,"name":"uint256","nodeType":"ElementaryTypeName","src":"12877:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3794,"initialValue":{"hexValue":"30","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12889:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12877:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12915:3:16","subExpression":{"id":3799,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"12915:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3801,"nodeType":"ExpressionStatement","src":"12915:3:16"},"nodeType":"ForStatement","src":"12872:163:16"},{"expression":{"hexValue":"30","id":3816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13052:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3782,"id":3817,"nodeType":"Return","src":"13045:8:16"}]},"functionSelector":"89b3179b","id":3819,"implemented":true,"kind":"function","modifiers":[],"name":"getDeviationForToken","nameLocation":"12736:20:16","nodeType":"FunctionDefinition","parameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3778,"mutability":"mutable","name":"token","nameLocation":"12765:5:16","nodeType":"VariableDeclaration","scope":3819,"src":"12757:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3777,"name":"address","nodeType":"ElementaryTypeName","src":"12757:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12756:15:16"},"returnParameters":{"id":3782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3819,"src":"12793:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3780,"name":"uint256","nodeType":"ElementaryTypeName","src":"12793:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12792:9:16"},"scope":5171,"src":"12727:334:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3861,"nodeType":"Block","src":"13134:229:16","statements":[{"assignments":[3829],"declarations":[{"constant":false,"id":3829,"mutability":"mutable","name":"slippages","nameLocation":"13162:9:16","nodeType":"VariableDeclaration","scope":3861,"src":"13145:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"13145:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3828,"nodeType":"ArrayTypeName","src":"13145:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3836,"initialValue":{"arguments":[{"expression":{"id":3833,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"13188:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13199:6:16","memberName":"length","nodeType":"MemberAccess","src":"13188:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13174:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"13178:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3831,"nodeType":"ArrayTypeName","src":"13178:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13174:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13145:61:16"},{"body":{"id":3857,"nodeType":"Block","src":"13265:64:16","statements":[{"expression":{"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3848,"name":"slippages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"13280:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3850,"indexExpression":{"id":3849,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"13290:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13280:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3851,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"13295:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3853,"indexExpression":{"id":3852,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"13306:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13295:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13309:8:16","memberName":"slippage","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"13295:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13280:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3856,"nodeType":"ExpressionStatement","src":"13280:37:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3841,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"13237:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3842,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"13241:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13252:6:16","memberName":"length","nodeType":"MemberAccess","src":"13241:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13237:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3858,"initializationExpression":{"assignments":[3838],"declarations":[{"constant":false,"id":3838,"mutability":"mutable","name":"i","nameLocation":"13230:1:16","nodeType":"VariableDeclaration","scope":3858,"src":"13222:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"13222:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3840,"initialValue":{"hexValue":"30","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13234:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13222:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13260:3:16","subExpression":{"id":3845,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"13260:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3847,"nodeType":"ExpressionStatement","src":"13260:3:16"},"nodeType":"ForStatement","src":"13217:112:16"},{"expression":{"id":3859,"name":"slippages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"13346:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3824,"id":3860,"nodeType":"Return","src":"13339:16:16"}]},"functionSelector":"18904ea4","id":3862,"implemented":true,"kind":"function","modifiers":[],"name":"getSlippages","nameLocation":"13078:12:16","nodeType":"FunctionDefinition","parameters":{"id":3820,"nodeType":"ParameterList","parameters":[],"src":"13090:2:16"},"returnParameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3862,"src":"13116:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3821,"name":"uint256","nodeType":"ElementaryTypeName","src":"13116:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3822,"nodeType":"ArrayTypeName","src":"13116:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13115:18:16"},"scope":5171,"src":"13069:294:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4028,"nodeType":"Block","src":"13667:1294:16","statements":[{"assignments":[3876],"declarations":[{"constant":false,"id":3876,"mutability":"mutable","name":"totalSupply","nameLocation":"13686:11:16","nodeType":"VariableDeclaration","scope":4028,"src":"13678:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"13678:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3879,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3877,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13700:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13700:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13678:35:16"},{"assignments":[3881],"declarations":[{"constant":false,"id":3881,"mutability":"mutable","name":"totalValue","nameLocation":"13732:10:16","nodeType":"VariableDeclaration","scope":4028,"src":"13724:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3880,"name":"uint256","nodeType":"ElementaryTypeName","src":"13724:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3883,"initialValue":{"hexValue":"30","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13745:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13724:22:16"},{"assignments":[3888],"declarations":[{"constant":false,"id":3888,"mutability":"mutable","name":"_reserves","nameLocation":"13774:9:16","nodeType":"VariableDeclaration","scope":4028,"src":"13757:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3886,"name":"uint256","nodeType":"ElementaryTypeName","src":"13757:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3887,"nodeType":"ArrayTypeName","src":"13757:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3891,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3889,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"13786:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13786:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13757:42:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3893,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"13818:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13829:6:16","memberName":"length","nodeType":"MemberAccess","src":"13818:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3895,"name":"_reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"13839:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13849:6:16","memberName":"length","nodeType":"MemberAccess","src":"13839:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13818:37:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207265736572766573206c656e677468","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13857:25:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d","typeString":"literal_string \"Invalid reserves length\""},"value":"Invalid reserves length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d","typeString":"literal_string \"Invalid reserves length\""}],"id":3892,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13810:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13810:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3900,"nodeType":"ExpressionStatement","src":"13810:73:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3902,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"13902:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13913:6:16","memberName":"length","nodeType":"MemberAccess","src":"13902:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13922:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13902:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20617373657473","id":3906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13925:11:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0","typeString":"literal_string \"No assets\""},"value":"No assets"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0","typeString":"literal_string \"No assets\""}],"id":3901,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13894:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13894:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3908,"nodeType":"ExpressionStatement","src":"13894:43:16"},{"body":{"id":3955,"nodeType":"Block","src":"13998:319:16","statements":[{"assignments":[3921],"declarations":[{"constant":false,"id":3921,"mutability":"mutable","name":"asset","nameLocation":"14021:5:16","nodeType":"VariableDeclaration","scope":3955,"src":"14013:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3920,"name":"address","nodeType":"ElementaryTypeName","src":"14013:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3926,"initialValue":{"expression":{"baseExpression":{"id":3922,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"14029:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3924,"indexExpression":{"id":3923,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"14040:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14029:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14043:5:16","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2936,"src":"14029:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14013:35:16"},{"assignments":[3928],"declarations":[{"constant":false,"id":3928,"mutability":"mutable","name":"valuation","nameLocation":"14071:9:16","nodeType":"VariableDeclaration","scope":3955,"src":"14063:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3927,"name":"uint256","nodeType":"ElementaryTypeName","src":"14063:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3929,"nodeType":"VariableDeclarationStatement","src":"14063:17:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3930,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"14099:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3931,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"14108:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14099:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3941,"nodeType":"IfStatement","src":"14095:108:16","trueBody":{"id":3940,"nodeType":"Block","src":"14119:84:16","statements":[{"expression":{"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3933,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"14138:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3934,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"14150:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3936,"indexExpression":{"id":3935,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"14158:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14150:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14138:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3938,"nodeType":"ExpressionStatement","src":"14138:22:16"},{"id":3939,"nodeType":"Continue","src":"14179:8:16"}]}},{"expression":{"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3942,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"14217:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3944,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"14249:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3945,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"14256:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3947,"indexExpression":{"id":3946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"14264:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14256:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3943,"name":"_convertTokenToBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"14229:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14229:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14217:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3950,"nodeType":"ExpressionStatement","src":"14217:50:16"},{"expression":{"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3951,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"14282:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3952,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"14296:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14282:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3954,"nodeType":"ExpressionStatement","src":"14282:23:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3913,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"13970:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3914,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"13974:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13985:6:16","memberName":"length","nodeType":"MemberAccess","src":"13974:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13970:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3956,"initializationExpression":{"assignments":[3910],"declarations":[{"constant":false,"id":3910,"mutability":"mutable","name":"i","nameLocation":"13963:1:16","nodeType":"VariableDeclaration","scope":3956,"src":"13955:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3909,"name":"uint256","nodeType":"ElementaryTypeName","src":"13955:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3912,"initialValue":{"hexValue":"30","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13955:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13993:3:16","subExpression":{"id":3917,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"13993:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3919,"nodeType":"ExpressionStatement","src":"13993:3:16"},"nodeType":"ForStatement","src":"13950:367:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3958,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"14337:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14350:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14337:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c2076616c7565206d7573742062652067726561746572207468616e2030","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14353:36:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f","typeString":"literal_string \"Total value must be greater than 0\""},"value":"Total value must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f","typeString":"literal_string \"Total value must be greater than 0\""}],"id":3957,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14329:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14329:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3963,"nodeType":"ExpressionStatement","src":"14329:61:16"},{"assignments":[3965],"declarations":[{"constant":false,"id":3965,"mutability":"mutable","name":"toMint","nameLocation":"14411:6:16","nodeType":"VariableDeclaration","scope":4028,"src":"14403:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"14403:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3966,"nodeType":"VariableDeclarationStatement","src":"14403:14:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3967,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"14434:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14449:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14434:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4004,"nodeType":"Block","src":"14520:267:16","statements":[{"assignments":[3978,null],"declarations":[{"constant":false,"id":3978,"mutability":"mutable","name":"totalLiquidity","nameLocation":"14544:14:16","nodeType":"VariableDeclaration","scope":4004,"src":"14536:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3977,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3981,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3979,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"14564:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14564:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"14535:53:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3983,"name":"totalLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"14611:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14628:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14611:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c206c6971756964697479206d7573742062652067726561746572207468616e2030","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14631:40:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c","typeString":"literal_string \"Total liquidity must be greater than 0\""},"value":"Total liquidity must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c","typeString":"literal_string \"Total liquidity must be greater than 0\""}],"id":3982,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14603:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14603:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3988,"nodeType":"ExpressionStatement","src":"14603:69:16"},{"expression":{"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3989,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"14687:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3990,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"14698:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3991,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"14711:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14698:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14697:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3994,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"14728:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14697:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14696:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3997,"name":"totalLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"14744:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3998,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"14761:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14744:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4000,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14743:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14696:79:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14687:88:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4003,"nodeType":"ExpressionStatement","src":"14687:88:16"}]},"id":4005,"nodeType":"IfStatement","src":"14430:357:16","trueBody":{"id":3976,"nodeType":"Block","src":"14452:62:16","statements":[{"expression":{"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3970,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"14467:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3971,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"14476:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3972,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"14489:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14476:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14467:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3975,"nodeType":"ExpressionStatement","src":"14467:35:16"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4007,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"14805:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14815:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14805:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e74207174792069732030","id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14818:15:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb","typeString":"literal_string \"Mint qty is 0\""},"value":"Mint qty is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb","typeString":"literal_string \"Mint qty is 0\""}],"id":4006,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14797:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14797:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4012,"nodeType":"ExpressionStatement","src":"14797:37:16"},{"expression":{"arguments":[{"id":4014,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"14853:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4015,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"14857:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4013,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"14847:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14847:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4017,"nodeType":"ExpressionStatement","src":"14847:17:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4018,"name":"updateSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"14877:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14877:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4020,"nodeType":"ExpressionStatement","src":"14877:16:16"},{"eventCall":{"arguments":[{"id":4022,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"14916:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4023,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"14920:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4021,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"14911:4:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14911:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4025,"nodeType":"EmitStatement","src":"14906:21:16"},{"expression":{"id":4026,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"14947:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3874,"id":4027,"nodeType":"Return","src":"14940:13:16"}]},"documentation":{"id":3863,"nodeType":"StructuredDocumentation","src":"13371:197:16","text":" @dev Mints new tokens and adds them to the specified address.\n @param to The address to which the new tokens will be minted.\n @return The amount of tokens minted."},"functionSelector":"de836ebd","id":4029,"implemented":true,"kind":"function","modifiers":[{"id":3871,"kind":"modifierInvocation","modifierName":{"id":3870,"name":"onlyPeriphery","nameLocations":["13635:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":3113,"src":"13635:13:16"},"nodeType":"ModifierInvocation","src":"13635:13:16"}],"name":"mint","nameLocation":"13583:4:16","nodeType":"FunctionDefinition","parameters":{"id":3869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3865,"mutability":"mutable","name":"to","nameLocation":"13596:2:16","nodeType":"VariableDeclaration","scope":4029,"src":"13588:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3864,"name":"address","nodeType":"ElementaryTypeName","src":"13588:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"amounts","nameLocation":"13617:7:16","nodeType":"VariableDeclaration","scope":4029,"src":"13600:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"13600:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3867,"nodeType":"ArrayTypeName","src":"13600:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13587:38:16"},"returnParameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4029,"src":"13658:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3872,"name":"uint256","nodeType":"ElementaryTypeName","src":"13658:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13657:9:16"},"scope":5171,"src":"13574:1387:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4201,"nodeType":"Block","src":"16058:1259:16","statements":[{"assignments":[4041],"declarations":[{"constant":false,"id":4041,"mutability":"mutable","name":"_BPS_FEE","nameLocation":"16077:8:16","nodeType":"VariableDeclaration","scope":4201,"src":"16069:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4040,"name":"uint256","nodeType":"ElementaryTypeName","src":"16069:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4045,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4042,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"16088:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16097:10:16","memberName":"getBPS_FEE","nodeType":"MemberAccess","referencedDeclaration":6084,"src":"16088:19:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16088:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16069:40:16"},{"assignments":[4047],"declarations":[{"constant":false,"id":4047,"mutability":"mutable","name":"periphery","nameLocation":"16128:9:16","nodeType":"VariableDeclaration","scope":4201,"src":"16120:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4046,"name":"address","nodeType":"ElementaryTypeName","src":"16120:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4051,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4048,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"16140:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16149:22:16","memberName":"getBaluniPoolPeriphery","nodeType":"MemberAccess","referencedDeclaration":6044,"src":"16140:31:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16140:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16120:53:16"},{"assignments":[4053],"declarations":[{"constant":false,"id":4053,"mutability":"mutable","name":"share","nameLocation":"16194:5:16","nodeType":"VariableDeclaration","scope":4201,"src":"16186:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4052,"name":"uint256","nodeType":"ElementaryTypeName","src":"16186:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4060,"initialValue":{"arguments":[{"arguments":[{"id":4057,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16220:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$5171","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$5171","typeString":"contract BaluniV1Pool"}],"id":4056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16212:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4055,"name":"address","nodeType":"ElementaryTypeName","src":"16212:7:16","typeDescriptions":{}}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16212:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4054,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"16202:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16202:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16186:40:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4062,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"16245:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16253:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16245:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5368617265206d7573742062652067726561746572207468616e2030","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16256:30:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b","typeString":"literal_string \"Share must be greater than 0\""},"value":"Share must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b","typeString":"literal_string \"Share must be greater than 0\""}],"id":4061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16237:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16237:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4067,"nodeType":"ExpressionStatement","src":"16237:50:16"},{"assignments":[4069],"declarations":[{"constant":false,"id":4069,"mutability":"mutable","name":"totalSupply","nameLocation":"16308:11:16","nodeType":"VariableDeclaration","scope":4201,"src":"16300:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4068,"name":"uint256","nodeType":"ElementaryTypeName","src":"16300:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4072,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4070,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"16322:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16322:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16300:35:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4074,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"16354:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16368:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16354:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206c6971756964697479","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16371:14:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31","typeString":"literal_string \"No liquidity\""},"value":"No liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31","typeString":"literal_string \"No liquidity\""}],"id":4073,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16346:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4079,"nodeType":"ExpressionStatement","src":"16346:40:16"},{"assignments":[4084],"declarations":[{"constant":false,"id":4084,"mutability":"mutable","name":"amounts","nameLocation":"16416:7:16","nodeType":"VariableDeclaration","scope":4201,"src":"16399:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"16399:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4083,"nodeType":"ArrayTypeName","src":"16399:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4091,"initialValue":{"arguments":[{"expression":{"id":4088,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"16440:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16451:6:16","memberName":"length","nodeType":"MemberAccess","src":"16440:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16426:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4085,"name":"uint256","nodeType":"ElementaryTypeName","src":"16430:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4086,"nodeType":"ArrayTypeName","src":"16430:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16426:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16399:59:16"},{"assignments":[4093],"declarations":[{"constant":false,"id":4093,"mutability":"mutable","name":"fee","nameLocation":"16477:3:16","nodeType":"VariableDeclaration","scope":4201,"src":"16469:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"16469:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4100,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4094,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"16484:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4095,"name":"_BPS_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"16492:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16484:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4097,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16483:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16504:5:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"16483:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16469:40:16"},{"assignments":[4102],"declarations":[{"constant":false,"id":4102,"mutability":"mutable","name":"shareAfterFee","nameLocation":"16528:13:16","nodeType":"VariableDeclaration","scope":4201,"src":"16520:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4101,"name":"uint256","nodeType":"ElementaryTypeName","src":"16520:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4106,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4103,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"16544:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4104,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"16552:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16544:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16520:35:16"},{"body":{"id":4145,"nodeType":"Block","src":"16616:256:16","statements":[{"assignments":[4119],"declarations":[{"constant":false,"id":4119,"mutability":"mutable","name":"assetBalance","nameLocation":"16639:12:16","nodeType":"VariableDeclaration","scope":4145,"src":"16631:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4118,"name":"uint256","nodeType":"ElementaryTypeName","src":"16631:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4133,"initialValue":{"arguments":[{"arguments":[{"id":4126,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16730:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$5171","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$5171","typeString":"contract BaluniV1Pool"}],"id":4125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16722:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4124,"name":"address","nodeType":"ElementaryTypeName","src":"16722:7:16","typeDescriptions":{}}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16722:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":4128,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"16754:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4130,"indexExpression":{"id":4129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"16765:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16754:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16768:5:16","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2936,"src":"16754:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4121,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"16677:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4120,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"16654:22:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$5851_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16654:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$5851","typeString":"contract IBaluniV1PoolPeriphery"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16688:15:16","memberName":"getAssetReserve","nodeType":"MemberAccess","referencedDeclaration":5850,"src":"16654:49:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16654:134:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16631:157:16"},{"expression":{"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4134,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"16803:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4136,"indexExpression":{"id":4135,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"16811:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16803:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4137,"name":"assetBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"16817:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4138,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"16832:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16817:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4140,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16816:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4141,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"16849:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16816:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16803:57:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4144,"nodeType":"ExpressionStatement","src":"16803:57:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4111,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"16588:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4112,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"16592:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16603:6:16","memberName":"length","nodeType":"MemberAccess","src":"16592:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16588:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4146,"initializationExpression":{"assignments":[4108],"declarations":[{"constant":false,"id":4108,"mutability":"mutable","name":"i","nameLocation":"16581:1:16","nodeType":"VariableDeclaration","scope":4146,"src":"16573:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4107,"name":"uint256","nodeType":"ElementaryTypeName","src":"16573:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4110,"initialValue":{"hexValue":"30","id":4109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16573:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16611:3:16","subExpression":{"id":4115,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"16611:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4117,"nodeType":"ExpressionStatement","src":"16611:3:16"},"nodeType":"ForStatement","src":"16568:304:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4151,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16910:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$5171","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$5171","typeString":"contract BaluniV1Pool"}],"id":4150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16902:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4149,"name":"address","nodeType":"ElementaryTypeName","src":"16902:7:16","typeDescriptions":{}}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16902:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4148,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"16892:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16892:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4154,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"16920:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16892:41:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742042414c554e49206c6971756964697479","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16935:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e","typeString":"literal_string \"Insufficient BALUNI liquidity\""},"value":"Insufficient BALUNI liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e","typeString":"literal_string \"Insufficient BALUNI liquidity\""}],"id":4147,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16884:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16884:83:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4158,"nodeType":"ExpressionStatement","src":"16884:83:16"},{"assignments":[4160],"declarations":[{"constant":false,"id":4160,"mutability":"mutable","name":"treasury","nameLocation":"16988:8:16","nodeType":"VariableDeclaration","scope":4201,"src":"16980:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4159,"name":"address","nodeType":"ElementaryTypeName","src":"16980:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4164,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4161,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"16999:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17008:11:16","memberName":"getTreasury","nodeType":"MemberAccess","referencedDeclaration":6099,"src":"16999:20:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16999:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16980:41:16"},{"assignments":[4166],"declarations":[{"constant":false,"id":4166,"mutability":"mutable","name":"feeTransferSuccess","nameLocation":"17037:18:16","nodeType":"VariableDeclaration","scope":4201,"src":"17032:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4165,"name":"bool","nodeType":"ElementaryTypeName","src":"17032:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4177,"initialValue":{"arguments":[{"id":4174,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"17089:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4175,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"17099:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":4170,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17073:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$5171","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$5171","typeString":"contract BaluniV1Pool"}],"id":4169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17065:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4168,"name":"address","nodeType":"ElementaryTypeName","src":"17065:7:16","typeDescriptions":{}}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17065:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4167,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"17058:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2475_$","typeString":"type(contract IERC20)"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17058:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2475","typeString":"contract IERC20"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17080:8:16","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2442,"src":"17058:30:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17058:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"17032:71:16"},{"expression":{"arguments":[{"id":4179,"name":"feeTransferSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"17122:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565207472616e73666572206661696c6564","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17142:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""},"value":"Fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""}],"id":4178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17114:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17114:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4182,"nodeType":"ExpressionStatement","src":"17114:50:16"},{"expression":{"arguments":[{"arguments":[{"id":4186,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17191:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$5171","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$5171","typeString":"contract BaluniV1Pool"}],"id":4185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17183:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4184,"name":"address","nodeType":"ElementaryTypeName","src":"17183:7:16","typeDescriptions":{}}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17183:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4188,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"17198:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4183,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"17177:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17177:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4190,"nodeType":"ExpressionStatement","src":"17177:35:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4191,"name":"updateSlippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"17225:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17225:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4193,"nodeType":"ExpressionStatement","src":"17225:16:16"},{"eventCall":{"arguments":[{"id":4195,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"17264:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4196,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"17268:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4194,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"17259:4:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17259:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4198,"nodeType":"EmitStatement","src":"17254:28:16"},{"expression":{"id":4199,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"17302:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4039,"id":4200,"nodeType":"Return","src":"17295:14:16"}]},"documentation":{"id":4030,"nodeType":"StructuredDocumentation","src":"14969:1007:16","text":" @dev Burns the pool tokens and transfers the underlying assets to the specified address.\n @param to The address to transfer the underlying assets to.\n @notice This function can only be called by the periphery contract.\n @notice The pool tokens must have a balance greater than 0.\n @notice The total supply of pool tokens must be greater than 0.\n @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\n @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\n @notice The function checks if the pool has sufficient liquidity before performing any transfers.\n @notice If any transfer fails, the function reverts the entire operation.\n @notice After the transfers, the function updates the reserves of the pool.\n @notice Emits a `Burn` event with the address and share of pool tokens burned."},"functionSelector":"89afcb44","id":4202,"implemented":true,"kind":"function","modifiers":[{"id":4035,"kind":"modifierInvocation","modifierName":{"id":4034,"name":"onlyPeriphery","nameLocations":["16017:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":3113,"src":"16017:13:16"},"nodeType":"ModifierInvocation","src":"16017:13:16"}],"name":"burn","nameLocation":"15991:4:16","nodeType":"FunctionDefinition","parameters":{"id":4033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4032,"mutability":"mutable","name":"to","nameLocation":"16004:2:16","nodeType":"VariableDeclaration","scope":4202,"src":"15996:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4031,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15995:12:16"},"returnParameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4202,"src":"16040:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4036,"name":"uint256","nodeType":"ElementaryTypeName","src":"16040:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4037,"nodeType":"ArrayTypeName","src":"16040:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16039:18:16"},"scope":5171,"src":"15982:1335:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4246,"nodeType":"Block","src":"17820:285:16","statements":[{"assignments":[4216],"declarations":[{"constant":false,"id":4216,"mutability":"mutable","name":"baluniOracle","nameLocation":"17847:12:16","nodeType":"VariableDeclaration","scope":4246,"src":"17831:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$5524","typeString":"contract IBaluniV1Oracle"},"typeName":{"id":4215,"nodeType":"UserDefinedTypeName","pathNode":{"id":4214,"name":"IBaluniV1Oracle","nameLocations":["17831:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":5524,"src":"17831:15:16"},"referencedDeclaration":5524,"src":"17831:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$5524","typeString":"contract IBaluniV1Oracle"}},"visibility":"internal"}],"id":4222,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4218,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"17878:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17887:15:16","memberName":"getBaluniOracle","nodeType":"MemberAccess","referencedDeclaration":6034,"src":"17878:24:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17878:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4217,"name":"IBaluniV1Oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"17862:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Oracle_$5524_$","typeString":"type(contract IBaluniV1Oracle)"}},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17862:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$5524","typeString":"contract IBaluniV1Oracle"}},"nodeType":"VariableDeclarationStatement","src":"17831:74:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4224,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"17924:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17933:15:16","memberName":"getBaluniOracle","nodeType":"MemberAccess","referencedDeclaration":6034,"src":"17924:24:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17924:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17962:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17954:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4227,"name":"address","nodeType":"ElementaryTypeName","src":"17954:7:16","typeDescriptions":{}}},"id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17954:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17924:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f7261636c652061646472657373","id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17966:24:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3","typeString":"literal_string \"Invalid oracle address\""},"value":"Invalid oracle address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3","typeString":"literal_string \"Invalid oracle address\""}],"id":4223,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17916:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17916:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4234,"nodeType":"ExpressionStatement","src":"17916:75:16"},{"assignments":[4236],"declarations":[{"constant":false,"id":4236,"mutability":"mutable","name":"amountOut","nameLocation":"18010:9:16","nodeType":"VariableDeclaration","scope":4246,"src":"18002:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"18002:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4243,"initialValue":{"arguments":[{"id":4239,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"18043:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4240,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"18054:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4241,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"18063:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4237,"name":"baluniOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"18022:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$5524","typeString":"contract IBaluniV1Oracle"}},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18035:7:16","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":5512,"src":"18022:20:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18022:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18002:68:16"},{"expression":{"id":4244,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"18088:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4213,"id":4245,"nodeType":"Return","src":"18081:16:16"}]},"documentation":{"id":4203,"nodeType":"StructuredDocumentation","src":"17325:385:16","text":" @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\n @param fromToken The address of the token being swapped from.\n @param toToken The address of the token being swapped to.\n @param amount The amount of `fromToken` being swapped.\n @return The amount of `toToken` that will be received."},"functionSelector":"4aa06652","id":4247,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"17725:12:16","nodeType":"FunctionDefinition","parameters":{"id":4210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"fromToken","nameLocation":"17746:9:16","nodeType":"VariableDeclaration","scope":4247,"src":"17738:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4204,"name":"address","nodeType":"ElementaryTypeName","src":"17738:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4207,"mutability":"mutable","name":"toToken","nameLocation":"17765:7:16","nodeType":"VariableDeclaration","scope":4247,"src":"17757:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4206,"name":"address","nodeType":"ElementaryTypeName","src":"17757:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4209,"mutability":"mutable","name":"amount","nameLocation":"17782:6:16","nodeType":"VariableDeclaration","scope":4247,"src":"17774:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4208,"name":"uint256","nodeType":"ElementaryTypeName","src":"17774:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17737:52:16"},"returnParameters":{"id":4213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4247,"src":"17811:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4211,"name":"uint256","nodeType":"ElementaryTypeName","src":"17811:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17810:9:16"},"scope":5171,"src":"17716:389:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4268,"nodeType":"Block","src":"18328:116:16","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4260,"name":"isRebalanceNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"18347:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18347:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526562616c616e6365206e6f74206e6565646564","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18368:22:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""},"value":"Rebalance not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""}],"id":4259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18339:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18339:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4264,"nodeType":"ExpressionStatement","src":"18339:52:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4265,"name":"_performRebalanceIfNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"18409:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () returns (uint256[] memory,uint256[] memory)"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18409:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"functionReturnParameters":4258,"id":4267,"nodeType":"Return","src":"18402:34:16"}]},"documentation":{"id":4248,"nodeType":"StructuredDocumentation","src":"18113:44:16","text":" @dev Performs rebalance"},"functionSelector":"f47b45e8","id":4269,"implemented":true,"kind":"function","modifiers":[{"id":4251,"kind":"modifierInvocation","modifierName":{"id":4250,"name":"onlyPeriphery","nameLocations":["18226:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":3113,"src":"18226:13:16"},"nodeType":"ModifierInvocation","src":"18226:13:16"}],"name":"performRebalanceIfNeeded","nameLocation":"18172:24:16","nodeType":"FunctionDefinition","parameters":{"id":4249,"nodeType":"ParameterList","parameters":[],"src":"18196:2:16"},"returnParameters":{"id":4258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"amountsToAdd","nameLocation":"18275:12:16","nodeType":"VariableDeclaration","scope":4269,"src":"18258:29:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4252,"name":"uint256","nodeType":"ElementaryTypeName","src":"18258:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4253,"nodeType":"ArrayTypeName","src":"18258:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4257,"mutability":"mutable","name":"amountsToRemove","nameLocation":"18306:15:16","nodeType":"VariableDeclaration","scope":4269,"src":"18289:32:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"18289:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4256,"nodeType":"ArrayTypeName","src":"18289:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"18257:65:16"},"scope":5171,"src":"18163:281:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4376,"nodeType":"Block","src":"18829:764:16","statements":[{"assignments":[4280,4283],"declarations":[{"constant":false,"id":4280,"mutability":"mutable","name":"totVal","nameLocation":"18849:6:16","nodeType":"VariableDeclaration","scope":4376,"src":"18841:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4279,"name":"uint256","nodeType":"ElementaryTypeName","src":"18841:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4283,"mutability":"mutable","name":"valuations","nameLocation":"18874:10:16","nodeType":"VariableDeclaration","scope":4376,"src":"18857:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4281,"name":"uint256","nodeType":"ElementaryTypeName","src":"18857:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4282,"nodeType":"ArrayTypeName","src":"18857:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4286,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4284,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"18888:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18888:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"18840:72:16"},{"assignments":[4288],"declarations":[{"constant":false,"id":4288,"mutability":"mutable","name":"numAssets","nameLocation":"18931:9:16","nodeType":"VariableDeclaration","scope":4376,"src":"18923:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4287,"name":"uint256","nodeType":"ElementaryTypeName","src":"18923:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4291,"initialValue":{"expression":{"id":4289,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"18943:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18954:6:16","memberName":"length","nodeType":"MemberAccess","src":"18943:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18923:37:16"},{"expression":{"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4292,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"18973:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4296,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"18997:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18986:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":4293,"name":"bool","nodeType":"ElementaryTypeName","src":"18990:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4294,"nodeType":"ArrayTypeName","src":"18990:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18986:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"src":"18973:34:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4299,"nodeType":"ExpressionStatement","src":"18973:34:16"},{"expression":{"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4300,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"19018:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4304,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"19045:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19031:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4301,"name":"uint256","nodeType":"ElementaryTypeName","src":"19035:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4302,"nodeType":"ArrayTypeName","src":"19035:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19031:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"19018:37:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4307,"nodeType":"ExpressionStatement","src":"19018:37:16"},{"body":{"id":4370,"nodeType":"Block","src":"19108:434:16","statements":[{"assignments":[4319],"declarations":[{"constant":false,"id":4319,"mutability":"mutable","name":"currentWeight","nameLocation":"19131:13:16","nodeType":"VariableDeclaration","scope":4370,"src":"19123:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4318,"name":"uint256","nodeType":"ElementaryTypeName","src":"19123:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4328,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4320,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"19148:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4322,"indexExpression":{"id":4321,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"19159:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19148:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19164:5:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"19148:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19147:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4326,"name":"totVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"19173:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19147:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19123:56:16"},{"assignments":[4330],"declarations":[{"constant":false,"id":4330,"mutability":"mutable","name":"targetWeight","nameLocation":"19202:12:16","nodeType":"VariableDeclaration","scope":4370,"src":"19194:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4329,"name":"uint256","nodeType":"ElementaryTypeName","src":"19194:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4335,"initialValue":{"expression":{"baseExpression":{"id":4331,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"19217:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4333,"indexExpression":{"id":4332,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"19228:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19217:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19231:6:16","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2938,"src":"19217:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19194:43:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4336,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"19258:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4337,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"19274:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19258:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4368,"nodeType":"Block","src":"19412:119:16","statements":[{"expression":{"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4354,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"19431:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4356,"indexExpression":{"id":4355,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"19442:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19431:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4357,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"19447:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4358,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"19462:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19447:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19431:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4361,"nodeType":"ExpressionStatement","src":"19431:44:16"},{"expression":{"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4362,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"19494:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4364,"indexExpression":{"id":4363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"19505:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19494:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19510:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"19494:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4367,"nodeType":"ExpressionStatement","src":"19494:21:16"}]},"id":4369,"nodeType":"IfStatement","src":"19254:277:16","trueBody":{"id":4353,"nodeType":"Block","src":"19288:118:16","statements":[{"expression":{"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4339,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"19307:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4341,"indexExpression":{"id":4340,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"19318:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19307:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4342,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"19323:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4343,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"19339:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19323:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19307:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4346,"nodeType":"ExpressionStatement","src":"19307:44:16"},{"expression":{"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4347,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"19370:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4349,"indexExpression":{"id":4348,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"19381:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19370:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19386:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"19370:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4352,"nodeType":"ExpressionStatement","src":"19370:20:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4312,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"19088:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4313,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"19092:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19088:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4371,"initializationExpression":{"assignments":[4309],"declarations":[{"constant":false,"id":4309,"mutability":"mutable","name":"i","nameLocation":"19081:1:16","nodeType":"VariableDeclaration","scope":4371,"src":"19073:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4308,"name":"uint256","nodeType":"ElementaryTypeName","src":"19073:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4311,"initialValue":{"hexValue":"30","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19085:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19073:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19103:3:16","subExpression":{"id":4315,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"19103:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4317,"nodeType":"ExpressionStatement","src":"19103:3:16"},"nodeType":"ForStatement","src":"19068:474:16"},{"expression":{"components":[{"id":4372,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"19562:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":4373,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"19574:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4374,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19561:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"functionReturnParameters":4278,"id":4375,"nodeType":"Return","src":"19554:31:16"}]},"documentation":{"id":4270,"nodeType":"StructuredDocumentation","src":"18452:271:16","text":" @dev Returns the deviation between the current weights and target weights of the assets in the pool.\n @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight."},"functionSelector":"89ab3532","id":4377,"implemented":true,"kind":"function","modifiers":[],"name":"getDeviation","nameLocation":"18738:12:16","nodeType":"FunctionDefinition","parameters":{"id":4271,"nodeType":"ParameterList","parameters":[],"src":"18750:2:16"},"returnParameters":{"id":4278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4274,"mutability":"mutable","name":"directions","nameLocation":"18788:10:16","nodeType":"VariableDeclaration","scope":4377,"src":"18774:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4272,"name":"bool","nodeType":"ElementaryTypeName","src":"18774:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4273,"nodeType":"ArrayTypeName","src":"18774:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4277,"mutability":"mutable","name":"deviations","nameLocation":"18817:10:16","nodeType":"VariableDeclaration","scope":4377,"src":"18800:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4275,"name":"uint256","nodeType":"ElementaryTypeName","src":"18800:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4276,"nodeType":"ArrayTypeName","src":"18800:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"18773:55:16"},"scope":5171,"src":"18729:864:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4405,"nodeType":"Block","src":"19857:199:16","statements":[{"assignments":[null,4389],"declarations":[null,{"constant":false,"id":4389,"mutability":"mutable","name":"usdValuations","nameLocation":"19888:13:16","nodeType":"VariableDeclaration","scope":4405,"src":"19871:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"19871:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4388,"nodeType":"ArrayTypeName","src":"19871:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4392,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4390,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"19905:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19905:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"19868:61:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4394,"name":"assetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"19948:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4395,"name":"usdValuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"19961:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19975:6:16","memberName":"length","nodeType":"MemberAccess","src":"19961:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19948:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420617373657420696e646578","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19983:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918","typeString":"literal_string \"Invalid asset index\""},"value":"Invalid asset index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918","typeString":"literal_string \"Invalid asset index\""}],"id":4393,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19940:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19940:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4400,"nodeType":"ExpressionStatement","src":"19940:65:16"},{"expression":{"baseExpression":{"id":4401,"name":"usdValuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"20023:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4403,"indexExpression":{"id":4402,"name":"assetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"20037:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20023:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4384,"id":4404,"nodeType":"Return","src":"20016:32:16"}]},"documentation":{"id":4378,"nodeType":"StructuredDocumentation","src":"19601:174:16","text":" @dev Returns the liquidity of a specific asset in the pool.\n @param assetIndex The index of the asset.\n @return The liquidity of the asset."},"functionSelector":"cf8fa764","id":4406,"implemented":true,"kind":"function","modifiers":[],"name":"assetLiquidity","nameLocation":"19790:14:16","nodeType":"FunctionDefinition","parameters":{"id":4381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4380,"mutability":"mutable","name":"assetIndex","nameLocation":"19813:10:16","nodeType":"VariableDeclaration","scope":4406,"src":"19805:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4379,"name":"uint256","nodeType":"ElementaryTypeName","src":"19805:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19804:20:16"},"returnParameters":{"id":4384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4406,"src":"19848:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"19848:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19847:9:16"},"scope":5171,"src":"19781:275:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4426,"nodeType":"Block","src":"20430:108:16","statements":[{"expression":{"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4415,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"20442:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4416,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"20452:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4417,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"20441:22:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4418,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"20466:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20466:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"src":"20441:49:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4421,"nodeType":"ExpressionStatement","src":"20441:49:16"},{"expression":{"components":[{"id":4422,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"20509:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4423,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"20519:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4424,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20508:22:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":4414,"id":4425,"nodeType":"Return","src":"20501:29:16"}]},"documentation":{"id":4407,"nodeType":"StructuredDocumentation","src":"20064:257:16","text":" @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\n @return totalVal The total valuation of the pool.\n @return valuations An array of individual valuations."},"functionSelector":"36bf6e39","id":4427,"implemented":true,"kind":"function","modifiers":[],"name":"computeTotalValuation","nameLocation":"20336:21:16","nodeType":"FunctionDefinition","parameters":{"id":4408,"nodeType":"ParameterList","parameters":[],"src":"20357:2:16"},"returnParameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4410,"mutability":"mutable","name":"totalVal","nameLocation":"20391:8:16","nodeType":"VariableDeclaration","scope":4427,"src":"20383:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4409,"name":"uint256","nodeType":"ElementaryTypeName","src":"20383:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4413,"mutability":"mutable","name":"valuations","nameLocation":"20418:10:16","nodeType":"VariableDeclaration","scope":4427,"src":"20401:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4411,"name":"uint256","nodeType":"ElementaryTypeName","src":"20401:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4412,"nodeType":"ArrayTypeName","src":"20401:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"20382:47:16"},"scope":5171,"src":"20327:211:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4440,"nodeType":"Block","src":"20720:92:16","statements":[{"assignments":[4434,null],"declarations":[{"constant":false,"id":4434,"mutability":"mutable","name":"totalVal","nameLocation":"20740:8:16","nodeType":"VariableDeclaration","scope":4440,"src":"20732:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4433,"name":"uint256","nodeType":"ElementaryTypeName","src":"20732:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":4437,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4435,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"20754:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20754:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"20731:47:16"},{"expression":{"id":4438,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"20796:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4432,"id":4439,"nodeType":"Return","src":"20789:15:16"}]},"documentation":{"id":4428,"nodeType":"StructuredDocumentation","src":"20546:115:16","text":" @dev Returns the total liquidity of the pool.\n @return The total liquidity of the pool."},"functionSelector":"1a686502","id":4441,"implemented":true,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"20676:9:16","nodeType":"FunctionDefinition","parameters":{"id":4429,"nodeType":"ParameterList","parameters":[],"src":"20685:2:16"},"returnParameters":{"id":4432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4441,"src":"20711:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4430,"name":"uint256","nodeType":"ElementaryTypeName","src":"20711:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20710:9:16"},"scope":5171,"src":"20667:145:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4492,"nodeType":"Block","src":"20984:361:16","statements":[{"assignments":[4448],"declarations":[{"constant":false,"id":4448,"mutability":"mutable","name":"baseDecimal","nameLocation":"21003:11:16","nodeType":"VariableDeclaration","scope":4492,"src":"20995:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4447,"name":"uint256","nodeType":"ElementaryTypeName","src":"20995:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4454,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4450,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"21032:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4449,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"21017:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$2501_$","typeString":"type(contract IERC20Metadata)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21017:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$2501","typeString":"contract IERC20Metadata"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21043:8:16","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":2500,"src":"21017:34:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21017:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"20995:58:16"},{"assignments":[4456],"declarations":[{"constant":false,"id":4456,"mutability":"mutable","name":"factor","nameLocation":"21072:6:16","nodeType":"VariableDeclaration","scope":4492,"src":"21064:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4455,"name":"uint256","nodeType":"ElementaryTypeName","src":"21064:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4463,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21081:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21088:2:16","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4459,"name":"baseDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"21093:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21088:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21087:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21081:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21064:41:16"},{"assignments":[4465,null],"declarations":[{"constant":false,"id":4465,"mutability":"mutable","name":"totalVal","nameLocation":"21125:8:16","nodeType":"VariableDeclaration","scope":4492,"src":"21117:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4464,"name":"uint256","nodeType":"ElementaryTypeName","src":"21117:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":4468,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4466,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"21139:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21139:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"21116:47:16"},{"assignments":[4470],"declarations":[{"constant":false,"id":4470,"mutability":"mutable","name":"totalSupply","nameLocation":"21182:11:16","nodeType":"VariableDeclaration","scope":4492,"src":"21174:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"21174:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4473,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4471,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"21196:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21196:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21174:35:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4474,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"21224:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21239:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21224:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4480,"nodeType":"IfStatement","src":"21220:57:16","trueBody":{"id":4479,"nodeType":"Block","src":"21242:35:16","statements":[{"expression":{"hexValue":"30","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21264:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4446,"id":4478,"nodeType":"Return","src":"21257:8:16"}]}},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4481,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"21297:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4482,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"21308:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21297:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21296:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4485,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"21318:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21296:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21295:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4488,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"21333:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21295:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21294:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4446,"id":4491,"nodeType":"Return","src":"21287:50:16"}]},"documentation":{"id":4442,"nodeType":"StructuredDocumentation","src":"20820:105:16","text":" @dev Returns the unit price of the pool.\n @return The unit price of the pool."},"functionSelector":"e73faa2d","id":4493,"implemented":true,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"20940:9:16","nodeType":"FunctionDefinition","parameters":{"id":4443,"nodeType":"ParameterList","parameters":[],"src":"20949:2:16"},"returnParameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4493,"src":"20975:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4444,"name":"uint256","nodeType":"ElementaryTypeName","src":"20975:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20974:9:16"},"scope":5171,"src":"20931:414:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4516,"nodeType":"Block","src":"21541:150:16","statements":[{"assignments":[4501],"declarations":[{"constant":false,"id":4501,"mutability":"mutable","name":"periphery","nameLocation":"21560:9:16","nodeType":"VariableDeclaration","scope":4516,"src":"21552:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4500,"name":"address","nodeType":"ElementaryTypeName","src":"21552:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4505,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4502,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"21572:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21581:22:16","memberName":"getBaluniPoolPeriphery","nodeType":"MemberAccess","referencedDeclaration":6044,"src":"21572:31:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21572:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"21552:53:16"},{"expression":{"arguments":[{"arguments":[{"id":4512,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"21677:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$5171","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$5171","typeString":"contract BaluniV1Pool"}],"id":4511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21669:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4510,"name":"address","nodeType":"ElementaryTypeName","src":"21669:7:16","typeDescriptions":{}}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21669:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4507,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"21646:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4506,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"21623:22:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$5851_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21623:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$5851","typeString":"contract IBaluniV1PoolPeriphery"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21657:11:16","memberName":"getReserves","nodeType":"MemberAccess","referencedDeclaration":5840,"src":"21623:45:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) view external returns (uint256[] memory)"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21623:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4499,"id":4515,"nodeType":"Return","src":"21616:67:16"}]},"documentation":{"id":4494,"nodeType":"StructuredDocumentation","src":"21353:120:16","text":" @dev Returns an array of reserves for each asset in the pool.\n @return An array of reserves."},"functionSelector":"0902f1ac","id":4517,"implemented":true,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"21488:11:16","nodeType":"FunctionDefinition","parameters":{"id":4495,"nodeType":"ParameterList","parameters":[],"src":"21499:2:16"},"returnParameters":{"id":4499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4517,"src":"21523:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"21523:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4497,"nodeType":"ArrayTypeName","src":"21523:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21522:18:16"},"scope":5171,"src":"21479:212:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4542,"nodeType":"Block","src":"21947:161:16","statements":[{"assignments":[4526],"declarations":[{"constant":false,"id":4526,"mutability":"mutable","name":"periphery","nameLocation":"21966:9:16","nodeType":"VariableDeclaration","scope":4542,"src":"21958:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4525,"name":"address","nodeType":"ElementaryTypeName","src":"21958:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4530,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4527,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"21978:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21987:22:16","memberName":"getBaluniPoolPeriphery","nodeType":"MemberAccess","referencedDeclaration":6044,"src":"21978:31:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21978:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"21958:53:16"},{"expression":{"arguments":[{"arguments":[{"id":4537,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"22087:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$5171","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$5171","typeString":"contract BaluniV1Pool"}],"id":4536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22079:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4535,"name":"address","nodeType":"ElementaryTypeName","src":"22079:7:16","typeDescriptions":{}}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22079:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4539,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"22094:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4532,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"22052:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4531,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"22029:22:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$5851_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22029:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$5851","typeString":"contract IBaluniV1PoolPeriphery"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22063:15:16","memberName":"getAssetReserve","nodeType":"MemberAccess","referencedDeclaration":5850,"src":"22029:49:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22029:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4524,"id":4541,"nodeType":"Return","src":"22022:78:16"}]},"documentation":{"id":4518,"nodeType":"StructuredDocumentation","src":"21699:172:16","text":" @dev Returns the reserve amount of the specified asset.\n @param asset The address of the asset.\n @return The reserve amount of the asset."},"functionSelector":"b2b55d70","id":4543,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"21886:15:16","nodeType":"FunctionDefinition","parameters":{"id":4521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4520,"mutability":"mutable","name":"asset","nameLocation":"21910:5:16","nodeType":"VariableDeclaration","scope":4543,"src":"21902:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4519,"name":"address","nodeType":"ElementaryTypeName","src":"21902:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21901:15:16"},"returnParameters":{"id":4524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4543,"src":"21938:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4522,"name":"uint256","nodeType":"ElementaryTypeName","src":"21938:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21937:9:16"},"scope":5171,"src":"21877:231:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4586,"nodeType":"Block","src":"22314:217:16","statements":[{"assignments":[4554],"declarations":[{"constant":false,"id":4554,"mutability":"mutable","name":"assets","nameLocation":"22342:6:16","nodeType":"VariableDeclaration","scope":4586,"src":"22325:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4552,"name":"address","nodeType":"ElementaryTypeName","src":"22325:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4553,"nodeType":"ArrayTypeName","src":"22325:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4561,"initialValue":{"arguments":[{"expression":{"id":4558,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"22365:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22376:6:16","memberName":"length","nodeType":"MemberAccess","src":"22365:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"22351:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4555,"name":"address","nodeType":"ElementaryTypeName","src":"22355:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4556,"nodeType":"ArrayTypeName","src":"22355:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22351:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"22325:58:16"},{"body":{"id":4582,"nodeType":"Block","src":"22442:58:16","statements":[{"expression":{"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4573,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"22457:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4575,"indexExpression":{"id":4574,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"22464:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22457:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":4576,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"22469:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4578,"indexExpression":{"id":4577,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"22480:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22469:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22483:5:16","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2936,"src":"22469:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22457:31:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4581,"nodeType":"ExpressionStatement","src":"22457:31:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4566,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"22414:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4567,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"22418:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22429:6:16","memberName":"length","nodeType":"MemberAccess","src":"22418:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22414:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4583,"initializationExpression":{"assignments":[4563],"declarations":[{"constant":false,"id":4563,"mutability":"mutable","name":"i","nameLocation":"22407:1:16","nodeType":"VariableDeclaration","scope":4583,"src":"22399:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4562,"name":"uint256","nodeType":"ElementaryTypeName","src":"22399:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4565,"initialValue":{"hexValue":"30","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22411:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22399:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22437:3:16","subExpression":{"id":4570,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"22437:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4572,"nodeType":"ExpressionStatement","src":"22437:3:16"},"nodeType":"ForStatement","src":"22394:106:16"},{"expression":{"id":4584,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"22517:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4549,"id":4585,"nodeType":"Return","src":"22510:13:16"}]},"documentation":{"id":4544,"nodeType":"StructuredDocumentation","src":"22116:130:16","text":" @dev Retrieves the list of assets in the pool.\n @return An array of addresses representing the assets."},"functionSelector":"67e4ac2c","id":4587,"implemented":true,"kind":"function","modifiers":[],"name":"getAssets","nameLocation":"22261:9:16","nodeType":"FunctionDefinition","parameters":{"id":4545,"nodeType":"ParameterList","parameters":[],"src":"22270:2:16"},"returnParameters":{"id":4549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4587,"src":"22296:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4546,"name":"address","nodeType":"ElementaryTypeName","src":"22296:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4547,"nodeType":"ArrayTypeName","src":"22296:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"22295:18:16"},"scope":5171,"src":"22252:279:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4630,"nodeType":"Block","src":"22772:221:16","statements":[{"assignments":[4598],"declarations":[{"constant":false,"id":4598,"mutability":"mutable","name":"weights","nameLocation":"22800:7:16","nodeType":"VariableDeclaration","scope":4630,"src":"22783:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4596,"name":"uint256","nodeType":"ElementaryTypeName","src":"22783:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4597,"nodeType":"ArrayTypeName","src":"22783:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4605,"initialValue":{"arguments":[{"expression":{"id":4602,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"22824:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22835:6:16","memberName":"length","nodeType":"MemberAccess","src":"22824:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"22810:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4599,"name":"uint256","nodeType":"ElementaryTypeName","src":"22814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4600,"nodeType":"ArrayTypeName","src":"22814:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22810:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"22783:59:16"},{"body":{"id":4626,"nodeType":"Block","src":"22901:60:16","statements":[{"expression":{"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4617,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"22916:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4619,"indexExpression":{"id":4618,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"22924:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22916:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":4620,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"22929:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4622,"indexExpression":{"id":4621,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"22940:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22929:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22943:6:16","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2938,"src":"22929:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22916:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4625,"nodeType":"ExpressionStatement","src":"22916:33:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4610,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"22873:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4611,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"22877:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22888:6:16","memberName":"length","nodeType":"MemberAccess","src":"22877:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22873:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4627,"initializationExpression":{"assignments":[4607],"declarations":[{"constant":false,"id":4607,"mutability":"mutable","name":"i","nameLocation":"22866:1:16","nodeType":"VariableDeclaration","scope":4627,"src":"22858:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4606,"name":"uint256","nodeType":"ElementaryTypeName","src":"22858:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4609,"initialValue":{"hexValue":"30","id":4608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22870:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22858:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22896:3:16","subExpression":{"id":4614,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"22896:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4616,"nodeType":"ExpressionStatement","src":"22896:3:16"},"nodeType":"ForStatement","src":"22853:108:16"},{"expression":{"id":4628,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"22978:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4593,"id":4629,"nodeType":"Return","src":"22971:14:16"}]},"documentation":{"id":4588,"nodeType":"StructuredDocumentation","src":"22539:164:16","text":" @dev Retrieves the list of weights associated with the assets in the pool.\n @return An array of uint256 values representing the weights."},"functionSelector":"22acb867","id":4631,"implemented":true,"kind":"function","modifiers":[],"name":"getWeights","nameLocation":"22718:10:16","nodeType":"FunctionDefinition","parameters":{"id":4589,"nodeType":"ParameterList","parameters":[],"src":"22728:2:16"},"returnParameters":{"id":4593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4631,"src":"22754:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4590,"name":"uint256","nodeType":"ElementaryTypeName","src":"22754:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4591,"nodeType":"ArrayTypeName","src":"22754:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"22753:18:16"},"scope":5171,"src":"22709:284:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4723,"nodeType":"Block","src":"23342:645:16","statements":[{"assignments":[4641],"declarations":[{"constant":false,"id":4641,"mutability":"mutable","name":"numAssets","nameLocation":"23361:9:16","nodeType":"VariableDeclaration","scope":4723,"src":"23353:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4640,"name":"uint256","nodeType":"ElementaryTypeName","src":"23353:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4644,"initialValue":{"expression":{"id":4642,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"23373:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23384:6:16","memberName":"length","nodeType":"MemberAccess","src":"23373:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23353:37:16"},{"expression":{"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4645,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"23401:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4649,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"23428:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23414:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"23418:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4647,"nodeType":"ArrayTypeName","src":"23418:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23414:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"23401:37:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4652,"nodeType":"ExpressionStatement","src":"23401:37:16"},{"body":{"id":4717,"nodeType":"Block","src":"23489:445:16","statements":[{"assignments":[4664],"declarations":[{"constant":false,"id":4664,"mutability":"mutable","name":"asset","nameLocation":"23512:5:16","nodeType":"VariableDeclaration","scope":4717,"src":"23504:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4663,"name":"address","nodeType":"ElementaryTypeName","src":"23504:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4669,"initialValue":{"expression":{"baseExpression":{"id":4665,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"23520:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4667,"indexExpression":{"id":4666,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"23531:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23520:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23534:5:16","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2936,"src":"23520:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"23504:35:16"},{"assignments":[4671],"declarations":[{"constant":false,"id":4671,"mutability":"mutable","name":"assetReserve","nameLocation":"23562:12:16","nodeType":"VariableDeclaration","scope":4717,"src":"23554:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4670,"name":"uint256","nodeType":"ElementaryTypeName","src":"23554:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4678,"initialValue":{"arguments":[{"arguments":[{"id":4675,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"23601:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23593:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4673,"name":"address","nodeType":"ElementaryTypeName","src":"23593:7:16","typeDescriptions":{}}},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23593:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4672,"name":"getAssetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"23577:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23577:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23554:54:16"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4681,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"23638:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23630:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4679,"name":"address","nodeType":"ElementaryTypeName","src":"23630:7:16","typeDescriptions":{}}},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23630:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4683,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"23648:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23630:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23629:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4709,"nodeType":"Block","src":"23729:148:16","statements":[{"assignments":[4694],"declarations":[{"constant":false,"id":4694,"mutability":"mutable","name":"valuation","nameLocation":"23756:9:16","nodeType":"VariableDeclaration","scope":4709,"src":"23748:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4693,"name":"uint256","nodeType":"ElementaryTypeName","src":"23748:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4702,"initialValue":{"arguments":[{"arguments":[{"id":4698,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"23796:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23788:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4696,"name":"address","nodeType":"ElementaryTypeName","src":"23788:7:16","typeDescriptions":{}}},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23788:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4700,"name":"assetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"23804:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4695,"name":"_convertTokenToBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"23768:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23768:49:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23748:69:16"},{"expression":{"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4703,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"23836:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4705,"indexExpression":{"id":4704,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"23847:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23836:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4706,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"23852:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23836:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4708,"nodeType":"ExpressionStatement","src":"23836:25:16"}]},"id":4710,"nodeType":"IfStatement","src":"23625:252:16","trueBody":{"id":4692,"nodeType":"Block","src":"23660:63:16","statements":[{"expression":{"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4686,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"23679:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4688,"indexExpression":{"id":4687,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"23690:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23679:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4689,"name":"assetReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"23695:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23679:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4691,"nodeType":"ExpressionStatement","src":"23679:28:16"}]}},{"expression":{"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4711,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"23891:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":4712,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"23909:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4714,"indexExpression":{"id":4713,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"23920:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23909:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23891:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4716,"nodeType":"ExpressionStatement","src":"23891:31:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4657,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"23469:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4658,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"23473:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23469:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4718,"initializationExpression":{"assignments":[4654],"declarations":[{"constant":false,"id":4654,"mutability":"mutable","name":"i","nameLocation":"23462:1:16","nodeType":"VariableDeclaration","scope":4718,"src":"23454:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4653,"name":"uint256","nodeType":"ElementaryTypeName","src":"23454:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4656,"initialValue":{"hexValue":"30","id":4655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23466:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23454:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23484:3:16","subExpression":{"id":4660,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"23484:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4662,"nodeType":"ExpressionStatement","src":"23484:3:16"},"nodeType":"ForStatement","src":"23449:485:16"},{"expression":{"components":[{"id":4719,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"23952:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4720,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"23968:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23951:28:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":4639,"id":4722,"nodeType":"Return","src":"23944:35:16"}]},"documentation":{"id":4632,"nodeType":"StructuredDocumentation","src":"23001:225:16","text":" @dev Computes the total valuation of the assets in the pool.\n @return totalValuation The total valuation of the assets.\n @return valuations An array of valuations for each asset in the pool."},"id":4724,"implemented":true,"kind":"function","modifiers":[],"name":"_computeTotalValuation","nameLocation":"23241:22:16","nodeType":"FunctionDefinition","parameters":{"id":4633,"nodeType":"ParameterList","parameters":[],"src":"23263:2:16"},"returnParameters":{"id":4639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4635,"mutability":"mutable","name":"totalValuation","nameLocation":"23297:14:16","nodeType":"VariableDeclaration","scope":4724,"src":"23289:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4634,"name":"uint256","nodeType":"ElementaryTypeName","src":"23289:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4638,"mutability":"mutable","name":"valuations","nameLocation":"23330:10:16","nodeType":"VariableDeclaration","scope":4724,"src":"23313:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4636,"name":"uint256","nodeType":"ElementaryTypeName","src":"23313:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4637,"nodeType":"ArrayTypeName","src":"23313:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"23288:53:16"},"scope":5171,"src":"23232:755:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4953,"nodeType":"Block","src":"24474:1563:16","statements":[{"assignments":[4735],"declarations":[{"constant":false,"id":4735,"mutability":"mutable","name":"periphery","nameLocation":"24493:9:16","nodeType":"VariableDeclaration","scope":4953,"src":"24485:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4734,"name":"address","nodeType":"ElementaryTypeName","src":"24485:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4739,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4736,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"24505:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24514:22:16","memberName":"getBaluniPoolPeriphery","nodeType":"MemberAccess","referencedDeclaration":6044,"src":"24505:31:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24505:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"24485:53:16"},{"assignments":[4741],"declarations":[{"constant":false,"id":4741,"mutability":"mutable","name":"rebalancer","nameLocation":"24557:10:16","nodeType":"VariableDeclaration","scope":4953,"src":"24549:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4740,"name":"address","nodeType":"ElementaryTypeName","src":"24549:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4745,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4742,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"24570:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24579:19:16","memberName":"getBaluniRebalancer","nodeType":"MemberAccess","referencedDeclaration":6054,"src":"24570:28:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24570:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"24549:51:16"},{"assignments":[4750],"declarations":[{"constant":false,"id":4750,"mutability":"mutable","name":"assets","nameLocation":"24630:6:16","nodeType":"VariableDeclaration","scope":4953,"src":"24613:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4748,"name":"address","nodeType":"ElementaryTypeName","src":"24613:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4749,"nodeType":"ArrayTypeName","src":"24613:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4757,"initialValue":{"arguments":[{"expression":{"id":4754,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"24653:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24664:6:16","memberName":"length","nodeType":"MemberAccess","src":"24653:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24639:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4751,"name":"address","nodeType":"ElementaryTypeName","src":"24643:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4752,"nodeType":"ArrayTypeName","src":"24643:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24639:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"24613:58:16"},{"assignments":[4762],"declarations":[{"constant":false,"id":4762,"mutability":"mutable","name":"weights","nameLocation":"24699:7:16","nodeType":"VariableDeclaration","scope":4953,"src":"24682:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4760,"name":"uint256","nodeType":"ElementaryTypeName","src":"24682:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4761,"nodeType":"ArrayTypeName","src":"24682:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4769,"initialValue":{"arguments":[{"expression":{"id":4766,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"24723:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24734:6:16","memberName":"length","nodeType":"MemberAccess","src":"24723:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24709:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4763,"name":"uint256","nodeType":"ElementaryTypeName","src":"24713:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4764,"nodeType":"ArrayTypeName","src":"24713:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24709:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"24682:59:16"},{"assignments":[4774],"declarations":[{"constant":false,"id":4774,"mutability":"mutable","name":"peripheryBalancesB4","nameLocation":"24769:19:16","nodeType":"VariableDeclaration","scope":4953,"src":"24752:36:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4772,"name":"uint256","nodeType":"ElementaryTypeName","src":"24752:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4773,"nodeType":"ArrayTypeName","src":"24752:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4781,"initialValue":{"arguments":[{"expression":{"id":4778,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"24805:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24816:6:16","memberName":"length","nodeType":"MemberAccess","src":"24805:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24791:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4775,"name":"uint256","nodeType":"ElementaryTypeName","src":"24795:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4776,"nodeType":"ArrayTypeName","src":"24795:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24791:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"24752:71:16"},{"assignments":[4786],"declarations":[{"constant":false,"id":4786,"mutability":"mutable","name":"peripheryBalancesAfter","nameLocation":"24851:22:16","nodeType":"VariableDeclaration","scope":4953,"src":"24834:39:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"24834:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4785,"nodeType":"ArrayTypeName","src":"24834:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4793,"initialValue":{"arguments":[{"expression":{"id":4790,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"24890:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24901:6:16","memberName":"length","nodeType":"MemberAccess","src":"24890:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24876:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4787,"name":"uint256","nodeType":"ElementaryTypeName","src":"24880:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4788,"nodeType":"ArrayTypeName","src":"24880:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24876:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"24834:74:16"},{"assignments":[4798],"declarations":[{"constant":false,"id":4798,"mutability":"mutable","name":"amountsToAdd","nameLocation":"24936:12:16","nodeType":"VariableDeclaration","scope":4953,"src":"24919:29:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4796,"name":"uint256","nodeType":"ElementaryTypeName","src":"24919:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4797,"nodeType":"ArrayTypeName","src":"24919:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4805,"initialValue":{"arguments":[{"expression":{"id":4802,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"24965:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24976:6:16","memberName":"length","nodeType":"MemberAccess","src":"24965:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24951:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4799,"name":"uint256","nodeType":"ElementaryTypeName","src":"24955:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4800,"nodeType":"ArrayTypeName","src":"24955:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24951:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"24919:64:16"},{"assignments":[4810],"declarations":[{"constant":false,"id":4810,"mutability":"mutable","name":"amountsToRemove","nameLocation":"25011:15:16","nodeType":"VariableDeclaration","scope":4953,"src":"24994:32:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"24994:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4809,"nodeType":"ArrayTypeName","src":"24994:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4817,"initialValue":{"arguments":[{"expression":{"id":4814,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"25043:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25054:6:16","memberName":"length","nodeType":"MemberAccess","src":"25043:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"25029:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4811,"name":"uint256","nodeType":"ElementaryTypeName","src":"25033:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4812,"nodeType":"ArrayTypeName","src":"25033:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25029:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"24994:67:16"},{"body":{"id":4860,"nodeType":"Block","src":"25122:184:16","statements":[{"expression":{"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4829,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"25137:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4831,"indexExpression":{"id":4830,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"25144:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25137:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":4832,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"25149:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4834,"indexExpression":{"id":4833,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"25160:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25149:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25163:5:16","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2936,"src":"25149:19:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25137:31:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4837,"nodeType":"ExpressionStatement","src":"25137:31:16"},{"expression":{"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4838,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"25183:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4840,"indexExpression":{"id":4839,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"25191:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25183:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":4841,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"25196:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4843,"indexExpression":{"id":4842,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"25207:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25196:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":4844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25210:6:16","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2938,"src":"25196:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25183:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4846,"nodeType":"ExpressionStatement","src":"25183:33:16"},{"expression":{"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4847,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"25231:19:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4849,"indexExpression":{"id":4848,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"25251:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25231:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4856,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4735,"src":"25284:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":4851,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"25263:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4853,"indexExpression":{"id":4852,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"25270:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25263:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4850,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"25256:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2475_$","typeString":"type(contract IERC20)"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25256:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2475","typeString":"contract IERC20"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25274:9:16","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2432,"src":"25256:27:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25256:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25231:63:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4859,"nodeType":"ExpressionStatement","src":"25231:63:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4822,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"25094:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4823,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"25098:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25109:6:16","memberName":"length","nodeType":"MemberAccess","src":"25098:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25094:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4861,"initializationExpression":{"assignments":[4819],"declarations":[{"constant":false,"id":4819,"mutability":"mutable","name":"i","nameLocation":"25087:1:16","nodeType":"VariableDeclaration","scope":4861,"src":"25079:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4818,"name":"uint256","nodeType":"ElementaryTypeName","src":"25079:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4821,"initialValue":{"hexValue":"30","id":4820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25091:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25079:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"25117:3:16","subExpression":{"id":4826,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"25117:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4828,"nodeType":"ExpressionStatement","src":"25117:3:16"},"nodeType":"ForStatement","src":"25074:232:16"},{"assignments":[4866],"declarations":[{"constant":false,"id":4866,"mutability":"mutable","name":"balances","nameLocation":"25335:8:16","nodeType":"VariableDeclaration","scope":4953,"src":"25318:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4864,"name":"uint256","nodeType":"ElementaryTypeName","src":"25318:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4865,"nodeType":"ArrayTypeName","src":"25318:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4869,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4867,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"25346:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25346:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"25318:41:16"},{"expression":{"arguments":[{"id":4874,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"25414:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4875,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"25424:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4876,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"25432:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4877,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"25441:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4878,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4735,"src":"25450:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4879,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4735,"src":"25461:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4880,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"25472:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4871,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"25392:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4870,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"25372:19:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$5936_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25372:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$5936","typeString":"contract IBaluniV1Rebalancer"}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25404:9:16","memberName":"rebalance","nodeType":"MemberAccess","referencedDeclaration":5903,"src":"25372:41:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256[] memory,address[] memory,uint256[] memory,uint256,address,address,address) external"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25372:110:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4882,"nodeType":"ExpressionStatement","src":"25372:110:16"},{"body":{"id":4941,"nodeType":"Block","src":"25543:380:16","statements":[{"expression":{"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4894,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"25558:22:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4896,"indexExpression":{"id":4895,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"25581:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25558:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4903,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4735,"src":"25614:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":4898,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"25593:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4900,"indexExpression":{"id":4899,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"25600:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25593:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4897,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"25586:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2475_$","typeString":"type(contract IERC20)"}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25586:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2475","typeString":"contract IERC20"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25604:9:16","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2432,"src":"25586:27:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25586:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25558:66:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4906,"nodeType":"ExpressionStatement","src":"25558:66:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4907,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"25645:22:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4909,"indexExpression":{"id":4908,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"25668:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25645:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"id":4910,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"25673:19:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4912,"indexExpression":{"id":4911,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"25693:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25673:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25645:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4939,"nodeType":"Block","src":"25806:106:16","statements":[{"expression":{"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4927,"name":"amountsToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"25825:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4929,"indexExpression":{"id":4928,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"25841:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25825:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4930,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"25846:19:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4932,"indexExpression":{"id":4931,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"25866:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25846:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":4933,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"25871:22:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4935,"indexExpression":{"id":4934,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"25894:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25871:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25846:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25825:71:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4938,"nodeType":"ExpressionStatement","src":"25825:71:16"}]},"id":4940,"nodeType":"IfStatement","src":"25641:271:16","trueBody":{"id":4926,"nodeType":"Block","src":"25697:103:16","statements":[{"expression":{"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4914,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"25716:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4916,"indexExpression":{"id":4915,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"25729:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25716:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4917,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"25734:22:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4919,"indexExpression":{"id":4918,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"25757:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25734:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":4920,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"25762:19:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4922,"indexExpression":{"id":4921,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"25782:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25762:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25734:50:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25716:68:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4925,"nodeType":"ExpressionStatement","src":"25716:68:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4887,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"25515:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4888,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"25519:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25530:6:16","memberName":"length","nodeType":"MemberAccess","src":"25519:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25515:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4942,"initializationExpression":{"assignments":[4884],"declarations":[{"constant":false,"id":4884,"mutability":"mutable","name":"i","nameLocation":"25508:1:16","nodeType":"VariableDeclaration","scope":4942,"src":"25500:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4883,"name":"uint256","nodeType":"ElementaryTypeName","src":"25500:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4886,"initialValue":{"hexValue":"30","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25512:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25500:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"25538:3:16","subExpression":{"id":4891,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"25538:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4893,"nodeType":"ExpressionStatement","src":"25538:3:16"},"nodeType":"ForStatement","src":"25495:428:16"},{"eventCall":{"arguments":[{"expression":{"id":4944,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25959:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25963:6:16","memberName":"sender","nodeType":"MemberAccess","src":"25959:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4946,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"25971:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":4943,"name":"RebalancePerformed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"25940:18:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address[] memory)"}},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25940:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4948,"nodeType":"EmitStatement","src":"25935:43:16"},{"expression":{"components":[{"id":4949,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"25999:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4950,"name":"amountsToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"26013:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25998:31:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"functionReturnParameters":4733,"id":4952,"nodeType":"Return","src":"25991:38:16"}]},"documentation":{"id":4725,"nodeType":"StructuredDocumentation","src":"23995:382:16","text":" @dev Performs rebalance if needed.\n This function retrieves the assets and weights from the `assetInfos` array,\n and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\n It emits a `RebalancePerformed` event after the rebalance is performed.\n @notice This function should only be called internally."},"id":4954,"implemented":true,"kind":"function","modifiers":[],"name":"_performRebalanceIfNeeded","nameLocation":"24392:25:16","nodeType":"FunctionDefinition","parameters":{"id":4726,"nodeType":"ParameterList","parameters":[],"src":"24417:2:16"},"returnParameters":{"id":4733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4954,"src":"24438:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"24438:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4728,"nodeType":"ArrayTypeName","src":"24438:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4954,"src":"24456:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4730,"name":"uint256","nodeType":"ElementaryTypeName","src":"24456:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4731,"nodeType":"ArrayTypeName","src":"24456:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"24437:36:16"},"scope":5171,"src":"24383:1654:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4984,"nodeType":"Block","src":"26414:168:16","statements":[{"body":{"id":4980,"nodeType":"Block","src":"26473:65:16","statements":[{"expression":{"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4974,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"26488:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":4975,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"26511:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4977,"indexExpression":{"id":4976,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"26524:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26511:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26488:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4979,"nodeType":"ExpressionStatement","src":"26488:38:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4967,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"26445:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4968,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"26449:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26460:6:16","memberName":"length","nodeType":"MemberAccess","src":"26449:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26445:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4981,"initializationExpression":{"assignments":[4964],"declarations":[{"constant":false,"id":4964,"mutability":"mutable","name":"i","nameLocation":"26438:1:16","nodeType":"VariableDeclaration","scope":4981,"src":"26430:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4963,"name":"uint256","nodeType":"ElementaryTypeName","src":"26430:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4966,"initialValue":{"hexValue":"30","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26442:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26430:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"26468:3:16","subExpression":{"id":4971,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"26468:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4973,"nodeType":"ExpressionStatement","src":"26468:3:16"},"nodeType":"ForStatement","src":"26425:113:16"},{"expression":{"id":4982,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"26555:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4962,"id":4983,"nodeType":"Return","src":"26548:26:16"}]},"documentation":{"id":4955,"nodeType":"StructuredDocumentation","src":"26045:225:16","text":" @dev Calculates the total added liquidity based on the amounts to add.\n @param amountsToAdd An array of amounts to add for each asset.\n @return totalAddedLiquidity The total added liquidity."},"id":4985,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateTotalAddedLiquidity","nameLocation":"26285:29:16","nodeType":"FunctionDefinition","parameters":{"id":4959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4958,"mutability":"mutable","name":"amountsToAdd","nameLocation":"26342:12:16","nodeType":"VariableDeclaration","scope":4985,"src":"26325:29:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4956,"name":"uint256","nodeType":"ElementaryTypeName","src":"26325:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4957,"nodeType":"ArrayTypeName","src":"26325:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"26314:47:16"},"returnParameters":{"id":4962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4961,"mutability":"mutable","name":"totalAddedLiquidity","nameLocation":"26393:19:16","nodeType":"VariableDeclaration","scope":4985,"src":"26385:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4960,"name":"uint256","nodeType":"ElementaryTypeName","src":"26385:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26384:29:16"},"scope":5171,"src":"26276:306:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5050,"nodeType":"Block","src":"27089:391:16","statements":[{"expression":{"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4997,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"27100:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5001,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"27129:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27140:6:16","memberName":"length","nodeType":"MemberAccess","src":"27129:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"27115:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4998,"name":"uint256","nodeType":"ElementaryTypeName","src":"27119:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4999,"nodeType":"ArrayTypeName","src":"27119:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27115:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"27100:47:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5005,"nodeType":"ExpressionStatement","src":"27100:47:16"},{"body":{"id":5046,"nodeType":"Block","src":"27206:235:16","statements":[{"assignments":[5018],"declarations":[{"constant":false,"id":5018,"mutability":"mutable","name":"targetValuation","nameLocation":"27229:15:16","nodeType":"VariableDeclaration","scope":5046,"src":"27221:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5017,"name":"uint256","nodeType":"ElementaryTypeName","src":"27221:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5028,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5019,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"27248:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"baseExpression":{"id":5020,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"27265:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":5022,"indexExpression":{"id":5021,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"27276:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27265:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":5023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27279:6:16","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2938,"src":"27265:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27248:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27247:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":5026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27289:5:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"27247:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27221:73:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5029,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27313:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5031,"indexExpression":{"id":5030,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"27324:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27313:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5032,"name":"targetValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"27329:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27313:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5045,"nodeType":"IfStatement","src":"27309:121:16","trueBody":{"id":5044,"nodeType":"Block","src":"27346:84:16","statements":[{"expression":{"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5034,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"27365:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5036,"indexExpression":{"id":5035,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"27378:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"27365:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5037,"name":"targetValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"27383:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":5038,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27401:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5040,"indexExpression":{"id":5039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"27412:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27401:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27383:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27365:49:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5043,"nodeType":"ExpressionStatement","src":"27365:49:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5010,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"27178:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5011,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"27182:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27193:6:16","memberName":"length","nodeType":"MemberAccess","src":"27182:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27178:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5047,"initializationExpression":{"assignments":[5007],"declarations":[{"constant":false,"id":5007,"mutability":"mutable","name":"i","nameLocation":"27171:1:16","nodeType":"VariableDeclaration","scope":5047,"src":"27163:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5006,"name":"uint256","nodeType":"ElementaryTypeName","src":"27163:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5009,"initialValue":{"hexValue":"30","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27175:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"27163:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"27201:3:16","subExpression":{"id":5014,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"27201:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5016,"nodeType":"ExpressionStatement","src":"27201:3:16"},"nodeType":"ForStatement","src":"27158:283:16"},{"expression":{"id":5048,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"27460:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4996,"id":5049,"nodeType":"Return","src":"27453:19:16"}]},"documentation":{"id":4986,"nodeType":"StructuredDocumentation","src":"26590:329:16","text":" @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\n @param totalValuation The total valuation of the pool.\n @param valuations An array of current valuations for each asset.\n @return amountsToAdd An array of amounts to add to each asset."},"id":5051,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateAmountsToAdd","nameLocation":"26934:22:16","nodeType":"FunctionDefinition","parameters":{"id":4992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4988,"mutability":"mutable","name":"totalValuation","nameLocation":"26975:14:16","nodeType":"VariableDeclaration","scope":5051,"src":"26967:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4987,"name":"uint256","nodeType":"ElementaryTypeName","src":"26967:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4991,"mutability":"mutable","name":"valuations","nameLocation":"27017:10:16","nodeType":"VariableDeclaration","scope":5051,"src":"27000:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4989,"name":"uint256","nodeType":"ElementaryTypeName","src":"27000:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4990,"nodeType":"ArrayTypeName","src":"27000:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"26956:78:16"},"returnParameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4995,"mutability":"mutable","name":"amountsToAdd","nameLocation":"27075:12:16","nodeType":"VariableDeclaration","scope":5051,"src":"27058:29:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4993,"name":"uint256","nodeType":"ElementaryTypeName","src":"27058:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4994,"nodeType":"ArrayTypeName","src":"27058:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"27057:31:16"},"scope":5171,"src":"26925:555:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5089,"nodeType":"Block","src":"27859:264:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5061,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"27874:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":5063,"indexExpression":{"id":5062,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"27885:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27874:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":5064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27892:5:16","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2936,"src":"27874:23:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5065,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"27901:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27874:36:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5069,"nodeType":"IfStatement","src":"27870:60:16","trueBody":{"expression":{"id":5067,"name":"amountToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"27919:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5060,"id":5068,"nodeType":"Return","src":"27912:18:16"}},{"assignments":[5071],"declarations":[{"constant":false,"id":5071,"mutability":"mutable","name":"tokenAmount","nameLocation":"27949:11:16","nodeType":"VariableDeclaration","scope":5089,"src":"27941:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5070,"name":"uint256","nodeType":"ElementaryTypeName","src":"27941:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5079,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":5073,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"27983:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2941_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":5075,"indexExpression":{"id":5074,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"27994:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27983:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2941_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":5076,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28001:5:16","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2936,"src":"27983:23:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5077,"name":"amountToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"28008:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5072,"name":"_convertBaseToToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"27963:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27963:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27941:79:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5081,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"28039:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28053:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28039:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e20616d6f756e7420746f20616464","id":5084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28056:29:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d","typeString":"literal_string \"Invalid token amount to add\""},"value":"Invalid token amount to add"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d","typeString":"literal_string \"Invalid token amount to add\""}],"id":5080,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28031:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28031:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5086,"nodeType":"ExpressionStatement","src":"28031:55:16"},{"expression":{"id":5087,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"28104:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5060,"id":5088,"nodeType":"Return","src":"28097:18:16"}]},"documentation":{"id":5052,"nodeType":"StructuredDocumentation","src":"27488:268:16","text":" @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\n @param index The index of the asset in the assetInfos array.\n @param amountToAdd The amount of native tokens to add as liquidity."},"id":5090,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateLiquidity","nameLocation":"27771:19:16","nodeType":"FunctionDefinition","parameters":{"id":5057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5054,"mutability":"mutable","name":"index","nameLocation":"27799:5:16","nodeType":"VariableDeclaration","scope":5090,"src":"27791:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5053,"name":"uint256","nodeType":"ElementaryTypeName","src":"27791:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5056,"mutability":"mutable","name":"amountToAdd","nameLocation":"27814:11:16","nodeType":"VariableDeclaration","scope":5090,"src":"27806:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5055,"name":"uint256","nodeType":"ElementaryTypeName","src":"27806:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27790:36:16"},"returnParameters":{"id":5060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5090,"src":"27850:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5058,"name":"uint256","nodeType":"ElementaryTypeName","src":"27850:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27849:9:16"},"scope":5171,"src":"27762:361:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5106,"nodeType":"Block","src":"28518:66:16","statements":[{"expression":{"arguments":[{"id":5101,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"28549:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5102,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"28560:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5103,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"28569:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5100,"name":"getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"28536:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28536:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5099,"id":5105,"nodeType":"Return","src":"28529:47:16"}]},"documentation":{"id":5091,"nodeType":"StructuredDocumentation","src":"28131:287:16","text":" @dev Converts the specified amount of native token to the corresponding token amount.\n @param toToken The address of the native token to convert from.\n @param amount The amount of native token to convert.\n @return The corresponding token amount."},"id":5107,"implemented":true,"kind":"function","modifiers":[],"name":"_convertBaseToToken","nameLocation":"28433:19:16","nodeType":"FunctionDefinition","parameters":{"id":5096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5093,"mutability":"mutable","name":"toToken","nameLocation":"28461:7:16","nodeType":"VariableDeclaration","scope":5107,"src":"28453:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5092,"name":"address","nodeType":"ElementaryTypeName","src":"28453:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5095,"mutability":"mutable","name":"amount","nameLocation":"28478:6:16","nodeType":"VariableDeclaration","scope":5107,"src":"28470:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5094,"name":"uint256","nodeType":"ElementaryTypeName","src":"28470:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28452:33:16"},"returnParameters":{"id":5099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5107,"src":"28509:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5097,"name":"uint256","nodeType":"ElementaryTypeName","src":"28509:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28508:9:16"},"scope":5171,"src":"28424:160:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5123,"nodeType":"Block","src":"28993:68:16","statements":[{"expression":{"arguments":[{"id":5118,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"29024:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5119,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"29035:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5120,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"29046:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5117,"name":"getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"29011:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29011:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5116,"id":5122,"nodeType":"Return","src":"29004:49:16"}]},"documentation":{"id":5108,"nodeType":"StructuredDocumentation","src":"28592:287:16","text":" @dev Converts the specified token to the native token using the rebalancer contract.\n @param fromToken The address of the token to convert from.\n @param amount The amount of tokens to convert.\n @return tokenAmount The converted amount of tokens."},"id":5124,"implemented":true,"kind":"function","modifiers":[],"name":"_convertTokenToBase","nameLocation":"28894:19:16","nodeType":"FunctionDefinition","parameters":{"id":5113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"fromToken","nameLocation":"28922:9:16","nodeType":"VariableDeclaration","scope":5124,"src":"28914:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5109,"name":"address","nodeType":"ElementaryTypeName","src":"28914:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5112,"mutability":"mutable","name":"amount","nameLocation":"28941:6:16","nodeType":"VariableDeclaration","scope":5124,"src":"28933:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5111,"name":"uint256","nodeType":"ElementaryTypeName","src":"28933:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28913:35:16"},"returnParameters":{"id":5116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5115,"mutability":"mutable","name":"tokenAmount","nameLocation":"28980:11:16","nodeType":"VariableDeclaration","scope":5124,"src":"28972:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5114,"name":"uint256","nodeType":"ElementaryTypeName","src":"28972:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28971:21:16"},"scope":5171,"src":"28885:176:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5169,"nodeType":"Block","src":"29348:290:16","statements":[{"assignments":[5134,5137],"declarations":[{"constant":false,"id":5134,"mutability":"mutable","name":"directions","nameLocation":"29374:10:16","nodeType":"VariableDeclaration","scope":5169,"src":"29360:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5132,"name":"bool","nodeType":"ElementaryTypeName","src":"29360:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5133,"nodeType":"ArrayTypeName","src":"29360:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":5137,"mutability":"mutable","name":"deviations","nameLocation":"29403:10:16","nodeType":"VariableDeclaration","scope":5169,"src":"29386:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5135,"name":"uint256","nodeType":"ElementaryTypeName","src":"29386:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5136,"nodeType":"ArrayTypeName","src":"29386:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5140,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5138,"name":"getDeviation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"29417:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (bool[] memory,uint256[] memory)"}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29417:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"29359:72:16"},{"body":{"id":5165,"nodeType":"Block","src":"29490:118:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5152,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"29509:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":5154,"indexExpression":{"id":5153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"29520:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29509:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5155,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"29526:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5157,"indexExpression":{"id":5156,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"29537:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29526:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5158,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"29542:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29526:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29509:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5164,"nodeType":"IfStatement","src":"29505:92:16","trueBody":{"id":5163,"nodeType":"Block","src":"29551:46:16","statements":[{"expression":{"hexValue":"74727565","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"29577:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5129,"id":5162,"nodeType":"Return","src":"29570:11:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5145,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"29462:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5146,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"29466:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29477:6:16","memberName":"length","nodeType":"MemberAccess","src":"29466:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29462:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5166,"initializationExpression":{"assignments":[5142],"declarations":[{"constant":false,"id":5142,"mutability":"mutable","name":"i","nameLocation":"29455:1:16","nodeType":"VariableDeclaration","scope":5166,"src":"29447:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5141,"name":"uint256","nodeType":"ElementaryTypeName","src":"29447:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5144,"initialValue":{"hexValue":"30","id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29459:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29447:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"29485:3:16","subExpression":{"id":5149,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"29485:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5151,"nodeType":"ExpressionStatement","src":"29485:3:16"},"nodeType":"ForStatement","src":"29442:166:16"},{"expression":{"hexValue":"66616c7365","id":5167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"29625:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5129,"id":5168,"nodeType":"Return","src":"29618:12:16"}]},"documentation":{"id":5125,"nodeType":"StructuredDocumentation","src":"29134:152:16","text":" @dev Checks if rebalancing is needed for the pool.\n @return A boolean value indicating whether rebalancing is needed or not."},"functionSelector":"8a77c8dc","id":5170,"implemented":true,"kind":"function","modifiers":[],"name":"isRebalanceNeeded","nameLocation":"29301:17:16","nodeType":"FunctionDefinition","parameters":{"id":5126,"nodeType":"ParameterList","parameters":[],"src":"29318:2:16"},"returnParameters":{"id":5129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5170,"src":"29342:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5127,"name":"bool","nodeType":"ElementaryTypeName","src":"29342:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29341:6:16"},"scope":5171,"src":"29292:346:16","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":5172,"src":"2058:27583:16","usedErrors":[30,35,211,214,475,480,1324,1444,1449,1454,1463,1468,1473,1604,1617,2514,2517],"usedEvents":[41,219,1583,2409,2418,2948,2955,2961,2967,2979]}],"src":"40:29603:16"},"id":16},"contracts/BaluniV1PoolRegistry.sol":{"ast":{"absolutePath":"contracts/BaluniV1PoolRegistry.sol","exportedSymbols":{"BaluniV1PoolRegistry":[5499],"Context":[2784],"ContextUpgradeable":[1293],"ERC1967Utils":[1872],"ERC20":[2397],"IBaluniV1Pool":[5731],"IBaluniV1Registry":[6110],"IERC1822Proxiable":[1432],"IERC20":[2475],"IERC20Errors":[1474],"IERC20Metadata":[2501],"Initializable":[448],"OwnableUpgradeable":[194],"UUPSUpgradeable":[630]},"id":5500,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5173,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:17"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":5174,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5500,"sourceUnit":195,"src":"1466:75:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":5175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5500,"sourceUnit":449,"src":"1543:75:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":5176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5500,"sourceUnit":631,"src":"1620:77:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","file":"./interfaces/IBaluniV1Registry.sol","id":5177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5500,"sourceUnit":6111,"src":"1699:44:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Pool.sol","file":"./interfaces/IBaluniV1Pool.sol","id":5178,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5500,"sourceUnit":5732,"src":"1745:40:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5179,"name":"Initializable","nameLocations":["1822:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1822:13:17"},"id":5180,"nodeType":"InheritanceSpecifier","src":"1822:13:17"},{"baseName":{"id":5181,"name":"UUPSUpgradeable","nameLocations":["1837:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"1837:15:17"},"id":5182,"nodeType":"InheritanceSpecifier","src":"1837:15:17"},{"baseName":{"id":5183,"name":"OwnableUpgradeable","nameLocations":["1854:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"1854:18:17"},"id":5184,"nodeType":"InheritanceSpecifier","src":"1854:18:17"}],"canonicalName":"BaluniV1PoolRegistry","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5499,"linearizedBaseContracts":[5499,194,1293,630,1432,448],"name":"BaluniV1PoolRegistry","nameLocation":"1798:20:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"41d1de97","id":5187,"mutability":"mutable","name":"allPools","nameLocation":"1897:8:17","nodeType":"VariableDeclaration","scope":5499,"src":"1880:25:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":5185,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5186,"nodeType":"ArrayTypeName","src":"1880:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"7b103999","id":5190,"mutability":"mutable","name":"registry","nameLocation":"1939:8:17","nodeType":"VariableDeclaration","scope":5499,"src":"1914:33:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"},"typeName":{"id":5189,"nodeType":"UserDefinedTypeName","pathNode":{"id":5188,"name":"IBaluniV1Registry","nameLocations":["1914:17:17"],"nodeType":"IdentifierPath","referencedDeclaration":6110,"src":"1914:17:17"},"referencedDeclaration":6110,"src":"1914:17:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"visibility":"public"},{"constant":false,"functionSelector":"531aa03e","id":5196,"mutability":"mutable","name":"getPool","nameLocation":"2011:7:17","nodeType":"VariableDeclaration","scope":5499,"src":"1956:62:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"typeName":{"id":5195,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5191,"name":"address","nodeType":"ElementaryTypeName","src":"1964:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1956:47:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5194,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5192,"name":"address","nodeType":"ElementaryTypeName","src":"1983:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1975:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5193,"name":"address","nodeType":"ElementaryTypeName","src":"1994:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"0a4af51f99a910b453b81f2f9f5673acd70bf8895729e0a6de8e5e0908d89f2b","id":5203,"name":"PoolCreated","nameLocation":"2033:11:17","nodeType":"EventDefinition","parameters":{"id":5202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5198,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"2061:4:17","nodeType":"VariableDeclaration","scope":5203,"src":"2045:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5197,"name":"address","nodeType":"ElementaryTypeName","src":"2045:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5201,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2077:6:17","nodeType":"VariableDeclaration","scope":5203,"src":"2067:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5199,"name":"address","nodeType":"ElementaryTypeName","src":"2067:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5200,"nodeType":"ArrayTypeName","src":"2067:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2044:40:17"},"src":"2027:58:17"},{"body":{"id":5224,"nodeType":"Block","src":"2151:130:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5210,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2162:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5212,"nodeType":"ExpressionStatement","src":"2162:24:17"},{"expression":{"arguments":[{"expression":{"id":5214,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2212:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2216:6:17","memberName":"sender","nodeType":"MemberAccess","src":"2212:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5213,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2197:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2197:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5217,"nodeType":"ExpressionStatement","src":"2197:26:17"},{"expression":{"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5218,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"2234:8:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5220,"name":"_register","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"2263:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5219,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"2245:17:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$6110_$","typeString":"type(contract IBaluniV1Registry)"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2245:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"src":"2234:39:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":5223,"nodeType":"ExpressionStatement","src":"2234:39:17"}]},"functionSelector":"c4d66de8","id":5225,"implemented":true,"kind":"function","modifiers":[{"id":5208,"kind":"modifierInvocation","modifierName":{"id":5207,"name":"initializer","nameLocations":["2139:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2139:11:17"},"nodeType":"ModifierInvocation","src":"2139:11:17"}],"name":"initialize","nameLocation":"2102:10:17","nodeType":"FunctionDefinition","parameters":{"id":5206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5205,"mutability":"mutable","name":"_register","nameLocation":"2121:9:17","nodeType":"VariableDeclaration","scope":5225,"src":"2113:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5204,"name":"address","nodeType":"ElementaryTypeName","src":"2113:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2112:19:17"},"returnParameters":{"id":5209,"nodeType":"ParameterList","parameters":[],"src":"2151:0:17"},"scope":5499,"src":"2093:188:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5241,"nodeType":"Block","src":"2378:58:17","statements":[{"expression":{"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5235,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"2389:8:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5237,"name":"_register","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"2418:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5236,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"2400:17:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$6110_$","typeString":"type(contract IBaluniV1Registry)"}},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2400:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"src":"2389:39:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$6110","typeString":"contract IBaluniV1Registry"}},"id":5240,"nodeType":"ExpressionStatement","src":"2389:39:17"}]},"functionSelector":"8f2248bc","id":5242,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5232,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"2368:8:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":5233,"kind":"modifierInvocation","modifierName":{"id":5231,"name":"reinitializer","nameLocations":["2354:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"2354:13:17"},"nodeType":"ModifierInvocation","src":"2354:23:17"}],"name":"reinitialize","nameLocation":"2298:12:17","nodeType":"FunctionDefinition","parameters":{"id":5230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5227,"mutability":"mutable","name":"_register","nameLocation":"2319:9:17","nodeType":"VariableDeclaration","scope":5242,"src":"2311:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5226,"name":"address","nodeType":"ElementaryTypeName","src":"2311:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5229,"mutability":"mutable","name":"_version","nameLocation":"2337:8:17","nodeType":"VariableDeclaration","scope":5242,"src":"2330:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5228,"name":"uint64","nodeType":"ElementaryTypeName","src":"2330:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2310:36:17"},"returnParameters":{"id":5234,"nodeType":"ParameterList","parameters":[],"src":"2378:0:17"},"scope":5499,"src":"2289:147:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[584],"body":{"id":5250,"nodeType":"Block","src":"2526:2:17","statements":[]},"id":5251,"implemented":true,"kind":"function","modifiers":[{"id":5248,"kind":"modifierInvocation","modifierName":{"id":5247,"name":"onlyOwner","nameLocations":["2516:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2516:9:17"},"nodeType":"ModifierInvocation","src":"2516:9:17"}],"name":"_authorizeUpgrade","nameLocation":"2453:17:17","nodeType":"FunctionDefinition","overrides":{"id":5246,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:17"},"parameters":{"id":5245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5244,"mutability":"mutable","name":"newImplementation","nameLocation":"2479:17:17","nodeType":"VariableDeclaration","scope":5251,"src":"2471:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5243,"name":"address","nodeType":"ElementaryTypeName","src":"2471:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2470:27:17"},"returnParameters":{"id":5249,"nodeType":"ParameterList","parameters":[],"src":"2526:0:17"},"scope":5499,"src":"2444:84:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5274,"nodeType":"Block","src":"2593:135:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5259,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"2612:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2635:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2627:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5260,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:17","typeDescriptions":{}}},"id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2627:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2612:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616c756e695631506f6f6c466163746f72793a20494e56414c49445f504f4f4c5f41444452455353","id":5265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2639:43:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_05f07676dc67392f7f7f6aab9a91a65df1780d5e1861fa32a8a8f53252c2841b","typeString":"literal_string \"BaluniV1PoolFactory: INVALID_POOL_ADDRESS\""},"value":"BaluniV1PoolFactory: INVALID_POOL_ADDRESS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05f07676dc67392f7f7f6aab9a91a65df1780d5e1861fa32a8a8f53252c2841b","typeString":"literal_string \"BaluniV1PoolFactory: INVALID_POOL_ADDRESS\""}],"id":5258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2604:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2604:79:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5267,"nodeType":"ExpressionStatement","src":"2604:79:17"},{"expression":{"arguments":[{"id":5271,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"2708:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5268,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"2694:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2703:4:17","memberName":"push","nodeType":"MemberAccess","src":"2694:13:17","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2694:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5273,"nodeType":"ExpressionStatement","src":"2694:26:17"}]},"functionSelector":"d914cd4b","id":5275,"implemented":true,"kind":"function","modifiers":[{"id":5256,"kind":"modifierInvocation","modifierName":{"id":5255,"name":"onlyOwner","nameLocations":["2583:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2583:9:17"},"nodeType":"ModifierInvocation","src":"2583:9:17"}],"name":"addPool","nameLocation":"2545:7:17","nodeType":"FunctionDefinition","parameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"poolAddress","nameLocation":"2561:11:17","nodeType":"VariableDeclaration","scope":5275,"src":"2553:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5252,"name":"address","nodeType":"ElementaryTypeName","src":"2553:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2552:21:17"},"returnParameters":{"id":5257,"nodeType":"ParameterList","parameters":[],"src":"2593:0:17"},"scope":5499,"src":"2536:192:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5284,"nodeType":"Block","src":"2923:34:17","statements":[{"expression":{"id":5282,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"2941:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":5281,"id":5283,"nodeType":"Return","src":"2934:15:17"}]},"documentation":{"id":5276,"nodeType":"StructuredDocumentation","src":"2736:117:17","text":" @dev Retrieves all the pools created by the factory.\n @return An array of pool addresses."},"functionSelector":"d88ff1f4","id":5285,"implemented":true,"kind":"function","modifiers":[],"name":"getAllPools","nameLocation":"2868:11:17","nodeType":"FunctionDefinition","parameters":{"id":5277,"nodeType":"ParameterList","parameters":[],"src":"2879:2:17"},"returnParameters":{"id":5281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5285,"src":"2905:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5278,"name":"address","nodeType":"ElementaryTypeName","src":"2905:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5279,"nodeType":"ArrayTypeName","src":"2905:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2904:18:17"},"scope":5499,"src":"2859:98:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5294,"nodeType":"Block","src":"3143:41:17","statements":[{"expression":{"expression":{"id":5291,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"3161:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3170:6:17","memberName":"length","nodeType":"MemberAccess","src":"3161:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5290,"id":5293,"nodeType":"Return","src":"3154:22:17"}]},"documentation":{"id":5286,"nodeType":"StructuredDocumentation","src":"2965:115:17","text":" @dev Retrieves the number of pools created by the factory.\n @return The count of pools."},"functionSelector":"b4ac6860","id":5295,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsCount","nameLocation":"3095:13:17","nodeType":"FunctionDefinition","parameters":{"id":5287,"nodeType":"ParameterList","parameters":[],"src":"3108:2:17"},"returnParameters":{"id":5290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5295,"src":"3134:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5288,"name":"uint256","nodeType":"ElementaryTypeName","src":"3134:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3133:9:17"},"scope":5499,"src":"3086:98:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5315,"nodeType":"Block","src":"3446:100:17","statements":[{"assignments":[5306],"declarations":[{"constant":false,"id":5306,"mutability":"mutable","name":"pool","nameLocation":"3471:4:17","nodeType":"VariableDeclaration","scope":5315,"src":"3457:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5731","typeString":"contract IBaluniV1Pool"},"typeName":{"id":5305,"nodeType":"UserDefinedTypeName","pathNode":{"id":5304,"name":"IBaluniV1Pool","nameLocations":["3457:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":5731,"src":"3457:13:17"},"referencedDeclaration":5731,"src":"3457:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5731","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":5310,"initialValue":{"arguments":[{"id":5308,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"3492:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5307,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"3478:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$5731_$","typeString":"type(contract IBaluniV1Pool)"}},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3478:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5731","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"3457:47:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5311,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"3522:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5731","typeString":"contract IBaluniV1Pool"}},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3527:9:17","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":5573,"src":"3522:14:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3522:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5303,"id":5314,"nodeType":"Return","src":"3515:23:17"}]},"documentation":{"id":5296,"nodeType":"StructuredDocumentation","src":"3192:163:17","text":" @dev Retrieves the assets of a specific pool.\n @param poolAddress The address of the pool.\n @return An array of asset addresses."},"functionSelector":"4276b97b","id":5316,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolAssets","nameLocation":"3370:13:17","nodeType":"FunctionDefinition","parameters":{"id":5299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5298,"mutability":"mutable","name":"poolAddress","nameLocation":"3392:11:17","nodeType":"VariableDeclaration","scope":5316,"src":"3384:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5297,"name":"address","nodeType":"ElementaryTypeName","src":"3384:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3383:21:17"},"returnParameters":{"id":5303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5316,"src":"3428:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5300,"name":"address","nodeType":"ElementaryTypeName","src":"3428:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5301,"nodeType":"ArrayTypeName","src":"3428:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3427:18:17"},"scope":5499,"src":"3361:185:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5335,"nodeType":"Block","src":"3878:58:17","statements":[{"expression":{"arguments":[{"baseExpression":{"baseExpression":{"id":5328,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"3904:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":5330,"indexExpression":{"id":5329,"name":"asset1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"3912:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3904:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":5332,"indexExpression":{"id":5331,"name":"asset2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"3920:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3904:23:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3896:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5326,"name":"address","nodeType":"ElementaryTypeName","src":"3896:7:17","typeDescriptions":{}}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5325,"id":5334,"nodeType":"Return","src":"3889:39:17"}]},"documentation":{"id":5317,"nodeType":"StructuredDocumentation","src":"3554:229:17","text":" @dev Retrieves the pool address based on the given assets.\n @param asset1 The address of the first asset.\n @param asset2 The address of the second asset.\n @return The address of the pool."},"functionSelector":"2d5e94a7","id":5336,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolByAssets","nameLocation":"3798:15:17","nodeType":"FunctionDefinition","parameters":{"id":5322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5319,"mutability":"mutable","name":"asset1","nameLocation":"3822:6:17","nodeType":"VariableDeclaration","scope":5336,"src":"3814:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5318,"name":"address","nodeType":"ElementaryTypeName","src":"3814:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5321,"mutability":"mutable","name":"asset2","nameLocation":"3838:6:17","nodeType":"VariableDeclaration","scope":5336,"src":"3830:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5320,"name":"address","nodeType":"ElementaryTypeName","src":"3830:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3813:32:17"},"returnParameters":{"id":5325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5336,"src":"3869:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5323,"name":"address","nodeType":"ElementaryTypeName","src":"3869:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3868:9:17"},"scope":5499,"src":"3789:147:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5465,"nodeType":"Block","src":"4230:799:17","statements":[{"assignments":[5349],"declarations":[{"constant":false,"id":5349,"mutability":"mutable","name":"pools","nameLocation":"4258:5:17","nodeType":"VariableDeclaration","scope":5465,"src":"4241:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5347,"name":"address","nodeType":"ElementaryTypeName","src":"4241:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5348,"nodeType":"ArrayTypeName","src":"4241:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5356,"initialValue":{"arguments":[{"expression":{"id":5353,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"4280:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4289:6:17","memberName":"length","nodeType":"MemberAccess","src":"4280:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4266:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":5350,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5351,"nodeType":"ArrayTypeName","src":"4270:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4266:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4241:55:17"},{"assignments":[5358],"declarations":[{"constant":false,"id":5358,"mutability":"mutable","name":"count","nameLocation":"4315:5:17","nodeType":"VariableDeclaration","scope":5465,"src":"4307:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5357,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5360,"initialValue":{"hexValue":"30","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4323:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4307:17:17"},{"body":{"id":5430,"nodeType":"Block","src":"4383:461:17","statements":[{"assignments":[5374],"declarations":[{"constant":false,"id":5374,"mutability":"mutable","name":"pool","nameLocation":"4412:4:17","nodeType":"VariableDeclaration","scope":5430,"src":"4398:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5731","typeString":"contract IBaluniV1Pool"},"typeName":{"id":5373,"nodeType":"UserDefinedTypeName","pathNode":{"id":5372,"name":"IBaluniV1Pool","nameLocations":["4398:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":5731,"src":"4398:13:17"},"referencedDeclaration":5731,"src":"4398:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5731","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":5380,"initialValue":{"arguments":[{"baseExpression":{"id":5376,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"4433:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5378,"indexExpression":{"id":5377,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"4442:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4433:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5375,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"4419:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$5731_$","typeString":"type(contract IBaluniV1Pool)"}},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4419:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5731","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"4398:47:17"},{"assignments":[5385],"declarations":[{"constant":false,"id":5385,"mutability":"mutable","name":"assets","nameLocation":"4477:6:17","nodeType":"VariableDeclaration","scope":5430,"src":"4460:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5383,"name":"address","nodeType":"ElementaryTypeName","src":"4460:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5384,"nodeType":"ArrayTypeName","src":"4460:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5389,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5386,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"4486:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5731","typeString":"contract IBaluniV1Pool"}},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4491:9:17","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":5573,"src":"4486:14:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4486:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4460:42:17"},{"body":{"id":5421,"nodeType":"Block","src":"4563:187:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5401,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"4586:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5403,"indexExpression":{"id":5402,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"4593:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4586:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5404,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"4599:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4586:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5420,"nodeType":"IfStatement","src":"4582:153:17","trueBody":{"id":5419,"nodeType":"Block","src":"4606:129:17","statements":[{"expression":{"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5406,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"4629:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5408,"indexExpression":{"id":5407,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"4635:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4629:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5411,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"4652:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5731","typeString":"contract IBaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaluniV1Pool_$5731","typeString":"contract IBaluniV1Pool"}],"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4644:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5409,"name":"address","nodeType":"ElementaryTypeName","src":"4644:7:17","typeDescriptions":{}}},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4644:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4629:28:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5414,"nodeType":"ExpressionStatement","src":"4629:28:17"},{"expression":{"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4680:7:17","subExpression":{"id":5415,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"4680:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5417,"nodeType":"ExpressionStatement","src":"4680:7:17"},{"id":5418,"nodeType":"Break","src":"4710:5:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5394,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"4539:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5395,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"4543:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4550:6:17","memberName":"length","nodeType":"MemberAccess","src":"4543:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4539:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5422,"initializationExpression":{"assignments":[5391],"declarations":[{"constant":false,"id":5391,"mutability":"mutable","name":"j","nameLocation":"4532:1:17","nodeType":"VariableDeclaration","scope":5422,"src":"4524:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5390,"name":"uint256","nodeType":"ElementaryTypeName","src":"4524:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5393,"initialValue":{"hexValue":"30","id":5392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4536:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4524:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4558:3:17","subExpression":{"id":5398,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"4558:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5400,"nodeType":"ExpressionStatement","src":"4558:3:17"},"nodeType":"ForStatement","src":"4519:231:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5423,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"4770:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5424,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"4779:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4785:6:17","memberName":"length","nodeType":"MemberAccess","src":"4779:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4770:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5429,"nodeType":"IfStatement","src":"4766:67:17","trueBody":{"id":5428,"nodeType":"Block","src":"4793:40:17","statements":[{"id":5427,"nodeType":"Break","src":"4812:5:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5365,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"4357:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5366,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"4361:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4370:6:17","memberName":"length","nodeType":"MemberAccess","src":"4361:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4357:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5431,"initializationExpression":{"assignments":[5362],"declarations":[{"constant":false,"id":5362,"mutability":"mutable","name":"i","nameLocation":"4350:1:17","nodeType":"VariableDeclaration","scope":5431,"src":"4342:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5361,"name":"uint256","nodeType":"ElementaryTypeName","src":"4342:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5364,"initialValue":{"hexValue":"30","id":5363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4354:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4342:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4378:3:17","subExpression":{"id":5369,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"4378:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5371,"nodeType":"ExpressionStatement","src":"4378:3:17"},"nodeType":"ForStatement","src":"4337:507:17"},{"assignments":[5436],"declarations":[{"constant":false,"id":5436,"mutability":"mutable","name":"result","nameLocation":"4873:6:17","nodeType":"VariableDeclaration","scope":5465,"src":"4856:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5434,"name":"address","nodeType":"ElementaryTypeName","src":"4856:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5435,"nodeType":"ArrayTypeName","src":"4856:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5442,"initialValue":{"arguments":[{"id":5440,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"4896:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4882:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":5437,"name":"address","nodeType":"ElementaryTypeName","src":"4886:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5438,"nodeType":"ArrayTypeName","src":"4886:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4882:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4856:46:17"},{"body":{"id":5461,"nodeType":"Block","src":"4949:47:17","statements":[{"expression":{"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5453,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"4964:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5455,"indexExpression":{"id":5454,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"4971:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4964:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5456,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"4976:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5458,"indexExpression":{"id":5457,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"4982:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4976:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4964:20:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5460,"nodeType":"ExpressionStatement","src":"4964:20:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"4933:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5448,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"4937:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4933:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5462,"initializationExpression":{"assignments":[5444],"declarations":[{"constant":false,"id":5444,"mutability":"mutable","name":"i","nameLocation":"4926:1:17","nodeType":"VariableDeclaration","scope":5462,"src":"4918:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5443,"name":"uint256","nodeType":"ElementaryTypeName","src":"4918:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5446,"initialValue":{"hexValue":"30","id":5445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4930:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4918:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4944:3:17","subExpression":{"id":5450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"4944:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5452,"nodeType":"ExpressionStatement","src":"4944:3:17"},"nodeType":"ForStatement","src":"4913:83:17"},{"expression":{"id":5463,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"5015:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5344,"id":5464,"nodeType":"Return","src":"5008:13:17"}]},"documentation":{"id":5337,"nodeType":"StructuredDocumentation","src":"3944:199:17","text":" @dev Returns an array of pool addresses that contain the specified token.\n @param token The address of the token to search for.\n @return An array of pool addresses."},"functionSelector":"b4340e6a","id":5466,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsByAsset","nameLocation":"4158:15:17","nodeType":"FunctionDefinition","parameters":{"id":5340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5339,"mutability":"mutable","name":"token","nameLocation":"4182:5:17","nodeType":"VariableDeclaration","scope":5466,"src":"4174:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5338,"name":"address","nodeType":"ElementaryTypeName","src":"4174:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4173:15:17"},"returnParameters":{"id":5344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5466,"src":"4212:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5341,"name":"address","nodeType":"ElementaryTypeName","src":"4212:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5342,"nodeType":"ArrayTypeName","src":"4212:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4211:18:17"},"scope":5499,"src":"4149:880:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5497,"nodeType":"Block","src":"5100:185:17","statements":[{"body":{"id":5493,"nodeType":"Block","src":"5157:98:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5484,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"5176:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5486,"indexExpression":{"id":5485,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"5185:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5176:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5487,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"5191:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5176:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5492,"nodeType":"IfStatement","src":"5172:72:17","trueBody":{"id":5491,"nodeType":"Block","src":"5198:46:17","statements":[{"expression":{"hexValue":"74727565","id":5489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5224:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5472,"id":5490,"nodeType":"Return","src":"5217:11:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5477,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"5131:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5478,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"5135:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5144:6:17","memberName":"length","nodeType":"MemberAccess","src":"5135:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5494,"initializationExpression":{"assignments":[5474],"declarations":[{"constant":false,"id":5474,"mutability":"mutable","name":"i","nameLocation":"5124:1:17","nodeType":"VariableDeclaration","scope":5494,"src":"5116:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5473,"name":"uint256","nodeType":"ElementaryTypeName","src":"5116:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5476,"initialValue":{"hexValue":"30","id":5475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5128:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5116:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5152:3:17","subExpression":{"id":5481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"5152:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5483,"nodeType":"ExpressionStatement","src":"5152:3:17"},"nodeType":"ForStatement","src":"5111:144:17"},{"expression":{"hexValue":"66616c7365","id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5472,"id":5496,"nodeType":"Return","src":"5265:12:17"}]},"functionSelector":"89345efb","id":5498,"implemented":true,"kind":"function","modifiers":[],"name":"poolExist","nameLocation":"5046:9:17","nodeType":"FunctionDefinition","parameters":{"id":5469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5468,"mutability":"mutable","name":"_pool","nameLocation":"5064:5:17","nodeType":"VariableDeclaration","scope":5498,"src":"5056:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5467,"name":"address","nodeType":"ElementaryTypeName","src":"5056:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5055:15:17"},"returnParameters":{"id":5472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5498,"src":"5094:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5470,"name":"bool","nodeType":"ElementaryTypeName","src":"5094:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5093:6:17"},"scope":5499,"src":"5037:248:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5500,"src":"1789:3499:17","usedErrors":[30,35,211,214,475,480,1604,1617,2514,2517],"usedEvents":[41,219,1583,5203]}],"src":"40:5250:17"},"id":17},"contracts/interfaces/IBaluniV1Oracle.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Oracle.sol","exportedSymbols":{"IBaluniV1Oracle":[5524]},"id":5525,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5501,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Oracle","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5524,"linearizedBaseContracts":[5524],"name":"IBaluniV1Oracle","nameLocation":"77:15:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"248391ff","id":5512,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"109:7:18","nodeType":"FunctionDefinition","parameters":{"id":5508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5503,"mutability":"mutable","name":"fromToken","nameLocation":"125:9:18","nodeType":"VariableDeclaration","scope":5512,"src":"117:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5502,"name":"address","nodeType":"ElementaryTypeName","src":"117:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5505,"mutability":"mutable","name":"toToken","nameLocation":"144:7:18","nodeType":"VariableDeclaration","scope":5512,"src":"136:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5504,"name":"address","nodeType":"ElementaryTypeName","src":"136:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5507,"mutability":"mutable","name":"amount","nameLocation":"161:6:18","nodeType":"VariableDeclaration","scope":5512,"src":"153:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5506,"name":"uint256","nodeType":"ElementaryTypeName","src":"153:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116:52:18"},"returnParameters":{"id":5511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5510,"mutability":"mutable","name":"valuation","nameLocation":"200:9:18","nodeType":"VariableDeclaration","scope":5512,"src":"192:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5509,"name":"uint256","nodeType":"ElementaryTypeName","src":"192:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"191:19:18"},"scope":5524,"src":"100:111:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b27b5e75","id":5523,"implemented":false,"kind":"function","modifiers":[],"name":"convertScaled","nameLocation":"228:13:18","nodeType":"FunctionDefinition","parameters":{"id":5519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5514,"mutability":"mutable","name":"fromToken","nameLocation":"260:9:18","nodeType":"VariableDeclaration","scope":5523,"src":"252:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5513,"name":"address","nodeType":"ElementaryTypeName","src":"252:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5516,"mutability":"mutable","name":"toToken","nameLocation":"288:7:18","nodeType":"VariableDeclaration","scope":5523,"src":"280:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5515,"name":"address","nodeType":"ElementaryTypeName","src":"280:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5518,"mutability":"mutable","name":"amount","nameLocation":"314:6:18","nodeType":"VariableDeclaration","scope":5523,"src":"306:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5517,"name":"uint256","nodeType":"ElementaryTypeName","src":"306:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"241:86:18"},"returnParameters":{"id":5522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5521,"mutability":"mutable","name":"valuation","nameLocation":"359:9:18","nodeType":"VariableDeclaration","scope":5523,"src":"351:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5520,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"350:19:18"},"scope":5524,"src":"219:151:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5525,"src":"67:306:18","usedErrors":[],"usedEvents":[]}],"src":"40:335:18"},"id":18},"contracts/interfaces/IBaluniV1Pool.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Pool.sol","exportedSymbols":{"Context":[2784],"ERC20":[2397],"IBaluniV1Pool":[5731],"IERC20":[2475],"IERC20Errors":[1474],"IERC20Metadata":[2501]},"id":5732,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5526,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5527,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5732,"sourceUnit":2398,"src":"65:55:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Pool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5731,"linearizedBaseContracts":[5731],"name":"IBaluniV1Pool","nameLocation":"134:13:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"01d22ccd","id":5532,"implemented":false,"kind":"function","modifiers":[],"name":"rebalancer","nameLocation":"178:10:19","nodeType":"FunctionDefinition","parameters":{"id":5528,"nodeType":"ParameterList","parameters":[],"src":"188:2:19"},"returnParameters":{"id":5531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5532,"src":"214:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5529,"name":"address","nodeType":"ElementaryTypeName","src":"214:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"213:9:19"},"scope":5731,"src":"169:54:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf35bdd0","id":5539,"implemented":false,"kind":"function","modifiers":[],"name":"assets","nameLocation":"240:6:19","nodeType":"FunctionDefinition","parameters":{"id":5535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5534,"mutability":"mutable","name":"index","nameLocation":"255:5:19","nodeType":"VariableDeclaration","scope":5539,"src":"247:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5533,"name":"uint256","nodeType":"ElementaryTypeName","src":"247:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"246:15:19"},"returnParameters":{"id":5538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5539,"src":"285:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5536,"name":"address","nodeType":"ElementaryTypeName","src":"285:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"284:9:19"},"scope":5731,"src":"231:63:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b5f163ff","id":5546,"implemented":false,"kind":"function","modifiers":[],"name":"weights","nameLocation":"311:7:19","nodeType":"FunctionDefinition","parameters":{"id":5542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5541,"mutability":"mutable","name":"index","nameLocation":"327:5:19","nodeType":"VariableDeclaration","scope":5546,"src":"319:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5540,"name":"uint256","nodeType":"ElementaryTypeName","src":"319:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"318:15:19"},"returnParameters":{"id":5545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5546,"src":"357:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5543,"name":"uint256","nodeType":"ElementaryTypeName","src":"357:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"356:9:19"},"scope":5731,"src":"302:64:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7fec8d38","id":5551,"implemented":false,"kind":"function","modifiers":[],"name":"trigger","nameLocation":"383:7:19","nodeType":"FunctionDefinition","parameters":{"id":5547,"nodeType":"ParameterList","parameters":[],"src":"390:2:19"},"returnParameters":{"id":5550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5551,"src":"416:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5548,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"415:9:19"},"scope":5731,"src":"374:51:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c2ee3a08","id":5556,"implemented":false,"kind":"function","modifiers":[],"name":"ONE","nameLocation":"442:3:19","nodeType":"FunctionDefinition","parameters":{"id":5552,"nodeType":"ParameterList","parameters":[],"src":"445:2:19"},"returnParameters":{"id":5555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5556,"src":"471:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5553,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:19"},"scope":5731,"src":"433:47:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f887ea40","id":5561,"implemented":false,"kind":"function","modifiers":[],"name":"router","nameLocation":"497:6:19","nodeType":"FunctionDefinition","parameters":{"id":5557,"nodeType":"ParameterList","parameters":[],"src":"503:2:19"},"returnParameters":{"id":5560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5561,"src":"529:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5558,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"528:9:19"},"scope":5731,"src":"488:50:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0902f1ac","id":5567,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"555:11:19","nodeType":"FunctionDefinition","parameters":{"id":5562,"nodeType":"ParameterList","parameters":[],"src":"566:2:19"},"returnParameters":{"id":5566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5567,"src":"592:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5563,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5564,"nodeType":"ArrayTypeName","src":"592:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"591:18:19"},"scope":5731,"src":"546:64:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"67e4ac2c","id":5573,"implemented":false,"kind":"function","modifiers":[],"name":"getAssets","nameLocation":"627:9:19","nodeType":"FunctionDefinition","parameters":{"id":5568,"nodeType":"ParameterList","parameters":[],"src":"636:2:19"},"returnParameters":{"id":5572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5573,"src":"662:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5569,"name":"address","nodeType":"ElementaryTypeName","src":"662:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5570,"nodeType":"ArrayTypeName","src":"662:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"661:18:19"},"scope":5731,"src":"618:62:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b2b55d70","id":5580,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"697:15:19","nodeType":"FunctionDefinition","parameters":{"id":5576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5575,"mutability":"mutable","name":"asset","nameLocation":"721:5:19","nodeType":"VariableDeclaration","scope":5580,"src":"713:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5574,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"712:15:19"},"returnParameters":{"id":5579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5580,"src":"751:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5577,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"750:9:19"},"scope":5731,"src":"688:72:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"22acb867","id":5586,"implemented":false,"kind":"function","modifiers":[],"name":"getWeights","nameLocation":"777:10:19","nodeType":"FunctionDefinition","parameters":{"id":5581,"nodeType":"ParameterList","parameters":[],"src":"787:2:19"},"returnParameters":{"id":5585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5586,"src":"813:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5582,"name":"uint256","nodeType":"ElementaryTypeName","src":"813:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5583,"nodeType":"ArrayTypeName","src":"813:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"812:18:19"},"scope":5731,"src":"768:63:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4aa06652","id":5597,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"848:12:19","nodeType":"FunctionDefinition","parameters":{"id":5593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5588,"mutability":"mutable","name":"fromToken","nameLocation":"869:9:19","nodeType":"VariableDeclaration","scope":5597,"src":"861:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5587,"name":"address","nodeType":"ElementaryTypeName","src":"861:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5590,"mutability":"mutable","name":"toToken","nameLocation":"888:7:19","nodeType":"VariableDeclaration","scope":5597,"src":"880:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5589,"name":"address","nodeType":"ElementaryTypeName","src":"880:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5592,"mutability":"mutable","name":"amount","nameLocation":"905:6:19","nodeType":"VariableDeclaration","scope":5597,"src":"897:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5591,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"860:52:19"},"returnParameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5597,"src":"936:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5594,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"935:9:19"},"scope":5731,"src":"839:106:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f47b45e8","id":5606,"implemented":false,"kind":"function","modifiers":[],"name":"performRebalanceIfNeeded","nameLocation":"962:24:19","nodeType":"FunctionDefinition","parameters":{"id":5598,"nodeType":"ParameterList","parameters":[],"src":"986:2:19"},"returnParameters":{"id":5605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5601,"mutability":"mutable","name":"amountsToAdd","nameLocation":"1042:12:19","nodeType":"VariableDeclaration","scope":5606,"src":"1025:29:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1025:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5600,"nodeType":"ArrayTypeName","src":"1025:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5604,"mutability":"mutable","name":"amountsToRemove","nameLocation":"1073:15:19","nodeType":"VariableDeclaration","scope":5606,"src":"1056:32:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5602,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5603,"nodeType":"ArrayTypeName","src":"1056:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1024:65:19"},"scope":5731,"src":"953:137:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"89ab3532","id":5615,"implemented":false,"kind":"function","modifiers":[],"name":"getDeviation","nameLocation":"1107:12:19","nodeType":"FunctionDefinition","parameters":{"id":5607,"nodeType":"ParameterList","parameters":[],"src":"1119:2:19"},"returnParameters":{"id":5614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5610,"mutability":"mutable","name":"directions","nameLocation":"1159:10:19","nodeType":"VariableDeclaration","scope":5615,"src":"1145:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5608,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5609,"nodeType":"ArrayTypeName","src":"1145:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":5613,"mutability":"mutable","name":"deviations","nameLocation":"1188:10:19","nodeType":"VariableDeclaration","scope":5615,"src":"1171:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1171:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5612,"nodeType":"ArrayTypeName","src":"1171:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1144:55:19"},"scope":5731,"src":"1098:102:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf8fa764","id":5622,"implemented":false,"kind":"function","modifiers":[],"name":"assetLiquidity","nameLocation":"1217:14:19","nodeType":"FunctionDefinition","parameters":{"id":5618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5617,"mutability":"mutable","name":"assetIndex","nameLocation":"1240:10:19","nodeType":"VariableDeclaration","scope":5622,"src":"1232:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5616,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1231:20:19"},"returnParameters":{"id":5621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5622,"src":"1275:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5619,"name":"uint256","nodeType":"ElementaryTypeName","src":"1275:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1274:9:19"},"scope":5731,"src":"1208:76:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1a686502","id":5627,"implemented":false,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"1301:9:19","nodeType":"FunctionDefinition","parameters":{"id":5623,"nodeType":"ParameterList","parameters":[],"src":"1310:2:19"},"returnParameters":{"id":5626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5627,"src":"1336:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5624,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1335:9:19"},"scope":5731,"src":"1292:53:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e73faa2d","id":5632,"implemented":false,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"1362:9:19","nodeType":"FunctionDefinition","parameters":{"id":5628,"nodeType":"ParameterList","parameters":[],"src":"1371:2:19"},"returnParameters":{"id":5631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5632,"src":"1397:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1397:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1396:9:19"},"scope":5731,"src":"1353:53:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6e81221c","id":5645,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"1423:4:19","nodeType":"FunctionDefinition","parameters":{"id":5641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5634,"mutability":"mutable","name":"fromToken","nameLocation":"1446:9:19","nodeType":"VariableDeclaration","scope":5645,"src":"1438:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5633,"name":"address","nodeType":"ElementaryTypeName","src":"1438:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5636,"mutability":"mutable","name":"toToken","nameLocation":"1474:7:19","nodeType":"VariableDeclaration","scope":5645,"src":"1466:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5635,"name":"address","nodeType":"ElementaryTypeName","src":"1466:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5638,"mutability":"mutable","name":"amount","nameLocation":"1500:6:19","nodeType":"VariableDeclaration","scope":5645,"src":"1492:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5637,"name":"uint256","nodeType":"ElementaryTypeName","src":"1492:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5640,"mutability":"mutable","name":"receiver","nameLocation":"1525:8:19","nodeType":"VariableDeclaration","scope":5645,"src":"1517:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5639,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1427:113:19"},"returnParameters":{"id":5644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5643,"mutability":"mutable","name":"toSend","nameLocation":"1567:6:19","nodeType":"VariableDeclaration","scope":5645,"src":"1559:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5642,"name":"uint256","nodeType":"ElementaryTypeName","src":"1559:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1558:16:19"},"scope":5731,"src":"1414:161:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"de836ebd","id":5655,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1592:4:19","nodeType":"FunctionDefinition","parameters":{"id":5651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5647,"mutability":"mutable","name":"to","nameLocation":"1605:2:19","nodeType":"VariableDeclaration","scope":5655,"src":"1597:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5646,"name":"address","nodeType":"ElementaryTypeName","src":"1597:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5650,"mutability":"mutable","name":"amounts","nameLocation":"1626:7:19","nodeType":"VariableDeclaration","scope":5655,"src":"1609:24:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1609:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5649,"nodeType":"ArrayTypeName","src":"1609:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1596:38:19"},"returnParameters":{"id":5654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5655,"src":"1653:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1653:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1652:9:19"},"scope":5731,"src":"1583:79:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"89afcb44","id":5663,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"1679:4:19","nodeType":"FunctionDefinition","parameters":{"id":5658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"to","nameLocation":"1692:2:19","nodeType":"VariableDeclaration","scope":5663,"src":"1684:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5656,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:12:19"},"returnParameters":{"id":5662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5663,"src":"1714:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5659,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5660,"nodeType":"ArrayTypeName","src":"1714:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1713:18:19"},"scope":5731,"src":"1670:62:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"36bf6e39","id":5671,"implemented":false,"kind":"function","modifiers":[],"name":"computeTotalValuation","nameLocation":"1749:21:19","nodeType":"FunctionDefinition","parameters":{"id":5664,"nodeType":"ParameterList","parameters":[],"src":"1770:2:19"},"returnParameters":{"id":5670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5666,"mutability":"mutable","name":"totalVal","nameLocation":"1804:8:19","nodeType":"VariableDeclaration","scope":5671,"src":"1796:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1796:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5669,"mutability":"mutable","name":"valuations","nameLocation":"1831:10:19","nodeType":"VariableDeclaration","scope":5671,"src":"1814:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5667,"name":"uint256","nodeType":"ElementaryTypeName","src":"1814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5668,"nodeType":"ArrayTypeName","src":"1814:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1795:47:19"},"scope":5731,"src":"1740:103:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0723c999","id":5679,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceWeights","nameLocation":"1860:16:19","nodeType":"FunctionDefinition","parameters":{"id":5674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5673,"mutability":"mutable","name":"receiver","nameLocation":"1885:8:19","nodeType":"VariableDeclaration","scope":5679,"src":"1877:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5672,"name":"address","nodeType":"ElementaryTypeName","src":"1877:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1876:18:19"},"returnParameters":{"id":5678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5679,"src":"1913:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5675,"name":"uint256","nodeType":"ElementaryTypeName","src":"1913:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5676,"nodeType":"ArrayTypeName","src":"1913:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1912:18:19"},"scope":5731,"src":"1851:80:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IBaluniV1Pool.AssetInfo","id":5684,"members":[{"constant":false,"id":5681,"mutability":"mutable","name":"asset","nameLocation":"1975:5:19","nodeType":"VariableDeclaration","scope":5684,"src":"1967:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5680,"name":"address","nodeType":"ElementaryTypeName","src":"1967:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5683,"mutability":"mutable","name":"weight","nameLocation":"1999:6:19","nodeType":"VariableDeclaration","scope":5684,"src":"1991:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5682,"name":"uint256","nodeType":"ElementaryTypeName","src":"1991:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AssetInfo","nameLocation":"1946:9:19","nodeType":"StructDefinition","scope":5731,"src":"1939:74:19","visibility":"public"},{"functionSelector":"d14ef46d","id":5692,"implemented":false,"kind":"function","modifiers":[],"name":"assetInfos","nameLocation":"2030:10:19","nodeType":"FunctionDefinition","parameters":{"id":5687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"_index","nameLocation":"2046:6:19","nodeType":"VariableDeclaration","scope":5692,"src":"2041:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5685,"name":"uint","nodeType":"ElementaryTypeName","src":"2041:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2040:13:19"},"returnParameters":{"id":5691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5692,"src":"2077:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$5684_memory_ptr","typeString":"struct IBaluniV1Pool.AssetInfo"},"typeName":{"id":5689,"nodeType":"UserDefinedTypeName","pathNode":{"id":5688,"name":"AssetInfo","nameLocations":["2077:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":5684,"src":"2077:9:19"},"referencedDeclaration":5684,"src":"2077:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$5684_storage_ptr","typeString":"struct IBaluniV1Pool.AssetInfo"}},"visibility":"internal"}],"src":"2076:18:19"},"scope":5731,"src":"2021:74:19","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8","id":5699,"name":"RebalancePerformed","nameLocation":"2124:18:19","nodeType":"EventDefinition","parameters":{"id":5698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5694,"indexed":true,"mutability":"mutable","name":"by","nameLocation":"2159:2:19","nodeType":"VariableDeclaration","scope":5699,"src":"2143:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5693,"name":"address","nodeType":"ElementaryTypeName","src":"2143:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5697,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2173:6:19","nodeType":"VariableDeclaration","scope":5699,"src":"2163:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5695,"name":"address","nodeType":"ElementaryTypeName","src":"2163:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5696,"nodeType":"ArrayTypeName","src":"2163:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2142:38:19"},"src":"2118:63:19"},{"anonymous":false,"eventSelector":"a95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e","id":5706,"name":"WeightsRebalanced","nameLocation":"2193:17:19","nodeType":"EventDefinition","parameters":{"id":5705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2227:4:19","nodeType":"VariableDeclaration","scope":5706,"src":"2211:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5700,"name":"address","nodeType":"ElementaryTypeName","src":"2211:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5704,"indexed":false,"mutability":"mutable","name":"amountsAdded","nameLocation":"2243:12:19","nodeType":"VariableDeclaration","scope":5706,"src":"2233:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5702,"name":"uint256","nodeType":"ElementaryTypeName","src":"2233:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5703,"nodeType":"ArrayTypeName","src":"2233:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2210:46:19"},"src":"2187:70:19"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":5712,"name":"Burn","nameLocation":"2269:4:19","nodeType":"EventDefinition","parameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5708,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2290:4:19","nodeType":"VariableDeclaration","scope":5712,"src":"2274:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5707,"name":"address","nodeType":"ElementaryTypeName","src":"2274:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5710,"indexed":false,"mutability":"mutable","name":"sharesBurned","nameLocation":"2304:12:19","nodeType":"VariableDeclaration","scope":5712,"src":"2296:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5709,"name":"uint256","nodeType":"ElementaryTypeName","src":"2296:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2273:44:19"},"src":"2263:55:19"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":5718,"name":"Mint","nameLocation":"2330:4:19","nodeType":"EventDefinition","parameters":{"id":5717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5714,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2351:2:19","nodeType":"VariableDeclaration","scope":5718,"src":"2335:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5713,"name":"address","nodeType":"ElementaryTypeName","src":"2335:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5716,"indexed":false,"mutability":"mutable","name":"sharesMinted","nameLocation":"2363:12:19","nodeType":"VariableDeclaration","scope":5718,"src":"2355:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2355:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2334:42:19"},"src":"2324:53:19"},{"anonymous":false,"eventSelector":"cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062","id":5730,"name":"Swap","nameLocation":"2389:4:19","nodeType":"EventDefinition","parameters":{"id":5729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5720,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2420:4:19","nodeType":"VariableDeclaration","scope":5730,"src":"2404:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5719,"name":"address","nodeType":"ElementaryTypeName","src":"2404:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5722,"indexed":true,"mutability":"mutable","name":"fromToken","nameLocation":"2451:9:19","nodeType":"VariableDeclaration","scope":5730,"src":"2435:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5721,"name":"address","nodeType":"ElementaryTypeName","src":"2435:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5724,"indexed":true,"mutability":"mutable","name":"toToken","nameLocation":"2487:7:19","nodeType":"VariableDeclaration","scope":5730,"src":"2471:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5723,"name":"address","nodeType":"ElementaryTypeName","src":"2471:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5726,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"2513:8:19","nodeType":"VariableDeclaration","scope":5730,"src":"2505:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5725,"name":"uint256","nodeType":"ElementaryTypeName","src":"2505:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5728,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"2540:9:19","nodeType":"VariableDeclaration","scope":5730,"src":"2532:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5727,"name":"uint256","nodeType":"ElementaryTypeName","src":"2532:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2393:163:19"},"src":"2383:174:19"}],"scope":5732,"src":"124:2436:19","usedErrors":[],"usedEvents":[5699,5706,5712,5718,5730]}],"src":"40:2522:19"},"id":19},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1PoolPeriphery.sol","exportedSymbols":{"IBaluniV1PoolPeriphery":[5851]},"id":5852,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5733,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1PoolPeriphery","contractDependencies":[],"contractKind":"interface","documentation":{"id":5734,"nodeType":"StructuredDocumentation","src":"67:101:20","text":" @title IBaluniV1PoolPeriphery\n @dev Interface for the BaluniV1PoolPeriphery contract."},"fullyImplemented":false,"id":5851,"linearizedBaseContracts":[5851],"name":"IBaluniV1PoolPeriphery","nameLocation":"180:22:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5735,"nodeType":"StructuredDocumentation","src":"210:348:20","text":" @dev Swaps tokens in a BaluniV1Pool.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of tokens to swap.\n @param receiver The address of the receiver.\n @return The amount of tokens received after the swap."},"functionSelector":"6e81221c","id":5748,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"573:4:20","nodeType":"FunctionDefinition","parameters":{"id":5744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5737,"mutability":"mutable","name":"fromToken","nameLocation":"586:9:20","nodeType":"VariableDeclaration","scope":5748,"src":"578:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5736,"name":"address","nodeType":"ElementaryTypeName","src":"578:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5739,"mutability":"mutable","name":"toToken","nameLocation":"605:7:20","nodeType":"VariableDeclaration","scope":5748,"src":"597:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5738,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5741,"mutability":"mutable","name":"amount","nameLocation":"622:6:20","nodeType":"VariableDeclaration","scope":5748,"src":"614:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5740,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5743,"mutability":"mutable","name":"receiver","nameLocation":"638:8:20","nodeType":"VariableDeclaration","scope":5748,"src":"630:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5742,"name":"address","nodeType":"ElementaryTypeName","src":"630:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"577:70:20"},"returnParameters":{"id":5747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5748,"src":"666:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5745,"name":"uint256","nodeType":"ElementaryTypeName","src":"666:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"665:9:20"},"scope":5851,"src":"564:111:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5749,"nodeType":"StructuredDocumentation","src":"683:515:20","text":" @dev Performs batch swaps between multiple token pairs.\n @param fromTokens An array of addresses representing the tokens to swap from.\n @param toTokens An array of addresses representing the tokens to swap to.\n @param amounts An array of amounts representing the amounts to swap.\n @param receivers An array of addresses representing the receivers of the swapped tokens.\n @return An array of amounts representing the amounts of tokens received after the swaps."},"functionSelector":"e74e9b06","id":5767,"implemented":false,"kind":"function","modifiers":[],"name":"batchSwap","nameLocation":"1213:9:20","nodeType":"FunctionDefinition","parameters":{"id":5762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5752,"mutability":"mutable","name":"fromTokens","nameLocation":"1252:10:20","nodeType":"VariableDeclaration","scope":5767,"src":"1233:29:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5750,"name":"address","nodeType":"ElementaryTypeName","src":"1233:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5751,"nodeType":"ArrayTypeName","src":"1233:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5755,"mutability":"mutable","name":"toTokens","nameLocation":"1292:8:20","nodeType":"VariableDeclaration","scope":5767,"src":"1273:27:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5753,"name":"address","nodeType":"ElementaryTypeName","src":"1273:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5754,"nodeType":"ArrayTypeName","src":"1273:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5758,"mutability":"mutable","name":"amounts","nameLocation":"1330:7:20","nodeType":"VariableDeclaration","scope":5767,"src":"1311:26:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5756,"name":"uint256","nodeType":"ElementaryTypeName","src":"1311:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5757,"nodeType":"ArrayTypeName","src":"1311:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5761,"mutability":"mutable","name":"receivers","nameLocation":"1367:9:20","nodeType":"VariableDeclaration","scope":5767,"src":"1348:28:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5759,"name":"address","nodeType":"ElementaryTypeName","src":"1348:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5760,"nodeType":"ArrayTypeName","src":"1348:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1222:161:20"},"returnParameters":{"id":5766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5767,"src":"1402:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5763,"name":"uint256","nodeType":"ElementaryTypeName","src":"1402:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5764,"nodeType":"ArrayTypeName","src":"1402:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1401:18:20"},"scope":5851,"src":"1204:216:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5768,"nodeType":"StructuredDocumentation","src":"1428:160:20","text":" @dev Rebalances weights in a pool.\n @param poolAddress The address of the pool.\n @param receiver The address of the receiver."},"functionSelector":"ad414263","id":5775,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceWeights","nameLocation":"1603:16:20","nodeType":"FunctionDefinition","parameters":{"id":5773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5770,"mutability":"mutable","name":"poolAddress","nameLocation":"1628:11:20","nodeType":"VariableDeclaration","scope":5775,"src":"1620:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5769,"name":"address","nodeType":"ElementaryTypeName","src":"1620:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5772,"mutability":"mutable","name":"receiver","nameLocation":"1649:8:20","nodeType":"VariableDeclaration","scope":5775,"src":"1641:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5771,"name":"address","nodeType":"ElementaryTypeName","src":"1641:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1619:39:20"},"returnParameters":{"id":5774,"nodeType":"ParameterList","parameters":[],"src":"1667:0:20"},"scope":5851,"src":"1594:74:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5776,"nodeType":"StructuredDocumentation","src":"1676:243:20","text":" @dev Adds liquidity to a BaluniV1Pool.\n @param amounts An array of amounts for each asset to add as liquidity.\n @param poolAddress The address of the pool.\n @param receiver The address of the receiver."},"functionSelector":"ec0cd2eb","id":5788,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"1934:12:20","nodeType":"FunctionDefinition","parameters":{"id":5784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5779,"mutability":"mutable","name":"amounts","nameLocation":"1964:7:20","nodeType":"VariableDeclaration","scope":5788,"src":"1947:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5777,"name":"uint256","nodeType":"ElementaryTypeName","src":"1947:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5778,"nodeType":"ArrayTypeName","src":"1947:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5781,"mutability":"mutable","name":"poolAddress","nameLocation":"1981:11:20","nodeType":"VariableDeclaration","scope":5788,"src":"1973:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5780,"name":"address","nodeType":"ElementaryTypeName","src":"1973:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5783,"mutability":"mutable","name":"receiver","nameLocation":"2002:8:20","nodeType":"VariableDeclaration","scope":5788,"src":"1994:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5782,"name":"address","nodeType":"ElementaryTypeName","src":"1994:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1946:65:20"},"returnParameters":{"id":5787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5788,"src":"2030:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5785,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2029:9:20"},"scope":5851,"src":"1925:114:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5789,"nodeType":"StructuredDocumentation","src":"2047:232:20","text":" @dev Removes liquidity from a BaluniV1Pool.\n @param share The amount of liquidity tokens to remove.\n @param poolAddress The address of the pool.\n @param receiver The address of the receiver."},"functionSelector":"f31abcc4","id":5798,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"2294:15:20","nodeType":"FunctionDefinition","parameters":{"id":5796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5791,"mutability":"mutable","name":"share","nameLocation":"2318:5:20","nodeType":"VariableDeclaration","scope":5798,"src":"2310:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5790,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5793,"mutability":"mutable","name":"poolAddress","nameLocation":"2333:11:20","nodeType":"VariableDeclaration","scope":5798,"src":"2325:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5792,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5795,"mutability":"mutable","name":"receiver","nameLocation":"2354:8:20","nodeType":"VariableDeclaration","scope":5798,"src":"2346:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5794,"name":"address","nodeType":"ElementaryTypeName","src":"2346:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2309:54:20"},"returnParameters":{"id":5797,"nodeType":"ParameterList","parameters":[],"src":"2372:0:20"},"scope":5851,"src":"2285:88:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5799,"nodeType":"StructuredDocumentation","src":"2381:330:20","text":" @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of tokens to swap.\n @return The amount of tokens received after the swap."},"functionSelector":"4aa06652","id":5810,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"2726:12:20","nodeType":"FunctionDefinition","parameters":{"id":5806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5801,"mutability":"mutable","name":"fromToken","nameLocation":"2747:9:20","nodeType":"VariableDeclaration","scope":5810,"src":"2739:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5800,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5803,"mutability":"mutable","name":"toToken","nameLocation":"2766:7:20","nodeType":"VariableDeclaration","scope":5810,"src":"2758:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5802,"name":"address","nodeType":"ElementaryTypeName","src":"2758:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5805,"mutability":"mutable","name":"amount","nameLocation":"2783:6:20","nodeType":"VariableDeclaration","scope":5810,"src":"2775:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5804,"name":"uint256","nodeType":"ElementaryTypeName","src":"2775:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2738:52:20"},"returnParameters":{"id":5809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5810,"src":"2814:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5807,"name":"uint256","nodeType":"ElementaryTypeName","src":"2814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2813:9:20"},"scope":5851,"src":"2717:106:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5811,"nodeType":"StructuredDocumentation","src":"2831:147:20","text":" @dev Performs rebalance if needed for the given tokens.\n @param poolAddress The address of the token pool to rebalance."},"functionSelector":"5568081a","id":5816,"implemented":false,"kind":"function","modifiers":[],"name":"performRebalanceIfNeeded","nameLocation":"2993:24:20","nodeType":"FunctionDefinition","parameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5813,"mutability":"mutable","name":"poolAddress","nameLocation":"3026:11:20","nodeType":"VariableDeclaration","scope":5816,"src":"3018:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5812,"name":"address","nodeType":"ElementaryTypeName","src":"3018:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3017:21:20"},"returnParameters":{"id":5815,"nodeType":"ParameterList","parameters":[],"src":"3047:0:20"},"scope":5851,"src":"2984:64:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5817,"nodeType":"StructuredDocumentation","src":"3056:195:20","text":" @dev Returns an array of pool addresses that contain the given token.\n @param token The address of the token to search for.\n @return An array of pool addresses."},"functionSelector":"ae3cce1c","id":5825,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolsContainingToken","nameLocation":"3266:23:20","nodeType":"FunctionDefinition","parameters":{"id":5820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5819,"mutability":"mutable","name":"token","nameLocation":"3298:5:20","nodeType":"VariableDeclaration","scope":5825,"src":"3290:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5818,"name":"address","nodeType":"ElementaryTypeName","src":"3290:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3289:15:20"},"returnParameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5825,"src":"3328:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5821,"name":"address","nodeType":"ElementaryTypeName","src":"3328:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5822,"nodeType":"ArrayTypeName","src":"3328:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3327:18:20"},"scope":5851,"src":"3257:89:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5826,"nodeType":"StructuredDocumentation","src":"3354:98:20","text":" @dev Returns the version of the contract.\n @return The version string."},"functionSelector":"0d8e6e2c","id":5831,"implemented":false,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"3467:10:20","nodeType":"FunctionDefinition","parameters":{"id":5827,"nodeType":"ParameterList","parameters":[],"src":"3477:2:20"},"returnParameters":{"id":5830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5831,"src":"3503:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5828,"name":"uint64","nodeType":"ElementaryTypeName","src":"3503:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3502:8:20"},"scope":5851,"src":"3458:53:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5832,"nodeType":"StructuredDocumentation","src":"3519:142:20","text":" @dev Returns the reserves of the pool.\n @param pool The address of the pool.\n @return An array of reserves."},"functionSelector":"3e99c1e4","id":5840,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"3676:11:20","nodeType":"FunctionDefinition","parameters":{"id":5835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5834,"mutability":"mutable","name":"pool","nameLocation":"3696:4:20","nodeType":"VariableDeclaration","scope":5840,"src":"3688:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5833,"name":"address","nodeType":"ElementaryTypeName","src":"3688:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3687:14:20"},"returnParameters":{"id":5839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5840,"src":"3725:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5836,"name":"uint256","nodeType":"ElementaryTypeName","src":"3725:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5837,"nodeType":"ArrayTypeName","src":"3725:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3724:18:20"},"scope":5851,"src":"3667:76:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5841,"nodeType":"StructuredDocumentation","src":"3751:210:20","text":" @dev Returns the reserve of a specific asset in a pool.\n @param pool The address of the pool.\n @param asset The address of the asset.\n @return The reserve of the asset."},"functionSelector":"a3e113fb","id":5850,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"3976:15:20","nodeType":"FunctionDefinition","parameters":{"id":5846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5843,"mutability":"mutable","name":"pool","nameLocation":"4000:4:20","nodeType":"VariableDeclaration","scope":5850,"src":"3992:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5842,"name":"address","nodeType":"ElementaryTypeName","src":"3992:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5845,"mutability":"mutable","name":"asset","nameLocation":"4014:5:20","nodeType":"VariableDeclaration","scope":5850,"src":"4006:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5844,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3991:29:20"},"returnParameters":{"id":5849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5850,"src":"4044:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5847,"name":"uint256","nodeType":"ElementaryTypeName","src":"4044:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4043:9:20"},"scope":5851,"src":"3967:86:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5852,"src":"170:3886:20","usedErrors":[],"usedEvents":[]}],"src":"40:4018:20"},"id":20},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","exportedSymbols":{"IBaluniV1Rebalancer":[5936]},"id":5937,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5853,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Rebalancer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5936,"linearizedBaseContracts":[5936],"name":"IBaluniV1Rebalancer","nameLocation":"77:19:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Rebalancer.RebalanceVars","id":5883,"members":[{"constant":false,"id":5855,"mutability":"mutable","name":"length","nameLocation":"144:6:21","nodeType":"VariableDeclaration","scope":5883,"src":"136:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5854,"name":"uint256","nodeType":"ElementaryTypeName","src":"136:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5857,"mutability":"mutable","name":"totalValue","nameLocation":"169:10:21","nodeType":"VariableDeclaration","scope":5883,"src":"161:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5856,"name":"uint256","nodeType":"ElementaryTypeName","src":"161:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5859,"mutability":"mutable","name":"finalUsdBalance","nameLocation":"198:15:21","nodeType":"VariableDeclaration","scope":5883,"src":"190:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5858,"name":"uint256","nodeType":"ElementaryTypeName","src":"190:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5861,"mutability":"mutable","name":"overweightVaultsLength","nameLocation":"232:22:21","nodeType":"VariableDeclaration","scope":5883,"src":"224:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5860,"name":"uint256","nodeType":"ElementaryTypeName","src":"224:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5863,"mutability":"mutable","name":"underweightVaultsLength","nameLocation":"273:23:21","nodeType":"VariableDeclaration","scope":5883,"src":"265:31:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5862,"name":"uint256","nodeType":"ElementaryTypeName","src":"265:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5865,"mutability":"mutable","name":"totalActiveWeight","nameLocation":"315:17:21","nodeType":"VariableDeclaration","scope":5883,"src":"307:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5864,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5867,"mutability":"mutable","name":"amountOut","nameLocation":"351:9:21","nodeType":"VariableDeclaration","scope":5883,"src":"343:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5866,"name":"uint256","nodeType":"ElementaryTypeName","src":"343:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5870,"mutability":"mutable","name":"overweightVaults","nameLocation":"381:16:21","nodeType":"VariableDeclaration","scope":5883,"src":"371:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5868,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5869,"nodeType":"ArrayTypeName","src":"371:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5873,"mutability":"mutable","name":"overweightAmounts","nameLocation":"418:17:21","nodeType":"VariableDeclaration","scope":5883,"src":"408:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5871,"name":"uint256","nodeType":"ElementaryTypeName","src":"408:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5872,"nodeType":"ArrayTypeName","src":"408:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5876,"mutability":"mutable","name":"underweightVaults","nameLocation":"456:17:21","nodeType":"VariableDeclaration","scope":5883,"src":"446:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5874,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5875,"nodeType":"ArrayTypeName","src":"446:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5879,"mutability":"mutable","name":"underweightAmounts","nameLocation":"494:18:21","nodeType":"VariableDeclaration","scope":5883,"src":"484:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5877,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5878,"nodeType":"ArrayTypeName","src":"484:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5882,"mutability":"mutable","name":"balances","nameLocation":"533:8:21","nodeType":"VariableDeclaration","scope":5883,"src":"523:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5880,"name":"uint256","nodeType":"ElementaryTypeName","src":"523:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5881,"nodeType":"ArrayTypeName","src":"523:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"RebalanceVars","nameLocation":"111:13:21","nodeType":"StructDefinition","scope":5936,"src":"104:445:21","visibility":"public"},{"functionSelector":"f0bf7714","id":5903,"implemented":false,"kind":"function","modifiers":[],"name":"rebalance","nameLocation":"584:9:21","nodeType":"FunctionDefinition","parameters":{"id":5901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5886,"mutability":"mutable","name":"balances","nameLocation":"621:8:21","nodeType":"VariableDeclaration","scope":5903,"src":"604:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5884,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5885,"nodeType":"ArrayTypeName","src":"604:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5889,"mutability":"mutable","name":"assets","nameLocation":"659:6:21","nodeType":"VariableDeclaration","scope":5903,"src":"640:25:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5887,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5888,"nodeType":"ArrayTypeName","src":"640:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5892,"mutability":"mutable","name":"weights","nameLocation":"695:7:21","nodeType":"VariableDeclaration","scope":5903,"src":"676:26:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5890,"name":"uint256","nodeType":"ElementaryTypeName","src":"676:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5891,"nodeType":"ArrayTypeName","src":"676:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5894,"mutability":"mutable","name":"limit","nameLocation":"721:5:21","nodeType":"VariableDeclaration","scope":5903,"src":"713:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5893,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5896,"mutability":"mutable","name":"sender","nameLocation":"745:6:21","nodeType":"VariableDeclaration","scope":5903,"src":"737:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5895,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5898,"mutability":"mutable","name":"receiver","nameLocation":"770:8:21","nodeType":"VariableDeclaration","scope":5903,"src":"762:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5897,"name":"address","nodeType":"ElementaryTypeName","src":"762:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5900,"mutability":"mutable","name":"baseAsset","nameLocation":"797:9:21","nodeType":"VariableDeclaration","scope":5903,"src":"789:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5899,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"593:220:21"},"returnParameters":{"id":5902,"nodeType":"ParameterList","parameters":[],"src":"822:0:21"},"scope":5936,"src":"575:248:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"997146f5","id":5924,"implemented":false,"kind":"function","modifiers":[],"name":"checkRebalance","nameLocation":"840:14:21","nodeType":"FunctionDefinition","parameters":{"id":5919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5906,"mutability":"mutable","name":"balances","nameLocation":"882:8:21","nodeType":"VariableDeclaration","scope":5924,"src":"865:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5904,"name":"uint256","nodeType":"ElementaryTypeName","src":"865:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5905,"nodeType":"ArrayTypeName","src":"865:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5909,"mutability":"mutable","name":"assets","nameLocation":"920:6:21","nodeType":"VariableDeclaration","scope":5924,"src":"901:25:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5907,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5908,"nodeType":"ArrayTypeName","src":"901:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5912,"mutability":"mutable","name":"weights","nameLocation":"956:7:21","nodeType":"VariableDeclaration","scope":5924,"src":"937:26:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5910,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5911,"nodeType":"ArrayTypeName","src":"937:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5914,"mutability":"mutable","name":"limit","nameLocation":"982:5:21","nodeType":"VariableDeclaration","scope":5924,"src":"974:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5913,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5916,"mutability":"mutable","name":"sender","nameLocation":"1006:6:21","nodeType":"VariableDeclaration","scope":5924,"src":"998:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5915,"name":"address","nodeType":"ElementaryTypeName","src":"998:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5918,"mutability":"mutable","name":"baseAsset","nameLocation":"1031:9:21","nodeType":"VariableDeclaration","scope":5924,"src":"1023:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5917,"name":"address","nodeType":"ElementaryTypeName","src":"1023:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"854:193:21"},"returnParameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5924,"src":"1071:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$5883_memory_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"},"typeName":{"id":5921,"nodeType":"UserDefinedTypeName","pathNode":{"id":5920,"name":"RebalanceVars","nameLocations":["1071:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":5883,"src":"1071:13:21"},"referencedDeclaration":5883,"src":"1071:13:21","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$5883_storage_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"}},"visibility":"internal"}],"src":"1070:22:21"},"scope":5936,"src":"831:262:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"248391ff","id":5935,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"1110:7:21","nodeType":"FunctionDefinition","parameters":{"id":5931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5926,"mutability":"mutable","name":"fromToken","nameLocation":"1126:9:21","nodeType":"VariableDeclaration","scope":5935,"src":"1118:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5925,"name":"address","nodeType":"ElementaryTypeName","src":"1118:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5928,"mutability":"mutable","name":"toToken","nameLocation":"1145:7:21","nodeType":"VariableDeclaration","scope":5935,"src":"1137:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5927,"name":"address","nodeType":"ElementaryTypeName","src":"1137:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5930,"mutability":"mutable","name":"amount","nameLocation":"1162:6:21","nodeType":"VariableDeclaration","scope":5935,"src":"1154:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5929,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1117:52:21"},"returnParameters":{"id":5934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5935,"src":"1193:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1193:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1192:9:21"},"scope":5936,"src":"1101:101:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5937,"src":"67:1138:21","usedErrors":[],"usedEvents":[]}],"src":"40:1167:21"},"id":21},"contracts/interfaces/IBaluniV1Registry.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","exportedSymbols":{"IBaluniV1Registry":[6110]},"id":6111,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5938,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Registry","contractDependencies":[],"contractKind":"interface","documentation":{"id":5939,"nodeType":"StructuredDocumentation","src":"67:91:22","text":" @title IBaluniV1Registry\n @dev Interface for the BaluniV1Registry contract."},"fullyImplemented":false,"id":6110,"linearizedBaseContracts":[6110],"name":"IBaluniV1Registry","nameLocation":"170:17:22","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e04b677f","id":5944,"implemented":false,"kind":"function","modifiers":[],"name":"setUniswapFactory","nameLocation":"204:17:22","nodeType":"FunctionDefinition","parameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5941,"mutability":"mutable","name":"_uniswapFactory","nameLocation":"230:15:22","nodeType":"VariableDeclaration","scope":5944,"src":"222:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5940,"name":"address","nodeType":"ElementaryTypeName","src":"222:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"221:25:22"},"returnParameters":{"id":5943,"nodeType":"ParameterList","parameters":[],"src":"255:0:22"},"scope":6110,"src":"195:61:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bea9849e","id":5949,"implemented":false,"kind":"function","modifiers":[],"name":"setUniswapRouter","nameLocation":"273:16:22","nodeType":"FunctionDefinition","parameters":{"id":5947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5946,"mutability":"mutable","name":"_uniswapRouter","nameLocation":"298:14:22","nodeType":"VariableDeclaration","scope":5949,"src":"290:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5945,"name":"address","nodeType":"ElementaryTypeName","src":"290:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"289:24:22"},"returnParameters":{"id":5948,"nodeType":"ParameterList","parameters":[],"src":"322:0:22"},"scope":6110,"src":"264:59:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f1dccde7","id":5954,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniAgentFactory","nameLocation":"340:21:22","nodeType":"FunctionDefinition","parameters":{"id":5952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5951,"mutability":"mutable","name":"_baluniAgentFactory","nameLocation":"370:19:22","nodeType":"VariableDeclaration","scope":5954,"src":"362:27:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5950,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"361:29:22"},"returnParameters":{"id":5953,"nodeType":"ParameterList","parameters":[],"src":"399:0:22"},"scope":6110,"src":"331:69:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"588c5b70","id":5959,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniPoolPeriphery","nameLocation":"417:22:22","nodeType":"FunctionDefinition","parameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5956,"mutability":"mutable","name":"_baluniPoolPeriphery","nameLocation":"448:20:22","nodeType":"VariableDeclaration","scope":5959,"src":"440:28:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5955,"name":"address","nodeType":"ElementaryTypeName","src":"440:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"439:30:22"},"returnParameters":{"id":5958,"nodeType":"ParameterList","parameters":[],"src":"478:0:22"},"scope":6110,"src":"408:71:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c3f5df5c","id":5964,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniSwapper","nameLocation":"496:16:22","nodeType":"FunctionDefinition","parameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5961,"mutability":"mutable","name":"_baluniSwapper","nameLocation":"521:14:22","nodeType":"VariableDeclaration","scope":5964,"src":"513:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5960,"name":"address","nodeType":"ElementaryTypeName","src":"513:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"512:24:22"},"returnParameters":{"id":5963,"nodeType":"ParameterList","parameters":[],"src":"545:0:22"},"scope":6110,"src":"487:59:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f5b84f64","id":5969,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniOracle","nameLocation":"563:15:22","nodeType":"FunctionDefinition","parameters":{"id":5967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5966,"mutability":"mutable","name":"_baluniOracle","nameLocation":"587:13:22","nodeType":"VariableDeclaration","scope":5969,"src":"579:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5965,"name":"address","nodeType":"ElementaryTypeName","src":"579:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"578:23:22"},"returnParameters":{"id":5968,"nodeType":"ParameterList","parameters":[],"src":"610:0:22"},"scope":6110,"src":"554:57:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8267c2c8","id":5974,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniPoolFactory","nameLocation":"628:20:22","nodeType":"FunctionDefinition","parameters":{"id":5972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5971,"mutability":"mutable","name":"_baluniPoolFactory","nameLocation":"657:18:22","nodeType":"VariableDeclaration","scope":5974,"src":"649:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5970,"name":"address","nodeType":"ElementaryTypeName","src":"649:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"648:28:22"},"returnParameters":{"id":5973,"nodeType":"ParameterList","parameters":[],"src":"685:0:22"},"scope":6110,"src":"619:67:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0241bffa","id":5979,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRebalancer","nameLocation":"703:19:22","nodeType":"FunctionDefinition","parameters":{"id":5977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5976,"mutability":"mutable","name":"_baluniRebalancer","nameLocation":"731:17:22","nodeType":"VariableDeclaration","scope":5979,"src":"723:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5975,"name":"address","nodeType":"ElementaryTypeName","src":"723:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"722:27:22"},"returnParameters":{"id":5978,"nodeType":"ParameterList","parameters":[],"src":"758:0:22"},"scope":6110,"src":"694:65:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"400fb668","id":5984,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRouter","nameLocation":"776:15:22","nodeType":"FunctionDefinition","parameters":{"id":5982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5981,"mutability":"mutable","name":"_baluniRouter","nameLocation":"800:13:22","nodeType":"VariableDeclaration","scope":5984,"src":"792:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5980,"name":"address","nodeType":"ElementaryTypeName","src":"792:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"791:23:22"},"returnParameters":{"id":5983,"nodeType":"ParameterList","parameters":[],"src":"823:0:22"},"scope":6110,"src":"767:57:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6c43274c","id":5989,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRegistry","nameLocation":"841:17:22","nodeType":"FunctionDefinition","parameters":{"id":5987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5986,"mutability":"mutable","name":"_baluniRegistry","nameLocation":"867:15:22","nodeType":"VariableDeclaration","scope":5989,"src":"859:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5985,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"858:25:22"},"returnParameters":{"id":5988,"nodeType":"ParameterList","parameters":[],"src":"892:0:22"},"scope":6110,"src":"832:61:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b6fe9cc7","id":5994,"implemented":false,"kind":"function","modifiers":[],"name":"setWNATIVE","nameLocation":"910:10:22","nodeType":"FunctionDefinition","parameters":{"id":5992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5991,"mutability":"mutable","name":"_WNATIVE","nameLocation":"929:8:22","nodeType":"VariableDeclaration","scope":5994,"src":"921:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5990,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"920:18:22"},"returnParameters":{"id":5993,"nodeType":"ParameterList","parameters":[],"src":"947:0:22"},"scope":6110,"src":"901:47:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b3e089a2","id":5999,"implemented":false,"kind":"function","modifiers":[],"name":"setUSDC","nameLocation":"965:7:22","nodeType":"FunctionDefinition","parameters":{"id":5997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5996,"mutability":"mutable","name":"_USDC","nameLocation":"981:5:22","nodeType":"VariableDeclaration","scope":5999,"src":"973:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5995,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:22"},"returnParameters":{"id":5998,"nodeType":"ParameterList","parameters":[],"src":"996:0:22"},"scope":6110,"src":"956:41:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f0f44260","id":6004,"implemented":false,"kind":"function","modifiers":[],"name":"setTreasury","nameLocation":"1014:11:22","nodeType":"FunctionDefinition","parameters":{"id":6002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6001,"mutability":"mutable","name":"_treasury","nameLocation":"1034:9:22","nodeType":"VariableDeclaration","scope":6004,"src":"1026:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6000,"name":"address","nodeType":"ElementaryTypeName","src":"1026:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1025:19:22"},"returnParameters":{"id":6003,"nodeType":"ParameterList","parameters":[],"src":"1053:0:22"},"scope":6110,"src":"1005:49:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c08f786b","id":6009,"implemented":false,"kind":"function","modifiers":[],"name":"set1inchSpotAgg","nameLocation":"1071:15:22","nodeType":"FunctionDefinition","parameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"__1inchSpotAgg","nameLocation":"1095:14:22","nodeType":"VariableDeclaration","scope":6009,"src":"1087:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6005,"name":"address","nodeType":"ElementaryTypeName","src":"1087:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1086:24:22"},"returnParameters":{"id":6008,"nodeType":"ParameterList","parameters":[],"src":"1119:0:22"},"scope":6110,"src":"1062:58:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9e6453f8","id":6014,"implemented":false,"kind":"function","modifiers":[],"name":"setBPS_FEE","nameLocation":"1137:10:22","nodeType":"FunctionDefinition","parameters":{"id":6012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6011,"mutability":"mutable","name":"__BPS_FEE","nameLocation":"1156:9:22","nodeType":"VariableDeclaration","scope":6014,"src":"1148:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1147:19:22"},"returnParameters":{"id":6013,"nodeType":"ParameterList","parameters":[],"src":"1175:0:22"},"scope":6110,"src":"1128:48:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3e6dfa36","id":6019,"implemented":false,"kind":"function","modifiers":[],"name":"getUniswapFactory","nameLocation":"1193:17:22","nodeType":"FunctionDefinition","parameters":{"id":6015,"nodeType":"ParameterList","parameters":[],"src":"1210:2:22"},"returnParameters":{"id":6018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6019,"src":"1236:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6016,"name":"address","nodeType":"ElementaryTypeName","src":"1236:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1235:9:22"},"scope":6110,"src":"1184:61:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"524900b5","id":6024,"implemented":false,"kind":"function","modifiers":[],"name":"getUniswapRouter","nameLocation":"1262:16:22","nodeType":"FunctionDefinition","parameters":{"id":6020,"nodeType":"ParameterList","parameters":[],"src":"1278:2:22"},"returnParameters":{"id":6023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6024,"src":"1304:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6021,"name":"address","nodeType":"ElementaryTypeName","src":"1304:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1303:9:22"},"scope":6110,"src":"1253:60:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"82755ebb","id":6029,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniSwapper","nameLocation":"1330:16:22","nodeType":"FunctionDefinition","parameters":{"id":6025,"nodeType":"ParameterList","parameters":[],"src":"1346:2:22"},"returnParameters":{"id":6028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6029,"src":"1372:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6026,"name":"address","nodeType":"ElementaryTypeName","src":"1372:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1371:9:22"},"scope":6110,"src":"1321:60:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bb3ba04c","id":6034,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniOracle","nameLocation":"1398:15:22","nodeType":"FunctionDefinition","parameters":{"id":6030,"nodeType":"ParameterList","parameters":[],"src":"1413:2:22"},"returnParameters":{"id":6033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6034,"src":"1439:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6031,"name":"address","nodeType":"ElementaryTypeName","src":"1439:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1438:9:22"},"scope":6110,"src":"1389:59:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f5d2d998","id":6039,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniAgentFactory","nameLocation":"1465:21:22","nodeType":"FunctionDefinition","parameters":{"id":6035,"nodeType":"ParameterList","parameters":[],"src":"1486:2:22"},"returnParameters":{"id":6038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6039,"src":"1512:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6036,"name":"address","nodeType":"ElementaryTypeName","src":"1512:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1511:9:22"},"scope":6110,"src":"1456:65:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1acb6141","id":6044,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniPoolPeriphery","nameLocation":"1538:22:22","nodeType":"FunctionDefinition","parameters":{"id":6040,"nodeType":"ParameterList","parameters":[],"src":"1560:2:22"},"returnParameters":{"id":6043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6044,"src":"1586:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6041,"name":"address","nodeType":"ElementaryTypeName","src":"1586:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1585:9:22"},"scope":6110,"src":"1529:66:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7c6fd308","id":6049,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniPoolFactory","nameLocation":"1612:20:22","nodeType":"FunctionDefinition","parameters":{"id":6045,"nodeType":"ParameterList","parameters":[],"src":"1632:2:22"},"returnParameters":{"id":6048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6049,"src":"1658:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6046,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1657:9:22"},"scope":6110,"src":"1603:64:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cff49d68","id":6054,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRebalancer","nameLocation":"1684:19:22","nodeType":"FunctionDefinition","parameters":{"id":6050,"nodeType":"ParameterList","parameters":[],"src":"1703:2:22"},"returnParameters":{"id":6053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6054,"src":"1729:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6051,"name":"address","nodeType":"ElementaryTypeName","src":"1729:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1728:9:22"},"scope":6110,"src":"1675:63:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"04cc7325","id":6059,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRouter","nameLocation":"1755:15:22","nodeType":"FunctionDefinition","parameters":{"id":6055,"nodeType":"ParameterList","parameters":[],"src":"1770:2:22"},"returnParameters":{"id":6058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6059,"src":"1796:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6056,"name":"address","nodeType":"ElementaryTypeName","src":"1796:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1795:9:22"},"scope":6110,"src":"1746:59:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c9aba8ae","id":6064,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRegistry","nameLocation":"1822:17:22","nodeType":"FunctionDefinition","parameters":{"id":6060,"nodeType":"ParameterList","parameters":[],"src":"1839:2:22"},"returnParameters":{"id":6063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6064,"src":"1865:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6061,"name":"address","nodeType":"ElementaryTypeName","src":"1865:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1864:9:22"},"scope":6110,"src":"1813:61:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6c9c0078","id":6069,"implemented":false,"kind":"function","modifiers":[],"name":"getWNATIVE","nameLocation":"1891:10:22","nodeType":"FunctionDefinition","parameters":{"id":6065,"nodeType":"ParameterList","parameters":[],"src":"1901:2:22"},"returnParameters":{"id":6068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6069,"src":"1927:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6066,"name":"address","nodeType":"ElementaryTypeName","src":"1927:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1926:9:22"},"scope":6110,"src":"1882:54:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1bf01e9b","id":6074,"implemented":false,"kind":"function","modifiers":[],"name":"getUSDC","nameLocation":"1953:7:22","nodeType":"FunctionDefinition","parameters":{"id":6070,"nodeType":"ParameterList","parameters":[],"src":"1960:2:22"},"returnParameters":{"id":6073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6074,"src":"1986:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6071,"name":"address","nodeType":"ElementaryTypeName","src":"1986:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1985:9:22"},"scope":6110,"src":"1944:51:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8e1c3a8a","id":6079,"implemented":false,"kind":"function","modifiers":[],"name":"get1inchSpotAgg","nameLocation":"2012:15:22","nodeType":"FunctionDefinition","parameters":{"id":6075,"nodeType":"ParameterList","parameters":[],"src":"2027:2:22"},"returnParameters":{"id":6078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6079,"src":"2053:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6076,"name":"address","nodeType":"ElementaryTypeName","src":"2053:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2052:9:22"},"scope":6110,"src":"2003:59:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"85462d6f","id":6084,"implemented":false,"kind":"function","modifiers":[],"name":"getBPS_FEE","nameLocation":"2079:10:22","nodeType":"FunctionDefinition","parameters":{"id":6080,"nodeType":"ParameterList","parameters":[],"src":"2089:2:22"},"returnParameters":{"id":6083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6084,"src":"2115:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2115:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:9:22"},"scope":6110,"src":"2070:54:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9380fb6f","id":6089,"implemented":false,"kind":"function","modifiers":[],"name":"getMAX_BPS_FEE","nameLocation":"2141:14:22","nodeType":"FunctionDefinition","parameters":{"id":6085,"nodeType":"ParameterList","parameters":[],"src":"2155:2:22"},"returnParameters":{"id":6088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6089,"src":"2181:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6086,"name":"uint256","nodeType":"ElementaryTypeName","src":"2181:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2180:9:22"},"scope":6110,"src":"2132:58:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4f4608a2","id":6094,"implemented":false,"kind":"function","modifiers":[],"name":"getBPS_BASE","nameLocation":"2207:11:22","nodeType":"FunctionDefinition","parameters":{"id":6090,"nodeType":"ParameterList","parameters":[],"src":"2218:2:22"},"returnParameters":{"id":6093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6094,"src":"2244:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6091,"name":"uint256","nodeType":"ElementaryTypeName","src":"2244:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2243:9:22"},"scope":6110,"src":"2198:55:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3b19e84a","id":6099,"implemented":false,"kind":"function","modifiers":[],"name":"getTreasury","nameLocation":"2270:11:22","nodeType":"FunctionDefinition","parameters":{"id":6095,"nodeType":"ParameterList","parameters":[],"src":"2281:2:22"},"returnParameters":{"id":6098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6099,"src":"2307:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6096,"name":"address","nodeType":"ElementaryTypeName","src":"2307:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2306:9:22"},"scope":6110,"src":"2261:55:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cc01e9a6","id":6104,"implemented":false,"kind":"function","modifiers":[],"name":"setStaticOracle","nameLocation":"2333:15:22","nodeType":"FunctionDefinition","parameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6101,"mutability":"mutable","name":"_staticOracle","nameLocation":"2357:13:22","nodeType":"VariableDeclaration","scope":6104,"src":"2349:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6100,"name":"address","nodeType":"ElementaryTypeName","src":"2349:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2348:23:22"},"returnParameters":{"id":6103,"nodeType":"ParameterList","parameters":[],"src":"2380:0:22"},"scope":6110,"src":"2324:57:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a5d2236f","id":6109,"implemented":false,"kind":"function","modifiers":[],"name":"getStaticOracle","nameLocation":"2398:15:22","nodeType":"FunctionDefinition","parameters":{"id":6105,"nodeType":"ParameterList","parameters":[],"src":"2413:2:22"},"returnParameters":{"id":6108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6109,"src":"2439:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6106,"name":"address","nodeType":"ElementaryTypeName","src":"2439:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2438:9:22"},"scope":6110,"src":"2389:59:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6111,"src":"160:2291:22","usedErrors":[],"usedEvents":[]}],"src":"40:2413:22"},"id":22}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"UPGRADE_INTERFACE_VERSION":{"details":"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {ContextUpgradeable} from \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {IERC20Errors} from \\\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\\n    struct ERC20Storage {\\n        mapping(address account => uint256) _balances;\\n\\n        mapping(address account => mapping(address spender => uint256)) _allowances;\\n\\n        uint256 _totalSupply;\\n\\n        string _name;\\n        string _symbol;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC20\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\\n\\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\\n        assembly {\\n            $.slot := ERC20StorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            $._totalSupply += value;\\n        } else {\\n            uint256 fromBalance = $._balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                $._balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                $._totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                $._balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        $._allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\\n    struct ReentrancyGuardStorage {\\n        uint256 _status;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ReentrancyGuard\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\\n\\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\\n        assembly {\\n            $.slot := ReentrancyGuardStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if ($._status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        $._status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        return $._status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ee9917e6ed504cde9d7c9ca5c5802f84d18c00157c16042db28624c54a0a00ee64736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE SWAP10 OR 0xE6 0xED POP 0x4C 0xDE SWAP14 PUSH29 0x9CA5C5802F84D18C00157C16042DB28624C54A0A00EE64736F6C634300 ADDMOD NOT STOP CALLER ","sourceMap":"449:6273:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ee9917e6ed504cde9d7c9ca5c5802f84d18c00157c16042db28624c54a0a00ee64736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE SWAP10 OR 0xE6 0xED POP 0x4C 0xDE SWAP14 PUSH29 0x9CA5C5802F84D18C00157C16042DB28624C54A0A00EE64736F6C634300 ADDMOD NOT STOP CALLER ","sourceMap":"449:6273:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1905,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1911,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1913,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1915,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1917,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051dc24f413b53af17c84454cc41c7de5752c59cdec05ea279e3d228b46fcbdd364736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xDC 0x24 DELEGATECALL SGT 0xB5 GASPRICE CALL PUSH29 0x84454CC41C7DE5752C59CDEC05EA279E3D228B46FCBDD364736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"195:6066:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051dc24f413b53af17c84454cc41c7de5752c59cdec05ea279e3d228b46fcbdd364736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xDC 0x24 DELEGATECALL SGT 0xB5 GASPRICE CALL PUSH29 0x84454CC41C7DE5752C59CDEC05EA279E3D228B46FCBDD364736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"195:6066:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e00d7dcc4ccb7e13407402c0e1b33421858ce0275ba42649a4b4b3360c5b7d3464736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xD PUSH30 0xCC4CCB7E13407402C0E1B33421858CE0275BA42649A4B4B3360C5B7D3464 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"1245:2685:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e00d7dcc4ccb7e13407402c0e1b33421858ce0275ba42649a4b4b3360c5b7d3464736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xD PUSH30 0xCC4CCB7E13407402C0E1B33421858CE0275BA42649A4B4B3360C5B7D3464 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"1245:2685:15:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/BaluniV1Pool.sol":{"BaluniV1Pool":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesBurned","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesMinted","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"by","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"}],"name":"RebalancePerformed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"fromToken","type":"address"},{"indexed":true,"internalType":"address","name":"toToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"amountsAdded","type":"uint256[]"}],"name":"WeightsRebalanced","type":"event"},{"inputs":[],"name":"ONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"assetInfos","outputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"weight","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetIndex","type":"uint256"}],"name":"assetLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"computeTotalValuation","outputs":[{"internalType":"uint256","name":"totalVal","type":"uint256"},{"internalType":"uint256[]","name":"valuations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOutWithSlippage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeviation","outputs":[{"internalType":"bool[]","name":"directions","type":"bool[]"},{"internalType":"uint256[]","name":"deviations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getDeviationForToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getSlippage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSlippages","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getTokenWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_assets","type":"address[]"},{"internalType":"uint256[]","name":"_weights","type":"uint256[]"},{"internalType":"uint256","name":"_trigger","type":"uint256"},{"internalType":"address","name":"_registry","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isRebalanceNeeded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"performRebalanceIfNeeded","outputs":[{"internalType":"uint256[]","name":"amountsToAdd","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsToRemove","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"contract IBaluniV1Registry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"reserves","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trigger","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"assetLiquidity(uint256)":{"details":"Returns the liquidity of a specific asset in the pool.","params":{"assetIndex":"The index of the asset."},"returns":{"_0":"The liquidity of the asset."}},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(address)":{"details":"Burns the pool tokens and transfers the underlying assets to the specified address.","params":{"to":"The address to transfer the underlying assets to."}},"computeTotalValuation()":{"details":"Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.","returns":{"totalVal":"The total valuation of the pool.","valuations":"An array of individual valuations."}},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"getAmountOut(address,address,uint256)":{"details":"Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.","params":{"amount":"The amount of `fromToken` being swapped.","fromToken":"The address of the token being swapped from.","toToken":"The address of the token being swapped to."},"returns":{"_0":"The amount of `toToken` that will be received."}},"getAmountOutWithSlippage(address,address,uint256)":{"details":"Calcola l'importo effettivo di `toToken` ricevuto tenendo conto dello slippage.","params":{"amount":"The amount of `fromToken` being swapped.","fromToken":"The address of the token being swapped from.","toToken":"The address of the token being swapped to."},"returns":{"_0":"The amount of `toToken` received after applying slippage."}},"getAssetReserve(address)":{"details":"Returns the reserve amount of the specified asset.","params":{"asset":"The address of the asset."},"returns":{"_0":"The reserve amount of the asset."}},"getAssets()":{"details":"Retrieves the list of assets in the pool.","returns":{"_0":"An array of addresses representing the assets."}},"getDeviation()":{"details":"Returns the deviation between the current weights and target weights of the assets in the pool.","returns":{"directions":"An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight."}},"getReserves()":{"details":"Returns an array of reserves for each asset in the pool.","returns":{"_0":"An array of reserves."}},"getSlippage(address)":{"details":"Restituisce lo slippage attuale per un dato token.","params":{"token":"The address of the token."},"returns":{"_0":"Lo slippage attuale per il token."}},"getWeights()":{"details":"Retrieves the list of weights associated with the assets in the pool.","returns":{"_0":"An array of uint256 values representing the weights."}},"isRebalanceNeeded()":{"details":"Checks if rebalancing is needed for the pool.","returns":{"_0":"A boolean value indicating whether rebalancing is needed or not."}},"liquidity()":{"details":"Returns the total liquidity of the pool.","returns":{"_0":"The total liquidity of the pool."}},"mint(address,uint256[])":{"details":"Mints new tokens and adds them to the specified address.","params":{"to":"The address to which the new tokens will be minted."},"returns":{"_0":"The amount of tokens minted."}},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"performRebalanceIfNeeded()":{"details":"Performs rebalance"},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"rebalanceWeights(address)":{"details":"Rebalances the weights of the pool by calculating the amounts to add for each token, transferring the calculated amounts from the user to the pool, minting the total added liquidity, updating the reserves, and emitting an event to indicate the rebalancing of weights.","params":{"receiver":"The address to receive the minted liquidity tokens."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"swap(address,address,uint256,address)":{"details":"Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`. Requirements: - `fromToken` and `toToken` must be different tokens. - `amount` must be greater than zero. - Sufficient liquidity of `toToken` must be available in the contract. Emits a `Swap` event with the details of the swap. Updates the reserves after the swap.","params":{"amount":"The amount of `fromToken` to swap.","fromToken":"The address of the token to swap from.","receiver":"The address to receive the swapped tokens.","toToken":"The address of the token to swap to."},"returns":{"amountOut":"The amount of `toToken` received after the swap."}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unitPrice()":{"details":"Returns the unit price of the pool.","returns":{"_0":"The unit price of the pool."}},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a0604052306080523480156012575f80fd5b50608051614d0f6100395f395f81816134d80152818161350101526136400152614d0f5ff3fe608060405260043610610254575f3560e01c80637b1039991161013f578063b2b55d70116100b3578063d66bd52411610078578063d66bd52414610703578063dd62ed3e1461072e578063de836ebd1461074d578063e73faa2d1461076c578063f2fde38b14610780578063f47b45e81461079f575f80fd5b8063b2b55d701461064d578063c2ee3a081461066c578063cdf456e114610681578063cf8fa764146106a0578063d14ef46d146106bf575f80fd5b80638a77c8dc116101045780638a77c8dc1461057b5780638da5cb5b1461058f57806395d89b41146105cb578063a1f241cc146105df578063a9059cbb146105fe578063ad3cb1cc1461061d575f80fd5b80637b103999146104cf5780637fec8d381461050657806389ab35321461051b57806389afcb441461053d57806389b3179b1461055c575f80fd5b806323b872dd116101d65780634f1ef2861161019b5780634f1ef2861461043557806352d1902d1461044857806367e4ac2c1461045c5780636e81221c1461047d57806370a082311461049c578063715018a6146104bb575f80fd5b806323b872dd1461039b578063250aa683146103ba578063313ce567146103d957806336bf6e39146103f45780634aa0665214610416575f80fd5b806318160ddd1161021c57806318160ddd1461031e57806318904ea41461033e5780631a68650214610352578063228835ac1461036657806322acb86714610387575f80fd5b806306fdde03146102585780630723c999146102825780630902f1ac146102ae578063095ea7b3146102c257806312899068146102f1575b5f80fd5b348015610263575f80fd5b5061026c6107c1565b6040516102799190614307565b60405180910390f35b34801561028d575f80fd5b506102a161029c366004614360565b610881565b60405161027991906143b5565b3480156102b9575f80fd5b506102a1610acc565b3480156102cd575f80fd5b506102e16102dc3660046143c7565b610bb4565b6040519015158152602001610279565b3480156102fc575f80fd5b5061031061030b366004614360565b610bcd565b604051908152602001610279565b348015610329575f80fd5b505f80516020614c9a83398151915254610310565b348015610349575f80fd5b506102a1610c4d565b34801561035d575f80fd5b50610310610ce9565b348015610371575f80fd5b506103856103803660046144c3565b610cfa565b005b348015610392575f80fd5b506102a1611034565b3480156103a6575f80fd5b506102e16103b5366004614597565b6110d0565b3480156103c5575f80fd5b506103106103d4366004614360565b6110f5565b3480156103e4575f80fd5b5060405160128152602001610279565b3480156103ff575f80fd5b5061040861116d565b6040516102799291906145d5565b348015610421575f80fd5b50610310610430366004614597565b611181565b6103856104433660046145ed565b61134a565b348015610453575f80fd5b50610310611369565b348015610467575f80fd5b50610470611384565b60405161027991906146c6565b348015610488575f80fd5b506103106104973660046146d8565b61143b565b3480156104a7575f80fd5b506103106104b6366004614360565b611739565b3480156104c6575f80fd5b5061038561175f565b3480156104da575f80fd5b506005546104ee906001600160a01b031681565b6040516001600160a01b039091168152602001610279565b348015610511575f80fd5b5061031060015481565b348015610526575f80fd5b5061052f611772565b604051610279929190614728565b348015610548575f80fd5b506102a1610557366004614360565b611929565b348015610567575f80fd5b50610310610576366004614360565b611e95565b348015610586575f80fd5b506102e1611f1b565b34801561059a575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166104ee565b3480156105d6575f80fd5b5061026c611f95565b3480156105ea575f80fd5b506103106105f9366004614597565b611fd3565b348015610609575f80fd5b506102e16106183660046143c7565b6120b1565b348015610628575f80fd5b5061026c604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610658575f80fd5b50610310610667366004614360565b6120be565b348015610677575f80fd5b5061031060025481565b34801561068c575f80fd5b506003546104ee906001600160a01b031681565b3480156106ab575f80fd5b506103106106ba366004614777565b6121a6565b3480156106ca575f80fd5b506106de6106d9366004614777565b61221b565b604080516001600160a01b039094168452602084019290925290820152606001610279565b34801561070e575f80fd5b5061031061071d366004614360565b60066020525f908152604090205481565b348015610739575f80fd5b5061031061074836600461478e565b612255565b348015610758575f80fd5b506103106107673660046147c5565b61229e565b348015610777575f80fd5b5061031061263d565b34801561078b575f80fd5b5061038561079a366004614360565b612731565b3480156107aa575f80fd5b506107b361276e565b604051610279929190614811565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060915f80516020614c7a833981519152916107ff90614835565b80601f016020809104026020016040519081016040528092919081815260200182805461082b90614835565b80156108765780601f1061084d57610100808354040283529160200191610876565b820191905f5260205f20905b81548152906001019060200180831161085957829003601f168201915b505050505091505090565b60605f60055f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108f89190614867565b9050336001600160a01b0382161461092b5760405162461bcd60e51b815260040161092290614882565b60405180910390fd5b610933611f1b565b6109765760405162461bcd60e51b8152602060048201526014602482015273149958985b185b98d9481b9bdd081b995959195960621b6044820152606401610922565b5f8061098061286c565b915091505f61098f8383612998565b90505f61099b82612a96565b9050600454816109ab91906148be565b5f8054919250906001600160401b038111156109c9576109c96143f1565b6040519080825280602002602001820160405280156109f2578160200160208202803683370190505b5090505f5b8351811015610a6b575f848281518110610a1357610a136148d5565b60200260200101511115610a6357610a4481858381518110610a3757610a376148d5565b6020026020010151612ad1565b828281518110610a5657610a566148d5565b6020026020010181815250505b6001016109f7565b50610a768883612ba0565b610a7e612bd4565b336001600160a01b03167fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e84604051610ab791906143b5565b60405180910390a29550505050505b50919050565b60605f60055f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b1f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b439190614867565b604051630fa6707960e21b81523060048201529091506001600160a01b03821690633e99c1e4906024015f60405180830381865afa158015610b87573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610bae91908101906148e9565b91505090565b5f33610bc1818585612f94565b60019150505b92915050565b5f805b5f54811015610c4557826001600160a01b03165f8281548110610bf557610bf56148d5565b5f9182526020909120600390910201546001600160a01b031603610c3d575f8181548110610c2557610c256148d5565b905f5260205f20906003020160020154915050919050565b600101610bd0565b505f92915050565b5f8054606091906001600160401b03811115610c6b57610c6b6143f1565b604051908082528060200260200182016040528015610c94578160200160208202803683370190505b5090505f5b5f54811015610ac6575f8181548110610cb457610cb46148d5565b905f5260205f20906003020160020154828281518110610cd657610cd66148d5565b6020908102919091010152600101610c99565b5f80610cf361286c565b5092915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f81158015610d3e5750825b90505f826001600160401b03166001148015610d595750303b155b905081158015610d67575080155b15610d855760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610daf57845460ff60401b1916600160401b1785555b610db833612fa6565b610e0460405180604001604052806009815260200168042616c756e69204c560bc1b81525060405180604001604052806009815260200168042414c554e492d4c560bc1b815250612fb7565b600580546001600160a01b0319166001600160a01b038816179055670de0b6b3a76400006002555f610e368a8a612fc9565b905080610e7d5760405162461bcd60e51b8152602060048201526015602482015274125b9a5d1a585b1a5e985d1a5bdb8819985a5b1959605a1b6044820152606401610922565b600188905560055460408051631bf01e9b60e01b815290516001600160a01b0390921691631bf01e9b916004808201926020929091908290030181865afa158015610eca573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eee9190614867565b600380546001600160a01b0319166001600160a01b0392909216918217905564e8d4a51000600455610f625760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964206261736520617373657420616464726573730000000000006044820152606401610922565b5f805b8a51811015610f9d578a8181518110610f8057610f806148d5565b602002602001015182610f939190614974565b9150600101610f65565b508061271014610fe15760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207765696768747360881b6044820152606401610922565b5050831561102957845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b5f8054606091906001600160401b03811115611052576110526143f1565b60405190808252806020026020018201604052801561107b578160200160208202803683370190505b5090505f5b5f54811015610ac6575f818154811061109b5761109b6148d5565b905f5260205f209060030201600101548282815181106110bd576110bd6148d5565b6020908102919091010152600101611080565b5f336110dd85828561340d565b6110e8858585613470565b60019150505b9392505050565b5f805b5f54811015610c4557826001600160a01b03165f828154811061111d5761111d6148d5565b5f9182526020909120600390910201546001600160a01b031603611165575f818154811061114d5761114d6148d5565b905f5260205f20906003020160010154915050919050565b6001016110f8565b5f606061117861286c565b90939092509050565b5f8060055f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111d3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111f79190614867565b90505f6001600160a01b031660055f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611253573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112779190614867565b6001600160a01b0316036112c65760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206f7261636c65206164647265737360501b6044820152606401610922565b60405163248391ff60e01b81526001600160a01b0386811660048301528581166024830152604482018590525f919083169063248391ff90606401602060405180830381865afa15801561131c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113409190614987565b9695505050505050565b6113526134cd565b61135b82613571565b6113658282613579565b5050565b5f611372613635565b505f80516020614cba83398151915290565b5f8054606091906001600160401b038111156113a2576113a26143f1565b6040519080825280602002602001820160405280156113cb578160200160208202803683370190505b5090505f5b5f54811015610ac6575f81815481106113eb576113eb6148d5565b5f91825260209091206003909102015482516001600160a01b039091169083908390811061141b5761141b6148d5565b6001600160a01b03909216602092830291909101909101526001016113d0565b5f61144461367e565b600554604080516385462d6f60e01b815290515f926001600160a01b0316916385462d6f9160048083019260209291908290030181865afa15801561148b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114af9190614987565b9050846001600160a01b0316866001600160a01b0316036115125760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152606401610922565b5f84116115615760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610922565b6001600160a01b0386165f9081526006602052604081208054869290611588908490614974565b909155505f905061159a878787611fd3565b9050806115a6876120be565b10156115ed5760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74204c697175696469747960501b6044820152606401610922565b6001600160a01b0386165f9081526006602052604081208054839290611614908490614974565b909155505f905061271061162884846148be565b611632919061499e565b905061163e81836149bd565b93505f841161169d5760405162461bcd60e51b815260206004820152602560248201527f416d6f756e7420746f2073656e64206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610922565b6116a5612bd4565b866001600160a01b0316886001600160a01b0316866001600160a01b03167fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e4606289886040516116fd929190918252602082015260400190565b60405180910390a450505061173160017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b949350505050565b6001600160a01b03165f9081525f80516020614c7a833981519152602052604090205490565b6117676136c8565b6117705f613723565b565b6060805f8061177f61286c565b5f549193509150806001600160401b0381111561179e5761179e6143f1565b6040519080825280602002602001820160405280156117c7578160200160208202803683370190505b509450806001600160401b038111156117e2576117e26143f1565b60405190808252806020026020018201604052801561180b578160200160208202803683370190505b5093505f5b81811015611921575f8484838151811061182c5761182c6148d5565b602002602001015161271061184191906148be565b61184b919061499e565b90505f808381548110611860576118606148d5565b905f5260205f209060030201600101549050808211156118cb5761188481836149bd565b878481518110611896576118966148d5565b60200260200101818152505060018884815181106118b6576118b66148d5565b91151560209283029190910190910152611917565b6118d582826149bd565b8784815181106118e7576118e76148d5565b6020026020010181815250505f888481518110611906576119066148d5565b911515602092830291909101909101525b5050600101611810565b505050509091565b60605f60055f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa15801561197c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119a09190614867565b9050336001600160a01b038216146119ca5760405162461bcd60e51b815260040161092290614882565b600554604080516385462d6f60e01b815290515f926001600160a01b0316916385462d6f9160048083019260209291908290030181865afa158015611a11573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a359190614987565b90505f60055f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a88573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611aac9190614867565b90505f611ab830611739565b90505f8111611b095760405162461bcd60e51b815260206004820152601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152606401610922565b5f611b1f5f80516020614c9a8339815191525490565b90505f8111611b5f5760405162461bcd60e51b815260206004820152600c60248201526b4e6f206c697175696469747960a01b6044820152606401610922565b5f80546001600160401b03811115611b7957611b796143f1565b604051908082528060200260200182016040528015611ba2578160200160208202803683370190505b5090505f612710611bb387866148be565b611bbd919061499e565b90505f611bca82866149bd565b90505f5b5f54811015611cb4575f876001600160a01b031663a3e113fb305f8581548110611bfa57611bfa6148d5565b5f91825260209091206003909102015460405160e084901b6001600160e01b03191681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015611c53573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c779190614987565b905085611c8484836148be565b611c8e919061499e565b858381518110611ca057611ca06148d5565b602090810291909101015250600101611bce565b5080611cbf30611739565b1015611d0d5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e742042414c554e49206c69717569646974790000006044820152606401610922565b60055460408051631d8cf42560e11b815290515f926001600160a01b031691633b19e84a9160048083019260209291908290030181865afa158015611d54573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d789190614867565b60405163a9059cbb60e01b81526001600160a01b0382166004820152602481018590529091505f90309063a9059cbb906044016020604051808303815f875af1158015611dc7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611deb91906149d0565b905080611e305760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606401610922565b611e3a3084613793565b611e42612bd4565b8b6001600160a01b03167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca584604051611e7d91815260200190565b60405180910390a250929a9950505050505050505050565b5f80611e9f611772565b9150505f5b5f54811015611f1257836001600160a01b03165f8281548110611ec957611ec96148d5565b5f9182526020909120600390910201546001600160a01b031603611f0a57818181518110611ef957611ef96148d5565b602002602001015192505050919050565b600101611ea4565b505f9392505050565b5f805f611f26611772565b915091505f5b8151811015611f8c57828181518110611f4757611f476148d5565b60200260200101518015611f755750600154828281518110611f6b57611f6b6148d5565b6020026020010151115b15611f84576001935050505090565b600101611f2c565b505f9250505090565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f80516020614c7a833981519152916107ff90614835565b5f80611fe0858585611181565b90505f611fec86610bcd565b90505f611ff886610bcd565b90505f612004886110f5565b90505f612010886110f5565b90505f61271061202086886148be565b61202a919061499e565b90505f61271061203a86896148be565b612044919061499e565b905061204f8b611e95565b8411156120675761206082886149bd565b9650612074565b6120718288614974565b96505b61207d8a611e95565b8310156120955761208e8188614974565b96506120a2565b61209f81886149bd565b96505b50949998505050505050505050565b5f33610bc1818585613470565b5f8060055f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015612110573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121349190614867565b60405163a3e113fb60e01b81523060048201526001600160a01b0385811660248301529192509082169063a3e113fb90604401602060405180830381865afa158015612182573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110ee9190614987565b5f806121b061286c565b915050805183106121f95760405162461bcd60e51b8152602060048201526013602482015272092dcecc2d8d2c840c2e6e6cae840d2dcc8caf606b1b6044820152606401610922565b80838151811061220b5761220b6148d5565b6020026020010151915050919050565b5f8181548110612229575f80fd5b5f9182526020909120600390910201805460018201546002909201546001600160a01b03909116925083565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b5f8060055f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122f0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123149190614867565b9050336001600160a01b0382161461233e5760405162461bcd60e51b815260040161092290614882565b5f6123545f80516020614c9a8339815191525490565b90505f80612360610acc565b80515f54919250146123b45760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152606401610922565b5f546123ee5760405162461bcd60e51b81526020600482015260096024820152684e6f2061737365747360b81b6044820152606401610922565b5f5b5f54811015612489575f80828154811061240c5761240c6148d5565b5f918252602082206003918202015490546001600160a01b03918216935016820361244d57888381518110612443576124436148d5565b5061248192505050565b612470828a8581518110612463576124636148d5565b60200260200101516137c7565b905061247c8186614974565b945050505b6001016123f0565b505f82116124e45760405162461bcd60e51b815260206004820152602260248201527f546f74616c2076616c7565206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608401610922565b5f835f03612500576004546124f990846148be565b905061259e565b5f61250961286c565b5090505f811161256a5760405162461bcd60e51b815260206004820152602660248201527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608401610922565b60045461257790826148be565b856004548661258691906148be565b61259091906148be565b61259a919061499e565b9150505b805f036125dd5760405162461bcd60e51b815260206004820152600d60248201526c04d696e7420717479206973203609c1b6044820152606401610922565b6125e78882612ba0565b6125ef612bd4565b876001600160a01b03167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968858260405161262a91815260200190565b60405180910390a2979650505050505050565b5f8060035f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561268f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906126b391906149ef565b60ff1690505f6126c48260126149bd565b6126cf90600a614aef565b90505f6126da61286c565b5090505f6126f35f80516020614c9a8339815191525490565b9050805f03612706575f94505050505090565b6002548161271485856148be565b61271e919061499e565b61272891906148be565b94505050505090565b6127396136c8565b6001600160a01b03811661276257604051631e4fbdf760e01b81525f6004820152602401610922565b61276b81613723565b50565b6060805f60055f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127c2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906127e69190614867565b9050336001600160a01b038216146128105760405162461bcd60e51b815260040161092290614882565b612818611f1b565b61285b5760405162461bcd60e51b8152602060048201526014602482015273149958985b185b98d9481b9bdd081b995959195960621b6044820152606401610922565b6128636137e1565b92509250509091565b5f8054606090806001600160401b0381111561288a5761288a6143f1565b6040519080825280602002602001820160405280156128b3578160200160208202803683370190505b5091505f5b81811015612992575f8082815481106128d3576128d36148d5565b5f91825260208220600390910201546001600160a01b031691506128f6826120be565b6003549091506001600160a01b03908116908316036129335780858481518110612922576129226148d5565b602002602001018181525050612961565b5f61293e83836137c7565b905080868581518110612953576129536148d5565b602002602001018181525050505b848381518110612973576129736148d5565b6020026020010151866129869190614974565b955050506001016128b8565b50509091565b5f546060906001600160401b038111156129b4576129b46143f1565b6040519080825280602002602001820160405280156129dd578160200160208202803683370190505b5090505f5b5f54811015610cf3575f6127105f8381548110612a0157612a016148d5565b905f5260205f2090600302016001015486612a1c91906148be565b612a26919061499e565b905080848381518110612a3b57612a3b6148d5565b60200260200101511015612a8d57838281518110612a5b57612a5b6148d5565b602002602001015181612a6e91906149bd565b838381518110612a8057612a806148d5565b6020026020010181815250505b506001016129e2565b5f805b5f54811015610ac657828181518110612ab457612ab46148d5565b602002602001015182612ac79190614974565b9150600101612a99565b6003545f805490916001600160a01b031690829085908110612af557612af56148d5565b5f9182526020909120600390910201546001600160a01b031603612b1a575080610bc7565b5f612b4f5f8581548110612b3057612b306148d5565b5f9182526020909120600390910201546001600160a01b031684613e62565b90505f81116110ee5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152606401610922565b6001600160a01b038216612bc95760405163ec442f0560e01b81525f6004820152602401610922565b6113655f8383613e7b565b5f80612bde611772565b915091505f60055f9054906101000a90046001600160a01b03166001600160a01b03166385462d6f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612c33573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612c579190614987565b9050606461012c5f5b5f54811015612f8c575f808281548110612c7c57612c7c6148d5565b905f5260205f20906003020160020154905083868381518110612ca157612ca16148d5565b602002602001015111612cda57835f8381548110612cc157612cc16148d5565b905f5260205f2090600302016002018190555050612f84565b868281518110612cec57612cec6148d5565b602002602001015115612dca5783868381518110612d0c57612d0c6148d5565b6020026020010151612d1e919061499e565b5f8381548110612d3057612d306148d5565b905f5260205f2090600302016002015f828254612d4d9190614974565b92505081905550805f8381548110612d6757612d676148d5565b905f5260205f209060030201600201541015612dc55760405162461bcd60e51b815260206004820152601e60248201527f4f766572666c6f7720696e6372656d656e74696e6720736c69707061676500006044820152606401610922565b612f32565b858281518110612ddc57612ddc6148d5565b60200260200101515f8381548110612df657612df66148d5565b905f5260205f209060030201600201541115612ed85783868381518110612e1f57612e1f6148d5565b6020026020010151612e31919061499e565b5f8381548110612e4357612e436148d5565b905f5260205f2090600302016002015f828254612e6091906149bd565b92505081905550805f8381548110612e7a57612e7a6148d5565b905f5260205f209060030201600201541115612dc55760405162461bcd60e51b815260206004820152601f60248201527f556e646572666c6f772064656372656d656e74696e6720736c697070616765006044820152606401610922565b83868381518110612eeb57612eeb6148d5565b6020026020010151612efd919061499e565b5f8381548110612f0f57612f0f6148d5565b905f5260205f2090600302016002015f828254612f2c9190614974565b90915550505b825f8381548110612f4557612f456148d5565b905f5260205f209060030201600201541115612f8257825f8381548110612f6e57612f6e6148d5565b905f5260205f209060030201600201819055505b505b600101612c60565b505050505050565b612fa18383836001613fb4565b505050565b612fae614098565b61276b816140e1565b612fbf614098565b61136582826140e9565b5f8060055f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa15801561301b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061303f9190614867565b90505f6001600160a01b031660055f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa15801561309b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906130bf9190614867565b6001600160a01b0316036131155760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420726562616c616e63657220616464726573730000000000006044820152606401610922565b82518451146131715760405162461bcd60e51b815260206004820152602260248201527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608401610922565b5f5b8451811015613402575f6001600160a01b0316858281518110613198576131986148d5565b60200260200101516001600160a01b0316036131ee5760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206173736574206164647265737360581b6044820152606401610922565b5f848281518110613201576132016148d5565b6020026020010151116132475760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b6044820152606401610922565b5f6040518060600160405280878481518110613265576132656148d5565b60200260200101516001600160a01b0316815260200186848151811061328d5761328d6148d5565b60209081029190910181015182525f918101829052835460018082018655948352818320845160039092020180546001600160a01b0319166001600160a01b0390921691909117815590830151938101939093556040909101516002909201919091558551869083908110613304576133046148d5565b6020908102919091010151604051636eb1769f60e11b81523060048201526001600160a01b0385811660248301529192509082169063dd62ed3e90604401602060405180830381865afa15801561335d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906133819190614987565b5f036133f95760405163095ea7b360e01b81526001600160a01b0384811660048301525f19602483015282169063095ea7b3906044016020604051808303815f875af11580156133d3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906133f791906149d0565b505b50600101613173565b506001949350505050565b5f6134188484612255565b90505f19811461346a578181101561345c57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610922565b61346a84848484035f613fb4565b50505050565b6001600160a01b03831661349957604051634b637e8f60e11b81525f6004820152602401610922565b6001600160a01b0382166134c25760405163ec442f0560e01b81525f6004820152602401610922565b612fa1838383613e7b565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061355357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166135475f80516020614cba833981519152546001600160a01b031690565b6001600160a01b031614155b156117705760405163703e46dd60e11b815260040160405180910390fd5b61276b6136c8565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156135d3575060408051601f3d908101601f191682019092526135d091810190614987565b60015b6135fb57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610922565b5f80516020614cba833981519152811461362b57604051632a87526960e21b815260048101829052602401610922565b612fa18383614139565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146117705760405163703e46dd60e11b815260040160405180910390fd5b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f008054600119016136c257604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b336136fa7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146117705760405163118cdaa760e01b8152336004820152602401610922565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6001600160a01b0382166137bc57604051634b637e8f60e11b81525f6004820152602401610922565b611365825f83613e7b565b6003545f906110ee9084906001600160a01b031684611181565b6060805f60055f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015613835573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906138599190614867565b90505f60055f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa1580156138ac573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906138d09190614867565b5f8054919250906001600160401b038111156138ee576138ee6143f1565b604051908082528060200260200182016040528015613917578160200160208202803683370190505b505f8054919250906001600160401b03811115613936576139366143f1565b60405190808252806020026020018201604052801561395f578160200160208202803683370190505b505f8054919250906001600160401b0381111561397e5761397e6143f1565b6040519080825280602002602001820160405280156139a7578160200160208202803683370190505b505f8054919250906001600160401b038111156139c6576139c66143f1565b6040519080825280602002602001820160405280156139ef578160200160208202803683370190505b505f8054919250906001600160401b03811115613a0e57613a0e6143f1565b604051908082528060200260200182016040528015613a37578160200160208202803683370190505b505f8054919250906001600160401b03811115613a5657613a566143f1565b604051908082528060200260200182016040528015613a7f578160200160208202803683370190505b5090505f5b5f54811015613bda575f8181548110613a9f57613a9f6148d5565b5f91825260209091206003909102015487516001600160a01b0390911690889083908110613acf57613acf6148d5565b60200260200101906001600160a01b031690816001600160a01b0316815250505f8181548110613b0157613b016148d5565b905f5260205f20906003020160010154868281518110613b2357613b236148d5565b602002602001018181525050868181518110613b4157613b416148d5565b60209081029190910101516040516370a0823160e01b81526001600160a01b038b81166004830152909116906370a0823190602401602060405180830381865afa158015613b91573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613bb59190614987565b858281518110613bc757613bc76148d5565b6020908102919091010152600101613a84565b505f613be4610acc565b9050876001600160a01b031663f0bf77148289896001548e8f60035f9054906101000a90046001600160a01b03166040518863ffffffff1660e01b8152600401613c349796959493929190614afa565b5f604051808303815f87803b158015613c4b575f80fd5b505af1158015613c5d573d5f803e3d5ffd5b505050505f5b5f54811015613e1057878181518110613c7e57613c7e6148d5565b60209081029190910101516040516370a0823160e01b81526001600160a01b038c81166004830152909116906370a0823190602401602060405180830381865afa158015613cce573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613cf29190614987565b858281518110613d0457613d046148d5565b602002602001018181525050858181518110613d2257613d226148d5565b6020026020010151858281518110613d3c57613d3c6148d5565b60200260200101511115613dab57858181518110613d5c57613d5c6148d5565b6020026020010151858281518110613d7657613d766148d5565b6020026020010151613d8891906149bd565b848281518110613d9a57613d9a6148d5565b602002602001018181525050613e08565b848181518110613dbd57613dbd6148d5565b6020026020010151868281518110613dd757613dd76148d5565b6020026020010151613de991906149bd565b838281518110613dfb57613dfb6148d5565b6020026020010181815250505b600101613c63565b50336001600160a01b03167f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b888604051613e4a91906146c6565b60405180910390a25090999098509650505050505050565b6003545f906110ee906001600160a01b03168484611181565b5f80516020614c7a8339815191526001600160a01b038416613eb55781816002015f828254613eaa9190614974565b90915550613f259050565b6001600160a01b0384165f9081526020829052604090205482811015613f075760405163391434e360e21b81526001600160a01b03861660048201526024810182905260448101849052606401610922565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b038316613f43576002810180548390039055613f61565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051613fa691815260200190565b60405180910390a350505050565b5f80516020614c7a8339815191526001600160a01b038516613feb5760405163e602df0560e01b81525f6004820152602401610922565b6001600160a01b03841661401457604051634a1406b160e11b81525f6004820152602401610922565b6001600160a01b038086165f9081526001830160209081526040808320938816835292905220839055811561409157836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161408891815260200190565b60405180910390a35b5050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661177057604051631afcd79f60e31b815260040160405180910390fd5b612739614098565b6140f1614098565b5f80516020614c7a8339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0361412a8482614ba8565b506004810161346a8382614ba8565b6141428261418e565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561418657612fa182826141f1565b611365614263565b806001600160a01b03163b5f036141c357604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610922565b5f80516020614cba83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b03168460405161420d9190614c63565b5f60405180830381855af49150503d805f8114614245576040519150601f19603f3d011682016040523d82523d5f602084013e61424a565b606091505b509150915061425a858383614282565b95945050505050565b34156117705760405163b398979f60e01b815260040160405180910390fd5b60608261429757614292826142de565b6110ee565b81511580156142ae57506001600160a01b0384163b155b156142d757604051639996b31560e01b81526001600160a01b0385166004820152602401610922565b50806110ee565b8051156142ee5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461276b575f80fd5b803561435b8161433c565b919050565b5f60208284031215614370575f80fd5b81356110ee8161433c565b5f815180845260208085019450602084015f5b838110156143aa5781518752958201959082019060010161438e565b509495945050505050565b602081525f6110ee602083018461437b565b5f80604083850312156143d8575f80fd5b82356143e38161433c565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b038111828210171561442d5761442d6143f1565b604052919050565b5f6001600160401b0382111561444d5761444d6143f1565b5060051b60200190565b5f82601f830112614466575f80fd5b8135602061447b61447683614435565b614405565b8083825260208201915060208460051b87010193508684111561449c575f80fd5b602086015b848110156144b857803583529183019183016144a1565b509695505050505050565b5f805f80608085870312156144d6575f80fd5b84356001600160401b03808211156144ec575f80fd5b818701915087601f8301126144ff575f80fd5b8135602061450f61447683614435565b82815260059290921b8401810191818101908b84111561452d575f80fd5b948201945b838610156145545785356145458161433c565b82529482019490820190614532565b98505088013592505080821115614569575f80fd5b5061457687828801614457565b9350506040850135915061458c60608601614350565b905092959194509250565b5f805f606084860312156145a9575f80fd5b83356145b48161433c565b925060208401356145c48161433c565b929592945050506040919091013590565b828152604060208201525f611731604083018461437b565b5f80604083850312156145fe575f80fd5b82356146098161433c565b91506020838101356001600160401b0380821115614625575f80fd5b818601915086601f830112614638575f80fd5b81358181111561464a5761464a6143f1565b61465c601f8201601f19168501614405565b91508082528784828501011115614671575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f815180845260208085019450602084015f5b838110156143aa5781516001600160a01b0316875295820195908201906001016146a1565b602081525f6110ee602083018461468e565b5f805f80608085870312156146eb575f80fd5b84356146f68161433c565b935060208501356147068161433c565b925060408501359150606085013561471d8161433c565b939692955090935050565b604080825283519082018190525f906020906060840190828701845b82811015614762578151151584529284019290840190600101614744565b5050508381036020850152611340818661437b565b5f60208284031215614787575f80fd5b5035919050565b5f806040838503121561479f575f80fd5b82356147aa8161433c565b915060208301356147ba8161433c565b809150509250929050565b5f80604083850312156147d6575f80fd5b82356147e18161433c565b915060208301356001600160401b038111156147fb575f80fd5b61480785828601614457565b9150509250929050565b604081525f614823604083018561437b565b828103602084015261425a818561437b565b600181811c9082168061484957607f821691505b602082108103610ac657634e487b7160e01b5f52602260045260245ffd5b5f60208284031215614877575f80fd5b81516110ee8161433c565b6020808252600e908201526d4f6e6c792050657269706865727960901b604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610bc757610bc76148aa565b634e487b7160e01b5f52603260045260245ffd5b5f60208083850312156148fa575f80fd5b82516001600160401b0381111561490f575f80fd5b8301601f8101851361491f575f80fd5b805161492d61447682614435565b81815260059190911b8201830190838101908783111561494b575f80fd5b928401925b8284101561496957835182529284019290840190614950565b979650505050505050565b80820180821115610bc757610bc76148aa565b5f60208284031215614997575f80fd5b5051919050565b5f826149b857634e487b7160e01b5f52601260045260245ffd5b500490565b81810381811115610bc757610bc76148aa565b5f602082840312156149e0575f80fd5b815180151581146110ee575f80fd5b5f602082840312156149ff575f80fd5b815160ff811681146110ee575f80fd5b600181815b80851115614a4957815f1904821115614a2f57614a2f6148aa565b80851615614a3c57918102915b93841c9390800290614a14565b509250929050565b5f82614a5f57506001610bc7565b81614a6b57505f610bc7565b8160018114614a815760028114614a8b57614aa7565b6001915050610bc7565b60ff841115614a9c57614a9c6148aa565b50506001821b610bc7565b5060208310610133831016604e8410600b8410161715614aca575081810a610bc7565b614ad48383614a0f565b805f1904821115614ae757614ae76148aa565b029392505050565b5f6110ee8383614a51565b60e081525f614b0c60e083018a61437b565b8281036020840152614b1e818a61468e565b90508281036040840152614b32818961437b565b606084019790975250506001600160a01b03938416608082015291831660a083015290911660c0909101529392505050565b601f821115612fa157805f5260205f20601f840160051c81016020851015614b895750805b601f840160051c820191505b81811015614091575f8155600101614b95565b81516001600160401b03811115614bc157614bc16143f1565b614bd581614bcf8454614835565b84614b64565b602080601f831160018114614c08575f8415614bf15750858301515b5f19600386901b1c1916600185901b178555612f8c565b5f85815260208120601f198616915b82811015614c3657888601518255948401946001909101908401614c17565b5085821015614c5357878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f82518060208501845e5f92019182525091905056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220ccb57b5033de849f166d4cac28981883d979b4b70e3bd5faf182b6dc84efba2b64736f6c63430008190033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x4D0F PUSH2 0x39 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x34D8 ADD MSTORE DUP2 DUP2 PUSH2 0x3501 ADD MSTORE PUSH2 0x3640 ADD MSTORE PUSH2 0x4D0F PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x254 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B103999 GT PUSH2 0x13F JUMPI DUP1 PUSH4 0xB2B55D70 GT PUSH2 0xB3 JUMPI DUP1 PUSH4 0xD66BD524 GT PUSH2 0x78 JUMPI DUP1 PUSH4 0xD66BD524 EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x74D JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x780 JUMPI DUP1 PUSH4 0xF47B45E8 EQ PUSH2 0x79F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0x6BF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8A77C8DC GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0xA1F241CC EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x61D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B103999 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0x89B3179B EQ PUSH2 0x55C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x250AA683 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x416 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x21C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x18904EA4 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x228835AC EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x387 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x12899068 EQ PUSH2 0x2F1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x4307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x43B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0xACC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x43C7 JUMP JUMPDEST PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x279 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x279 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x310 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0xC4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0xCE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x44C3 JUMP JUMPDEST PUSH2 0xCFA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x1034 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x4597 JUMP JUMPDEST PUSH2 0x10D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH2 0x10F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x279 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP3 SWAP2 SWAP1 PUSH2 0x45D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x430 CALLDATASIZE PUSH1 0x4 PUSH2 0x4597 JUMP JUMPDEST PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x385 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x45ED JUMP JUMPDEST PUSH2 0x134A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x1369 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x470 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x46C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x46D8 JUMP JUMPDEST PUSH2 0x143B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x4B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH2 0x1739 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x175F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x4EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x279 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x511 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH2 0x1772 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP3 SWAP2 SWAP1 PUSH2 0x4728 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x548 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x557 CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH2 0x1929 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x567 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH2 0x1E95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x586 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x1F1B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x1F95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x5F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4597 JUMP JUMPDEST PUSH2 0x1FD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x618 CALLDATASIZE PUSH1 0x4 PUSH2 0x43C7 JUMP JUMPDEST PUSH2 0x20B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x628 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x658 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x667 CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH2 0x20BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x677 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x4EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x6BA CALLDATASIZE PUSH1 0x4 PUSH2 0x4777 JUMP JUMPDEST PUSH2 0x21A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6DE PUSH2 0x6D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4777 JUMP JUMPDEST PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x279 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x71D CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x739 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x748 CALLDATASIZE PUSH1 0x4 PUSH2 0x478E JUMP JUMPDEST PUSH2 0x2255 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x758 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x767 CALLDATASIZE PUSH1 0x4 PUSH2 0x47C5 JUMP JUMPDEST PUSH2 0x229E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x777 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x263D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x79A CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH2 0x2731 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B3 PUSH2 0x276E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP3 SWAP2 SWAP1 PUSH2 0x4811 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C7A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x7FF SWAP1 PUSH2 0x4835 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x82B SWAP1 PUSH2 0x4835 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x876 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x84D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x876 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x859 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F8 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x92B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x4882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x933 PUSH2 0x1F1B JUMP JUMPDEST PUSH2 0x976 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x980 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH2 0x98F DUP4 DUP4 PUSH2 0x2998 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x99B DUP3 PUSH2 0x2A96 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 PUSH2 0x9AB SWAP2 SWAP1 PUSH2 0x48BE JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x9C9 JUMPI PUSH2 0x9C9 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9F2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xA6B JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA13 JUMPI PUSH2 0xA13 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0xA63 JUMPI PUSH2 0xA44 DUP2 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA37 JUMPI PUSH2 0xA37 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2AD1 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA56 JUMPI PUSH2 0xA56 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x9F7 JUMP JUMPDEST POP PUSH2 0xA76 DUP9 DUP4 PUSH2 0x2BA0 JUMP JUMPDEST PUSH2 0xA7E PUSH2 0x2BD4 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP5 PUSH1 0x40 MLOAD PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0x43B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP6 POP POP POP POP POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB1F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB43 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFA67079 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x3E99C1E4 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB87 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xBAE SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x48E9 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0xBC1 DUP2 DUP6 DUP6 PUSH2 0x2F94 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xC45 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBF5 JUMPI PUSH2 0xBF5 PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC3D JUMPI PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC25 JUMPI PUSH2 0xC25 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xBD0 JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xC6B JUMPI PUSH2 0xC6B PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC94 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xAC6 JUMPI PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xCB4 JUMPI PUSH2 0xCB4 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCD6 JUMPI PUSH2 0xCD6 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xC99 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCF3 PUSH2 0x286C JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xD3E JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xD59 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xD67 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xD85 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xDAF JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xDB8 CALLER PUSH2 0x2FA6 JUMP JUMPDEST PUSH2 0xE04 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL DUP2 MSTORE POP PUSH2 0x2FB7 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE PUSH0 PUSH2 0xE36 DUP11 DUP11 PUSH2 0x2FC9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xE7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9A5D1A585B1A5E985D1A5BDB8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 DUP9 SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1BF01E9B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x1BF01E9B SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xECA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH5 0xE8D4A51000 PUSH1 0x4 SSTORE PUSH2 0xF62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420626173652061737365742061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP11 MLOAD DUP2 LT ISZERO PUSH2 0xF9D JUMPI DUP11 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xF80 JUMPI PUSH2 0xF80 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0xF65 JUMP JUMPDEST POP DUP1 PUSH2 0x2710 EQ PUSH2 0xFE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST POP POP DUP4 ISZERO PUSH2 0x1029 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1052 JUMPI PUSH2 0x1052 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x107B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xAC6 JUMPI PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x109B JUMPI PUSH2 0x109B PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10BD JUMPI PUSH2 0x10BD PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1080 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x10DD DUP6 DUP3 DUP6 PUSH2 0x340D JUMP JUMPDEST PUSH2 0x10E8 DUP6 DUP6 DUP6 PUSH2 0x3470 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xC45 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x111D JUMPI PUSH2 0x111D PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1165 JUMPI PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x114D JUMPI PUSH2 0x114D PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x10F8 JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH2 0x1178 PUSH2 0x286C JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11D3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11F7 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1253 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1277 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x12C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206F7261636C652061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1340 SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1352 PUSH2 0x34CD JUMP JUMPDEST PUSH2 0x135B DUP3 PUSH2 0x3571 JUMP JUMPDEST PUSH2 0x1365 DUP3 DUP3 PUSH2 0x3579 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1372 PUSH2 0x3635 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4CBA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x13A2 JUMPI PUSH2 0x13A2 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13CB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xAC6 JUMPI PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13EB JUMPI PUSH2 0x13EB PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x141B JUMPI PUSH2 0x141B PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x13D0 JUMP JUMPDEST PUSH0 PUSH2 0x1444 PUSH2 0x367E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x85462D6F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x148B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14AF SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1512 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 DUP5 GT PUSH2 0x1561 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x1588 SWAP1 DUP5 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0x159A DUP8 DUP8 DUP8 PUSH2 0x1FD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x15A6 DUP8 PUSH2 0x20BE JUMP JUMPDEST LT ISZERO PUSH2 0x15ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74204C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1614 SWAP1 DUP5 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0x2710 PUSH2 0x1628 DUP5 DUP5 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x1632 SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST SWAP1 POP PUSH2 0x163E DUP2 DUP4 PUSH2 0x49BD JUMP JUMPDEST SWAP4 POP PUSH0 DUP5 GT PUSH2 0x169D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F2073656E64206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x16A5 PUSH2 0x2BD4 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP10 DUP9 PUSH1 0x40 MLOAD PUSH2 0x16FD SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0x1731 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C7A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1767 PUSH2 0x36C8 JUMP JUMPDEST PUSH2 0x1770 PUSH0 PUSH2 0x3723 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH2 0x177F PUSH2 0x286C JUMP JUMPDEST PUSH0 SLOAD SWAP2 SWAP4 POP SWAP2 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x179E JUMPI PUSH2 0x179E PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17C7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x17E2 JUMPI PUSH2 0x17E2 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x180B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1921 JUMPI PUSH0 DUP5 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x182C JUMPI PUSH2 0x182C PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2710 PUSH2 0x1841 SWAP2 SWAP1 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x184B SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1860 JUMPI PUSH2 0x1860 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18CB JUMPI PUSH2 0x1884 DUP2 DUP4 PUSH2 0x49BD JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1896 JUMPI PUSH2 0x1896 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x18B6 JUMPI PUSH2 0x18B6 PUSH2 0x48D5 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x18D5 DUP3 DUP3 PUSH2 0x49BD JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x18E7 JUMPI PUSH2 0x18E7 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1906 JUMPI PUSH2 0x1906 PUSH2 0x48D5 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1810 JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x197C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19A0 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x19CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x4882 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x85462D6F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A11 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A35 SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A88 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AAC SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1AB8 ADDRESS PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1B09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 PUSH2 0x1B1F PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1B5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B79 JUMPI PUSH2 0x1B79 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1BA2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x1BB3 DUP8 DUP7 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x1BBD SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1BCA DUP3 DUP7 PUSH2 0x49BD JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x1CB4 JUMPI PUSH0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA3E113FB ADDRESS PUSH0 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1BFA JUMPI PUSH2 0x1BFA PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C53 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C77 SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1C84 DUP5 DUP4 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x1C8E SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CA0 JUMPI PUSH2 0x1CA0 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1BCE JUMP JUMPDEST POP DUP1 PUSH2 0x1CBF ADDRESS PUSH2 0x1739 JUMP JUMPDEST LT ISZERO PUSH2 0x1D0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1D8CF425 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D54 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D78 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DC7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DEB SWAP2 SWAP1 PUSH2 0x49D0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1E30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x1E3A ADDRESS DUP5 PUSH2 0x3793 JUMP JUMPDEST PUSH2 0x1E42 PUSH2 0x2BD4 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1E7D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1E9F PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x1F12 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1EC9 JUMPI PUSH2 0x1EC9 PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1F0A JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1EF9 JUMPI PUSH2 0x1EF9 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1EA4 JUMP JUMPDEST POP PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x1F26 PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1F8C JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1F47 JUMPI PUSH2 0x1F47 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 ISZERO PUSH2 0x1F75 JUMPI POP PUSH1 0x1 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F6B JUMPI PUSH2 0x1F6B PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x1F84 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1F2C JUMP JUMPDEST POP PUSH0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C7A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x7FF SWAP1 PUSH2 0x4835 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1FE0 DUP6 DUP6 DUP6 PUSH2 0x1181 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1FEC DUP7 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1FF8 DUP7 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2004 DUP9 PUSH2 0x10F5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2010 DUP9 PUSH2 0x10F5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x2020 DUP7 DUP9 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x202A SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x203A DUP7 DUP10 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x2044 SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST SWAP1 POP PUSH2 0x204F DUP12 PUSH2 0x1E95 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x2067 JUMPI PUSH2 0x2060 DUP3 DUP9 PUSH2 0x49BD JUMP JUMPDEST SWAP7 POP PUSH2 0x2074 JUMP JUMPDEST PUSH2 0x2071 DUP3 DUP9 PUSH2 0x4974 JUMP JUMPDEST SWAP7 POP JUMPDEST PUSH2 0x207D DUP11 PUSH2 0x1E95 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x2095 JUMPI PUSH2 0x208E DUP2 DUP9 PUSH2 0x4974 JUMP JUMPDEST SWAP7 POP PUSH2 0x20A2 JUMP JUMPDEST PUSH2 0x209F DUP2 DUP9 PUSH2 0x49BD JUMP JUMPDEST SWAP7 POP JUMPDEST POP SWAP5 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0xBC1 DUP2 DUP6 DUP6 PUSH2 0x3470 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2110 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2134 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA3E113FB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2182 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10EE SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x21B0 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP POP DUP1 MLOAD DUP4 LT PUSH2 0x21F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840C2E6E6CAE840D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST DUP1 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x220B JUMPI PUSH2 0x220B PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2229 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2314 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x233E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x4882 JUMP JUMPDEST PUSH0 PUSH2 0x2354 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x2360 PUSH2 0xACC JUMP JUMPDEST DUP1 MLOAD PUSH0 SLOAD SWAP2 SWAP3 POP EQ PUSH2 0x23B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x23EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x4E6F20617373657473 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x2489 JUMPI PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x240C JUMPI PUSH2 0x240C PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP2 DUP3 MUL ADD SLOAD SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP AND DUP3 SUB PUSH2 0x244D JUMPI DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2443 JUMPI PUSH2 0x2443 PUSH2 0x48D5 JUMP JUMPDEST POP PUSH2 0x2481 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2470 DUP3 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2463 JUMPI PUSH2 0x2463 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x37C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x247C DUP2 DUP7 PUSH2 0x4974 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x23F0 JUMP JUMPDEST POP PUSH0 DUP3 GT PUSH2 0x24E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 DUP4 PUSH0 SUB PUSH2 0x2500 JUMPI PUSH1 0x4 SLOAD PUSH2 0x24F9 SWAP1 DUP5 PUSH2 0x48BE JUMP JUMPDEST SWAP1 POP PUSH2 0x259E JUMP JUMPDEST PUSH0 PUSH2 0x2509 PUSH2 0x286C JUMP JUMPDEST POP SWAP1 POP PUSH0 DUP2 GT PUSH2 0x256A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2577 SWAP1 DUP3 PUSH2 0x48BE JUMP JUMPDEST DUP6 PUSH1 0x4 SLOAD DUP7 PUSH2 0x2586 SWAP2 SWAP1 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x2590 SWAP2 SWAP1 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x259A SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x25DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4D696E7420717479206973203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x25E7 DUP9 DUP3 PUSH2 0x2BA0 JUMP JUMPDEST PUSH2 0x25EF PUSH2 0x2BD4 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP3 PUSH1 0x40 MLOAD PUSH2 0x262A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x268F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26B3 SWAP2 SWAP1 PUSH2 0x49EF JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x26C4 DUP3 PUSH1 0x12 PUSH2 0x49BD JUMP JUMPDEST PUSH2 0x26CF SWAP1 PUSH1 0xA PUSH2 0x4AEF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x26DA PUSH2 0x286C JUMP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x26F3 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x2706 JUMPI PUSH0 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 PUSH2 0x2714 DUP6 DUP6 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x271E SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST PUSH2 0x2728 SWAP2 SWAP1 PUSH2 0x48BE JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2739 PUSH2 0x36C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2762 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x276B DUP2 PUSH2 0x3723 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27C2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27E6 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x2810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x4882 JUMP JUMPDEST PUSH2 0x2818 PUSH2 0x1F1B JUMP JUMPDEST PUSH2 0x285B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x2863 PUSH2 0x37E1 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x60 SWAP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x288A JUMPI PUSH2 0x288A PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x28B3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2992 JUMPI PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x28D3 JUMPI PUSH2 0x28D3 PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x28F6 DUP3 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x2933 JUMPI DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2922 JUMPI PUSH2 0x2922 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2961 JUMP JUMPDEST PUSH0 PUSH2 0x293E DUP4 DUP4 PUSH2 0x37C7 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2953 JUMPI PUSH2 0x2953 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2973 JUMPI PUSH2 0x2973 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x2986 SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP6 POP POP POP PUSH1 0x1 ADD PUSH2 0x28B8 JUMP JUMPDEST POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x29B4 JUMPI PUSH2 0x29B4 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29DD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xCF3 JUMPI PUSH0 PUSH2 0x2710 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2A01 JUMPI PUSH2 0x2A01 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x2A1C SWAP2 SWAP1 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x2A26 SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2A3B JUMPI PUSH2 0x2A3B PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO PUSH2 0x2A8D JUMPI DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A5B JUMPI PUSH2 0x2A5B PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 PUSH2 0x2A6E SWAP2 SWAP1 PUSH2 0x49BD JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2A80 JUMPI PUSH2 0x2A80 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x29E2 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xAC6 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2AB4 JUMPI PUSH2 0x2AB4 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x2AC7 SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2A99 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH0 DUP1 SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x2AF5 JUMPI PUSH2 0x2AF5 PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x2B1A JUMPI POP DUP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH0 PUSH2 0x2B4F PUSH0 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x2B30 JUMPI PUSH2 0x2B30 PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x3E62 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x10EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2BC9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x1365 PUSH0 DUP4 DUP4 PUSH2 0x3E7B JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2BDE PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x85462D6F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C33 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C57 SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH2 0x12C PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x2F8C JUMPI PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2C7C JUMPI PUSH2 0x2C7C PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2CA1 JUMPI PUSH2 0x2CA1 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x2CDA JUMPI DUP4 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2CC1 JUMPI PUSH2 0x2CC1 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x2F84 JUMP JUMPDEST DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2CEC JUMPI PUSH2 0x2CEC PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD ISZERO PUSH2 0x2DCA JUMPI DUP4 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2D0C JUMPI PUSH2 0x2D0C PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2D1E SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2D30 JUMPI PUSH2 0x2D30 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2D4D SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2D67 JUMPI PUSH2 0x2D67 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x2DC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F766572666C6F7720696E6372656D656E74696E6720736C6970706167650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x2F32 JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2DDC JUMPI PUSH2 0x2DDC PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2DF6 JUMPI PUSH2 0x2DF6 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x2ED8 JUMPI DUP4 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2E1F JUMPI PUSH2 0x2E1F PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2E31 SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E43 JUMPI PUSH2 0x2E43 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2E60 SWAP2 SWAP1 PUSH2 0x49BD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E7A JUMPI PUSH2 0x2E7A PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x2DC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E646572666C6F772064656372656D656E74696E6720736C69707061676500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST DUP4 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2EEB JUMPI PUSH2 0x2EEB PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2EFD SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2F0F JUMPI PUSH2 0x2F0F PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2F2C SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP3 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2F45 JUMPI PUSH2 0x2F45 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x2F82 JUMPI DUP3 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2F6E JUMPI PUSH2 0x2F6E PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2C60 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2FA1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3FB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2FAE PUSH2 0x4098 JUMP JUMPDEST PUSH2 0x276B DUP2 PUSH2 0x40E1 JUMP JUMPDEST PUSH2 0x2FBF PUSH2 0x4098 JUMP JUMPDEST PUSH2 0x1365 DUP3 DUP3 PUSH2 0x40E9 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x301B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x303F SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x309B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30BF SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3115 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726562616C616E6365722061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x3171 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3402 JUMPI PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3198 JUMPI PUSH2 0x3198 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x31EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061737365742061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3201 JUMPI PUSH2 0x3201 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x3247 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3265 JUMPI PUSH2 0x3265 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x328D JUMPI PUSH2 0x328D PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE DUP2 DUP4 KECCAK256 DUP5 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP1 DUP4 ADD MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP6 MLOAD DUP7 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x3304 JUMPI PUSH2 0x3304 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x335D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3381 SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST PUSH0 SUB PUSH2 0x33F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH0 NOT PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33D3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33F7 SWAP2 SWAP1 PUSH2 0x49D0 JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x3173 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3418 DUP5 DUP5 PUSH2 0x2255 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x346A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x345C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x346A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x3FB4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3499 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x34C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x2FA1 DUP4 DUP4 DUP4 PUSH2 0x3E7B JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x3553 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3547 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4CBA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x276B PUSH2 0x36C8 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x35D3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x35D0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x4987 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x35FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4CBA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x362B JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x2FA1 DUP4 DUP4 PUSH2 0x4139 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 DUP1 SLOAD PUSH1 0x1 NOT ADD PUSH2 0x36C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x36FA PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x37BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x1365 DUP3 PUSH0 DUP4 PUSH2 0x3E7B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH0 SWAP1 PUSH2 0x10EE SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3835 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3859 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38AC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38D0 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x38EE JUMPI PUSH2 0x38EE PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3917 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3936 JUMPI PUSH2 0x3936 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x395F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x397E JUMPI PUSH2 0x397E PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x39A7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x39C6 JUMPI PUSH2 0x39C6 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x39EF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3A0E JUMPI PUSH2 0x3A0E PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3A37 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3A56 JUMPI PUSH2 0x3A56 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3A7F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x3BDA JUMPI PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3A9F JUMPI PUSH2 0x3A9F PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x3ACF JUMPI PUSH2 0x3ACF PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3B01 JUMPI PUSH2 0x3B01 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3B23 JUMPI PUSH2 0x3B23 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3B41 JUMPI PUSH2 0x3B41 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B91 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BB5 SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3BC7 JUMPI PUSH2 0x3BC7 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3A84 JUMP JUMPDEST POP PUSH0 PUSH2 0x3BE4 PUSH2 0xACC JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF0BF7714 DUP3 DUP10 DUP10 PUSH1 0x1 SLOAD DUP15 DUP16 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C34 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4AFA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C4B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C5D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x3E10 JUMPI DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3C7E JUMPI PUSH2 0x3C7E PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CCE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CF2 SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3D04 JUMPI PUSH2 0x3D04 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3D22 JUMPI PUSH2 0x3D22 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3D3C JUMPI PUSH2 0x3D3C PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x3DAB JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3D5C JUMPI PUSH2 0x3D5C PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3D76 JUMPI PUSH2 0x3D76 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3D88 SWAP2 SWAP1 PUSH2 0x49BD JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3D9A JUMPI PUSH2 0x3D9A PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x3E08 JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3DBD JUMPI PUSH2 0x3DBD PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3DD7 JUMPI PUSH2 0x3DD7 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3DE9 SWAP2 SWAP1 PUSH2 0x49BD JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3DFB JUMPI PUSH2 0x3DFB PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3C63 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP9 PUSH1 0x40 MLOAD PUSH2 0x3E4A SWAP2 SWAP1 PUSH2 0x46C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH0 SWAP1 PUSH2 0x10EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0x1181 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C7A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3EB5 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3EAA SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x3F25 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3F07 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3F43 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x3F61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x3FA6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C7A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x3FEB JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4014 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x4091 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4088 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2739 PUSH2 0x4098 JUMP JUMPDEST PUSH2 0x40F1 PUSH2 0x4098 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C7A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x412A DUP5 DUP3 PUSH2 0x4BA8 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x346A DUP4 DUP3 PUSH2 0x4BA8 JUMP JUMPDEST PUSH2 0x4142 DUP3 PUSH2 0x418E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x4186 JUMPI PUSH2 0x2FA1 DUP3 DUP3 PUSH2 0x41F1 JUMP JUMPDEST PUSH2 0x1365 PUSH2 0x4263 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x41C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4CBA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x420D SWAP2 SWAP1 PUSH2 0x4C63 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x4245 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x424A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x425A DUP6 DUP4 DUP4 PUSH2 0x4282 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1770 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x4297 JUMPI PUSH2 0x4292 DUP3 PUSH2 0x42DE JUMP JUMPDEST PUSH2 0x10EE JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x42AE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x42D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST POP DUP1 PUSH2 0x10EE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x42EE JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x276B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x435B DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4370 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10EE DUP2 PUSH2 0x433C JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43AA JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x438E JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x10EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x437B JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x43E3 DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x442D JUMPI PUSH2 0x442D PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x444D JUMPI PUSH2 0x444D PUSH2 0x43F1 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4466 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x447B PUSH2 0x4476 DUP4 PUSH2 0x4435 JUMP JUMPDEST PUSH2 0x4405 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x449C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x44B8 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x44A1 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x44D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x44EC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x44FF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x450F PUSH2 0x4476 DUP4 PUSH2 0x4435 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP12 DUP5 GT ISZERO PUSH2 0x452D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x4554 JUMPI DUP6 CALLDATALOAD PUSH2 0x4545 DUP2 PUSH2 0x433C JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x4532 JUMP JUMPDEST SWAP9 POP POP DUP9 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x4569 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4576 DUP8 DUP3 DUP9 ADD PUSH2 0x4457 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x458C PUSH1 0x60 DUP7 ADD PUSH2 0x4350 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x45A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x45B4 DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x45C4 DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1731 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x437B JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x45FE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4609 DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4625 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4638 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x464A JUMPI PUSH2 0x464A PUSH2 0x43F1 JUMP JUMPDEST PUSH2 0x465C PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x4405 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4671 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43AA JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x46A1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x10EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x468E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x46EB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x46F6 DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x4706 DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x471D DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4762 JUMPI DUP2 MLOAD ISZERO ISZERO DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4744 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1340 DUP2 DUP7 PUSH2 0x437B JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4787 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x479F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x47AA DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x47BA DUP2 PUSH2 0x433C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x47D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x47E1 DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x47FB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4807 DUP6 DUP3 DUP7 ADD PUSH2 0x4457 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x4823 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x437B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x425A DUP2 DUP6 PUSH2 0x437B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4849 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAC6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4877 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x10EE DUP2 PUSH2 0x433C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x4F6E6C7920506572697068657279 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xBC7 JUMPI PUSH2 0xBC7 PUSH2 0x48AA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x48FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x490F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x491F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x492D PUSH2 0x4476 DUP3 PUSH2 0x4435 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x494B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x4969 JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x4950 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xBC7 JUMPI PUSH2 0xBC7 PUSH2 0x48AA JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4997 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x49B8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xBC7 JUMPI PUSH2 0xBC7 PUSH2 0x48AA JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x10EE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49FF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x10EE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x4A49 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x4A2F JUMPI PUSH2 0x4A2F PUSH2 0x48AA JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x4A3C JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x4A14 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x4A5F JUMPI POP PUSH1 0x1 PUSH2 0xBC7 JUMP JUMPDEST DUP2 PUSH2 0x4A6B JUMPI POP PUSH0 PUSH2 0xBC7 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4A81 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4A8B JUMPI PUSH2 0x4AA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x4A9C JUMPI PUSH2 0x4A9C PUSH2 0x48AA JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xBC7 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x4ACA JUMPI POP DUP2 DUP2 EXP PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4AD4 DUP4 DUP4 PUSH2 0x4A0F JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x4AE7 JUMPI PUSH2 0x4AE7 PUSH2 0x48AA JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10EE DUP4 DUP4 PUSH2 0x4A51 JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH0 PUSH2 0x4B0C PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x437B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4B1E DUP2 DUP11 PUSH2 0x468E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x4B32 DUP2 DUP10 PUSH2 0x437B JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2FA1 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4B89 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4091 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4B95 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4BC1 JUMPI PUSH2 0x4BC1 PUSH2 0x43F1 JUMP JUMPDEST PUSH2 0x4BD5 DUP2 PUSH2 0x4BCF DUP5 SLOAD PUSH2 0x4835 JUMP JUMPDEST DUP5 PUSH2 0x4B64 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4C08 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x4BF1 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2F8C JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C36 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x4C17 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x4C53 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE0052C63247E1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02360894A13B LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA2646970667358221220CC 0xB5 PUSH28 0x5033DE849F166D4CAC28981883D979B4B70E3BD5FAF182B6DC84EFBA 0x2B PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"2058:27583:16:-:0;;;1171:4:2;1128:48;;2058:27583:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ONE_2923":{"entryPoint":null,"id":2923,"parameterSlots":0,"returnSlots":0},"@UPGRADE_INTERFACE_VERSION_472":{"entryPoint":null,"id":472,"parameterSlots":0,"returnSlots":0},"@__ERC20_init_698":{"entryPoint":12215,"id":698,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_726":{"entryPoint":16617,"id":726,"parameterSlots":2,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":12198,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":16609,"id":81,"parameterSlots":1,"returnSlots":0},"@_approve_1130":{"entryPoint":12180,"id":1130,"parameterSlots":3,"returnSlots":0},"@_approve_1198":{"entryPoint":16308,"id":1198,"parameterSlots":4,"returnSlots":0},"@_authorizeUpgrade_3095":{"entryPoint":13681,"id":3095,"parameterSlots":1,"returnSlots":0},"@_burn_1112":{"entryPoint":14227,"id":1112,"parameterSlots":2,"returnSlots":0},"@_calculateAmountsToAdd_5051":{"entryPoint":10648,"id":5051,"parameterSlots":2,"returnSlots":1},"@_calculateLiquidity_5090":{"entryPoint":10961,"id":5090,"parameterSlots":2,"returnSlots":1},"@_calculateTotalAddedLiquidity_4985":{"entryPoint":10902,"id":4985,"parameterSlots":1,"returnSlots":1},"@_checkInitializing_370":{"entryPoint":16536,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_1871":{"entryPoint":16995,"id":1871,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_578":{"entryPoint":13877,"id":578,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":14024,"id":122,"parameterSlots":0,"returnSlots":0},"@_checkProxy_562":{"entryPoint":13517,"id":562,"parameterSlots":0,"returnSlots":0},"@_computeTotalValuation_4724":{"entryPoint":10348,"id":4724,"parameterSlots":0,"returnSlots":2},"@_convertBaseToToken_5107":{"entryPoint":15970,"id":5107,"parameterSlots":2,"returnSlots":1},"@_convertTokenToBase_5124":{"entryPoint":14279,"id":5124,"parameterSlots":2,"returnSlots":1},"@_getERC20Storage_682":{"entryPoint":null,"id":682,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_447":{"entryPoint":null,"id":447,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":null,"id":25,"parameterSlots":0,"returnSlots":1},"@_getReentrancyGuardStorage_1321":{"entryPoint":null,"id":1321,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":null,"id":438,"parameterSlots":0,"returnSlots":1},"@_mint_1079":{"entryPoint":11168,"id":1079,"parameterSlots":2,"returnSlots":0},"@_msgSender_1275":{"entryPoint":null,"id":1275,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1403":{"entryPoint":null,"id":1403,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1387":{"entryPoint":13950,"id":1387,"parameterSlots":0,"returnSlots":0},"@_performRebalanceIfNeeded_4954":{"entryPoint":14305,"id":4954,"parameterSlots":0,"returnSlots":2},"@_revert_2753":{"entryPoint":17118,"id":2753,"parameterSlots":1,"returnSlots":0},"@_setImplementation_1657":{"entryPoint":16782,"id":1657,"parameterSlots":1,"returnSlots":0},"@_spendAllowance_1246":{"entryPoint":13325,"id":1246,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":14115,"id":193,"parameterSlots":1,"returnSlots":0},"@_transfer_954":{"entryPoint":13424,"id":954,"parameterSlots":3,"returnSlots":0},"@_update_1046":{"entryPoint":15995,"id":1046,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCallUUPS_629":{"entryPoint":13689,"id":629,"parameterSlots":2,"returnSlots":0},"@allowance_851":{"entryPoint":8789,"id":851,"parameterSlots":2,"returnSlots":1},"@approve_875":{"entryPoint":2996,"id":875,"parameterSlots":2,"returnSlots":1},"@assetInfos_2919":{"entryPoint":8731,"id":2919,"parameterSlots":0,"returnSlots":0},"@assetLiquidity_4406":{"entryPoint":8614,"id":4406,"parameterSlots":1,"returnSlots":1},"@balanceOf_803":{"entryPoint":5945,"id":803,"parameterSlots":1,"returnSlots":1},"@baseAsset_2925":{"entryPoint":null,"id":2925,"parameterSlots":0,"returnSlots":0},"@burn_4202":{"entryPoint":6441,"id":4202,"parameterSlots":1,"returnSlots":1},"@computeTotalValuation_4427":{"entryPoint":4461,"id":4427,"parameterSlots":0,"returnSlots":2},"@decimals_767":{"entryPoint":null,"id":767,"parameterSlots":0,"returnSlots":1},"@functionDelegateCall_2673":{"entryPoint":16881,"id":2673,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_2816":{"entryPoint":null,"id":2816,"parameterSlots":1,"returnSlots":1},"@getAmountOutWithSlippage_3553":{"entryPoint":8147,"id":3553,"parameterSlots":3,"returnSlots":1},"@getAmountOut_4247":{"entryPoint":4481,"id":4247,"parameterSlots":3,"returnSlots":1},"@getAssetReserve_4543":{"entryPoint":8382,"id":4543,"parameterSlots":1,"returnSlots":1},"@getAssets_4587":{"entryPoint":4996,"id":4587,"parameterSlots":0,"returnSlots":1},"@getDeviationForToken_3819":{"entryPoint":7829,"id":3819,"parameterSlots":1,"returnSlots":1},"@getDeviation_4377":{"entryPoint":6002,"id":4377,"parameterSlots":0,"returnSlots":2},"@getImplementation_1630":{"entryPoint":null,"id":1630,"parameterSlots":0,"returnSlots":1},"@getReserves_4517":{"entryPoint":2764,"id":4517,"parameterSlots":0,"returnSlots":1},"@getSlippage_3590":{"entryPoint":3021,"id":3590,"parameterSlots":1,"returnSlots":1},"@getSlippages_3862":{"entryPoint":3149,"id":3862,"parameterSlots":0,"returnSlots":1},"@getTokenWeight_3776":{"entryPoint":4341,"id":3776,"parameterSlots":1,"returnSlots":1},"@getWeights_4631":{"entryPoint":4148,"id":4631,"parameterSlots":0,"returnSlots":1},"@initializeAssets_3241":{"entryPoint":12233,"id":3241,"parameterSlots":2,"returnSlots":1},"@initialize_3086":{"entryPoint":3322,"id":3086,"parameterSlots":4,"returnSlots":0},"@isRebalanceNeeded_5170":{"entryPoint":7963,"id":5170,"parameterSlots":0,"returnSlots":1},"@liquidity_4441":{"entryPoint":3305,"id":4441,"parameterSlots":0,"returnSlots":1},"@mint_4029":{"entryPoint":8862,"id":4029,"parameterSlots":2,"returnSlots":1},"@name_742":{"entryPoint":1985,"id":742,"parameterSlots":0,"returnSlots":1},"@owner_105":{"entryPoint":null,"id":105,"parameterSlots":0,"returnSlots":1},"@performRebalanceIfNeeded_4269":{"entryPoint":10094,"id":4269,"parameterSlots":0,"returnSlots":2},"@proxiableUUID_520":{"entryPoint":4969,"id":520,"parameterSlots":0,"returnSlots":1},"@rebalanceWeights_3346":{"entryPoint":2177,"id":3346,"parameterSlots":1,"returnSlots":1},"@registry_2930":{"entryPoint":null,"id":2930,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_136":{"entryPoint":5983,"id":136,"parameterSlots":0,"returnSlots":0},"@reserves_2934":{"entryPoint":null,"id":2934,"parameterSlots":0,"returnSlots":0},"@swap_3447":{"entryPoint":5179,"id":3447,"parameterSlots":4,"returnSlots":1},"@symbol_758":{"entryPoint":8085,"id":758,"parameterSlots":0,"returnSlots":1},"@totalSupply_783":{"entryPoint":null,"id":783,"parameterSlots":0,"returnSlots":1},"@transferFrom_907":{"entryPoint":4304,"id":907,"parameterSlots":3,"returnSlots":1},"@transferOwnership_164":{"entryPoint":10033,"id":164,"parameterSlots":1,"returnSlots":0},"@transfer_827":{"entryPoint":8369,"id":827,"parameterSlots":2,"returnSlots":1},"@trigger_2921":{"entryPoint":null,"id":2921,"parameterSlots":0,"returnSlots":0},"@unitPrice_4493":{"entryPoint":9789,"id":4493,"parameterSlots":0,"returnSlots":1},"@updateSlippage_3740":{"entryPoint":11220,"id":3740,"parameterSlots":0,"returnSlots":0},"@upgradeToAndCall_1691":{"entryPoint":16697,"id":1691,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_540":{"entryPoint":4938,"id":540,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_2713":{"entryPoint":17026,"id":2713,"parameterSlots":3,"returnSlots":1},"abi_decode_address":{"entryPoint":17232,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":17495,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":17248,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":18535,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":18318,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":17815,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_address":{"entryPoint":18136,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":18373,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":17901,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":17351,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_address":{"entryPoint":17603,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":18665,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":18896,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":18295,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":18823,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":18927,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":18062,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":17275,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19555,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":18118,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":18216,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":17333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":19194,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":18449,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IBaluniV1Registry_$6110__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17159,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_391a75680d8ec99739af126cde56833526e4b720a416f24f1d7ee98c294a45b1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7fe042c7e90969a67f580740cd6d07f084ba832097aca9eaaa282ad95462461f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9500bef01f061c69a5831abd395429bc0d4bf975a9340af0622098e5d0422cc6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b3262886d4e83856703b764357b6a852eb26ef34a7982063b49217460e097ddc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18562,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":17877,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":17413,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":17461,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":18804,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":18846,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":18959,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":19183,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":19025,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":18622,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":18877,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":19300,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":19368,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":18485,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":18602,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":18645,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":17393,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":17212,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:30943:23","nodeType":"YulBlock","src":"0:30943:23","statements":[{"nativeSrc":"6:3:23","nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nativeSrc":"135:297:23","nodeType":"YulBlock","src":"135:297:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"152:9:23","nodeType":"YulIdentifier","src":"152:9:23"},{"kind":"number","nativeSrc":"163:2:23","nodeType":"YulLiteral","src":"163:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"145:6:23","nodeType":"YulIdentifier","src":"145:6:23"},"nativeSrc":"145:21:23","nodeType":"YulFunctionCall","src":"145:21:23"},"nativeSrc":"145:21:23","nodeType":"YulExpressionStatement","src":"145:21:23"},{"nativeSrc":"175:27:23","nodeType":"YulVariableDeclaration","src":"175:27:23","value":{"arguments":[{"name":"value0","nativeSrc":"195:6:23","nodeType":"YulIdentifier","src":"195:6:23"}],"functionName":{"name":"mload","nativeSrc":"189:5:23","nodeType":"YulIdentifier","src":"189:5:23"},"nativeSrc":"189:13:23","nodeType":"YulFunctionCall","src":"189:13:23"},"variables":[{"name":"length","nativeSrc":"179:6:23","nodeType":"YulTypedName","src":"179:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"222:9:23","nodeType":"YulIdentifier","src":"222:9:23"},{"kind":"number","nativeSrc":"233:2:23","nodeType":"YulLiteral","src":"233:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"218:3:23","nodeType":"YulIdentifier","src":"218:3:23"},"nativeSrc":"218:18:23","nodeType":"YulFunctionCall","src":"218:18:23"},{"name":"length","nativeSrc":"238:6:23","nodeType":"YulIdentifier","src":"238:6:23"}],"functionName":{"name":"mstore","nativeSrc":"211:6:23","nodeType":"YulIdentifier","src":"211:6:23"},"nativeSrc":"211:34:23","nodeType":"YulFunctionCall","src":"211:34:23"},"nativeSrc":"211:34:23","nodeType":"YulExpressionStatement","src":"211:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"264:9:23","nodeType":"YulIdentifier","src":"264:9:23"},{"kind":"number","nativeSrc":"275:2:23","nodeType":"YulLiteral","src":"275:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"260:3:23","nodeType":"YulIdentifier","src":"260:3:23"},"nativeSrc":"260:18:23","nodeType":"YulFunctionCall","src":"260:18:23"},{"arguments":[{"name":"value0","nativeSrc":"284:6:23","nodeType":"YulIdentifier","src":"284:6:23"},{"kind":"number","nativeSrc":"292:2:23","nodeType":"YulLiteral","src":"292:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"280:3:23","nodeType":"YulIdentifier","src":"280:3:23"},"nativeSrc":"280:15:23","nodeType":"YulFunctionCall","src":"280:15:23"},{"name":"length","nativeSrc":"297:6:23","nodeType":"YulIdentifier","src":"297:6:23"}],"functionName":{"name":"mcopy","nativeSrc":"254:5:23","nodeType":"YulIdentifier","src":"254:5:23"},"nativeSrc":"254:50:23","nodeType":"YulFunctionCall","src":"254:50:23"},"nativeSrc":"254:50:23","nodeType":"YulExpressionStatement","src":"254:50:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"328:9:23","nodeType":"YulIdentifier","src":"328:9:23"},{"name":"length","nativeSrc":"339:6:23","nodeType":"YulIdentifier","src":"339:6:23"}],"functionName":{"name":"add","nativeSrc":"324:3:23","nodeType":"YulIdentifier","src":"324:3:23"},"nativeSrc":"324:22:23","nodeType":"YulFunctionCall","src":"324:22:23"},{"kind":"number","nativeSrc":"348:2:23","nodeType":"YulLiteral","src":"348:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"320:3:23","nodeType":"YulIdentifier","src":"320:3:23"},"nativeSrc":"320:31:23","nodeType":"YulFunctionCall","src":"320:31:23"},{"kind":"number","nativeSrc":"353:1:23","nodeType":"YulLiteral","src":"353:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"313:6:23","nodeType":"YulIdentifier","src":"313:6:23"},"nativeSrc":"313:42:23","nodeType":"YulFunctionCall","src":"313:42:23"},"nativeSrc":"313:42:23","nodeType":"YulExpressionStatement","src":"313:42:23"},{"nativeSrc":"364:62:23","nodeType":"YulAssignment","src":"364:62:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"380:9:23","nodeType":"YulIdentifier","src":"380:9:23"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"399:6:23","nodeType":"YulIdentifier","src":"399:6:23"},{"kind":"number","nativeSrc":"407:2:23","nodeType":"YulLiteral","src":"407:2:23","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"395:3:23","nodeType":"YulIdentifier","src":"395:3:23"},"nativeSrc":"395:15:23","nodeType":"YulFunctionCall","src":"395:15:23"},{"arguments":[{"kind":"number","nativeSrc":"416:2:23","nodeType":"YulLiteral","src":"416:2:23","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"412:3:23","nodeType":"YulIdentifier","src":"412:3:23"},"nativeSrc":"412:7:23","nodeType":"YulFunctionCall","src":"412:7:23"}],"functionName":{"name":"and","nativeSrc":"391:3:23","nodeType":"YulIdentifier","src":"391:3:23"},"nativeSrc":"391:29:23","nodeType":"YulFunctionCall","src":"391:29:23"}],"functionName":{"name":"add","nativeSrc":"376:3:23","nodeType":"YulIdentifier","src":"376:3:23"},"nativeSrc":"376:45:23","nodeType":"YulFunctionCall","src":"376:45:23"},{"kind":"number","nativeSrc":"423:2:23","nodeType":"YulLiteral","src":"423:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"372:3:23","nodeType":"YulIdentifier","src":"372:3:23"},"nativeSrc":"372:54:23","nodeType":"YulFunctionCall","src":"372:54:23"},"variableNames":[{"name":"tail","nativeSrc":"364:4:23","nodeType":"YulIdentifier","src":"364:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14:418:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"104:9:23","nodeType":"YulTypedName","src":"104:9:23","type":""},{"name":"value0","nativeSrc":"115:6:23","nodeType":"YulTypedName","src":"115:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"126:4:23","nodeType":"YulTypedName","src":"126:4:23","type":""}],"src":"14:418:23"},{"body":{"nativeSrc":"482:86:23","nodeType":"YulBlock","src":"482:86:23","statements":[{"body":{"nativeSrc":"546:16:23","nodeType":"YulBlock","src":"546:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"555:1:23","nodeType":"YulLiteral","src":"555:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"558:1:23","nodeType":"YulLiteral","src":"558:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"548:6:23","nodeType":"YulIdentifier","src":"548:6:23"},"nativeSrc":"548:12:23","nodeType":"YulFunctionCall","src":"548:12:23"},"nativeSrc":"548:12:23","nodeType":"YulExpressionStatement","src":"548:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"505:5:23","nodeType":"YulIdentifier","src":"505:5:23"},{"arguments":[{"name":"value","nativeSrc":"516:5:23","nodeType":"YulIdentifier","src":"516:5:23"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"531:3:23","nodeType":"YulLiteral","src":"531:3:23","type":"","value":"160"},{"kind":"number","nativeSrc":"536:1:23","nodeType":"YulLiteral","src":"536:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"527:3:23","nodeType":"YulIdentifier","src":"527:3:23"},"nativeSrc":"527:11:23","nodeType":"YulFunctionCall","src":"527:11:23"},{"kind":"number","nativeSrc":"540:1:23","nodeType":"YulLiteral","src":"540:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"523:3:23","nodeType":"YulIdentifier","src":"523:3:23"},"nativeSrc":"523:19:23","nodeType":"YulFunctionCall","src":"523:19:23"}],"functionName":{"name":"and","nativeSrc":"512:3:23","nodeType":"YulIdentifier","src":"512:3:23"},"nativeSrc":"512:31:23","nodeType":"YulFunctionCall","src":"512:31:23"}],"functionName":{"name":"eq","nativeSrc":"502:2:23","nodeType":"YulIdentifier","src":"502:2:23"},"nativeSrc":"502:42:23","nodeType":"YulFunctionCall","src":"502:42:23"}],"functionName":{"name":"iszero","nativeSrc":"495:6:23","nodeType":"YulIdentifier","src":"495:6:23"},"nativeSrc":"495:50:23","nodeType":"YulFunctionCall","src":"495:50:23"},"nativeSrc":"492:70:23","nodeType":"YulIf","src":"492:70:23"}]},"name":"validator_revert_address","nativeSrc":"437:131:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"471:5:23","nodeType":"YulTypedName","src":"471:5:23","type":""}],"src":"437:131:23"},{"body":{"nativeSrc":"622:85:23","nodeType":"YulBlock","src":"622:85:23","statements":[{"nativeSrc":"632:29:23","nodeType":"YulAssignment","src":"632:29:23","value":{"arguments":[{"name":"offset","nativeSrc":"654:6:23","nodeType":"YulIdentifier","src":"654:6:23"}],"functionName":{"name":"calldataload","nativeSrc":"641:12:23","nodeType":"YulIdentifier","src":"641:12:23"},"nativeSrc":"641:20:23","nodeType":"YulFunctionCall","src":"641:20:23"},"variableNames":[{"name":"value","nativeSrc":"632:5:23","nodeType":"YulIdentifier","src":"632:5:23"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"695:5:23","nodeType":"YulIdentifier","src":"695:5:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"670:24:23","nodeType":"YulIdentifier","src":"670:24:23"},"nativeSrc":"670:31:23","nodeType":"YulFunctionCall","src":"670:31:23"},"nativeSrc":"670:31:23","nodeType":"YulExpressionStatement","src":"670:31:23"}]},"name":"abi_decode_address","nativeSrc":"573:134:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"601:6:23","nodeType":"YulTypedName","src":"601:6:23","type":""}],"returnVariables":[{"name":"value","nativeSrc":"612:5:23","nodeType":"YulTypedName","src":"612:5:23","type":""}],"src":"573:134:23"},{"body":{"nativeSrc":"782:177:23","nodeType":"YulBlock","src":"782:177:23","statements":[{"body":{"nativeSrc":"828:16:23","nodeType":"YulBlock","src":"828:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"837:1:23","nodeType":"YulLiteral","src":"837:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"840:1:23","nodeType":"YulLiteral","src":"840:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"830:6:23","nodeType":"YulIdentifier","src":"830:6:23"},"nativeSrc":"830:12:23","nodeType":"YulFunctionCall","src":"830:12:23"},"nativeSrc":"830:12:23","nodeType":"YulExpressionStatement","src":"830:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"803:7:23","nodeType":"YulIdentifier","src":"803:7:23"},{"name":"headStart","nativeSrc":"812:9:23","nodeType":"YulIdentifier","src":"812:9:23"}],"functionName":{"name":"sub","nativeSrc":"799:3:23","nodeType":"YulIdentifier","src":"799:3:23"},"nativeSrc":"799:23:23","nodeType":"YulFunctionCall","src":"799:23:23"},{"kind":"number","nativeSrc":"824:2:23","nodeType":"YulLiteral","src":"824:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"795:3:23","nodeType":"YulIdentifier","src":"795:3:23"},"nativeSrc":"795:32:23","nodeType":"YulFunctionCall","src":"795:32:23"},"nativeSrc":"792:52:23","nodeType":"YulIf","src":"792:52:23"},{"nativeSrc":"853:36:23","nodeType":"YulVariableDeclaration","src":"853:36:23","value":{"arguments":[{"name":"headStart","nativeSrc":"879:9:23","nodeType":"YulIdentifier","src":"879:9:23"}],"functionName":{"name":"calldataload","nativeSrc":"866:12:23","nodeType":"YulIdentifier","src":"866:12:23"},"nativeSrc":"866:23:23","nodeType":"YulFunctionCall","src":"866:23:23"},"variables":[{"name":"value","nativeSrc":"857:5:23","nodeType":"YulTypedName","src":"857:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"923:5:23","nodeType":"YulIdentifier","src":"923:5:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"898:24:23","nodeType":"YulIdentifier","src":"898:24:23"},"nativeSrc":"898:31:23","nodeType":"YulFunctionCall","src":"898:31:23"},"nativeSrc":"898:31:23","nodeType":"YulExpressionStatement","src":"898:31:23"},{"nativeSrc":"938:15:23","nodeType":"YulAssignment","src":"938:15:23","value":{"name":"value","nativeSrc":"948:5:23","nodeType":"YulIdentifier","src":"948:5:23"},"variableNames":[{"name":"value0","nativeSrc":"938:6:23","nodeType":"YulIdentifier","src":"938:6:23"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"712:247:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"748:9:23","nodeType":"YulTypedName","src":"748:9:23","type":""},{"name":"dataEnd","nativeSrc":"759:7:23","nodeType":"YulTypedName","src":"759:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"771:6:23","nodeType":"YulTypedName","src":"771:6:23","type":""}],"src":"712:247:23"},{"body":{"nativeSrc":"1025:378:23","nodeType":"YulBlock","src":"1025:378:23","statements":[{"nativeSrc":"1035:26:23","nodeType":"YulVariableDeclaration","src":"1035:26:23","value":{"arguments":[{"name":"value","nativeSrc":"1055:5:23","nodeType":"YulIdentifier","src":"1055:5:23"}],"functionName":{"name":"mload","nativeSrc":"1049:5:23","nodeType":"YulIdentifier","src":"1049:5:23"},"nativeSrc":"1049:12:23","nodeType":"YulFunctionCall","src":"1049:12:23"},"variables":[{"name":"length","nativeSrc":"1039:6:23","nodeType":"YulTypedName","src":"1039:6:23","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"1077:3:23","nodeType":"YulIdentifier","src":"1077:3:23"},{"name":"length","nativeSrc":"1082:6:23","nodeType":"YulIdentifier","src":"1082:6:23"}],"functionName":{"name":"mstore","nativeSrc":"1070:6:23","nodeType":"YulIdentifier","src":"1070:6:23"},"nativeSrc":"1070:19:23","nodeType":"YulFunctionCall","src":"1070:19:23"},"nativeSrc":"1070:19:23","nodeType":"YulExpressionStatement","src":"1070:19:23"},{"nativeSrc":"1098:14:23","nodeType":"YulVariableDeclaration","src":"1098:14:23","value":{"kind":"number","nativeSrc":"1108:4:23","nodeType":"YulLiteral","src":"1108:4:23","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"1102:2:23","nodeType":"YulTypedName","src":"1102:2:23","type":""}]},{"nativeSrc":"1121:21:23","nodeType":"YulAssignment","src":"1121:21:23","value":{"arguments":[{"name":"pos","nativeSrc":"1132:3:23","nodeType":"YulIdentifier","src":"1132:3:23"},{"kind":"number","nativeSrc":"1137:4:23","nodeType":"YulLiteral","src":"1137:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1128:3:23","nodeType":"YulIdentifier","src":"1128:3:23"},"nativeSrc":"1128:14:23","nodeType":"YulFunctionCall","src":"1128:14:23"},"variableNames":[{"name":"pos","nativeSrc":"1121:3:23","nodeType":"YulIdentifier","src":"1121:3:23"}]},{"nativeSrc":"1151:30:23","nodeType":"YulVariableDeclaration","src":"1151:30:23","value":{"arguments":[{"name":"value","nativeSrc":"1169:5:23","nodeType":"YulIdentifier","src":"1169:5:23"},{"kind":"number","nativeSrc":"1176:4:23","nodeType":"YulLiteral","src":"1176:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1165:3:23","nodeType":"YulIdentifier","src":"1165:3:23"},"nativeSrc":"1165:16:23","nodeType":"YulFunctionCall","src":"1165:16:23"},"variables":[{"name":"srcPtr","nativeSrc":"1155:6:23","nodeType":"YulTypedName","src":"1155:6:23","type":""}]},{"nativeSrc":"1190:10:23","nodeType":"YulVariableDeclaration","src":"1190:10:23","value":{"kind":"number","nativeSrc":"1199:1:23","nodeType":"YulLiteral","src":"1199:1:23","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1194:1:23","nodeType":"YulTypedName","src":"1194:1:23","type":""}]},{"body":{"nativeSrc":"1258:120:23","nodeType":"YulBlock","src":"1258:120:23","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1279:3:23","nodeType":"YulIdentifier","src":"1279:3:23"},{"arguments":[{"name":"srcPtr","nativeSrc":"1290:6:23","nodeType":"YulIdentifier","src":"1290:6:23"}],"functionName":{"name":"mload","nativeSrc":"1284:5:23","nodeType":"YulIdentifier","src":"1284:5:23"},"nativeSrc":"1284:13:23","nodeType":"YulFunctionCall","src":"1284:13:23"}],"functionName":{"name":"mstore","nativeSrc":"1272:6:23","nodeType":"YulIdentifier","src":"1272:6:23"},"nativeSrc":"1272:26:23","nodeType":"YulFunctionCall","src":"1272:26:23"},"nativeSrc":"1272:26:23","nodeType":"YulExpressionStatement","src":"1272:26:23"},{"nativeSrc":"1311:19:23","nodeType":"YulAssignment","src":"1311:19:23","value":{"arguments":[{"name":"pos","nativeSrc":"1322:3:23","nodeType":"YulIdentifier","src":"1322:3:23"},{"name":"_1","nativeSrc":"1327:2:23","nodeType":"YulIdentifier","src":"1327:2:23"}],"functionName":{"name":"add","nativeSrc":"1318:3:23","nodeType":"YulIdentifier","src":"1318:3:23"},"nativeSrc":"1318:12:23","nodeType":"YulFunctionCall","src":"1318:12:23"},"variableNames":[{"name":"pos","nativeSrc":"1311:3:23","nodeType":"YulIdentifier","src":"1311:3:23"}]},{"nativeSrc":"1343:25:23","nodeType":"YulAssignment","src":"1343:25:23","value":{"arguments":[{"name":"srcPtr","nativeSrc":"1357:6:23","nodeType":"YulIdentifier","src":"1357:6:23"},{"name":"_1","nativeSrc":"1365:2:23","nodeType":"YulIdentifier","src":"1365:2:23"}],"functionName":{"name":"add","nativeSrc":"1353:3:23","nodeType":"YulIdentifier","src":"1353:3:23"},"nativeSrc":"1353:15:23","nodeType":"YulFunctionCall","src":"1353:15:23"},"variableNames":[{"name":"srcPtr","nativeSrc":"1343:6:23","nodeType":"YulIdentifier","src":"1343:6:23"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1220:1:23","nodeType":"YulIdentifier","src":"1220:1:23"},{"name":"length","nativeSrc":"1223:6:23","nodeType":"YulIdentifier","src":"1223:6:23"}],"functionName":{"name":"lt","nativeSrc":"1217:2:23","nodeType":"YulIdentifier","src":"1217:2:23"},"nativeSrc":"1217:13:23","nodeType":"YulFunctionCall","src":"1217:13:23"},"nativeSrc":"1209:169:23","nodeType":"YulForLoop","post":{"nativeSrc":"1231:18:23","nodeType":"YulBlock","src":"1231:18:23","statements":[{"nativeSrc":"1233:14:23","nodeType":"YulAssignment","src":"1233:14:23","value":{"arguments":[{"name":"i","nativeSrc":"1242:1:23","nodeType":"YulIdentifier","src":"1242:1:23"},{"kind":"number","nativeSrc":"1245:1:23","nodeType":"YulLiteral","src":"1245:1:23","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1238:3:23","nodeType":"YulIdentifier","src":"1238:3:23"},"nativeSrc":"1238:9:23","nodeType":"YulFunctionCall","src":"1238:9:23"},"variableNames":[{"name":"i","nativeSrc":"1233:1:23","nodeType":"YulIdentifier","src":"1233:1:23"}]}]},"pre":{"nativeSrc":"1213:3:23","nodeType":"YulBlock","src":"1213:3:23","statements":[]},"src":"1209:169:23"},{"nativeSrc":"1387:10:23","nodeType":"YulAssignment","src":"1387:10:23","value":{"name":"pos","nativeSrc":"1394:3:23","nodeType":"YulIdentifier","src":"1394:3:23"},"variableNames":[{"name":"end","nativeSrc":"1387:3:23","nodeType":"YulIdentifier","src":"1387:3:23"}]}]},"name":"abi_encode_array_uint256_dyn","nativeSrc":"964:439:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1002:5:23","nodeType":"YulTypedName","src":"1002:5:23","type":""},{"name":"pos","nativeSrc":"1009:3:23","nodeType":"YulTypedName","src":"1009:3:23","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1017:3:23","nodeType":"YulTypedName","src":"1017:3:23","type":""}],"src":"964:439:23"},{"body":{"nativeSrc":"1559:110:23","nodeType":"YulBlock","src":"1559:110:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1576:9:23","nodeType":"YulIdentifier","src":"1576:9:23"},{"kind":"number","nativeSrc":"1587:2:23","nodeType":"YulLiteral","src":"1587:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1569:6:23","nodeType":"YulIdentifier","src":"1569:6:23"},"nativeSrc":"1569:21:23","nodeType":"YulFunctionCall","src":"1569:21:23"},"nativeSrc":"1569:21:23","nodeType":"YulExpressionStatement","src":"1569:21:23"},{"nativeSrc":"1599:64:23","nodeType":"YulAssignment","src":"1599:64:23","value":{"arguments":[{"name":"value0","nativeSrc":"1636:6:23","nodeType":"YulIdentifier","src":"1636:6:23"},{"arguments":[{"name":"headStart","nativeSrc":"1648:9:23","nodeType":"YulIdentifier","src":"1648:9:23"},{"kind":"number","nativeSrc":"1659:2:23","nodeType":"YulLiteral","src":"1659:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1644:3:23","nodeType":"YulIdentifier","src":"1644:3:23"},"nativeSrc":"1644:18:23","nodeType":"YulFunctionCall","src":"1644:18:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"1607:28:23","nodeType":"YulIdentifier","src":"1607:28:23"},"nativeSrc":"1607:56:23","nodeType":"YulFunctionCall","src":"1607:56:23"},"variableNames":[{"name":"tail","nativeSrc":"1599:4:23","nodeType":"YulIdentifier","src":"1599:4:23"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"1408:261:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1528:9:23","nodeType":"YulTypedName","src":"1528:9:23","type":""},{"name":"value0","nativeSrc":"1539:6:23","nodeType":"YulTypedName","src":"1539:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1550:4:23","nodeType":"YulTypedName","src":"1550:4:23","type":""}],"src":"1408:261:23"},{"body":{"nativeSrc":"1761:228:23","nodeType":"YulBlock","src":"1761:228:23","statements":[{"body":{"nativeSrc":"1807:16:23","nodeType":"YulBlock","src":"1807:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1816:1:23","nodeType":"YulLiteral","src":"1816:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"1819:1:23","nodeType":"YulLiteral","src":"1819:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1809:6:23","nodeType":"YulIdentifier","src":"1809:6:23"},"nativeSrc":"1809:12:23","nodeType":"YulFunctionCall","src":"1809:12:23"},"nativeSrc":"1809:12:23","nodeType":"YulExpressionStatement","src":"1809:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1782:7:23","nodeType":"YulIdentifier","src":"1782:7:23"},{"name":"headStart","nativeSrc":"1791:9:23","nodeType":"YulIdentifier","src":"1791:9:23"}],"functionName":{"name":"sub","nativeSrc":"1778:3:23","nodeType":"YulIdentifier","src":"1778:3:23"},"nativeSrc":"1778:23:23","nodeType":"YulFunctionCall","src":"1778:23:23"},{"kind":"number","nativeSrc":"1803:2:23","nodeType":"YulLiteral","src":"1803:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1774:3:23","nodeType":"YulIdentifier","src":"1774:3:23"},"nativeSrc":"1774:32:23","nodeType":"YulFunctionCall","src":"1774:32:23"},"nativeSrc":"1771:52:23","nodeType":"YulIf","src":"1771:52:23"},{"nativeSrc":"1832:36:23","nodeType":"YulVariableDeclaration","src":"1832:36:23","value":{"arguments":[{"name":"headStart","nativeSrc":"1858:9:23","nodeType":"YulIdentifier","src":"1858:9:23"}],"functionName":{"name":"calldataload","nativeSrc":"1845:12:23","nodeType":"YulIdentifier","src":"1845:12:23"},"nativeSrc":"1845:23:23","nodeType":"YulFunctionCall","src":"1845:23:23"},"variables":[{"name":"value","nativeSrc":"1836:5:23","nodeType":"YulTypedName","src":"1836:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1902:5:23","nodeType":"YulIdentifier","src":"1902:5:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"1877:24:23","nodeType":"YulIdentifier","src":"1877:24:23"},"nativeSrc":"1877:31:23","nodeType":"YulFunctionCall","src":"1877:31:23"},"nativeSrc":"1877:31:23","nodeType":"YulExpressionStatement","src":"1877:31:23"},{"nativeSrc":"1917:15:23","nodeType":"YulAssignment","src":"1917:15:23","value":{"name":"value","nativeSrc":"1927:5:23","nodeType":"YulIdentifier","src":"1927:5:23"},"variableNames":[{"name":"value0","nativeSrc":"1917:6:23","nodeType":"YulIdentifier","src":"1917:6:23"}]},{"nativeSrc":"1941:42:23","nodeType":"YulAssignment","src":"1941:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1968:9:23","nodeType":"YulIdentifier","src":"1968:9:23"},{"kind":"number","nativeSrc":"1979:2:23","nodeType":"YulLiteral","src":"1979:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1964:3:23","nodeType":"YulIdentifier","src":"1964:3:23"},"nativeSrc":"1964:18:23","nodeType":"YulFunctionCall","src":"1964:18:23"}],"functionName":{"name":"calldataload","nativeSrc":"1951:12:23","nodeType":"YulIdentifier","src":"1951:12:23"},"nativeSrc":"1951:32:23","nodeType":"YulFunctionCall","src":"1951:32:23"},"variableNames":[{"name":"value1","nativeSrc":"1941:6:23","nodeType":"YulIdentifier","src":"1941:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1674:315:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1719:9:23","nodeType":"YulTypedName","src":"1719:9:23","type":""},{"name":"dataEnd","nativeSrc":"1730:7:23","nodeType":"YulTypedName","src":"1730:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1742:6:23","nodeType":"YulTypedName","src":"1742:6:23","type":""},{"name":"value1","nativeSrc":"1750:6:23","nodeType":"YulTypedName","src":"1750:6:23","type":""}],"src":"1674:315:23"},{"body":{"nativeSrc":"2089:92:23","nodeType":"YulBlock","src":"2089:92:23","statements":[{"nativeSrc":"2099:26:23","nodeType":"YulAssignment","src":"2099:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"2111:9:23","nodeType":"YulIdentifier","src":"2111:9:23"},{"kind":"number","nativeSrc":"2122:2:23","nodeType":"YulLiteral","src":"2122:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2107:3:23","nodeType":"YulIdentifier","src":"2107:3:23"},"nativeSrc":"2107:18:23","nodeType":"YulFunctionCall","src":"2107:18:23"},"variableNames":[{"name":"tail","nativeSrc":"2099:4:23","nodeType":"YulIdentifier","src":"2099:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2141:9:23","nodeType":"YulIdentifier","src":"2141:9:23"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"2166:6:23","nodeType":"YulIdentifier","src":"2166:6:23"}],"functionName":{"name":"iszero","nativeSrc":"2159:6:23","nodeType":"YulIdentifier","src":"2159:6:23"},"nativeSrc":"2159:14:23","nodeType":"YulFunctionCall","src":"2159:14:23"}],"functionName":{"name":"iszero","nativeSrc":"2152:6:23","nodeType":"YulIdentifier","src":"2152:6:23"},"nativeSrc":"2152:22:23","nodeType":"YulFunctionCall","src":"2152:22:23"}],"functionName":{"name":"mstore","nativeSrc":"2134:6:23","nodeType":"YulIdentifier","src":"2134:6:23"},"nativeSrc":"2134:41:23","nodeType":"YulFunctionCall","src":"2134:41:23"},"nativeSrc":"2134:41:23","nodeType":"YulExpressionStatement","src":"2134:41:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1994:187:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2058:9:23","nodeType":"YulTypedName","src":"2058:9:23","type":""},{"name":"value0","nativeSrc":"2069:6:23","nodeType":"YulTypedName","src":"2069:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2080:4:23","nodeType":"YulTypedName","src":"2080:4:23","type":""}],"src":"1994:187:23"},{"body":{"nativeSrc":"2287:76:23","nodeType":"YulBlock","src":"2287:76:23","statements":[{"nativeSrc":"2297:26:23","nodeType":"YulAssignment","src":"2297:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"2309:9:23","nodeType":"YulIdentifier","src":"2309:9:23"},{"kind":"number","nativeSrc":"2320:2:23","nodeType":"YulLiteral","src":"2320:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2305:3:23","nodeType":"YulIdentifier","src":"2305:3:23"},"nativeSrc":"2305:18:23","nodeType":"YulFunctionCall","src":"2305:18:23"},"variableNames":[{"name":"tail","nativeSrc":"2297:4:23","nodeType":"YulIdentifier","src":"2297:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2339:9:23","nodeType":"YulIdentifier","src":"2339:9:23"},{"name":"value0","nativeSrc":"2350:6:23","nodeType":"YulIdentifier","src":"2350:6:23"}],"functionName":{"name":"mstore","nativeSrc":"2332:6:23","nodeType":"YulIdentifier","src":"2332:6:23"},"nativeSrc":"2332:25:23","nodeType":"YulFunctionCall","src":"2332:25:23"},"nativeSrc":"2332:25:23","nodeType":"YulExpressionStatement","src":"2332:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"2186:177:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2256:9:23","nodeType":"YulTypedName","src":"2256:9:23","type":""},{"name":"value0","nativeSrc":"2267:6:23","nodeType":"YulTypedName","src":"2267:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2278:4:23","nodeType":"YulTypedName","src":"2278:4:23","type":""}],"src":"2186:177:23"},{"body":{"nativeSrc":"2400:95:23","nodeType":"YulBlock","src":"2400:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2417:1:23","nodeType":"YulLiteral","src":"2417:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2424:3:23","nodeType":"YulLiteral","src":"2424:3:23","type":"","value":"224"},{"kind":"number","nativeSrc":"2429:10:23","nodeType":"YulLiteral","src":"2429:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2420:3:23","nodeType":"YulIdentifier","src":"2420:3:23"},"nativeSrc":"2420:20:23","nodeType":"YulFunctionCall","src":"2420:20:23"}],"functionName":{"name":"mstore","nativeSrc":"2410:6:23","nodeType":"YulIdentifier","src":"2410:6:23"},"nativeSrc":"2410:31:23","nodeType":"YulFunctionCall","src":"2410:31:23"},"nativeSrc":"2410:31:23","nodeType":"YulExpressionStatement","src":"2410:31:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2457:1:23","nodeType":"YulLiteral","src":"2457:1:23","type":"","value":"4"},{"kind":"number","nativeSrc":"2460:4:23","nodeType":"YulLiteral","src":"2460:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2450:6:23","nodeType":"YulIdentifier","src":"2450:6:23"},"nativeSrc":"2450:15:23","nodeType":"YulFunctionCall","src":"2450:15:23"},"nativeSrc":"2450:15:23","nodeType":"YulExpressionStatement","src":"2450:15:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2481:1:23","nodeType":"YulLiteral","src":"2481:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"2484:4:23","nodeType":"YulLiteral","src":"2484:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2474:6:23","nodeType":"YulIdentifier","src":"2474:6:23"},"nativeSrc":"2474:15:23","nodeType":"YulFunctionCall","src":"2474:15:23"},"nativeSrc":"2474:15:23","nodeType":"YulExpressionStatement","src":"2474:15:23"}]},"name":"panic_error_0x41","nativeSrc":"2368:127:23","nodeType":"YulFunctionDefinition","src":"2368:127:23"},{"body":{"nativeSrc":"2545:230:23","nodeType":"YulBlock","src":"2545:230:23","statements":[{"nativeSrc":"2555:19:23","nodeType":"YulAssignment","src":"2555:19:23","value":{"arguments":[{"kind":"number","nativeSrc":"2571:2:23","nodeType":"YulLiteral","src":"2571:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"2565:5:23","nodeType":"YulIdentifier","src":"2565:5:23"},"nativeSrc":"2565:9:23","nodeType":"YulFunctionCall","src":"2565:9:23"},"variableNames":[{"name":"memPtr","nativeSrc":"2555:6:23","nodeType":"YulIdentifier","src":"2555:6:23"}]},{"nativeSrc":"2583:58:23","nodeType":"YulVariableDeclaration","src":"2583:58:23","value":{"arguments":[{"name":"memPtr","nativeSrc":"2605:6:23","nodeType":"YulIdentifier","src":"2605:6:23"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"2621:4:23","nodeType":"YulIdentifier","src":"2621:4:23"},{"kind":"number","nativeSrc":"2627:2:23","nodeType":"YulLiteral","src":"2627:2:23","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2617:3:23","nodeType":"YulIdentifier","src":"2617:3:23"},"nativeSrc":"2617:13:23","nodeType":"YulFunctionCall","src":"2617:13:23"},{"arguments":[{"kind":"number","nativeSrc":"2636:2:23","nodeType":"YulLiteral","src":"2636:2:23","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2632:3:23","nodeType":"YulIdentifier","src":"2632:3:23"},"nativeSrc":"2632:7:23","nodeType":"YulFunctionCall","src":"2632:7:23"}],"functionName":{"name":"and","nativeSrc":"2613:3:23","nodeType":"YulIdentifier","src":"2613:3:23"},"nativeSrc":"2613:27:23","nodeType":"YulFunctionCall","src":"2613:27:23"}],"functionName":{"name":"add","nativeSrc":"2601:3:23","nodeType":"YulIdentifier","src":"2601:3:23"},"nativeSrc":"2601:40:23","nodeType":"YulFunctionCall","src":"2601:40:23"},"variables":[{"name":"newFreePtr","nativeSrc":"2587:10:23","nodeType":"YulTypedName","src":"2587:10:23","type":""}]},{"body":{"nativeSrc":"2716:22:23","nodeType":"YulBlock","src":"2716:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2718:16:23","nodeType":"YulIdentifier","src":"2718:16:23"},"nativeSrc":"2718:18:23","nodeType":"YulFunctionCall","src":"2718:18:23"},"nativeSrc":"2718:18:23","nodeType":"YulExpressionStatement","src":"2718:18:23"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"2659:10:23","nodeType":"YulIdentifier","src":"2659:10:23"},{"kind":"number","nativeSrc":"2671:18:23","nodeType":"YulLiteral","src":"2671:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2656:2:23","nodeType":"YulIdentifier","src":"2656:2:23"},"nativeSrc":"2656:34:23","nodeType":"YulFunctionCall","src":"2656:34:23"},{"arguments":[{"name":"newFreePtr","nativeSrc":"2695:10:23","nodeType":"YulIdentifier","src":"2695:10:23"},{"name":"memPtr","nativeSrc":"2707:6:23","nodeType":"YulIdentifier","src":"2707:6:23"}],"functionName":{"name":"lt","nativeSrc":"2692:2:23","nodeType":"YulIdentifier","src":"2692:2:23"},"nativeSrc":"2692:22:23","nodeType":"YulFunctionCall","src":"2692:22:23"}],"functionName":{"name":"or","nativeSrc":"2653:2:23","nodeType":"YulIdentifier","src":"2653:2:23"},"nativeSrc":"2653:62:23","nodeType":"YulFunctionCall","src":"2653:62:23"},"nativeSrc":"2650:88:23","nodeType":"YulIf","src":"2650:88:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2754:2:23","nodeType":"YulLiteral","src":"2754:2:23","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2758:10:23","nodeType":"YulIdentifier","src":"2758:10:23"}],"functionName":{"name":"mstore","nativeSrc":"2747:6:23","nodeType":"YulIdentifier","src":"2747:6:23"},"nativeSrc":"2747:22:23","nodeType":"YulFunctionCall","src":"2747:22:23"},"nativeSrc":"2747:22:23","nodeType":"YulExpressionStatement","src":"2747:22:23"}]},"name":"allocate_memory","nativeSrc":"2500:275:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"2525:4:23","nodeType":"YulTypedName","src":"2525:4:23","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"2534:6:23","nodeType":"YulTypedName","src":"2534:6:23","type":""}],"src":"2500:275:23"},{"body":{"nativeSrc":"2849:114:23","nodeType":"YulBlock","src":"2849:114:23","statements":[{"body":{"nativeSrc":"2893:22:23","nodeType":"YulBlock","src":"2893:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2895:16:23","nodeType":"YulIdentifier","src":"2895:16:23"},"nativeSrc":"2895:18:23","nodeType":"YulFunctionCall","src":"2895:18:23"},"nativeSrc":"2895:18:23","nodeType":"YulExpressionStatement","src":"2895:18:23"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"2865:6:23","nodeType":"YulIdentifier","src":"2865:6:23"},{"kind":"number","nativeSrc":"2873:18:23","nodeType":"YulLiteral","src":"2873:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2862:2:23","nodeType":"YulIdentifier","src":"2862:2:23"},"nativeSrc":"2862:30:23","nodeType":"YulFunctionCall","src":"2862:30:23"},"nativeSrc":"2859:56:23","nodeType":"YulIf","src":"2859:56:23"},{"nativeSrc":"2924:33:23","nodeType":"YulAssignment","src":"2924:33:23","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2940:1:23","nodeType":"YulLiteral","src":"2940:1:23","type":"","value":"5"},{"name":"length","nativeSrc":"2943:6:23","nodeType":"YulIdentifier","src":"2943:6:23"}],"functionName":{"name":"shl","nativeSrc":"2936:3:23","nodeType":"YulIdentifier","src":"2936:3:23"},"nativeSrc":"2936:14:23","nodeType":"YulFunctionCall","src":"2936:14:23"},{"kind":"number","nativeSrc":"2952:4:23","nodeType":"YulLiteral","src":"2952:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2932:3:23","nodeType":"YulIdentifier","src":"2932:3:23"},"nativeSrc":"2932:25:23","nodeType":"YulFunctionCall","src":"2932:25:23"},"variableNames":[{"name":"size","nativeSrc":"2924:4:23","nodeType":"YulIdentifier","src":"2924:4:23"}]}]},"name":"array_allocation_size_array_address_dyn","nativeSrc":"2780:183:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"2829:6:23","nodeType":"YulTypedName","src":"2829:6:23","type":""}],"returnVariables":[{"name":"size","nativeSrc":"2840:4:23","nodeType":"YulTypedName","src":"2840:4:23","type":""}],"src":"2780:183:23"},{"body":{"nativeSrc":"3032:604:23","nodeType":"YulBlock","src":"3032:604:23","statements":[{"body":{"nativeSrc":"3081:16:23","nodeType":"YulBlock","src":"3081:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3090:1:23","nodeType":"YulLiteral","src":"3090:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"3093:1:23","nodeType":"YulLiteral","src":"3093:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3083:6:23","nodeType":"YulIdentifier","src":"3083:6:23"},"nativeSrc":"3083:12:23","nodeType":"YulFunctionCall","src":"3083:12:23"},"nativeSrc":"3083:12:23","nodeType":"YulExpressionStatement","src":"3083:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3060:6:23","nodeType":"YulIdentifier","src":"3060:6:23"},{"kind":"number","nativeSrc":"3068:4:23","nodeType":"YulLiteral","src":"3068:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3056:3:23","nodeType":"YulIdentifier","src":"3056:3:23"},"nativeSrc":"3056:17:23","nodeType":"YulFunctionCall","src":"3056:17:23"},{"name":"end","nativeSrc":"3075:3:23","nodeType":"YulIdentifier","src":"3075:3:23"}],"functionName":{"name":"slt","nativeSrc":"3052:3:23","nodeType":"YulIdentifier","src":"3052:3:23"},"nativeSrc":"3052:27:23","nodeType":"YulFunctionCall","src":"3052:27:23"}],"functionName":{"name":"iszero","nativeSrc":"3045:6:23","nodeType":"YulIdentifier","src":"3045:6:23"},"nativeSrc":"3045:35:23","nodeType":"YulFunctionCall","src":"3045:35:23"},"nativeSrc":"3042:55:23","nodeType":"YulIf","src":"3042:55:23"},{"nativeSrc":"3106:30:23","nodeType":"YulVariableDeclaration","src":"3106:30:23","value":{"arguments":[{"name":"offset","nativeSrc":"3129:6:23","nodeType":"YulIdentifier","src":"3129:6:23"}],"functionName":{"name":"calldataload","nativeSrc":"3116:12:23","nodeType":"YulIdentifier","src":"3116:12:23"},"nativeSrc":"3116:20:23","nodeType":"YulFunctionCall","src":"3116:20:23"},"variables":[{"name":"_1","nativeSrc":"3110:2:23","nodeType":"YulTypedName","src":"3110:2:23","type":""}]},{"nativeSrc":"3145:14:23","nodeType":"YulVariableDeclaration","src":"3145:14:23","value":{"kind":"number","nativeSrc":"3155:4:23","nodeType":"YulLiteral","src":"3155:4:23","type":"","value":"0x20"},"variables":[{"name":"_2","nativeSrc":"3149:2:23","nodeType":"YulTypedName","src":"3149:2:23","type":""}]},{"nativeSrc":"3168:71:23","nodeType":"YulVariableDeclaration","src":"3168:71:23","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"3235:2:23","nodeType":"YulIdentifier","src":"3235:2:23"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nativeSrc":"3195:39:23","nodeType":"YulIdentifier","src":"3195:39:23"},"nativeSrc":"3195:43:23","nodeType":"YulFunctionCall","src":"3195:43:23"}],"functionName":{"name":"allocate_memory","nativeSrc":"3179:15:23","nodeType":"YulIdentifier","src":"3179:15:23"},"nativeSrc":"3179:60:23","nodeType":"YulFunctionCall","src":"3179:60:23"},"variables":[{"name":"dst","nativeSrc":"3172:3:23","nodeType":"YulTypedName","src":"3172:3:23","type":""}]},{"nativeSrc":"3248:16:23","nodeType":"YulVariableDeclaration","src":"3248:16:23","value":{"name":"dst","nativeSrc":"3261:3:23","nodeType":"YulIdentifier","src":"3261:3:23"},"variables":[{"name":"dst_1","nativeSrc":"3252:5:23","nodeType":"YulTypedName","src":"3252:5:23","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"3280:3:23","nodeType":"YulIdentifier","src":"3280:3:23"},{"name":"_1","nativeSrc":"3285:2:23","nodeType":"YulIdentifier","src":"3285:2:23"}],"functionName":{"name":"mstore","nativeSrc":"3273:6:23","nodeType":"YulIdentifier","src":"3273:6:23"},"nativeSrc":"3273:15:23","nodeType":"YulFunctionCall","src":"3273:15:23"},"nativeSrc":"3273:15:23","nodeType":"YulExpressionStatement","src":"3273:15:23"},{"nativeSrc":"3297:21:23","nodeType":"YulAssignment","src":"3297:21:23","value":{"arguments":[{"name":"dst","nativeSrc":"3308:3:23","nodeType":"YulIdentifier","src":"3308:3:23"},{"kind":"number","nativeSrc":"3313:4:23","nodeType":"YulLiteral","src":"3313:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3304:3:23","nodeType":"YulIdentifier","src":"3304:3:23"},"nativeSrc":"3304:14:23","nodeType":"YulFunctionCall","src":"3304:14:23"},"variableNames":[{"name":"dst","nativeSrc":"3297:3:23","nodeType":"YulIdentifier","src":"3297:3:23"}]},{"nativeSrc":"3327:48:23","nodeType":"YulVariableDeclaration","src":"3327:48:23","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3349:6:23","nodeType":"YulIdentifier","src":"3349:6:23"},{"arguments":[{"kind":"number","nativeSrc":"3361:1:23","nodeType":"YulLiteral","src":"3361:1:23","type":"","value":"5"},{"name":"_1","nativeSrc":"3364:2:23","nodeType":"YulIdentifier","src":"3364:2:23"}],"functionName":{"name":"shl","nativeSrc":"3357:3:23","nodeType":"YulIdentifier","src":"3357:3:23"},"nativeSrc":"3357:10:23","nodeType":"YulFunctionCall","src":"3357:10:23"}],"functionName":{"name":"add","nativeSrc":"3345:3:23","nodeType":"YulIdentifier","src":"3345:3:23"},"nativeSrc":"3345:23:23","nodeType":"YulFunctionCall","src":"3345:23:23"},{"kind":"number","nativeSrc":"3370:4:23","nodeType":"YulLiteral","src":"3370:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3341:3:23","nodeType":"YulIdentifier","src":"3341:3:23"},"nativeSrc":"3341:34:23","nodeType":"YulFunctionCall","src":"3341:34:23"},"variables":[{"name":"srcEnd","nativeSrc":"3331:6:23","nodeType":"YulTypedName","src":"3331:6:23","type":""}]},{"body":{"nativeSrc":"3403:16:23","nodeType":"YulBlock","src":"3403:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3412:1:23","nodeType":"YulLiteral","src":"3412:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"3415:1:23","nodeType":"YulLiteral","src":"3415:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3405:6:23","nodeType":"YulIdentifier","src":"3405:6:23"},"nativeSrc":"3405:12:23","nodeType":"YulFunctionCall","src":"3405:12:23"},"nativeSrc":"3405:12:23","nodeType":"YulExpressionStatement","src":"3405:12:23"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"3390:6:23","nodeType":"YulIdentifier","src":"3390:6:23"},{"name":"end","nativeSrc":"3398:3:23","nodeType":"YulIdentifier","src":"3398:3:23"}],"functionName":{"name":"gt","nativeSrc":"3387:2:23","nodeType":"YulIdentifier","src":"3387:2:23"},"nativeSrc":"3387:15:23","nodeType":"YulFunctionCall","src":"3387:15:23"},"nativeSrc":"3384:35:23","nodeType":"YulIf","src":"3384:35:23"},{"nativeSrc":"3428:28:23","nodeType":"YulVariableDeclaration","src":"3428:28:23","value":{"arguments":[{"name":"offset","nativeSrc":"3443:6:23","nodeType":"YulIdentifier","src":"3443:6:23"},{"kind":"number","nativeSrc":"3451:4:23","nodeType":"YulLiteral","src":"3451:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3439:3:23","nodeType":"YulIdentifier","src":"3439:3:23"},"nativeSrc":"3439:17:23","nodeType":"YulFunctionCall","src":"3439:17:23"},"variables":[{"name":"src","nativeSrc":"3432:3:23","nodeType":"YulTypedName","src":"3432:3:23","type":""}]},{"body":{"nativeSrc":"3521:86:23","nodeType":"YulBlock","src":"3521:86:23","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"3542:3:23","nodeType":"YulIdentifier","src":"3542:3:23"},{"arguments":[{"name":"src","nativeSrc":"3560:3:23","nodeType":"YulIdentifier","src":"3560:3:23"}],"functionName":{"name":"calldataload","nativeSrc":"3547:12:23","nodeType":"YulIdentifier","src":"3547:12:23"},"nativeSrc":"3547:17:23","nodeType":"YulFunctionCall","src":"3547:17:23"}],"functionName":{"name":"mstore","nativeSrc":"3535:6:23","nodeType":"YulIdentifier","src":"3535:6:23"},"nativeSrc":"3535:30:23","nodeType":"YulFunctionCall","src":"3535:30:23"},"nativeSrc":"3535:30:23","nodeType":"YulExpressionStatement","src":"3535:30:23"},{"nativeSrc":"3578:19:23","nodeType":"YulAssignment","src":"3578:19:23","value":{"arguments":[{"name":"dst","nativeSrc":"3589:3:23","nodeType":"YulIdentifier","src":"3589:3:23"},{"name":"_2","nativeSrc":"3594:2:23","nodeType":"YulIdentifier","src":"3594:2:23"}],"functionName":{"name":"add","nativeSrc":"3585:3:23","nodeType":"YulIdentifier","src":"3585:3:23"},"nativeSrc":"3585:12:23","nodeType":"YulFunctionCall","src":"3585:12:23"},"variableNames":[{"name":"dst","nativeSrc":"3578:3:23","nodeType":"YulIdentifier","src":"3578:3:23"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"3476:3:23","nodeType":"YulIdentifier","src":"3476:3:23"},{"name":"srcEnd","nativeSrc":"3481:6:23","nodeType":"YulIdentifier","src":"3481:6:23"}],"functionName":{"name":"lt","nativeSrc":"3473:2:23","nodeType":"YulIdentifier","src":"3473:2:23"},"nativeSrc":"3473:15:23","nodeType":"YulFunctionCall","src":"3473:15:23"},"nativeSrc":"3465:142:23","nodeType":"YulForLoop","post":{"nativeSrc":"3489:23:23","nodeType":"YulBlock","src":"3489:23:23","statements":[{"nativeSrc":"3491:19:23","nodeType":"YulAssignment","src":"3491:19:23","value":{"arguments":[{"name":"src","nativeSrc":"3502:3:23","nodeType":"YulIdentifier","src":"3502:3:23"},{"name":"_2","nativeSrc":"3507:2:23","nodeType":"YulIdentifier","src":"3507:2:23"}],"functionName":{"name":"add","nativeSrc":"3498:3:23","nodeType":"YulIdentifier","src":"3498:3:23"},"nativeSrc":"3498:12:23","nodeType":"YulFunctionCall","src":"3498:12:23"},"variableNames":[{"name":"src","nativeSrc":"3491:3:23","nodeType":"YulIdentifier","src":"3491:3:23"}]}]},"pre":{"nativeSrc":"3469:3:23","nodeType":"YulBlock","src":"3469:3:23","statements":[]},"src":"3465:142:23"},{"nativeSrc":"3616:14:23","nodeType":"YulAssignment","src":"3616:14:23","value":{"name":"dst_1","nativeSrc":"3625:5:23","nodeType":"YulIdentifier","src":"3625:5:23"},"variableNames":[{"name":"array","nativeSrc":"3616:5:23","nodeType":"YulIdentifier","src":"3616:5:23"}]}]},"name":"abi_decode_array_uint256_dyn","nativeSrc":"2968:668:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3006:6:23","nodeType":"YulTypedName","src":"3006:6:23","type":""},{"name":"end","nativeSrc":"3014:3:23","nodeType":"YulTypedName","src":"3014:3:23","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3022:5:23","nodeType":"YulTypedName","src":"3022:5:23","type":""}],"src":"2968:668:23"},{"body":{"nativeSrc":"3812:1187:23","nodeType":"YulBlock","src":"3812:1187:23","statements":[{"body":{"nativeSrc":"3859:16:23","nodeType":"YulBlock","src":"3859:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3868:1:23","nodeType":"YulLiteral","src":"3868:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"3871:1:23","nodeType":"YulLiteral","src":"3871:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3861:6:23","nodeType":"YulIdentifier","src":"3861:6:23"},"nativeSrc":"3861:12:23","nodeType":"YulFunctionCall","src":"3861:12:23"},"nativeSrc":"3861:12:23","nodeType":"YulExpressionStatement","src":"3861:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3833:7:23","nodeType":"YulIdentifier","src":"3833:7:23"},{"name":"headStart","nativeSrc":"3842:9:23","nodeType":"YulIdentifier","src":"3842:9:23"}],"functionName":{"name":"sub","nativeSrc":"3829:3:23","nodeType":"YulIdentifier","src":"3829:3:23"},"nativeSrc":"3829:23:23","nodeType":"YulFunctionCall","src":"3829:23:23"},{"kind":"number","nativeSrc":"3854:3:23","nodeType":"YulLiteral","src":"3854:3:23","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"3825:3:23","nodeType":"YulIdentifier","src":"3825:3:23"},"nativeSrc":"3825:33:23","nodeType":"YulFunctionCall","src":"3825:33:23"},"nativeSrc":"3822:53:23","nodeType":"YulIf","src":"3822:53:23"},{"nativeSrc":"3884:37:23","nodeType":"YulVariableDeclaration","src":"3884:37:23","value":{"arguments":[{"name":"headStart","nativeSrc":"3911:9:23","nodeType":"YulIdentifier","src":"3911:9:23"}],"functionName":{"name":"calldataload","nativeSrc":"3898:12:23","nodeType":"YulIdentifier","src":"3898:12:23"},"nativeSrc":"3898:23:23","nodeType":"YulFunctionCall","src":"3898:23:23"},"variables":[{"name":"offset","nativeSrc":"3888:6:23","nodeType":"YulTypedName","src":"3888:6:23","type":""}]},{"nativeSrc":"3930:28:23","nodeType":"YulVariableDeclaration","src":"3930:28:23","value":{"kind":"number","nativeSrc":"3940:18:23","nodeType":"YulLiteral","src":"3940:18:23","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"3934:2:23","nodeType":"YulTypedName","src":"3934:2:23","type":""}]},{"body":{"nativeSrc":"3985:16:23","nodeType":"YulBlock","src":"3985:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3994:1:23","nodeType":"YulLiteral","src":"3994:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"3997:1:23","nodeType":"YulLiteral","src":"3997:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3987:6:23","nodeType":"YulIdentifier","src":"3987:6:23"},"nativeSrc":"3987:12:23","nodeType":"YulFunctionCall","src":"3987:12:23"},"nativeSrc":"3987:12:23","nodeType":"YulExpressionStatement","src":"3987:12:23"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3973:6:23","nodeType":"YulIdentifier","src":"3973:6:23"},{"name":"_1","nativeSrc":"3981:2:23","nodeType":"YulIdentifier","src":"3981:2:23"}],"functionName":{"name":"gt","nativeSrc":"3970:2:23","nodeType":"YulIdentifier","src":"3970:2:23"},"nativeSrc":"3970:14:23","nodeType":"YulFunctionCall","src":"3970:14:23"},"nativeSrc":"3967:34:23","nodeType":"YulIf","src":"3967:34:23"},{"nativeSrc":"4010:32:23","nodeType":"YulVariableDeclaration","src":"4010:32:23","value":{"arguments":[{"name":"headStart","nativeSrc":"4024:9:23","nodeType":"YulIdentifier","src":"4024:9:23"},{"name":"offset","nativeSrc":"4035:6:23","nodeType":"YulIdentifier","src":"4035:6:23"}],"functionName":{"name":"add","nativeSrc":"4020:3:23","nodeType":"YulIdentifier","src":"4020:3:23"},"nativeSrc":"4020:22:23","nodeType":"YulFunctionCall","src":"4020:22:23"},"variables":[{"name":"_2","nativeSrc":"4014:2:23","nodeType":"YulTypedName","src":"4014:2:23","type":""}]},{"body":{"nativeSrc":"4090:16:23","nodeType":"YulBlock","src":"4090:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4099:1:23","nodeType":"YulLiteral","src":"4099:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"4102:1:23","nodeType":"YulLiteral","src":"4102:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4092:6:23","nodeType":"YulIdentifier","src":"4092:6:23"},"nativeSrc":"4092:12:23","nodeType":"YulFunctionCall","src":"4092:12:23"},"nativeSrc":"4092:12:23","nodeType":"YulExpressionStatement","src":"4092:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"4069:2:23","nodeType":"YulIdentifier","src":"4069:2:23"},{"kind":"number","nativeSrc":"4073:4:23","nodeType":"YulLiteral","src":"4073:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4065:3:23","nodeType":"YulIdentifier","src":"4065:3:23"},"nativeSrc":"4065:13:23","nodeType":"YulFunctionCall","src":"4065:13:23"},{"name":"dataEnd","nativeSrc":"4080:7:23","nodeType":"YulIdentifier","src":"4080:7:23"}],"functionName":{"name":"slt","nativeSrc":"4061:3:23","nodeType":"YulIdentifier","src":"4061:3:23"},"nativeSrc":"4061:27:23","nodeType":"YulFunctionCall","src":"4061:27:23"}],"functionName":{"name":"iszero","nativeSrc":"4054:6:23","nodeType":"YulIdentifier","src":"4054:6:23"},"nativeSrc":"4054:35:23","nodeType":"YulFunctionCall","src":"4054:35:23"},"nativeSrc":"4051:55:23","nodeType":"YulIf","src":"4051:55:23"},{"nativeSrc":"4115:26:23","nodeType":"YulVariableDeclaration","src":"4115:26:23","value":{"arguments":[{"name":"_2","nativeSrc":"4138:2:23","nodeType":"YulIdentifier","src":"4138:2:23"}],"functionName":{"name":"calldataload","nativeSrc":"4125:12:23","nodeType":"YulIdentifier","src":"4125:12:23"},"nativeSrc":"4125:16:23","nodeType":"YulFunctionCall","src":"4125:16:23"},"variables":[{"name":"_3","nativeSrc":"4119:2:23","nodeType":"YulTypedName","src":"4119:2:23","type":""}]},{"nativeSrc":"4150:14:23","nodeType":"YulVariableDeclaration","src":"4150:14:23","value":{"kind":"number","nativeSrc":"4160:4:23","nodeType":"YulLiteral","src":"4160:4:23","type":"","value":"0x20"},"variables":[{"name":"_4","nativeSrc":"4154:2:23","nodeType":"YulTypedName","src":"4154:2:23","type":""}]},{"nativeSrc":"4173:71:23","nodeType":"YulVariableDeclaration","src":"4173:71:23","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"4240:2:23","nodeType":"YulIdentifier","src":"4240:2:23"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nativeSrc":"4200:39:23","nodeType":"YulIdentifier","src":"4200:39:23"},"nativeSrc":"4200:43:23","nodeType":"YulFunctionCall","src":"4200:43:23"}],"functionName":{"name":"allocate_memory","nativeSrc":"4184:15:23","nodeType":"YulIdentifier","src":"4184:15:23"},"nativeSrc":"4184:60:23","nodeType":"YulFunctionCall","src":"4184:60:23"},"variables":[{"name":"dst","nativeSrc":"4177:3:23","nodeType":"YulTypedName","src":"4177:3:23","type":""}]},{"nativeSrc":"4253:16:23","nodeType":"YulVariableDeclaration","src":"4253:16:23","value":{"name":"dst","nativeSrc":"4266:3:23","nodeType":"YulIdentifier","src":"4266:3:23"},"variables":[{"name":"dst_1","nativeSrc":"4257:5:23","nodeType":"YulTypedName","src":"4257:5:23","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"4285:3:23","nodeType":"YulIdentifier","src":"4285:3:23"},{"name":"_3","nativeSrc":"4290:2:23","nodeType":"YulIdentifier","src":"4290:2:23"}],"functionName":{"name":"mstore","nativeSrc":"4278:6:23","nodeType":"YulIdentifier","src":"4278:6:23"},"nativeSrc":"4278:15:23","nodeType":"YulFunctionCall","src":"4278:15:23"},"nativeSrc":"4278:15:23","nodeType":"YulExpressionStatement","src":"4278:15:23"},{"nativeSrc":"4302:19:23","nodeType":"YulAssignment","src":"4302:19:23","value":{"arguments":[{"name":"dst","nativeSrc":"4313:3:23","nodeType":"YulIdentifier","src":"4313:3:23"},{"name":"_4","nativeSrc":"4318:2:23","nodeType":"YulIdentifier","src":"4318:2:23"}],"functionName":{"name":"add","nativeSrc":"4309:3:23","nodeType":"YulIdentifier","src":"4309:3:23"},"nativeSrc":"4309:12:23","nodeType":"YulFunctionCall","src":"4309:12:23"},"variableNames":[{"name":"dst","nativeSrc":"4302:3:23","nodeType":"YulIdentifier","src":"4302:3:23"}]},{"nativeSrc":"4330:42:23","nodeType":"YulVariableDeclaration","src":"4330:42:23","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"4352:2:23","nodeType":"YulIdentifier","src":"4352:2:23"},{"arguments":[{"kind":"number","nativeSrc":"4360:1:23","nodeType":"YulLiteral","src":"4360:1:23","type":"","value":"5"},{"name":"_3","nativeSrc":"4363:2:23","nodeType":"YulIdentifier","src":"4363:2:23"}],"functionName":{"name":"shl","nativeSrc":"4356:3:23","nodeType":"YulIdentifier","src":"4356:3:23"},"nativeSrc":"4356:10:23","nodeType":"YulFunctionCall","src":"4356:10:23"}],"functionName":{"name":"add","nativeSrc":"4348:3:23","nodeType":"YulIdentifier","src":"4348:3:23"},"nativeSrc":"4348:19:23","nodeType":"YulFunctionCall","src":"4348:19:23"},{"name":"_4","nativeSrc":"4369:2:23","nodeType":"YulIdentifier","src":"4369:2:23"}],"functionName":{"name":"add","nativeSrc":"4344:3:23","nodeType":"YulIdentifier","src":"4344:3:23"},"nativeSrc":"4344:28:23","nodeType":"YulFunctionCall","src":"4344:28:23"},"variables":[{"name":"srcEnd","nativeSrc":"4334:6:23","nodeType":"YulTypedName","src":"4334:6:23","type":""}]},{"body":{"nativeSrc":"4404:16:23","nodeType":"YulBlock","src":"4404:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4413:1:23","nodeType":"YulLiteral","src":"4413:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"4416:1:23","nodeType":"YulLiteral","src":"4416:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4406:6:23","nodeType":"YulIdentifier","src":"4406:6:23"},"nativeSrc":"4406:12:23","nodeType":"YulFunctionCall","src":"4406:12:23"},"nativeSrc":"4406:12:23","nodeType":"YulExpressionStatement","src":"4406:12:23"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"4387:6:23","nodeType":"YulIdentifier","src":"4387:6:23"},{"name":"dataEnd","nativeSrc":"4395:7:23","nodeType":"YulIdentifier","src":"4395:7:23"}],"functionName":{"name":"gt","nativeSrc":"4384:2:23","nodeType":"YulIdentifier","src":"4384:2:23"},"nativeSrc":"4384:19:23","nodeType":"YulFunctionCall","src":"4384:19:23"},"nativeSrc":"4381:39:23","nodeType":"YulIf","src":"4381:39:23"},{"nativeSrc":"4429:22:23","nodeType":"YulVariableDeclaration","src":"4429:22:23","value":{"arguments":[{"name":"_2","nativeSrc":"4444:2:23","nodeType":"YulIdentifier","src":"4444:2:23"},{"name":"_4","nativeSrc":"4448:2:23","nodeType":"YulIdentifier","src":"4448:2:23"}],"functionName":{"name":"add","nativeSrc":"4440:3:23","nodeType":"YulIdentifier","src":"4440:3:23"},"nativeSrc":"4440:11:23","nodeType":"YulFunctionCall","src":"4440:11:23"},"variables":[{"name":"src","nativeSrc":"4433:3:23","nodeType":"YulTypedName","src":"4433:3:23","type":""}]},{"body":{"nativeSrc":"4516:161:23","nodeType":"YulBlock","src":"4516:161:23","statements":[{"nativeSrc":"4530:30:23","nodeType":"YulVariableDeclaration","src":"4530:30:23","value":{"arguments":[{"name":"src","nativeSrc":"4556:3:23","nodeType":"YulIdentifier","src":"4556:3:23"}],"functionName":{"name":"calldataload","nativeSrc":"4543:12:23","nodeType":"YulIdentifier","src":"4543:12:23"},"nativeSrc":"4543:17:23","nodeType":"YulFunctionCall","src":"4543:17:23"},"variables":[{"name":"value","nativeSrc":"4534:5:23","nodeType":"YulTypedName","src":"4534:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4598:5:23","nodeType":"YulIdentifier","src":"4598:5:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4573:24:23","nodeType":"YulIdentifier","src":"4573:24:23"},"nativeSrc":"4573:31:23","nodeType":"YulFunctionCall","src":"4573:31:23"},"nativeSrc":"4573:31:23","nodeType":"YulExpressionStatement","src":"4573:31:23"},{"expression":{"arguments":[{"name":"dst","nativeSrc":"4624:3:23","nodeType":"YulIdentifier","src":"4624:3:23"},{"name":"value","nativeSrc":"4629:5:23","nodeType":"YulIdentifier","src":"4629:5:23"}],"functionName":{"name":"mstore","nativeSrc":"4617:6:23","nodeType":"YulIdentifier","src":"4617:6:23"},"nativeSrc":"4617:18:23","nodeType":"YulFunctionCall","src":"4617:18:23"},"nativeSrc":"4617:18:23","nodeType":"YulExpressionStatement","src":"4617:18:23"},{"nativeSrc":"4648:19:23","nodeType":"YulAssignment","src":"4648:19:23","value":{"arguments":[{"name":"dst","nativeSrc":"4659:3:23","nodeType":"YulIdentifier","src":"4659:3:23"},{"name":"_4","nativeSrc":"4664:2:23","nodeType":"YulIdentifier","src":"4664:2:23"}],"functionName":{"name":"add","nativeSrc":"4655:3:23","nodeType":"YulIdentifier","src":"4655:3:23"},"nativeSrc":"4655:12:23","nodeType":"YulFunctionCall","src":"4655:12:23"},"variableNames":[{"name":"dst","nativeSrc":"4648:3:23","nodeType":"YulIdentifier","src":"4648:3:23"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"4471:3:23","nodeType":"YulIdentifier","src":"4471:3:23"},{"name":"srcEnd","nativeSrc":"4476:6:23","nodeType":"YulIdentifier","src":"4476:6:23"}],"functionName":{"name":"lt","nativeSrc":"4468:2:23","nodeType":"YulIdentifier","src":"4468:2:23"},"nativeSrc":"4468:15:23","nodeType":"YulFunctionCall","src":"4468:15:23"},"nativeSrc":"4460:217:23","nodeType":"YulForLoop","post":{"nativeSrc":"4484:23:23","nodeType":"YulBlock","src":"4484:23:23","statements":[{"nativeSrc":"4486:19:23","nodeType":"YulAssignment","src":"4486:19:23","value":{"arguments":[{"name":"src","nativeSrc":"4497:3:23","nodeType":"YulIdentifier","src":"4497:3:23"},{"name":"_4","nativeSrc":"4502:2:23","nodeType":"YulIdentifier","src":"4502:2:23"}],"functionName":{"name":"add","nativeSrc":"4493:3:23","nodeType":"YulIdentifier","src":"4493:3:23"},"nativeSrc":"4493:12:23","nodeType":"YulFunctionCall","src":"4493:12:23"},"variableNames":[{"name":"src","nativeSrc":"4486:3:23","nodeType":"YulIdentifier","src":"4486:3:23"}]}]},"pre":{"nativeSrc":"4464:3:23","nodeType":"YulBlock","src":"4464:3:23","statements":[]},"src":"4460:217:23"},{"nativeSrc":"4686:15:23","nodeType":"YulAssignment","src":"4686:15:23","value":{"name":"dst_1","nativeSrc":"4696:5:23","nodeType":"YulIdentifier","src":"4696:5:23"},"variableNames":[{"name":"value0","nativeSrc":"4686:6:23","nodeType":"YulIdentifier","src":"4686:6:23"}]},{"nativeSrc":"4710:48:23","nodeType":"YulVariableDeclaration","src":"4710:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4743:9:23","nodeType":"YulIdentifier","src":"4743:9:23"},{"name":"_4","nativeSrc":"4754:2:23","nodeType":"YulIdentifier","src":"4754:2:23"}],"functionName":{"name":"add","nativeSrc":"4739:3:23","nodeType":"YulIdentifier","src":"4739:3:23"},"nativeSrc":"4739:18:23","nodeType":"YulFunctionCall","src":"4739:18:23"}],"functionName":{"name":"calldataload","nativeSrc":"4726:12:23","nodeType":"YulIdentifier","src":"4726:12:23"},"nativeSrc":"4726:32:23","nodeType":"YulFunctionCall","src":"4726:32:23"},"variables":[{"name":"offset_1","nativeSrc":"4714:8:23","nodeType":"YulTypedName","src":"4714:8:23","type":""}]},{"body":{"nativeSrc":"4787:16:23","nodeType":"YulBlock","src":"4787:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4796:1:23","nodeType":"YulLiteral","src":"4796:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"4799:1:23","nodeType":"YulLiteral","src":"4799:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4789:6:23","nodeType":"YulIdentifier","src":"4789:6:23"},"nativeSrc":"4789:12:23","nodeType":"YulFunctionCall","src":"4789:12:23"},"nativeSrc":"4789:12:23","nodeType":"YulExpressionStatement","src":"4789:12:23"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"4773:8:23","nodeType":"YulIdentifier","src":"4773:8:23"},{"name":"_1","nativeSrc":"4783:2:23","nodeType":"YulIdentifier","src":"4783:2:23"}],"functionName":{"name":"gt","nativeSrc":"4770:2:23","nodeType":"YulIdentifier","src":"4770:2:23"},"nativeSrc":"4770:16:23","nodeType":"YulFunctionCall","src":"4770:16:23"},"nativeSrc":"4767:36:23","nodeType":"YulIf","src":"4767:36:23"},{"nativeSrc":"4812:73:23","nodeType":"YulAssignment","src":"4812:73:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4855:9:23","nodeType":"YulIdentifier","src":"4855:9:23"},{"name":"offset_1","nativeSrc":"4866:8:23","nodeType":"YulIdentifier","src":"4866:8:23"}],"functionName":{"name":"add","nativeSrc":"4851:3:23","nodeType":"YulIdentifier","src":"4851:3:23"},"nativeSrc":"4851:24:23","nodeType":"YulFunctionCall","src":"4851:24:23"},{"name":"dataEnd","nativeSrc":"4877:7:23","nodeType":"YulIdentifier","src":"4877:7:23"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"4822:28:23","nodeType":"YulIdentifier","src":"4822:28:23"},"nativeSrc":"4822:63:23","nodeType":"YulFunctionCall","src":"4822:63:23"},"variableNames":[{"name":"value1","nativeSrc":"4812:6:23","nodeType":"YulIdentifier","src":"4812:6:23"}]},{"nativeSrc":"4894:42:23","nodeType":"YulAssignment","src":"4894:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4921:9:23","nodeType":"YulIdentifier","src":"4921:9:23"},{"kind":"number","nativeSrc":"4932:2:23","nodeType":"YulLiteral","src":"4932:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4917:3:23","nodeType":"YulIdentifier","src":"4917:3:23"},"nativeSrc":"4917:18:23","nodeType":"YulFunctionCall","src":"4917:18:23"}],"functionName":{"name":"calldataload","nativeSrc":"4904:12:23","nodeType":"YulIdentifier","src":"4904:12:23"},"nativeSrc":"4904:32:23","nodeType":"YulFunctionCall","src":"4904:32:23"},"variableNames":[{"name":"value2","nativeSrc":"4894:6:23","nodeType":"YulIdentifier","src":"4894:6:23"}]},{"nativeSrc":"4945:48:23","nodeType":"YulAssignment","src":"4945:48:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4978:9:23","nodeType":"YulIdentifier","src":"4978:9:23"},{"kind":"number","nativeSrc":"4989:2:23","nodeType":"YulLiteral","src":"4989:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4974:3:23","nodeType":"YulIdentifier","src":"4974:3:23"},"nativeSrc":"4974:18:23","nodeType":"YulFunctionCall","src":"4974:18:23"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4955:18:23","nodeType":"YulIdentifier","src":"4955:18:23"},"nativeSrc":"4955:38:23","nodeType":"YulFunctionCall","src":"4955:38:23"},"variableNames":[{"name":"value3","nativeSrc":"4945:6:23","nodeType":"YulIdentifier","src":"4945:6:23"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_address","nativeSrc":"3641:1358:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3754:9:23","nodeType":"YulTypedName","src":"3754:9:23","type":""},{"name":"dataEnd","nativeSrc":"3765:7:23","nodeType":"YulTypedName","src":"3765:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3777:6:23","nodeType":"YulTypedName","src":"3777:6:23","type":""},{"name":"value1","nativeSrc":"3785:6:23","nodeType":"YulTypedName","src":"3785:6:23","type":""},{"name":"value2","nativeSrc":"3793:6:23","nodeType":"YulTypedName","src":"3793:6:23","type":""},{"name":"value3","nativeSrc":"3801:6:23","nodeType":"YulTypedName","src":"3801:6:23","type":""}],"src":"3641:1358:23"},{"body":{"nativeSrc":"5108:352:23","nodeType":"YulBlock","src":"5108:352:23","statements":[{"body":{"nativeSrc":"5154:16:23","nodeType":"YulBlock","src":"5154:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5163:1:23","nodeType":"YulLiteral","src":"5163:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"5166:1:23","nodeType":"YulLiteral","src":"5166:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5156:6:23","nodeType":"YulIdentifier","src":"5156:6:23"},"nativeSrc":"5156:12:23","nodeType":"YulFunctionCall","src":"5156:12:23"},"nativeSrc":"5156:12:23","nodeType":"YulExpressionStatement","src":"5156:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5129:7:23","nodeType":"YulIdentifier","src":"5129:7:23"},{"name":"headStart","nativeSrc":"5138:9:23","nodeType":"YulIdentifier","src":"5138:9:23"}],"functionName":{"name":"sub","nativeSrc":"5125:3:23","nodeType":"YulIdentifier","src":"5125:3:23"},"nativeSrc":"5125:23:23","nodeType":"YulFunctionCall","src":"5125:23:23"},{"kind":"number","nativeSrc":"5150:2:23","nodeType":"YulLiteral","src":"5150:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"5121:3:23","nodeType":"YulIdentifier","src":"5121:3:23"},"nativeSrc":"5121:32:23","nodeType":"YulFunctionCall","src":"5121:32:23"},"nativeSrc":"5118:52:23","nodeType":"YulIf","src":"5118:52:23"},{"nativeSrc":"5179:36:23","nodeType":"YulVariableDeclaration","src":"5179:36:23","value":{"arguments":[{"name":"headStart","nativeSrc":"5205:9:23","nodeType":"YulIdentifier","src":"5205:9:23"}],"functionName":{"name":"calldataload","nativeSrc":"5192:12:23","nodeType":"YulIdentifier","src":"5192:12:23"},"nativeSrc":"5192:23:23","nodeType":"YulFunctionCall","src":"5192:23:23"},"variables":[{"name":"value","nativeSrc":"5183:5:23","nodeType":"YulTypedName","src":"5183:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5249:5:23","nodeType":"YulIdentifier","src":"5249:5:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5224:24:23","nodeType":"YulIdentifier","src":"5224:24:23"},"nativeSrc":"5224:31:23","nodeType":"YulFunctionCall","src":"5224:31:23"},"nativeSrc":"5224:31:23","nodeType":"YulExpressionStatement","src":"5224:31:23"},{"nativeSrc":"5264:15:23","nodeType":"YulAssignment","src":"5264:15:23","value":{"name":"value","nativeSrc":"5274:5:23","nodeType":"YulIdentifier","src":"5274:5:23"},"variableNames":[{"name":"value0","nativeSrc":"5264:6:23","nodeType":"YulIdentifier","src":"5264:6:23"}]},{"nativeSrc":"5288:47:23","nodeType":"YulVariableDeclaration","src":"5288:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5320:9:23","nodeType":"YulIdentifier","src":"5320:9:23"},{"kind":"number","nativeSrc":"5331:2:23","nodeType":"YulLiteral","src":"5331:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5316:3:23","nodeType":"YulIdentifier","src":"5316:3:23"},"nativeSrc":"5316:18:23","nodeType":"YulFunctionCall","src":"5316:18:23"}],"functionName":{"name":"calldataload","nativeSrc":"5303:12:23","nodeType":"YulIdentifier","src":"5303:12:23"},"nativeSrc":"5303:32:23","nodeType":"YulFunctionCall","src":"5303:32:23"},"variables":[{"name":"value_1","nativeSrc":"5292:7:23","nodeType":"YulTypedName","src":"5292:7:23","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"5369:7:23","nodeType":"YulIdentifier","src":"5369:7:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5344:24:23","nodeType":"YulIdentifier","src":"5344:24:23"},"nativeSrc":"5344:33:23","nodeType":"YulFunctionCall","src":"5344:33:23"},"nativeSrc":"5344:33:23","nodeType":"YulExpressionStatement","src":"5344:33:23"},{"nativeSrc":"5386:17:23","nodeType":"YulAssignment","src":"5386:17:23","value":{"name":"value_1","nativeSrc":"5396:7:23","nodeType":"YulIdentifier","src":"5396:7:23"},"variableNames":[{"name":"value1","nativeSrc":"5386:6:23","nodeType":"YulIdentifier","src":"5386:6:23"}]},{"nativeSrc":"5412:42:23","nodeType":"YulAssignment","src":"5412:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5439:9:23","nodeType":"YulIdentifier","src":"5439:9:23"},{"kind":"number","nativeSrc":"5450:2:23","nodeType":"YulLiteral","src":"5450:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5435:3:23","nodeType":"YulIdentifier","src":"5435:3:23"},"nativeSrc":"5435:18:23","nodeType":"YulFunctionCall","src":"5435:18:23"}],"functionName":{"name":"calldataload","nativeSrc":"5422:12:23","nodeType":"YulIdentifier","src":"5422:12:23"},"nativeSrc":"5422:32:23","nodeType":"YulFunctionCall","src":"5422:32:23"},"variableNames":[{"name":"value2","nativeSrc":"5412:6:23","nodeType":"YulIdentifier","src":"5412:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"5004:456:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5058:9:23","nodeType":"YulTypedName","src":"5058:9:23","type":""},{"name":"dataEnd","nativeSrc":"5069:7:23","nodeType":"YulTypedName","src":"5069:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5081:6:23","nodeType":"YulTypedName","src":"5081:6:23","type":""},{"name":"value1","nativeSrc":"5089:6:23","nodeType":"YulTypedName","src":"5089:6:23","type":""},{"name":"value2","nativeSrc":"5097:6:23","nodeType":"YulTypedName","src":"5097:6:23","type":""}],"src":"5004:456:23"},{"body":{"nativeSrc":"5562:87:23","nodeType":"YulBlock","src":"5562:87:23","statements":[{"nativeSrc":"5572:26:23","nodeType":"YulAssignment","src":"5572:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"5584:9:23","nodeType":"YulIdentifier","src":"5584:9:23"},{"kind":"number","nativeSrc":"5595:2:23","nodeType":"YulLiteral","src":"5595:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5580:3:23","nodeType":"YulIdentifier","src":"5580:3:23"},"nativeSrc":"5580:18:23","nodeType":"YulFunctionCall","src":"5580:18:23"},"variableNames":[{"name":"tail","nativeSrc":"5572:4:23","nodeType":"YulIdentifier","src":"5572:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5614:9:23","nodeType":"YulIdentifier","src":"5614:9:23"},{"arguments":[{"name":"value0","nativeSrc":"5629:6:23","nodeType":"YulIdentifier","src":"5629:6:23"},{"kind":"number","nativeSrc":"5637:4:23","nodeType":"YulLiteral","src":"5637:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"5625:3:23","nodeType":"YulIdentifier","src":"5625:3:23"},"nativeSrc":"5625:17:23","nodeType":"YulFunctionCall","src":"5625:17:23"}],"functionName":{"name":"mstore","nativeSrc":"5607:6:23","nodeType":"YulIdentifier","src":"5607:6:23"},"nativeSrc":"5607:36:23","nodeType":"YulFunctionCall","src":"5607:36:23"},"nativeSrc":"5607:36:23","nodeType":"YulExpressionStatement","src":"5607:36:23"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"5465:184:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5531:9:23","nodeType":"YulTypedName","src":"5531:9:23","type":""},{"name":"value0","nativeSrc":"5542:6:23","nodeType":"YulTypedName","src":"5542:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5553:4:23","nodeType":"YulTypedName","src":"5553:4:23","type":""}],"src":"5465:184:23"},{"body":{"nativeSrc":"5833:153:23","nodeType":"YulBlock","src":"5833:153:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5850:9:23","nodeType":"YulIdentifier","src":"5850:9:23"},{"name":"value0","nativeSrc":"5861:6:23","nodeType":"YulIdentifier","src":"5861:6:23"}],"functionName":{"name":"mstore","nativeSrc":"5843:6:23","nodeType":"YulIdentifier","src":"5843:6:23"},"nativeSrc":"5843:25:23","nodeType":"YulFunctionCall","src":"5843:25:23"},"nativeSrc":"5843:25:23","nodeType":"YulExpressionStatement","src":"5843:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5888:9:23","nodeType":"YulIdentifier","src":"5888:9:23"},{"kind":"number","nativeSrc":"5899:2:23","nodeType":"YulLiteral","src":"5899:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5884:3:23","nodeType":"YulIdentifier","src":"5884:3:23"},"nativeSrc":"5884:18:23","nodeType":"YulFunctionCall","src":"5884:18:23"},{"kind":"number","nativeSrc":"5904:2:23","nodeType":"YulLiteral","src":"5904:2:23","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"5877:6:23","nodeType":"YulIdentifier","src":"5877:6:23"},"nativeSrc":"5877:30:23","nodeType":"YulFunctionCall","src":"5877:30:23"},"nativeSrc":"5877:30:23","nodeType":"YulExpressionStatement","src":"5877:30:23"},{"nativeSrc":"5916:64:23","nodeType":"YulAssignment","src":"5916:64:23","value":{"arguments":[{"name":"value1","nativeSrc":"5953:6:23","nodeType":"YulIdentifier","src":"5953:6:23"},{"arguments":[{"name":"headStart","nativeSrc":"5965:9:23","nodeType":"YulIdentifier","src":"5965:9:23"},{"kind":"number","nativeSrc":"5976:2:23","nodeType":"YulLiteral","src":"5976:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5961:3:23","nodeType":"YulIdentifier","src":"5961:3:23"},"nativeSrc":"5961:18:23","nodeType":"YulFunctionCall","src":"5961:18:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"5924:28:23","nodeType":"YulIdentifier","src":"5924:28:23"},"nativeSrc":"5924:56:23","nodeType":"YulFunctionCall","src":"5924:56:23"},"variableNames":[{"name":"tail","nativeSrc":"5916:4:23","nodeType":"YulIdentifier","src":"5916:4:23"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"5654:332:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5794:9:23","nodeType":"YulTypedName","src":"5794:9:23","type":""},{"name":"value1","nativeSrc":"5805:6:23","nodeType":"YulTypedName","src":"5805:6:23","type":""},{"name":"value0","nativeSrc":"5813:6:23","nodeType":"YulTypedName","src":"5813:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5824:4:23","nodeType":"YulTypedName","src":"5824:4:23","type":""}],"src":"5654:332:23"},{"body":{"nativeSrc":"6087:802:23","nodeType":"YulBlock","src":"6087:802:23","statements":[{"body":{"nativeSrc":"6133:16:23","nodeType":"YulBlock","src":"6133:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6142:1:23","nodeType":"YulLiteral","src":"6142:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"6145:1:23","nodeType":"YulLiteral","src":"6145:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6135:6:23","nodeType":"YulIdentifier","src":"6135:6:23"},"nativeSrc":"6135:12:23","nodeType":"YulFunctionCall","src":"6135:12:23"},"nativeSrc":"6135:12:23","nodeType":"YulExpressionStatement","src":"6135:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6108:7:23","nodeType":"YulIdentifier","src":"6108:7:23"},{"name":"headStart","nativeSrc":"6117:9:23","nodeType":"YulIdentifier","src":"6117:9:23"}],"functionName":{"name":"sub","nativeSrc":"6104:3:23","nodeType":"YulIdentifier","src":"6104:3:23"},"nativeSrc":"6104:23:23","nodeType":"YulFunctionCall","src":"6104:23:23"},{"kind":"number","nativeSrc":"6129:2:23","nodeType":"YulLiteral","src":"6129:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6100:3:23","nodeType":"YulIdentifier","src":"6100:3:23"},"nativeSrc":"6100:32:23","nodeType":"YulFunctionCall","src":"6100:32:23"},"nativeSrc":"6097:52:23","nodeType":"YulIf","src":"6097:52:23"},{"nativeSrc":"6158:36:23","nodeType":"YulVariableDeclaration","src":"6158:36:23","value":{"arguments":[{"name":"headStart","nativeSrc":"6184:9:23","nodeType":"YulIdentifier","src":"6184:9:23"}],"functionName":{"name":"calldataload","nativeSrc":"6171:12:23","nodeType":"YulIdentifier","src":"6171:12:23"},"nativeSrc":"6171:23:23","nodeType":"YulFunctionCall","src":"6171:23:23"},"variables":[{"name":"value","nativeSrc":"6162:5:23","nodeType":"YulTypedName","src":"6162:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6228:5:23","nodeType":"YulIdentifier","src":"6228:5:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"6203:24:23","nodeType":"YulIdentifier","src":"6203:24:23"},"nativeSrc":"6203:31:23","nodeType":"YulFunctionCall","src":"6203:31:23"},"nativeSrc":"6203:31:23","nodeType":"YulExpressionStatement","src":"6203:31:23"},{"nativeSrc":"6243:15:23","nodeType":"YulAssignment","src":"6243:15:23","value":{"name":"value","nativeSrc":"6253:5:23","nodeType":"YulIdentifier","src":"6253:5:23"},"variableNames":[{"name":"value0","nativeSrc":"6243:6:23","nodeType":"YulIdentifier","src":"6243:6:23"}]},{"nativeSrc":"6267:12:23","nodeType":"YulVariableDeclaration","src":"6267:12:23","value":{"kind":"number","nativeSrc":"6277:2:23","nodeType":"YulLiteral","src":"6277:2:23","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"6271:2:23","nodeType":"YulTypedName","src":"6271:2:23","type":""}]},{"nativeSrc":"6288:46:23","nodeType":"YulVariableDeclaration","src":"6288:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6319:9:23","nodeType":"YulIdentifier","src":"6319:9:23"},{"name":"_1","nativeSrc":"6330:2:23","nodeType":"YulIdentifier","src":"6330:2:23"}],"functionName":{"name":"add","nativeSrc":"6315:3:23","nodeType":"YulIdentifier","src":"6315:3:23"},"nativeSrc":"6315:18:23","nodeType":"YulFunctionCall","src":"6315:18:23"}],"functionName":{"name":"calldataload","nativeSrc":"6302:12:23","nodeType":"YulIdentifier","src":"6302:12:23"},"nativeSrc":"6302:32:23","nodeType":"YulFunctionCall","src":"6302:32:23"},"variables":[{"name":"offset","nativeSrc":"6292:6:23","nodeType":"YulTypedName","src":"6292:6:23","type":""}]},{"nativeSrc":"6343:28:23","nodeType":"YulVariableDeclaration","src":"6343:28:23","value":{"kind":"number","nativeSrc":"6353:18:23","nodeType":"YulLiteral","src":"6353:18:23","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nativeSrc":"6347:2:23","nodeType":"YulTypedName","src":"6347:2:23","type":""}]},{"body":{"nativeSrc":"6398:16:23","nodeType":"YulBlock","src":"6398:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6407:1:23","nodeType":"YulLiteral","src":"6407:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"6410:1:23","nodeType":"YulLiteral","src":"6410:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6400:6:23","nodeType":"YulIdentifier","src":"6400:6:23"},"nativeSrc":"6400:12:23","nodeType":"YulFunctionCall","src":"6400:12:23"},"nativeSrc":"6400:12:23","nodeType":"YulExpressionStatement","src":"6400:12:23"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6386:6:23","nodeType":"YulIdentifier","src":"6386:6:23"},{"name":"_2","nativeSrc":"6394:2:23","nodeType":"YulIdentifier","src":"6394:2:23"}],"functionName":{"name":"gt","nativeSrc":"6383:2:23","nodeType":"YulIdentifier","src":"6383:2:23"},"nativeSrc":"6383:14:23","nodeType":"YulFunctionCall","src":"6383:14:23"},"nativeSrc":"6380:34:23","nodeType":"YulIf","src":"6380:34:23"},{"nativeSrc":"6423:32:23","nodeType":"YulVariableDeclaration","src":"6423:32:23","value":{"arguments":[{"name":"headStart","nativeSrc":"6437:9:23","nodeType":"YulIdentifier","src":"6437:9:23"},{"name":"offset","nativeSrc":"6448:6:23","nodeType":"YulIdentifier","src":"6448:6:23"}],"functionName":{"name":"add","nativeSrc":"6433:3:23","nodeType":"YulIdentifier","src":"6433:3:23"},"nativeSrc":"6433:22:23","nodeType":"YulFunctionCall","src":"6433:22:23"},"variables":[{"name":"_3","nativeSrc":"6427:2:23","nodeType":"YulTypedName","src":"6427:2:23","type":""}]},{"body":{"nativeSrc":"6503:16:23","nodeType":"YulBlock","src":"6503:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6512:1:23","nodeType":"YulLiteral","src":"6512:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"6515:1:23","nodeType":"YulLiteral","src":"6515:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6505:6:23","nodeType":"YulIdentifier","src":"6505:6:23"},"nativeSrc":"6505:12:23","nodeType":"YulFunctionCall","src":"6505:12:23"},"nativeSrc":"6505:12:23","nodeType":"YulExpressionStatement","src":"6505:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"6482:2:23","nodeType":"YulIdentifier","src":"6482:2:23"},{"kind":"number","nativeSrc":"6486:4:23","nodeType":"YulLiteral","src":"6486:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"6478:3:23","nodeType":"YulIdentifier","src":"6478:3:23"},"nativeSrc":"6478:13:23","nodeType":"YulFunctionCall","src":"6478:13:23"},{"name":"dataEnd","nativeSrc":"6493:7:23","nodeType":"YulIdentifier","src":"6493:7:23"}],"functionName":{"name":"slt","nativeSrc":"6474:3:23","nodeType":"YulIdentifier","src":"6474:3:23"},"nativeSrc":"6474:27:23","nodeType":"YulFunctionCall","src":"6474:27:23"}],"functionName":{"name":"iszero","nativeSrc":"6467:6:23","nodeType":"YulIdentifier","src":"6467:6:23"},"nativeSrc":"6467:35:23","nodeType":"YulFunctionCall","src":"6467:35:23"},"nativeSrc":"6464:55:23","nodeType":"YulIf","src":"6464:55:23"},{"nativeSrc":"6528:26:23","nodeType":"YulVariableDeclaration","src":"6528:26:23","value":{"arguments":[{"name":"_3","nativeSrc":"6551:2:23","nodeType":"YulIdentifier","src":"6551:2:23"}],"functionName":{"name":"calldataload","nativeSrc":"6538:12:23","nodeType":"YulIdentifier","src":"6538:12:23"},"nativeSrc":"6538:16:23","nodeType":"YulFunctionCall","src":"6538:16:23"},"variables":[{"name":"_4","nativeSrc":"6532:2:23","nodeType":"YulTypedName","src":"6532:2:23","type":""}]},{"body":{"nativeSrc":"6577:22:23","nodeType":"YulBlock","src":"6577:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6579:16:23","nodeType":"YulIdentifier","src":"6579:16:23"},"nativeSrc":"6579:18:23","nodeType":"YulFunctionCall","src":"6579:18:23"},"nativeSrc":"6579:18:23","nodeType":"YulExpressionStatement","src":"6579:18:23"}]},"condition":{"arguments":[{"name":"_4","nativeSrc":"6569:2:23","nodeType":"YulIdentifier","src":"6569:2:23"},{"name":"_2","nativeSrc":"6573:2:23","nodeType":"YulIdentifier","src":"6573:2:23"}],"functionName":{"name":"gt","nativeSrc":"6566:2:23","nodeType":"YulIdentifier","src":"6566:2:23"},"nativeSrc":"6566:10:23","nodeType":"YulFunctionCall","src":"6566:10:23"},"nativeSrc":"6563:36:23","nodeType":"YulIf","src":"6563:36:23"},{"nativeSrc":"6608:66:23","nodeType":"YulVariableDeclaration","src":"6608:66:23","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nativeSrc":"6649:2:23","nodeType":"YulIdentifier","src":"6649:2:23"},{"kind":"number","nativeSrc":"6653:4:23","nodeType":"YulLiteral","src":"6653:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"6645:3:23","nodeType":"YulIdentifier","src":"6645:3:23"},"nativeSrc":"6645:13:23","nodeType":"YulFunctionCall","src":"6645:13:23"},{"arguments":[{"kind":"number","nativeSrc":"6664:2:23","nodeType":"YulLiteral","src":"6664:2:23","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"6660:3:23","nodeType":"YulIdentifier","src":"6660:3:23"},"nativeSrc":"6660:7:23","nodeType":"YulFunctionCall","src":"6660:7:23"}],"functionName":{"name":"and","nativeSrc":"6641:3:23","nodeType":"YulIdentifier","src":"6641:3:23"},"nativeSrc":"6641:27:23","nodeType":"YulFunctionCall","src":"6641:27:23"},{"name":"_1","nativeSrc":"6670:2:23","nodeType":"YulIdentifier","src":"6670:2:23"}],"functionName":{"name":"add","nativeSrc":"6637:3:23","nodeType":"YulIdentifier","src":"6637:3:23"},"nativeSrc":"6637:36:23","nodeType":"YulFunctionCall","src":"6637:36:23"}],"functionName":{"name":"allocate_memory","nativeSrc":"6621:15:23","nodeType":"YulIdentifier","src":"6621:15:23"},"nativeSrc":"6621:53:23","nodeType":"YulFunctionCall","src":"6621:53:23"},"variables":[{"name":"array","nativeSrc":"6612:5:23","nodeType":"YulTypedName","src":"6612:5:23","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"6690:5:23","nodeType":"YulIdentifier","src":"6690:5:23"},{"name":"_4","nativeSrc":"6697:2:23","nodeType":"YulIdentifier","src":"6697:2:23"}],"functionName":{"name":"mstore","nativeSrc":"6683:6:23","nodeType":"YulIdentifier","src":"6683:6:23"},"nativeSrc":"6683:17:23","nodeType":"YulFunctionCall","src":"6683:17:23"},"nativeSrc":"6683:17:23","nodeType":"YulExpressionStatement","src":"6683:17:23"},{"body":{"nativeSrc":"6746:16:23","nodeType":"YulBlock","src":"6746:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6755:1:23","nodeType":"YulLiteral","src":"6755:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"6758:1:23","nodeType":"YulLiteral","src":"6758:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6748:6:23","nodeType":"YulIdentifier","src":"6748:6:23"},"nativeSrc":"6748:12:23","nodeType":"YulFunctionCall","src":"6748:12:23"},"nativeSrc":"6748:12:23","nodeType":"YulExpressionStatement","src":"6748:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"6723:2:23","nodeType":"YulIdentifier","src":"6723:2:23"},{"name":"_4","nativeSrc":"6727:2:23","nodeType":"YulIdentifier","src":"6727:2:23"}],"functionName":{"name":"add","nativeSrc":"6719:3:23","nodeType":"YulIdentifier","src":"6719:3:23"},"nativeSrc":"6719:11:23","nodeType":"YulFunctionCall","src":"6719:11:23"},{"name":"_1","nativeSrc":"6732:2:23","nodeType":"YulIdentifier","src":"6732:2:23"}],"functionName":{"name":"add","nativeSrc":"6715:3:23","nodeType":"YulIdentifier","src":"6715:3:23"},"nativeSrc":"6715:20:23","nodeType":"YulFunctionCall","src":"6715:20:23"},{"name":"dataEnd","nativeSrc":"6737:7:23","nodeType":"YulIdentifier","src":"6737:7:23"}],"functionName":{"name":"gt","nativeSrc":"6712:2:23","nodeType":"YulIdentifier","src":"6712:2:23"},"nativeSrc":"6712:33:23","nodeType":"YulFunctionCall","src":"6712:33:23"},"nativeSrc":"6709:53:23","nodeType":"YulIf","src":"6709:53:23"},{"expression":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"6788:5:23","nodeType":"YulIdentifier","src":"6788:5:23"},{"name":"_1","nativeSrc":"6795:2:23","nodeType":"YulIdentifier","src":"6795:2:23"}],"functionName":{"name":"add","nativeSrc":"6784:3:23","nodeType":"YulIdentifier","src":"6784:3:23"},"nativeSrc":"6784:14:23","nodeType":"YulFunctionCall","src":"6784:14:23"},{"arguments":[{"name":"_3","nativeSrc":"6804:2:23","nodeType":"YulIdentifier","src":"6804:2:23"},{"name":"_1","nativeSrc":"6808:2:23","nodeType":"YulIdentifier","src":"6808:2:23"}],"functionName":{"name":"add","nativeSrc":"6800:3:23","nodeType":"YulIdentifier","src":"6800:3:23"},"nativeSrc":"6800:11:23","nodeType":"YulFunctionCall","src":"6800:11:23"},{"name":"_4","nativeSrc":"6813:2:23","nodeType":"YulIdentifier","src":"6813:2:23"}],"functionName":{"name":"calldatacopy","nativeSrc":"6771:12:23","nodeType":"YulIdentifier","src":"6771:12:23"},"nativeSrc":"6771:45:23","nodeType":"YulFunctionCall","src":"6771:45:23"},"nativeSrc":"6771:45:23","nodeType":"YulExpressionStatement","src":"6771:45:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nativeSrc":"6840:5:23","nodeType":"YulIdentifier","src":"6840:5:23"},{"name":"_4","nativeSrc":"6847:2:23","nodeType":"YulIdentifier","src":"6847:2:23"}],"functionName":{"name":"add","nativeSrc":"6836:3:23","nodeType":"YulIdentifier","src":"6836:3:23"},"nativeSrc":"6836:14:23","nodeType":"YulFunctionCall","src":"6836:14:23"},{"name":"_1","nativeSrc":"6852:2:23","nodeType":"YulIdentifier","src":"6852:2:23"}],"functionName":{"name":"add","nativeSrc":"6832:3:23","nodeType":"YulIdentifier","src":"6832:3:23"},"nativeSrc":"6832:23:23","nodeType":"YulFunctionCall","src":"6832:23:23"},{"kind":"number","nativeSrc":"6857:1:23","nodeType":"YulLiteral","src":"6857:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6825:6:23","nodeType":"YulIdentifier","src":"6825:6:23"},"nativeSrc":"6825:34:23","nodeType":"YulFunctionCall","src":"6825:34:23"},"nativeSrc":"6825:34:23","nodeType":"YulExpressionStatement","src":"6825:34:23"},{"nativeSrc":"6868:15:23","nodeType":"YulAssignment","src":"6868:15:23","value":{"name":"array","nativeSrc":"6878:5:23","nodeType":"YulIdentifier","src":"6878:5:23"},"variableNames":[{"name":"value1","nativeSrc":"6868:6:23","nodeType":"YulIdentifier","src":"6868:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"5991:898:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6045:9:23","nodeType":"YulTypedName","src":"6045:9:23","type":""},{"name":"dataEnd","nativeSrc":"6056:7:23","nodeType":"YulTypedName","src":"6056:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6068:6:23","nodeType":"YulTypedName","src":"6068:6:23","type":""},{"name":"value1","nativeSrc":"6076:6:23","nodeType":"YulTypedName","src":"6076:6:23","type":""}],"src":"5991:898:23"},{"body":{"nativeSrc":"6995:76:23","nodeType":"YulBlock","src":"6995:76:23","statements":[{"nativeSrc":"7005:26:23","nodeType":"YulAssignment","src":"7005:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"7017:9:23","nodeType":"YulIdentifier","src":"7017:9:23"},{"kind":"number","nativeSrc":"7028:2:23","nodeType":"YulLiteral","src":"7028:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7013:3:23","nodeType":"YulIdentifier","src":"7013:3:23"},"nativeSrc":"7013:18:23","nodeType":"YulFunctionCall","src":"7013:18:23"},"variableNames":[{"name":"tail","nativeSrc":"7005:4:23","nodeType":"YulIdentifier","src":"7005:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7047:9:23","nodeType":"YulIdentifier","src":"7047:9:23"},{"name":"value0","nativeSrc":"7058:6:23","nodeType":"YulIdentifier","src":"7058:6:23"}],"functionName":{"name":"mstore","nativeSrc":"7040:6:23","nodeType":"YulIdentifier","src":"7040:6:23"},"nativeSrc":"7040:25:23","nodeType":"YulFunctionCall","src":"7040:25:23"},"nativeSrc":"7040:25:23","nodeType":"YulExpressionStatement","src":"7040:25:23"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"6894:177:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6964:9:23","nodeType":"YulTypedName","src":"6964:9:23","type":""},{"name":"value0","nativeSrc":"6975:6:23","nodeType":"YulTypedName","src":"6975:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6986:4:23","nodeType":"YulTypedName","src":"6986:4:23","type":""}],"src":"6894:177:23"},{"body":{"nativeSrc":"7137:404:23","nodeType":"YulBlock","src":"7137:404:23","statements":[{"nativeSrc":"7147:26:23","nodeType":"YulVariableDeclaration","src":"7147:26:23","value":{"arguments":[{"name":"value","nativeSrc":"7167:5:23","nodeType":"YulIdentifier","src":"7167:5:23"}],"functionName":{"name":"mload","nativeSrc":"7161:5:23","nodeType":"YulIdentifier","src":"7161:5:23"},"nativeSrc":"7161:12:23","nodeType":"YulFunctionCall","src":"7161:12:23"},"variables":[{"name":"length","nativeSrc":"7151:6:23","nodeType":"YulTypedName","src":"7151:6:23","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"7189:3:23","nodeType":"YulIdentifier","src":"7189:3:23"},{"name":"length","nativeSrc":"7194:6:23","nodeType":"YulIdentifier","src":"7194:6:23"}],"functionName":{"name":"mstore","nativeSrc":"7182:6:23","nodeType":"YulIdentifier","src":"7182:6:23"},"nativeSrc":"7182:19:23","nodeType":"YulFunctionCall","src":"7182:19:23"},"nativeSrc":"7182:19:23","nodeType":"YulExpressionStatement","src":"7182:19:23"},{"nativeSrc":"7210:14:23","nodeType":"YulVariableDeclaration","src":"7210:14:23","value":{"kind":"number","nativeSrc":"7220:4:23","nodeType":"YulLiteral","src":"7220:4:23","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"7214:2:23","nodeType":"YulTypedName","src":"7214:2:23","type":""}]},{"nativeSrc":"7233:21:23","nodeType":"YulAssignment","src":"7233:21:23","value":{"arguments":[{"name":"pos","nativeSrc":"7244:3:23","nodeType":"YulIdentifier","src":"7244:3:23"},{"kind":"number","nativeSrc":"7249:4:23","nodeType":"YulLiteral","src":"7249:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7240:3:23","nodeType":"YulIdentifier","src":"7240:3:23"},"nativeSrc":"7240:14:23","nodeType":"YulFunctionCall","src":"7240:14:23"},"variableNames":[{"name":"pos","nativeSrc":"7233:3:23","nodeType":"YulIdentifier","src":"7233:3:23"}]},{"nativeSrc":"7263:30:23","nodeType":"YulVariableDeclaration","src":"7263:30:23","value":{"arguments":[{"name":"value","nativeSrc":"7281:5:23","nodeType":"YulIdentifier","src":"7281:5:23"},{"kind":"number","nativeSrc":"7288:4:23","nodeType":"YulLiteral","src":"7288:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7277:3:23","nodeType":"YulIdentifier","src":"7277:3:23"},"nativeSrc":"7277:16:23","nodeType":"YulFunctionCall","src":"7277:16:23"},"variables":[{"name":"srcPtr","nativeSrc":"7267:6:23","nodeType":"YulTypedName","src":"7267:6:23","type":""}]},{"nativeSrc":"7302:10:23","nodeType":"YulVariableDeclaration","src":"7302:10:23","value":{"kind":"number","nativeSrc":"7311:1:23","nodeType":"YulLiteral","src":"7311:1:23","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7306:1:23","nodeType":"YulTypedName","src":"7306:1:23","type":""}]},{"body":{"nativeSrc":"7370:146:23","nodeType":"YulBlock","src":"7370:146:23","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7391:3:23","nodeType":"YulIdentifier","src":"7391:3:23"},{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"7406:6:23","nodeType":"YulIdentifier","src":"7406:6:23"}],"functionName":{"name":"mload","nativeSrc":"7400:5:23","nodeType":"YulIdentifier","src":"7400:5:23"},"nativeSrc":"7400:13:23","nodeType":"YulFunctionCall","src":"7400:13:23"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7423:3:23","nodeType":"YulLiteral","src":"7423:3:23","type":"","value":"160"},{"kind":"number","nativeSrc":"7428:1:23","nodeType":"YulLiteral","src":"7428:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7419:3:23","nodeType":"YulIdentifier","src":"7419:3:23"},"nativeSrc":"7419:11:23","nodeType":"YulFunctionCall","src":"7419:11:23"},{"kind":"number","nativeSrc":"7432:1:23","nodeType":"YulLiteral","src":"7432:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7415:3:23","nodeType":"YulIdentifier","src":"7415:3:23"},"nativeSrc":"7415:19:23","nodeType":"YulFunctionCall","src":"7415:19:23"}],"functionName":{"name":"and","nativeSrc":"7396:3:23","nodeType":"YulIdentifier","src":"7396:3:23"},"nativeSrc":"7396:39:23","nodeType":"YulFunctionCall","src":"7396:39:23"}],"functionName":{"name":"mstore","nativeSrc":"7384:6:23","nodeType":"YulIdentifier","src":"7384:6:23"},"nativeSrc":"7384:52:23","nodeType":"YulFunctionCall","src":"7384:52:23"},"nativeSrc":"7384:52:23","nodeType":"YulExpressionStatement","src":"7384:52:23"},{"nativeSrc":"7449:19:23","nodeType":"YulAssignment","src":"7449:19:23","value":{"arguments":[{"name":"pos","nativeSrc":"7460:3:23","nodeType":"YulIdentifier","src":"7460:3:23"},{"name":"_1","nativeSrc":"7465:2:23","nodeType":"YulIdentifier","src":"7465:2:23"}],"functionName":{"name":"add","nativeSrc":"7456:3:23","nodeType":"YulIdentifier","src":"7456:3:23"},"nativeSrc":"7456:12:23","nodeType":"YulFunctionCall","src":"7456:12:23"},"variableNames":[{"name":"pos","nativeSrc":"7449:3:23","nodeType":"YulIdentifier","src":"7449:3:23"}]},{"nativeSrc":"7481:25:23","nodeType":"YulAssignment","src":"7481:25:23","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7495:6:23","nodeType":"YulIdentifier","src":"7495:6:23"},{"name":"_1","nativeSrc":"7503:2:23","nodeType":"YulIdentifier","src":"7503:2:23"}],"functionName":{"name":"add","nativeSrc":"7491:3:23","nodeType":"YulIdentifier","src":"7491:3:23"},"nativeSrc":"7491:15:23","nodeType":"YulFunctionCall","src":"7491:15:23"},"variableNames":[{"name":"srcPtr","nativeSrc":"7481:6:23","nodeType":"YulIdentifier","src":"7481:6:23"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7332:1:23","nodeType":"YulIdentifier","src":"7332:1:23"},{"name":"length","nativeSrc":"7335:6:23","nodeType":"YulIdentifier","src":"7335:6:23"}],"functionName":{"name":"lt","nativeSrc":"7329:2:23","nodeType":"YulIdentifier","src":"7329:2:23"},"nativeSrc":"7329:13:23","nodeType":"YulFunctionCall","src":"7329:13:23"},"nativeSrc":"7321:195:23","nodeType":"YulForLoop","post":{"nativeSrc":"7343:18:23","nodeType":"YulBlock","src":"7343:18:23","statements":[{"nativeSrc":"7345:14:23","nodeType":"YulAssignment","src":"7345:14:23","value":{"arguments":[{"name":"i","nativeSrc":"7354:1:23","nodeType":"YulIdentifier","src":"7354:1:23"},{"kind":"number","nativeSrc":"7357:1:23","nodeType":"YulLiteral","src":"7357:1:23","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7350:3:23","nodeType":"YulIdentifier","src":"7350:3:23"},"nativeSrc":"7350:9:23","nodeType":"YulFunctionCall","src":"7350:9:23"},"variableNames":[{"name":"i","nativeSrc":"7345:1:23","nodeType":"YulIdentifier","src":"7345:1:23"}]}]},"pre":{"nativeSrc":"7325:3:23","nodeType":"YulBlock","src":"7325:3:23","statements":[]},"src":"7321:195:23"},{"nativeSrc":"7525:10:23","nodeType":"YulAssignment","src":"7525:10:23","value":{"name":"pos","nativeSrc":"7532:3:23","nodeType":"YulIdentifier","src":"7532:3:23"},"variableNames":[{"name":"end","nativeSrc":"7525:3:23","nodeType":"YulIdentifier","src":"7525:3:23"}]}]},"name":"abi_encode_array_address_dyn","nativeSrc":"7076:465:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7114:5:23","nodeType":"YulTypedName","src":"7114:5:23","type":""},{"name":"pos","nativeSrc":"7121:3:23","nodeType":"YulTypedName","src":"7121:3:23","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7129:3:23","nodeType":"YulTypedName","src":"7129:3:23","type":""}],"src":"7076:465:23"},{"body":{"nativeSrc":"7697:110:23","nodeType":"YulBlock","src":"7697:110:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7714:9:23","nodeType":"YulIdentifier","src":"7714:9:23"},{"kind":"number","nativeSrc":"7725:2:23","nodeType":"YulLiteral","src":"7725:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7707:6:23","nodeType":"YulIdentifier","src":"7707:6:23"},"nativeSrc":"7707:21:23","nodeType":"YulFunctionCall","src":"7707:21:23"},"nativeSrc":"7707:21:23","nodeType":"YulExpressionStatement","src":"7707:21:23"},{"nativeSrc":"7737:64:23","nodeType":"YulAssignment","src":"7737:64:23","value":{"arguments":[{"name":"value0","nativeSrc":"7774:6:23","nodeType":"YulIdentifier","src":"7774:6:23"},{"arguments":[{"name":"headStart","nativeSrc":"7786:9:23","nodeType":"YulIdentifier","src":"7786:9:23"},{"kind":"number","nativeSrc":"7797:2:23","nodeType":"YulLiteral","src":"7797:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7782:3:23","nodeType":"YulIdentifier","src":"7782:3:23"},"nativeSrc":"7782:18:23","nodeType":"YulFunctionCall","src":"7782:18:23"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"7745:28:23","nodeType":"YulIdentifier","src":"7745:28:23"},"nativeSrc":"7745:56:23","nodeType":"YulFunctionCall","src":"7745:56:23"},"variableNames":[{"name":"tail","nativeSrc":"7737:4:23","nodeType":"YulIdentifier","src":"7737:4:23"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"7546:261:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7666:9:23","nodeType":"YulTypedName","src":"7666:9:23","type":""},{"name":"value0","nativeSrc":"7677:6:23","nodeType":"YulTypedName","src":"7677:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7688:4:23","nodeType":"YulTypedName","src":"7688:4:23","type":""}],"src":"7546:261:23"},{"body":{"nativeSrc":"7933:477:23","nodeType":"YulBlock","src":"7933:477:23","statements":[{"body":{"nativeSrc":"7980:16:23","nodeType":"YulBlock","src":"7980:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7989:1:23","nodeType":"YulLiteral","src":"7989:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"7992:1:23","nodeType":"YulLiteral","src":"7992:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7982:6:23","nodeType":"YulIdentifier","src":"7982:6:23"},"nativeSrc":"7982:12:23","nodeType":"YulFunctionCall","src":"7982:12:23"},"nativeSrc":"7982:12:23","nodeType":"YulExpressionStatement","src":"7982:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7954:7:23","nodeType":"YulIdentifier","src":"7954:7:23"},{"name":"headStart","nativeSrc":"7963:9:23","nodeType":"YulIdentifier","src":"7963:9:23"}],"functionName":{"name":"sub","nativeSrc":"7950:3:23","nodeType":"YulIdentifier","src":"7950:3:23"},"nativeSrc":"7950:23:23","nodeType":"YulFunctionCall","src":"7950:23:23"},{"kind":"number","nativeSrc":"7975:3:23","nodeType":"YulLiteral","src":"7975:3:23","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"7946:3:23","nodeType":"YulIdentifier","src":"7946:3:23"},"nativeSrc":"7946:33:23","nodeType":"YulFunctionCall","src":"7946:33:23"},"nativeSrc":"7943:53:23","nodeType":"YulIf","src":"7943:53:23"},{"nativeSrc":"8005:36:23","nodeType":"YulVariableDeclaration","src":"8005:36:23","value":{"arguments":[{"name":"headStart","nativeSrc":"8031:9:23","nodeType":"YulIdentifier","src":"8031:9:23"}],"functionName":{"name":"calldataload","nativeSrc":"8018:12:23","nodeType":"YulIdentifier","src":"8018:12:23"},"nativeSrc":"8018:23:23","nodeType":"YulFunctionCall","src":"8018:23:23"},"variables":[{"name":"value","nativeSrc":"8009:5:23","nodeType":"YulTypedName","src":"8009:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"8075:5:23","nodeType":"YulIdentifier","src":"8075:5:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"8050:24:23","nodeType":"YulIdentifier","src":"8050:24:23"},"nativeSrc":"8050:31:23","nodeType":"YulFunctionCall","src":"8050:31:23"},"nativeSrc":"8050:31:23","nodeType":"YulExpressionStatement","src":"8050:31:23"},{"nativeSrc":"8090:15:23","nodeType":"YulAssignment","src":"8090:15:23","value":{"name":"value","nativeSrc":"8100:5:23","nodeType":"YulIdentifier","src":"8100:5:23"},"variableNames":[{"name":"value0","nativeSrc":"8090:6:23","nodeType":"YulIdentifier","src":"8090:6:23"}]},{"nativeSrc":"8114:47:23","nodeType":"YulVariableDeclaration","src":"8114:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8146:9:23","nodeType":"YulIdentifier","src":"8146:9:23"},{"kind":"number","nativeSrc":"8157:2:23","nodeType":"YulLiteral","src":"8157:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8142:3:23","nodeType":"YulIdentifier","src":"8142:3:23"},"nativeSrc":"8142:18:23","nodeType":"YulFunctionCall","src":"8142:18:23"}],"functionName":{"name":"calldataload","nativeSrc":"8129:12:23","nodeType":"YulIdentifier","src":"8129:12:23"},"nativeSrc":"8129:32:23","nodeType":"YulFunctionCall","src":"8129:32:23"},"variables":[{"name":"value_1","nativeSrc":"8118:7:23","nodeType":"YulTypedName","src":"8118:7:23","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"8195:7:23","nodeType":"YulIdentifier","src":"8195:7:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"8170:24:23","nodeType":"YulIdentifier","src":"8170:24:23"},"nativeSrc":"8170:33:23","nodeType":"YulFunctionCall","src":"8170:33:23"},"nativeSrc":"8170:33:23","nodeType":"YulExpressionStatement","src":"8170:33:23"},{"nativeSrc":"8212:17:23","nodeType":"YulAssignment","src":"8212:17:23","value":{"name":"value_1","nativeSrc":"8222:7:23","nodeType":"YulIdentifier","src":"8222:7:23"},"variableNames":[{"name":"value1","nativeSrc":"8212:6:23","nodeType":"YulIdentifier","src":"8212:6:23"}]},{"nativeSrc":"8238:42:23","nodeType":"YulAssignment","src":"8238:42:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8265:9:23","nodeType":"YulIdentifier","src":"8265:9:23"},{"kind":"number","nativeSrc":"8276:2:23","nodeType":"YulLiteral","src":"8276:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8261:3:23","nodeType":"YulIdentifier","src":"8261:3:23"},"nativeSrc":"8261:18:23","nodeType":"YulFunctionCall","src":"8261:18:23"}],"functionName":{"name":"calldataload","nativeSrc":"8248:12:23","nodeType":"YulIdentifier","src":"8248:12:23"},"nativeSrc":"8248:32:23","nodeType":"YulFunctionCall","src":"8248:32:23"},"variableNames":[{"name":"value2","nativeSrc":"8238:6:23","nodeType":"YulIdentifier","src":"8238:6:23"}]},{"nativeSrc":"8289:47:23","nodeType":"YulVariableDeclaration","src":"8289:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8321:9:23","nodeType":"YulIdentifier","src":"8321:9:23"},{"kind":"number","nativeSrc":"8332:2:23","nodeType":"YulLiteral","src":"8332:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8317:3:23","nodeType":"YulIdentifier","src":"8317:3:23"},"nativeSrc":"8317:18:23","nodeType":"YulFunctionCall","src":"8317:18:23"}],"functionName":{"name":"calldataload","nativeSrc":"8304:12:23","nodeType":"YulIdentifier","src":"8304:12:23"},"nativeSrc":"8304:32:23","nodeType":"YulFunctionCall","src":"8304:32:23"},"variables":[{"name":"value_2","nativeSrc":"8293:7:23","nodeType":"YulTypedName","src":"8293:7:23","type":""}]},{"expression":{"arguments":[{"name":"value_2","nativeSrc":"8370:7:23","nodeType":"YulIdentifier","src":"8370:7:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"8345:24:23","nodeType":"YulIdentifier","src":"8345:24:23"},"nativeSrc":"8345:33:23","nodeType":"YulFunctionCall","src":"8345:33:23"},"nativeSrc":"8345:33:23","nodeType":"YulExpressionStatement","src":"8345:33:23"},{"nativeSrc":"8387:17:23","nodeType":"YulAssignment","src":"8387:17:23","value":{"name":"value_2","nativeSrc":"8397:7:23","nodeType":"YulIdentifier","src":"8397:7:23"},"variableNames":[{"name":"value3","nativeSrc":"8387:6:23","nodeType":"YulIdentifier","src":"8387:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_address","nativeSrc":"7812:598:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7875:9:23","nodeType":"YulTypedName","src":"7875:9:23","type":""},{"name":"dataEnd","nativeSrc":"7886:7:23","nodeType":"YulTypedName","src":"7886:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7898:6:23","nodeType":"YulTypedName","src":"7898:6:23","type":""},{"name":"value1","nativeSrc":"7906:6:23","nodeType":"YulTypedName","src":"7906:6:23","type":""},{"name":"value2","nativeSrc":"7914:6:23","nodeType":"YulTypedName","src":"7914:6:23","type":""},{"name":"value3","nativeSrc":"7922:6:23","nodeType":"YulTypedName","src":"7922:6:23","type":""}],"src":"7812:598:23"},{"body":{"nativeSrc":"8542:102:23","nodeType":"YulBlock","src":"8542:102:23","statements":[{"nativeSrc":"8552:26:23","nodeType":"YulAssignment","src":"8552:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"8564:9:23","nodeType":"YulIdentifier","src":"8564:9:23"},{"kind":"number","nativeSrc":"8575:2:23","nodeType":"YulLiteral","src":"8575:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8560:3:23","nodeType":"YulIdentifier","src":"8560:3:23"},"nativeSrc":"8560:18:23","nodeType":"YulFunctionCall","src":"8560:18:23"},"variableNames":[{"name":"tail","nativeSrc":"8552:4:23","nodeType":"YulIdentifier","src":"8552:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8594:9:23","nodeType":"YulIdentifier","src":"8594:9:23"},{"arguments":[{"name":"value0","nativeSrc":"8609:6:23","nodeType":"YulIdentifier","src":"8609:6:23"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8625:3:23","nodeType":"YulLiteral","src":"8625:3:23","type":"","value":"160"},{"kind":"number","nativeSrc":"8630:1:23","nodeType":"YulLiteral","src":"8630:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"8621:3:23","nodeType":"YulIdentifier","src":"8621:3:23"},"nativeSrc":"8621:11:23","nodeType":"YulFunctionCall","src":"8621:11:23"},{"kind":"number","nativeSrc":"8634:1:23","nodeType":"YulLiteral","src":"8634:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"8617:3:23","nodeType":"YulIdentifier","src":"8617:3:23"},"nativeSrc":"8617:19:23","nodeType":"YulFunctionCall","src":"8617:19:23"}],"functionName":{"name":"and","nativeSrc":"8605:3:23","nodeType":"YulIdentifier","src":"8605:3:23"},"nativeSrc":"8605:32:23","nodeType":"YulFunctionCall","src":"8605:32:23"}],"functionName":{"name":"mstore","nativeSrc":"8587:6:23","nodeType":"YulIdentifier","src":"8587:6:23"},"nativeSrc":"8587:51:23","nodeType":"YulFunctionCall","src":"8587:51:23"},"nativeSrc":"8587:51:23","nodeType":"YulExpressionStatement","src":"8587:51:23"}]},"name":"abi_encode_tuple_t_contract$_IBaluniV1Registry_$6110__to_t_address__fromStack_reversed","nativeSrc":"8415:229:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8511:9:23","nodeType":"YulTypedName","src":"8511:9:23","type":""},{"name":"value0","nativeSrc":"8522:6:23","nodeType":"YulTypedName","src":"8522:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8533:4:23","nodeType":"YulTypedName","src":"8533:4:23","type":""}],"src":"8415:229:23"},{"body":{"nativeSrc":"8872:597:23","nodeType":"YulBlock","src":"8872:597:23","statements":[{"nativeSrc":"8882:32:23","nodeType":"YulVariableDeclaration","src":"8882:32:23","value":{"arguments":[{"name":"headStart","nativeSrc":"8900:9:23","nodeType":"YulIdentifier","src":"8900:9:23"},{"kind":"number","nativeSrc":"8911:2:23","nodeType":"YulLiteral","src":"8911:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8896:3:23","nodeType":"YulIdentifier","src":"8896:3:23"},"nativeSrc":"8896:18:23","nodeType":"YulFunctionCall","src":"8896:18:23"},"variables":[{"name":"tail_1","nativeSrc":"8886:6:23","nodeType":"YulTypedName","src":"8886:6:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8930:9:23","nodeType":"YulIdentifier","src":"8930:9:23"},{"kind":"number","nativeSrc":"8941:2:23","nodeType":"YulLiteral","src":"8941:2:23","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"8923:6:23","nodeType":"YulIdentifier","src":"8923:6:23"},"nativeSrc":"8923:21:23","nodeType":"YulFunctionCall","src":"8923:21:23"},"nativeSrc":"8923:21:23","nodeType":"YulExpressionStatement","src":"8923:21:23"},{"nativeSrc":"8953:17:23","nodeType":"YulVariableDeclaration","src":"8953:17:23","value":{"name":"tail_1","nativeSrc":"8964:6:23","nodeType":"YulIdentifier","src":"8964:6:23"},"variables":[{"name":"pos","nativeSrc":"8957:3:23","nodeType":"YulTypedName","src":"8957:3:23","type":""}]},{"nativeSrc":"8979:27:23","nodeType":"YulVariableDeclaration","src":"8979:27:23","value":{"arguments":[{"name":"value0","nativeSrc":"8999:6:23","nodeType":"YulIdentifier","src":"8999:6:23"}],"functionName":{"name":"mload","nativeSrc":"8993:5:23","nodeType":"YulIdentifier","src":"8993:5:23"},"nativeSrc":"8993:13:23","nodeType":"YulFunctionCall","src":"8993:13:23"},"variables":[{"name":"length","nativeSrc":"8983:6:23","nodeType":"YulTypedName","src":"8983:6:23","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"9022:6:23","nodeType":"YulIdentifier","src":"9022:6:23"},{"name":"length","nativeSrc":"9030:6:23","nodeType":"YulIdentifier","src":"9030:6:23"}],"functionName":{"name":"mstore","nativeSrc":"9015:6:23","nodeType":"YulIdentifier","src":"9015:6:23"},"nativeSrc":"9015:22:23","nodeType":"YulFunctionCall","src":"9015:22:23"},"nativeSrc":"9015:22:23","nodeType":"YulExpressionStatement","src":"9015:22:23"},{"nativeSrc":"9046:25:23","nodeType":"YulAssignment","src":"9046:25:23","value":{"arguments":[{"name":"headStart","nativeSrc":"9057:9:23","nodeType":"YulIdentifier","src":"9057:9:23"},{"kind":"number","nativeSrc":"9068:2:23","nodeType":"YulLiteral","src":"9068:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9053:3:23","nodeType":"YulIdentifier","src":"9053:3:23"},"nativeSrc":"9053:18:23","nodeType":"YulFunctionCall","src":"9053:18:23"},"variableNames":[{"name":"pos","nativeSrc":"9046:3:23","nodeType":"YulIdentifier","src":"9046:3:23"}]},{"nativeSrc":"9080:14:23","nodeType":"YulVariableDeclaration","src":"9080:14:23","value":{"kind":"number","nativeSrc":"9090:4:23","nodeType":"YulLiteral","src":"9090:4:23","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"9084:2:23","nodeType":"YulTypedName","src":"9084:2:23","type":""}]},{"nativeSrc":"9103:31:23","nodeType":"YulVariableDeclaration","src":"9103:31:23","value":{"arguments":[{"name":"value0","nativeSrc":"9121:6:23","nodeType":"YulIdentifier","src":"9121:6:23"},{"kind":"number","nativeSrc":"9129:4:23","nodeType":"YulLiteral","src":"9129:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9117:3:23","nodeType":"YulIdentifier","src":"9117:3:23"},"nativeSrc":"9117:17:23","nodeType":"YulFunctionCall","src":"9117:17:23"},"variables":[{"name":"srcPtr","nativeSrc":"9107:6:23","nodeType":"YulTypedName","src":"9107:6:23","type":""}]},{"nativeSrc":"9143:10:23","nodeType":"YulVariableDeclaration","src":"9143:10:23","value":{"kind":"number","nativeSrc":"9152:1:23","nodeType":"YulLiteral","src":"9152:1:23","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"9147:1:23","nodeType":"YulTypedName","src":"9147:1:23","type":""}]},{"body":{"nativeSrc":"9211:136:23","nodeType":"YulBlock","src":"9211:136:23","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9232:3:23","nodeType":"YulIdentifier","src":"9232:3:23"},{"arguments":[{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"9257:6:23","nodeType":"YulIdentifier","src":"9257:6:23"}],"functionName":{"name":"mload","nativeSrc":"9251:5:23","nodeType":"YulIdentifier","src":"9251:5:23"},"nativeSrc":"9251:13:23","nodeType":"YulFunctionCall","src":"9251:13:23"}],"functionName":{"name":"iszero","nativeSrc":"9244:6:23","nodeType":"YulIdentifier","src":"9244:6:23"},"nativeSrc":"9244:21:23","nodeType":"YulFunctionCall","src":"9244:21:23"}],"functionName":{"name":"iszero","nativeSrc":"9237:6:23","nodeType":"YulIdentifier","src":"9237:6:23"},"nativeSrc":"9237:29:23","nodeType":"YulFunctionCall","src":"9237:29:23"}],"functionName":{"name":"mstore","nativeSrc":"9225:6:23","nodeType":"YulIdentifier","src":"9225:6:23"},"nativeSrc":"9225:42:23","nodeType":"YulFunctionCall","src":"9225:42:23"},"nativeSrc":"9225:42:23","nodeType":"YulExpressionStatement","src":"9225:42:23"},{"nativeSrc":"9280:19:23","nodeType":"YulAssignment","src":"9280:19:23","value":{"arguments":[{"name":"pos","nativeSrc":"9291:3:23","nodeType":"YulIdentifier","src":"9291:3:23"},{"name":"_1","nativeSrc":"9296:2:23","nodeType":"YulIdentifier","src":"9296:2:23"}],"functionName":{"name":"add","nativeSrc":"9287:3:23","nodeType":"YulIdentifier","src":"9287:3:23"},"nativeSrc":"9287:12:23","nodeType":"YulFunctionCall","src":"9287:12:23"},"variableNames":[{"name":"pos","nativeSrc":"9280:3:23","nodeType":"YulIdentifier","src":"9280:3:23"}]},{"nativeSrc":"9312:25:23","nodeType":"YulAssignment","src":"9312:25:23","value":{"arguments":[{"name":"srcPtr","nativeSrc":"9326:6:23","nodeType":"YulIdentifier","src":"9326:6:23"},{"name":"_1","nativeSrc":"9334:2:23","nodeType":"YulIdentifier","src":"9334:2:23"}],"functionName":{"name":"add","nativeSrc":"9322:3:23","nodeType":"YulIdentifier","src":"9322:3:23"},"nativeSrc":"9322:15:23","nodeType":"YulFunctionCall","src":"9322:15:23"},"variableNames":[{"name":"srcPtr","nativeSrc":"9312:6:23","nodeType":"YulIdentifier","src":"9312:6:23"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"9173:1:23","nodeType":"YulIdentifier","src":"9173:1:23"},{"name":"length","nativeSrc":"9176:6:23","nodeType":"YulIdentifier","src":"9176:6:23"}],"functionName":{"name":"lt","nativeSrc":"9170:2:23","nodeType":"YulIdentifier","src":"9170:2:23"},"nativeSrc":"9170:13:23","nodeType":"YulFunctionCall","src":"9170:13:23"},"nativeSrc":"9162:185:23","nodeType":"YulForLoop","post":{"nativeSrc":"9184:18:23","nodeType":"YulBlock","src":"9184:18:23","statements":[{"nativeSrc":"9186:14:23","nodeType":"YulAssignment","src":"9186:14:23","value":{"arguments":[{"name":"i","nativeSrc":"9195:1:23","nodeType":"YulIdentifier","src":"9195:1:23"},{"kind":"number","nativeSrc":"9198:1:23","nodeType":"YulLiteral","src":"9198:1:23","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9191:3:23","nodeType":"YulIdentifier","src":"9191:3:23"},"nativeSrc":"9191:9:23","nodeType":"YulFunctionCall","src":"9191:9:23"},"variableNames":[{"name":"i","nativeSrc":"9186:1:23","nodeType":"YulIdentifier","src":"9186:1:23"}]}]},"pre":{"nativeSrc":"9166:3:23","nodeType":"YulBlock","src":"9166:3:23","statements":[]},"src":"9162:185:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9367:9:23","nodeType":"YulIdentifier","src":"9367:9:23"},{"kind":"number","nativeSrc":"9378:4:23","nodeType":"YulLiteral","src":"9378:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9363:3:23","nodeType":"YulIdentifier","src":"9363:3:23"},"nativeSrc":"9363:20:23","nodeType":"YulFunctionCall","src":"9363:20:23"},{"arguments":[{"name":"pos","nativeSrc":"9389:3:23","nodeType":"YulIdentifier","src":"9389:3:23"},{"name":"headStart","nativeSrc":"9394:9:23","nodeType":"YulIdentifier","src":"9394:9:23"}],"functionName":{"name":"sub","nativeSrc":"9385:3:23","nodeType":"YulIdentifier","src":"9385:3:23"},"nativeSrc":"9385:19:23","nodeType":"YulFunctionCall","src":"9385:19:23"}],"functionName":{"name":"mstore","nativeSrc":"9356:6:23","nodeType":"YulIdentifier","src":"9356:6:23"},"nativeSrc":"9356:49:23","nodeType":"YulFunctionCall","src":"9356:49:23"},"nativeSrc":"9356:49:23","nodeType":"YulExpressionStatement","src":"9356:49:23"},{"nativeSrc":"9414:49:23","nodeType":"YulAssignment","src":"9414:49:23","value":{"arguments":[{"name":"value1","nativeSrc":"9451:6:23","nodeType":"YulIdentifier","src":"9451:6:23"},{"name":"pos","nativeSrc":"9459:3:23","nodeType":"YulIdentifier","src":"9459:3:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"9422:28:23","nodeType":"YulIdentifier","src":"9422:28:23"},"nativeSrc":"9422:41:23","nodeType":"YulFunctionCall","src":"9422:41:23"},"variableNames":[{"name":"tail","nativeSrc":"9414:4:23","nodeType":"YulIdentifier","src":"9414:4:23"}]}]},"name":"abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"8649:820:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8833:9:23","nodeType":"YulTypedName","src":"8833:9:23","type":""},{"name":"value1","nativeSrc":"8844:6:23","nodeType":"YulTypedName","src":"8844:6:23","type":""},{"name":"value0","nativeSrc":"8852:6:23","nodeType":"YulTypedName","src":"8852:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8863:4:23","nodeType":"YulTypedName","src":"8863:4:23","type":""}],"src":"8649:820:23"},{"body":{"nativeSrc":"9575:102:23","nodeType":"YulBlock","src":"9575:102:23","statements":[{"nativeSrc":"9585:26:23","nodeType":"YulAssignment","src":"9585:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"9597:9:23","nodeType":"YulIdentifier","src":"9597:9:23"},{"kind":"number","nativeSrc":"9608:2:23","nodeType":"YulLiteral","src":"9608:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9593:3:23","nodeType":"YulIdentifier","src":"9593:3:23"},"nativeSrc":"9593:18:23","nodeType":"YulFunctionCall","src":"9593:18:23"},"variableNames":[{"name":"tail","nativeSrc":"9585:4:23","nodeType":"YulIdentifier","src":"9585:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9627:9:23","nodeType":"YulIdentifier","src":"9627:9:23"},{"arguments":[{"name":"value0","nativeSrc":"9642:6:23","nodeType":"YulIdentifier","src":"9642:6:23"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9658:3:23","nodeType":"YulLiteral","src":"9658:3:23","type":"","value":"160"},{"kind":"number","nativeSrc":"9663:1:23","nodeType":"YulLiteral","src":"9663:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9654:3:23","nodeType":"YulIdentifier","src":"9654:3:23"},"nativeSrc":"9654:11:23","nodeType":"YulFunctionCall","src":"9654:11:23"},{"kind":"number","nativeSrc":"9667:1:23","nodeType":"YulLiteral","src":"9667:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9650:3:23","nodeType":"YulIdentifier","src":"9650:3:23"},"nativeSrc":"9650:19:23","nodeType":"YulFunctionCall","src":"9650:19:23"}],"functionName":{"name":"and","nativeSrc":"9638:3:23","nodeType":"YulIdentifier","src":"9638:3:23"},"nativeSrc":"9638:32:23","nodeType":"YulFunctionCall","src":"9638:32:23"}],"functionName":{"name":"mstore","nativeSrc":"9620:6:23","nodeType":"YulIdentifier","src":"9620:6:23"},"nativeSrc":"9620:51:23","nodeType":"YulFunctionCall","src":"9620:51:23"},"nativeSrc":"9620:51:23","nodeType":"YulExpressionStatement","src":"9620:51:23"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"9474:203:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9544:9:23","nodeType":"YulTypedName","src":"9544:9:23","type":""},{"name":"value0","nativeSrc":"9555:6:23","nodeType":"YulTypedName","src":"9555:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9566:4:23","nodeType":"YulTypedName","src":"9566:4:23","type":""}],"src":"9474:203:23"},{"body":{"nativeSrc":"9752:110:23","nodeType":"YulBlock","src":"9752:110:23","statements":[{"body":{"nativeSrc":"9798:16:23","nodeType":"YulBlock","src":"9798:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9807:1:23","nodeType":"YulLiteral","src":"9807:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"9810:1:23","nodeType":"YulLiteral","src":"9810:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9800:6:23","nodeType":"YulIdentifier","src":"9800:6:23"},"nativeSrc":"9800:12:23","nodeType":"YulFunctionCall","src":"9800:12:23"},"nativeSrc":"9800:12:23","nodeType":"YulExpressionStatement","src":"9800:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9773:7:23","nodeType":"YulIdentifier","src":"9773:7:23"},{"name":"headStart","nativeSrc":"9782:9:23","nodeType":"YulIdentifier","src":"9782:9:23"}],"functionName":{"name":"sub","nativeSrc":"9769:3:23","nodeType":"YulIdentifier","src":"9769:3:23"},"nativeSrc":"9769:23:23","nodeType":"YulFunctionCall","src":"9769:23:23"},{"kind":"number","nativeSrc":"9794:2:23","nodeType":"YulLiteral","src":"9794:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9765:3:23","nodeType":"YulIdentifier","src":"9765:3:23"},"nativeSrc":"9765:32:23","nodeType":"YulFunctionCall","src":"9765:32:23"},"nativeSrc":"9762:52:23","nodeType":"YulIf","src":"9762:52:23"},{"nativeSrc":"9823:33:23","nodeType":"YulAssignment","src":"9823:33:23","value":{"arguments":[{"name":"headStart","nativeSrc":"9846:9:23","nodeType":"YulIdentifier","src":"9846:9:23"}],"functionName":{"name":"calldataload","nativeSrc":"9833:12:23","nodeType":"YulIdentifier","src":"9833:12:23"},"nativeSrc":"9833:23:23","nodeType":"YulFunctionCall","src":"9833:23:23"},"variableNames":[{"name":"value0","nativeSrc":"9823:6:23","nodeType":"YulIdentifier","src":"9823:6:23"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"9682:180:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9718:9:23","nodeType":"YulTypedName","src":"9718:9:23","type":""},{"name":"dataEnd","nativeSrc":"9729:7:23","nodeType":"YulTypedName","src":"9729:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9741:6:23","nodeType":"YulTypedName","src":"9741:6:23","type":""}],"src":"9682:180:23"},{"body":{"nativeSrc":"10024:188:23","nodeType":"YulBlock","src":"10024:188:23","statements":[{"nativeSrc":"10034:26:23","nodeType":"YulAssignment","src":"10034:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"10046:9:23","nodeType":"YulIdentifier","src":"10046:9:23"},{"kind":"number","nativeSrc":"10057:2:23","nodeType":"YulLiteral","src":"10057:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10042:3:23","nodeType":"YulIdentifier","src":"10042:3:23"},"nativeSrc":"10042:18:23","nodeType":"YulFunctionCall","src":"10042:18:23"},"variableNames":[{"name":"tail","nativeSrc":"10034:4:23","nodeType":"YulIdentifier","src":"10034:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10076:9:23","nodeType":"YulIdentifier","src":"10076:9:23"},{"arguments":[{"name":"value0","nativeSrc":"10091:6:23","nodeType":"YulIdentifier","src":"10091:6:23"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10107:3:23","nodeType":"YulLiteral","src":"10107:3:23","type":"","value":"160"},{"kind":"number","nativeSrc":"10112:1:23","nodeType":"YulLiteral","src":"10112:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10103:3:23","nodeType":"YulIdentifier","src":"10103:3:23"},"nativeSrc":"10103:11:23","nodeType":"YulFunctionCall","src":"10103:11:23"},{"kind":"number","nativeSrc":"10116:1:23","nodeType":"YulLiteral","src":"10116:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10099:3:23","nodeType":"YulIdentifier","src":"10099:3:23"},"nativeSrc":"10099:19:23","nodeType":"YulFunctionCall","src":"10099:19:23"}],"functionName":{"name":"and","nativeSrc":"10087:3:23","nodeType":"YulIdentifier","src":"10087:3:23"},"nativeSrc":"10087:32:23","nodeType":"YulFunctionCall","src":"10087:32:23"}],"functionName":{"name":"mstore","nativeSrc":"10069:6:23","nodeType":"YulIdentifier","src":"10069:6:23"},"nativeSrc":"10069:51:23","nodeType":"YulFunctionCall","src":"10069:51:23"},"nativeSrc":"10069:51:23","nodeType":"YulExpressionStatement","src":"10069:51:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10140:9:23","nodeType":"YulIdentifier","src":"10140:9:23"},{"kind":"number","nativeSrc":"10151:2:23","nodeType":"YulLiteral","src":"10151:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10136:3:23","nodeType":"YulIdentifier","src":"10136:3:23"},"nativeSrc":"10136:18:23","nodeType":"YulFunctionCall","src":"10136:18:23"},{"name":"value1","nativeSrc":"10156:6:23","nodeType":"YulIdentifier","src":"10156:6:23"}],"functionName":{"name":"mstore","nativeSrc":"10129:6:23","nodeType":"YulIdentifier","src":"10129:6:23"},"nativeSrc":"10129:34:23","nodeType":"YulFunctionCall","src":"10129:34:23"},"nativeSrc":"10129:34:23","nodeType":"YulExpressionStatement","src":"10129:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10183:9:23","nodeType":"YulIdentifier","src":"10183:9:23"},{"kind":"number","nativeSrc":"10194:2:23","nodeType":"YulLiteral","src":"10194:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10179:3:23","nodeType":"YulIdentifier","src":"10179:3:23"},"nativeSrc":"10179:18:23","nodeType":"YulFunctionCall","src":"10179:18:23"},{"name":"value2","nativeSrc":"10199:6:23","nodeType":"YulIdentifier","src":"10199:6:23"}],"functionName":{"name":"mstore","nativeSrc":"10172:6:23","nodeType":"YulIdentifier","src":"10172:6:23"},"nativeSrc":"10172:34:23","nodeType":"YulFunctionCall","src":"10172:34:23"},"nativeSrc":"10172:34:23","nodeType":"YulExpressionStatement","src":"10172:34:23"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"9867:345:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9977:9:23","nodeType":"YulTypedName","src":"9977:9:23","type":""},{"name":"value2","nativeSrc":"9988:6:23","nodeType":"YulTypedName","src":"9988:6:23","type":""},{"name":"value1","nativeSrc":"9996:6:23","nodeType":"YulTypedName","src":"9996:6:23","type":""},{"name":"value0","nativeSrc":"10004:6:23","nodeType":"YulTypedName","src":"10004:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10015:4:23","nodeType":"YulTypedName","src":"10015:4:23","type":""}],"src":"9867:345:23"},{"body":{"nativeSrc":"10304:301:23","nodeType":"YulBlock","src":"10304:301:23","statements":[{"body":{"nativeSrc":"10350:16:23","nodeType":"YulBlock","src":"10350:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10359:1:23","nodeType":"YulLiteral","src":"10359:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"10362:1:23","nodeType":"YulLiteral","src":"10362:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10352:6:23","nodeType":"YulIdentifier","src":"10352:6:23"},"nativeSrc":"10352:12:23","nodeType":"YulFunctionCall","src":"10352:12:23"},"nativeSrc":"10352:12:23","nodeType":"YulExpressionStatement","src":"10352:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10325:7:23","nodeType":"YulIdentifier","src":"10325:7:23"},{"name":"headStart","nativeSrc":"10334:9:23","nodeType":"YulIdentifier","src":"10334:9:23"}],"functionName":{"name":"sub","nativeSrc":"10321:3:23","nodeType":"YulIdentifier","src":"10321:3:23"},"nativeSrc":"10321:23:23","nodeType":"YulFunctionCall","src":"10321:23:23"},{"kind":"number","nativeSrc":"10346:2:23","nodeType":"YulLiteral","src":"10346:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10317:3:23","nodeType":"YulIdentifier","src":"10317:3:23"},"nativeSrc":"10317:32:23","nodeType":"YulFunctionCall","src":"10317:32:23"},"nativeSrc":"10314:52:23","nodeType":"YulIf","src":"10314:52:23"},{"nativeSrc":"10375:36:23","nodeType":"YulVariableDeclaration","src":"10375:36:23","value":{"arguments":[{"name":"headStart","nativeSrc":"10401:9:23","nodeType":"YulIdentifier","src":"10401:9:23"}],"functionName":{"name":"calldataload","nativeSrc":"10388:12:23","nodeType":"YulIdentifier","src":"10388:12:23"},"nativeSrc":"10388:23:23","nodeType":"YulFunctionCall","src":"10388:23:23"},"variables":[{"name":"value","nativeSrc":"10379:5:23","nodeType":"YulTypedName","src":"10379:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"10445:5:23","nodeType":"YulIdentifier","src":"10445:5:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"10420:24:23","nodeType":"YulIdentifier","src":"10420:24:23"},"nativeSrc":"10420:31:23","nodeType":"YulFunctionCall","src":"10420:31:23"},"nativeSrc":"10420:31:23","nodeType":"YulExpressionStatement","src":"10420:31:23"},{"nativeSrc":"10460:15:23","nodeType":"YulAssignment","src":"10460:15:23","value":{"name":"value","nativeSrc":"10470:5:23","nodeType":"YulIdentifier","src":"10470:5:23"},"variableNames":[{"name":"value0","nativeSrc":"10460:6:23","nodeType":"YulIdentifier","src":"10460:6:23"}]},{"nativeSrc":"10484:47:23","nodeType":"YulVariableDeclaration","src":"10484:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10516:9:23","nodeType":"YulIdentifier","src":"10516:9:23"},{"kind":"number","nativeSrc":"10527:2:23","nodeType":"YulLiteral","src":"10527:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10512:3:23","nodeType":"YulIdentifier","src":"10512:3:23"},"nativeSrc":"10512:18:23","nodeType":"YulFunctionCall","src":"10512:18:23"}],"functionName":{"name":"calldataload","nativeSrc":"10499:12:23","nodeType":"YulIdentifier","src":"10499:12:23"},"nativeSrc":"10499:32:23","nodeType":"YulFunctionCall","src":"10499:32:23"},"variables":[{"name":"value_1","nativeSrc":"10488:7:23","nodeType":"YulTypedName","src":"10488:7:23","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"10565:7:23","nodeType":"YulIdentifier","src":"10565:7:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"10540:24:23","nodeType":"YulIdentifier","src":"10540:24:23"},"nativeSrc":"10540:33:23","nodeType":"YulFunctionCall","src":"10540:33:23"},"nativeSrc":"10540:33:23","nodeType":"YulExpressionStatement","src":"10540:33:23"},{"nativeSrc":"10582:17:23","nodeType":"YulAssignment","src":"10582:17:23","value":{"name":"value_1","nativeSrc":"10592:7:23","nodeType":"YulIdentifier","src":"10592:7:23"},"variableNames":[{"name":"value1","nativeSrc":"10582:6:23","nodeType":"YulIdentifier","src":"10582:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"10217:388:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10262:9:23","nodeType":"YulTypedName","src":"10262:9:23","type":""},{"name":"dataEnd","nativeSrc":"10273:7:23","nodeType":"YulTypedName","src":"10273:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10285:6:23","nodeType":"YulTypedName","src":"10285:6:23","type":""},{"name":"value1","nativeSrc":"10293:6:23","nodeType":"YulTypedName","src":"10293:6:23","type":""}],"src":"10217:388:23"},{"body":{"nativeSrc":"10722:371:23","nodeType":"YulBlock","src":"10722:371:23","statements":[{"body":{"nativeSrc":"10768:16:23","nodeType":"YulBlock","src":"10768:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10777:1:23","nodeType":"YulLiteral","src":"10777:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"10780:1:23","nodeType":"YulLiteral","src":"10780:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10770:6:23","nodeType":"YulIdentifier","src":"10770:6:23"},"nativeSrc":"10770:12:23","nodeType":"YulFunctionCall","src":"10770:12:23"},"nativeSrc":"10770:12:23","nodeType":"YulExpressionStatement","src":"10770:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10743:7:23","nodeType":"YulIdentifier","src":"10743:7:23"},{"name":"headStart","nativeSrc":"10752:9:23","nodeType":"YulIdentifier","src":"10752:9:23"}],"functionName":{"name":"sub","nativeSrc":"10739:3:23","nodeType":"YulIdentifier","src":"10739:3:23"},"nativeSrc":"10739:23:23","nodeType":"YulFunctionCall","src":"10739:23:23"},{"kind":"number","nativeSrc":"10764:2:23","nodeType":"YulLiteral","src":"10764:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10735:3:23","nodeType":"YulIdentifier","src":"10735:3:23"},"nativeSrc":"10735:32:23","nodeType":"YulFunctionCall","src":"10735:32:23"},"nativeSrc":"10732:52:23","nodeType":"YulIf","src":"10732:52:23"},{"nativeSrc":"10793:36:23","nodeType":"YulVariableDeclaration","src":"10793:36:23","value":{"arguments":[{"name":"headStart","nativeSrc":"10819:9:23","nodeType":"YulIdentifier","src":"10819:9:23"}],"functionName":{"name":"calldataload","nativeSrc":"10806:12:23","nodeType":"YulIdentifier","src":"10806:12:23"},"nativeSrc":"10806:23:23","nodeType":"YulFunctionCall","src":"10806:23:23"},"variables":[{"name":"value","nativeSrc":"10797:5:23","nodeType":"YulTypedName","src":"10797:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"10863:5:23","nodeType":"YulIdentifier","src":"10863:5:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"10838:24:23","nodeType":"YulIdentifier","src":"10838:24:23"},"nativeSrc":"10838:31:23","nodeType":"YulFunctionCall","src":"10838:31:23"},"nativeSrc":"10838:31:23","nodeType":"YulExpressionStatement","src":"10838:31:23"},{"nativeSrc":"10878:15:23","nodeType":"YulAssignment","src":"10878:15:23","value":{"name":"value","nativeSrc":"10888:5:23","nodeType":"YulIdentifier","src":"10888:5:23"},"variableNames":[{"name":"value0","nativeSrc":"10878:6:23","nodeType":"YulIdentifier","src":"10878:6:23"}]},{"nativeSrc":"10902:46:23","nodeType":"YulVariableDeclaration","src":"10902:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10933:9:23","nodeType":"YulIdentifier","src":"10933:9:23"},{"kind":"number","nativeSrc":"10944:2:23","nodeType":"YulLiteral","src":"10944:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10929:3:23","nodeType":"YulIdentifier","src":"10929:3:23"},"nativeSrc":"10929:18:23","nodeType":"YulFunctionCall","src":"10929:18:23"}],"functionName":{"name":"calldataload","nativeSrc":"10916:12:23","nodeType":"YulIdentifier","src":"10916:12:23"},"nativeSrc":"10916:32:23","nodeType":"YulFunctionCall","src":"10916:32:23"},"variables":[{"name":"offset","nativeSrc":"10906:6:23","nodeType":"YulTypedName","src":"10906:6:23","type":""}]},{"body":{"nativeSrc":"10991:16:23","nodeType":"YulBlock","src":"10991:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11000:1:23","nodeType":"YulLiteral","src":"11000:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"11003:1:23","nodeType":"YulLiteral","src":"11003:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10993:6:23","nodeType":"YulIdentifier","src":"10993:6:23"},"nativeSrc":"10993:12:23","nodeType":"YulFunctionCall","src":"10993:12:23"},"nativeSrc":"10993:12:23","nodeType":"YulExpressionStatement","src":"10993:12:23"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10963:6:23","nodeType":"YulIdentifier","src":"10963:6:23"},{"kind":"number","nativeSrc":"10971:18:23","nodeType":"YulLiteral","src":"10971:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10960:2:23","nodeType":"YulIdentifier","src":"10960:2:23"},"nativeSrc":"10960:30:23","nodeType":"YulFunctionCall","src":"10960:30:23"},"nativeSrc":"10957:50:23","nodeType":"YulIf","src":"10957:50:23"},{"nativeSrc":"11016:71:23","nodeType":"YulAssignment","src":"11016:71:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11059:9:23","nodeType":"YulIdentifier","src":"11059:9:23"},{"name":"offset","nativeSrc":"11070:6:23","nodeType":"YulIdentifier","src":"11070:6:23"}],"functionName":{"name":"add","nativeSrc":"11055:3:23","nodeType":"YulIdentifier","src":"11055:3:23"},"nativeSrc":"11055:22:23","nodeType":"YulFunctionCall","src":"11055:22:23"},{"name":"dataEnd","nativeSrc":"11079:7:23","nodeType":"YulIdentifier","src":"11079:7:23"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nativeSrc":"11026:28:23","nodeType":"YulIdentifier","src":"11026:28:23"},"nativeSrc":"11026:61:23","nodeType":"YulFunctionCall","src":"11026:61:23"},"variableNames":[{"name":"value1","nativeSrc":"11016:6:23","nodeType":"YulIdentifier","src":"11016:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"10610:483:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10680:9:23","nodeType":"YulTypedName","src":"10680:9:23","type":""},{"name":"dataEnd","nativeSrc":"10691:7:23","nodeType":"YulTypedName","src":"10691:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10703:6:23","nodeType":"YulTypedName","src":"10703:6:23","type":""},{"name":"value1","nativeSrc":"10711:6:23","nodeType":"YulTypedName","src":"10711:6:23","type":""}],"src":"10610:483:23"},{"body":{"nativeSrc":"11327:236:23","nodeType":"YulBlock","src":"11327:236:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11344:9:23","nodeType":"YulIdentifier","src":"11344:9:23"},{"kind":"number","nativeSrc":"11355:2:23","nodeType":"YulLiteral","src":"11355:2:23","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"11337:6:23","nodeType":"YulIdentifier","src":"11337:6:23"},"nativeSrc":"11337:21:23","nodeType":"YulFunctionCall","src":"11337:21:23"},"nativeSrc":"11337:21:23","nodeType":"YulExpressionStatement","src":"11337:21:23"},{"nativeSrc":"11367:70:23","nodeType":"YulVariableDeclaration","src":"11367:70:23","value":{"arguments":[{"name":"value0","nativeSrc":"11410:6:23","nodeType":"YulIdentifier","src":"11410:6:23"},{"arguments":[{"name":"headStart","nativeSrc":"11422:9:23","nodeType":"YulIdentifier","src":"11422:9:23"},{"kind":"number","nativeSrc":"11433:2:23","nodeType":"YulLiteral","src":"11433:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11418:3:23","nodeType":"YulIdentifier","src":"11418:3:23"},"nativeSrc":"11418:18:23","nodeType":"YulFunctionCall","src":"11418:18:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"11381:28:23","nodeType":"YulIdentifier","src":"11381:28:23"},"nativeSrc":"11381:56:23","nodeType":"YulFunctionCall","src":"11381:56:23"},"variables":[{"name":"tail_1","nativeSrc":"11371:6:23","nodeType":"YulTypedName","src":"11371:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11457:9:23","nodeType":"YulIdentifier","src":"11457:9:23"},{"kind":"number","nativeSrc":"11468:2:23","nodeType":"YulLiteral","src":"11468:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11453:3:23","nodeType":"YulIdentifier","src":"11453:3:23"},"nativeSrc":"11453:18:23","nodeType":"YulFunctionCall","src":"11453:18:23"},{"arguments":[{"name":"tail_1","nativeSrc":"11477:6:23","nodeType":"YulIdentifier","src":"11477:6:23"},{"name":"headStart","nativeSrc":"11485:9:23","nodeType":"YulIdentifier","src":"11485:9:23"}],"functionName":{"name":"sub","nativeSrc":"11473:3:23","nodeType":"YulIdentifier","src":"11473:3:23"},"nativeSrc":"11473:22:23","nodeType":"YulFunctionCall","src":"11473:22:23"}],"functionName":{"name":"mstore","nativeSrc":"11446:6:23","nodeType":"YulIdentifier","src":"11446:6:23"},"nativeSrc":"11446:50:23","nodeType":"YulFunctionCall","src":"11446:50:23"},"nativeSrc":"11446:50:23","nodeType":"YulExpressionStatement","src":"11446:50:23"},{"nativeSrc":"11505:52:23","nodeType":"YulAssignment","src":"11505:52:23","value":{"arguments":[{"name":"value1","nativeSrc":"11542:6:23","nodeType":"YulIdentifier","src":"11542:6:23"},{"name":"tail_1","nativeSrc":"11550:6:23","nodeType":"YulIdentifier","src":"11550:6:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"11513:28:23","nodeType":"YulIdentifier","src":"11513:28:23"},"nativeSrc":"11513:44:23","nodeType":"YulFunctionCall","src":"11513:44:23"},"variableNames":[{"name":"tail","nativeSrc":"11505:4:23","nodeType":"YulIdentifier","src":"11505:4:23"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"11098:465:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11288:9:23","nodeType":"YulTypedName","src":"11288:9:23","type":""},{"name":"value1","nativeSrc":"11299:6:23","nodeType":"YulTypedName","src":"11299:6:23","type":""},{"name":"value0","nativeSrc":"11307:6:23","nodeType":"YulTypedName","src":"11307:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11318:4:23","nodeType":"YulTypedName","src":"11318:4:23","type":""}],"src":"11098:465:23"},{"body":{"nativeSrc":"11623:325:23","nodeType":"YulBlock","src":"11623:325:23","statements":[{"nativeSrc":"11633:22:23","nodeType":"YulAssignment","src":"11633:22:23","value":{"arguments":[{"kind":"number","nativeSrc":"11647:1:23","nodeType":"YulLiteral","src":"11647:1:23","type":"","value":"1"},{"name":"data","nativeSrc":"11650:4:23","nodeType":"YulIdentifier","src":"11650:4:23"}],"functionName":{"name":"shr","nativeSrc":"11643:3:23","nodeType":"YulIdentifier","src":"11643:3:23"},"nativeSrc":"11643:12:23","nodeType":"YulFunctionCall","src":"11643:12:23"},"variableNames":[{"name":"length","nativeSrc":"11633:6:23","nodeType":"YulIdentifier","src":"11633:6:23"}]},{"nativeSrc":"11664:38:23","nodeType":"YulVariableDeclaration","src":"11664:38:23","value":{"arguments":[{"name":"data","nativeSrc":"11694:4:23","nodeType":"YulIdentifier","src":"11694:4:23"},{"kind":"number","nativeSrc":"11700:1:23","nodeType":"YulLiteral","src":"11700:1:23","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"11690:3:23","nodeType":"YulIdentifier","src":"11690:3:23"},"nativeSrc":"11690:12:23","nodeType":"YulFunctionCall","src":"11690:12:23"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"11668:18:23","nodeType":"YulTypedName","src":"11668:18:23","type":""}]},{"body":{"nativeSrc":"11741:31:23","nodeType":"YulBlock","src":"11741:31:23","statements":[{"nativeSrc":"11743:27:23","nodeType":"YulAssignment","src":"11743:27:23","value":{"arguments":[{"name":"length","nativeSrc":"11757:6:23","nodeType":"YulIdentifier","src":"11757:6:23"},{"kind":"number","nativeSrc":"11765:4:23","nodeType":"YulLiteral","src":"11765:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"11753:3:23","nodeType":"YulIdentifier","src":"11753:3:23"},"nativeSrc":"11753:17:23","nodeType":"YulFunctionCall","src":"11753:17:23"},"variableNames":[{"name":"length","nativeSrc":"11743:6:23","nodeType":"YulIdentifier","src":"11743:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11721:18:23","nodeType":"YulIdentifier","src":"11721:18:23"}],"functionName":{"name":"iszero","nativeSrc":"11714:6:23","nodeType":"YulIdentifier","src":"11714:6:23"},"nativeSrc":"11714:26:23","nodeType":"YulFunctionCall","src":"11714:26:23"},"nativeSrc":"11711:61:23","nodeType":"YulIf","src":"11711:61:23"},{"body":{"nativeSrc":"11831:111:23","nodeType":"YulBlock","src":"11831:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11852:1:23","nodeType":"YulLiteral","src":"11852:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"11859:3:23","nodeType":"YulLiteral","src":"11859:3:23","type":"","value":"224"},{"kind":"number","nativeSrc":"11864:10:23","nodeType":"YulLiteral","src":"11864:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"11855:3:23","nodeType":"YulIdentifier","src":"11855:3:23"},"nativeSrc":"11855:20:23","nodeType":"YulFunctionCall","src":"11855:20:23"}],"functionName":{"name":"mstore","nativeSrc":"11845:6:23","nodeType":"YulIdentifier","src":"11845:6:23"},"nativeSrc":"11845:31:23","nodeType":"YulFunctionCall","src":"11845:31:23"},"nativeSrc":"11845:31:23","nodeType":"YulExpressionStatement","src":"11845:31:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11896:1:23","nodeType":"YulLiteral","src":"11896:1:23","type":"","value":"4"},{"kind":"number","nativeSrc":"11899:4:23","nodeType":"YulLiteral","src":"11899:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"11889:6:23","nodeType":"YulIdentifier","src":"11889:6:23"},"nativeSrc":"11889:15:23","nodeType":"YulFunctionCall","src":"11889:15:23"},"nativeSrc":"11889:15:23","nodeType":"YulExpressionStatement","src":"11889:15:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11924:1:23","nodeType":"YulLiteral","src":"11924:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"11927:4:23","nodeType":"YulLiteral","src":"11927:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11917:6:23","nodeType":"YulIdentifier","src":"11917:6:23"},"nativeSrc":"11917:15:23","nodeType":"YulFunctionCall","src":"11917:15:23"},"nativeSrc":"11917:15:23","nodeType":"YulExpressionStatement","src":"11917:15:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11787:18:23","nodeType":"YulIdentifier","src":"11787:18:23"},{"arguments":[{"name":"length","nativeSrc":"11810:6:23","nodeType":"YulIdentifier","src":"11810:6:23"},{"kind":"number","nativeSrc":"11818:2:23","nodeType":"YulLiteral","src":"11818:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"11807:2:23","nodeType":"YulIdentifier","src":"11807:2:23"},"nativeSrc":"11807:14:23","nodeType":"YulFunctionCall","src":"11807:14:23"}],"functionName":{"name":"eq","nativeSrc":"11784:2:23","nodeType":"YulIdentifier","src":"11784:2:23"},"nativeSrc":"11784:38:23","nodeType":"YulFunctionCall","src":"11784:38:23"},"nativeSrc":"11781:161:23","nodeType":"YulIf","src":"11781:161:23"}]},"name":"extract_byte_array_length","nativeSrc":"11568:380:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"11603:4:23","nodeType":"YulTypedName","src":"11603:4:23","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11612:6:23","nodeType":"YulTypedName","src":"11612:6:23","type":""}],"src":"11568:380:23"},{"body":{"nativeSrc":"12034:170:23","nodeType":"YulBlock","src":"12034:170:23","statements":[{"body":{"nativeSrc":"12080:16:23","nodeType":"YulBlock","src":"12080:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12089:1:23","nodeType":"YulLiteral","src":"12089:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"12092:1:23","nodeType":"YulLiteral","src":"12092:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12082:6:23","nodeType":"YulIdentifier","src":"12082:6:23"},"nativeSrc":"12082:12:23","nodeType":"YulFunctionCall","src":"12082:12:23"},"nativeSrc":"12082:12:23","nodeType":"YulExpressionStatement","src":"12082:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12055:7:23","nodeType":"YulIdentifier","src":"12055:7:23"},{"name":"headStart","nativeSrc":"12064:9:23","nodeType":"YulIdentifier","src":"12064:9:23"}],"functionName":{"name":"sub","nativeSrc":"12051:3:23","nodeType":"YulIdentifier","src":"12051:3:23"},"nativeSrc":"12051:23:23","nodeType":"YulFunctionCall","src":"12051:23:23"},{"kind":"number","nativeSrc":"12076:2:23","nodeType":"YulLiteral","src":"12076:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"12047:3:23","nodeType":"YulIdentifier","src":"12047:3:23"},"nativeSrc":"12047:32:23","nodeType":"YulFunctionCall","src":"12047:32:23"},"nativeSrc":"12044:52:23","nodeType":"YulIf","src":"12044:52:23"},{"nativeSrc":"12105:29:23","nodeType":"YulVariableDeclaration","src":"12105:29:23","value":{"arguments":[{"name":"headStart","nativeSrc":"12124:9:23","nodeType":"YulIdentifier","src":"12124:9:23"}],"functionName":{"name":"mload","nativeSrc":"12118:5:23","nodeType":"YulIdentifier","src":"12118:5:23"},"nativeSrc":"12118:16:23","nodeType":"YulFunctionCall","src":"12118:16:23"},"variables":[{"name":"value","nativeSrc":"12109:5:23","nodeType":"YulTypedName","src":"12109:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12168:5:23","nodeType":"YulIdentifier","src":"12168:5:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"12143:24:23","nodeType":"YulIdentifier","src":"12143:24:23"},"nativeSrc":"12143:31:23","nodeType":"YulFunctionCall","src":"12143:31:23"},"nativeSrc":"12143:31:23","nodeType":"YulExpressionStatement","src":"12143:31:23"},{"nativeSrc":"12183:15:23","nodeType":"YulAssignment","src":"12183:15:23","value":{"name":"value","nativeSrc":"12193:5:23","nodeType":"YulIdentifier","src":"12193:5:23"},"variableNames":[{"name":"value0","nativeSrc":"12183:6:23","nodeType":"YulIdentifier","src":"12183:6:23"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"11953:251:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12000:9:23","nodeType":"YulTypedName","src":"12000:9:23","type":""},{"name":"dataEnd","nativeSrc":"12011:7:23","nodeType":"YulTypedName","src":"12011:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12023:6:23","nodeType":"YulTypedName","src":"12023:6:23","type":""}],"src":"11953:251:23"},{"body":{"nativeSrc":"12383:164:23","nodeType":"YulBlock","src":"12383:164:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12400:9:23","nodeType":"YulIdentifier","src":"12400:9:23"},{"kind":"number","nativeSrc":"12411:2:23","nodeType":"YulLiteral","src":"12411:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"12393:6:23","nodeType":"YulIdentifier","src":"12393:6:23"},"nativeSrc":"12393:21:23","nodeType":"YulFunctionCall","src":"12393:21:23"},"nativeSrc":"12393:21:23","nodeType":"YulExpressionStatement","src":"12393:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12434:9:23","nodeType":"YulIdentifier","src":"12434:9:23"},{"kind":"number","nativeSrc":"12445:2:23","nodeType":"YulLiteral","src":"12445:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12430:3:23","nodeType":"YulIdentifier","src":"12430:3:23"},"nativeSrc":"12430:18:23","nodeType":"YulFunctionCall","src":"12430:18:23"},{"kind":"number","nativeSrc":"12450:2:23","nodeType":"YulLiteral","src":"12450:2:23","type":"","value":"14"}],"functionName":{"name":"mstore","nativeSrc":"12423:6:23","nodeType":"YulIdentifier","src":"12423:6:23"},"nativeSrc":"12423:30:23","nodeType":"YulFunctionCall","src":"12423:30:23"},"nativeSrc":"12423:30:23","nodeType":"YulExpressionStatement","src":"12423:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12473:9:23","nodeType":"YulIdentifier","src":"12473:9:23"},{"kind":"number","nativeSrc":"12484:2:23","nodeType":"YulLiteral","src":"12484:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12469:3:23","nodeType":"YulIdentifier","src":"12469:3:23"},"nativeSrc":"12469:18:23","nodeType":"YulFunctionCall","src":"12469:18:23"},{"hexValue":"4f6e6c7920506572697068657279","kind":"string","nativeSrc":"12489:16:23","nodeType":"YulLiteral","src":"12489:16:23","type":"","value":"Only Periphery"}],"functionName":{"name":"mstore","nativeSrc":"12462:6:23","nodeType":"YulIdentifier","src":"12462:6:23"},"nativeSrc":"12462:44:23","nodeType":"YulFunctionCall","src":"12462:44:23"},"nativeSrc":"12462:44:23","nodeType":"YulExpressionStatement","src":"12462:44:23"},{"nativeSrc":"12515:26:23","nodeType":"YulAssignment","src":"12515:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"12527:9:23","nodeType":"YulIdentifier","src":"12527:9:23"},{"kind":"number","nativeSrc":"12538:2:23","nodeType":"YulLiteral","src":"12538:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12523:3:23","nodeType":"YulIdentifier","src":"12523:3:23"},"nativeSrc":"12523:18:23","nodeType":"YulFunctionCall","src":"12523:18:23"},"variableNames":[{"name":"tail","nativeSrc":"12515:4:23","nodeType":"YulIdentifier","src":"12515:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12209:338:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12360:9:23","nodeType":"YulTypedName","src":"12360:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12374:4:23","nodeType":"YulTypedName","src":"12374:4:23","type":""}],"src":"12209:338:23"},{"body":{"nativeSrc":"12726:170:23","nodeType":"YulBlock","src":"12726:170:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12743:9:23","nodeType":"YulIdentifier","src":"12743:9:23"},{"kind":"number","nativeSrc":"12754:2:23","nodeType":"YulLiteral","src":"12754:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"12736:6:23","nodeType":"YulIdentifier","src":"12736:6:23"},"nativeSrc":"12736:21:23","nodeType":"YulFunctionCall","src":"12736:21:23"},"nativeSrc":"12736:21:23","nodeType":"YulExpressionStatement","src":"12736:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12777:9:23","nodeType":"YulIdentifier","src":"12777:9:23"},{"kind":"number","nativeSrc":"12788:2:23","nodeType":"YulLiteral","src":"12788:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12773:3:23","nodeType":"YulIdentifier","src":"12773:3:23"},"nativeSrc":"12773:18:23","nodeType":"YulFunctionCall","src":"12773:18:23"},{"kind":"number","nativeSrc":"12793:2:23","nodeType":"YulLiteral","src":"12793:2:23","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"12766:6:23","nodeType":"YulIdentifier","src":"12766:6:23"},"nativeSrc":"12766:30:23","nodeType":"YulFunctionCall","src":"12766:30:23"},"nativeSrc":"12766:30:23","nodeType":"YulExpressionStatement","src":"12766:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12816:9:23","nodeType":"YulIdentifier","src":"12816:9:23"},{"kind":"number","nativeSrc":"12827:2:23","nodeType":"YulLiteral","src":"12827:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12812:3:23","nodeType":"YulIdentifier","src":"12812:3:23"},"nativeSrc":"12812:18:23","nodeType":"YulFunctionCall","src":"12812:18:23"},{"hexValue":"526562616c616e6365206e6f74206e6565646564","kind":"string","nativeSrc":"12832:22:23","nodeType":"YulLiteral","src":"12832:22:23","type":"","value":"Rebalance not needed"}],"functionName":{"name":"mstore","nativeSrc":"12805:6:23","nodeType":"YulIdentifier","src":"12805:6:23"},"nativeSrc":"12805:50:23","nodeType":"YulFunctionCall","src":"12805:50:23"},"nativeSrc":"12805:50:23","nodeType":"YulExpressionStatement","src":"12805:50:23"},{"nativeSrc":"12864:26:23","nodeType":"YulAssignment","src":"12864:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"12876:9:23","nodeType":"YulIdentifier","src":"12876:9:23"},{"kind":"number","nativeSrc":"12887:2:23","nodeType":"YulLiteral","src":"12887:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12872:3:23","nodeType":"YulIdentifier","src":"12872:3:23"},"nativeSrc":"12872:18:23","nodeType":"YulFunctionCall","src":"12872:18:23"},"variableNames":[{"name":"tail","nativeSrc":"12864:4:23","nodeType":"YulIdentifier","src":"12864:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12552:344:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12703:9:23","nodeType":"YulTypedName","src":"12703:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12717:4:23","nodeType":"YulTypedName","src":"12717:4:23","type":""}],"src":"12552:344:23"},{"body":{"nativeSrc":"12933:95:23","nodeType":"YulBlock","src":"12933:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12950:1:23","nodeType":"YulLiteral","src":"12950:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"12957:3:23","nodeType":"YulLiteral","src":"12957:3:23","type":"","value":"224"},{"kind":"number","nativeSrc":"12962:10:23","nodeType":"YulLiteral","src":"12962:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"12953:3:23","nodeType":"YulIdentifier","src":"12953:3:23"},"nativeSrc":"12953:20:23","nodeType":"YulFunctionCall","src":"12953:20:23"}],"functionName":{"name":"mstore","nativeSrc":"12943:6:23","nodeType":"YulIdentifier","src":"12943:6:23"},"nativeSrc":"12943:31:23","nodeType":"YulFunctionCall","src":"12943:31:23"},"nativeSrc":"12943:31:23","nodeType":"YulExpressionStatement","src":"12943:31:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12990:1:23","nodeType":"YulLiteral","src":"12990:1:23","type":"","value":"4"},{"kind":"number","nativeSrc":"12993:4:23","nodeType":"YulLiteral","src":"12993:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"12983:6:23","nodeType":"YulIdentifier","src":"12983:6:23"},"nativeSrc":"12983:15:23","nodeType":"YulFunctionCall","src":"12983:15:23"},"nativeSrc":"12983:15:23","nodeType":"YulExpressionStatement","src":"12983:15:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13014:1:23","nodeType":"YulLiteral","src":"13014:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"13017:4:23","nodeType":"YulLiteral","src":"13017:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13007:6:23","nodeType":"YulIdentifier","src":"13007:6:23"},"nativeSrc":"13007:15:23","nodeType":"YulFunctionCall","src":"13007:15:23"},"nativeSrc":"13007:15:23","nodeType":"YulExpressionStatement","src":"13007:15:23"}]},"name":"panic_error_0x11","nativeSrc":"12901:127:23","nodeType":"YulFunctionDefinition","src":"12901:127:23"},{"body":{"nativeSrc":"13085:116:23","nodeType":"YulBlock","src":"13085:116:23","statements":[{"nativeSrc":"13095:20:23","nodeType":"YulAssignment","src":"13095:20:23","value":{"arguments":[{"name":"x","nativeSrc":"13110:1:23","nodeType":"YulIdentifier","src":"13110:1:23"},{"name":"y","nativeSrc":"13113:1:23","nodeType":"YulIdentifier","src":"13113:1:23"}],"functionName":{"name":"mul","nativeSrc":"13106:3:23","nodeType":"YulIdentifier","src":"13106:3:23"},"nativeSrc":"13106:9:23","nodeType":"YulFunctionCall","src":"13106:9:23"},"variableNames":[{"name":"product","nativeSrc":"13095:7:23","nodeType":"YulIdentifier","src":"13095:7:23"}]},{"body":{"nativeSrc":"13173:22:23","nodeType":"YulBlock","src":"13173:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13175:16:23","nodeType":"YulIdentifier","src":"13175:16:23"},"nativeSrc":"13175:18:23","nodeType":"YulFunctionCall","src":"13175:18:23"},"nativeSrc":"13175:18:23","nodeType":"YulExpressionStatement","src":"13175:18:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"13144:1:23","nodeType":"YulIdentifier","src":"13144:1:23"}],"functionName":{"name":"iszero","nativeSrc":"13137:6:23","nodeType":"YulIdentifier","src":"13137:6:23"},"nativeSrc":"13137:9:23","nodeType":"YulFunctionCall","src":"13137:9:23"},{"arguments":[{"name":"y","nativeSrc":"13151:1:23","nodeType":"YulIdentifier","src":"13151:1:23"},{"arguments":[{"name":"product","nativeSrc":"13158:7:23","nodeType":"YulIdentifier","src":"13158:7:23"},{"name":"x","nativeSrc":"13167:1:23","nodeType":"YulIdentifier","src":"13167:1:23"}],"functionName":{"name":"div","nativeSrc":"13154:3:23","nodeType":"YulIdentifier","src":"13154:3:23"},"nativeSrc":"13154:15:23","nodeType":"YulFunctionCall","src":"13154:15:23"}],"functionName":{"name":"eq","nativeSrc":"13148:2:23","nodeType":"YulIdentifier","src":"13148:2:23"},"nativeSrc":"13148:22:23","nodeType":"YulFunctionCall","src":"13148:22:23"}],"functionName":{"name":"or","nativeSrc":"13134:2:23","nodeType":"YulIdentifier","src":"13134:2:23"},"nativeSrc":"13134:37:23","nodeType":"YulFunctionCall","src":"13134:37:23"}],"functionName":{"name":"iszero","nativeSrc":"13127:6:23","nodeType":"YulIdentifier","src":"13127:6:23"},"nativeSrc":"13127:45:23","nodeType":"YulFunctionCall","src":"13127:45:23"},"nativeSrc":"13124:71:23","nodeType":"YulIf","src":"13124:71:23"}]},"name":"checked_mul_t_uint256","nativeSrc":"13033:168:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13064:1:23","nodeType":"YulTypedName","src":"13064:1:23","type":""},{"name":"y","nativeSrc":"13067:1:23","nodeType":"YulTypedName","src":"13067:1:23","type":""}],"returnVariables":[{"name":"product","nativeSrc":"13073:7:23","nodeType":"YulTypedName","src":"13073:7:23","type":""}],"src":"13033:168:23"},{"body":{"nativeSrc":"13238:95:23","nodeType":"YulBlock","src":"13238:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13255:1:23","nodeType":"YulLiteral","src":"13255:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"13262:3:23","nodeType":"YulLiteral","src":"13262:3:23","type":"","value":"224"},{"kind":"number","nativeSrc":"13267:10:23","nodeType":"YulLiteral","src":"13267:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"13258:3:23","nodeType":"YulIdentifier","src":"13258:3:23"},"nativeSrc":"13258:20:23","nodeType":"YulFunctionCall","src":"13258:20:23"}],"functionName":{"name":"mstore","nativeSrc":"13248:6:23","nodeType":"YulIdentifier","src":"13248:6:23"},"nativeSrc":"13248:31:23","nodeType":"YulFunctionCall","src":"13248:31:23"},"nativeSrc":"13248:31:23","nodeType":"YulExpressionStatement","src":"13248:31:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13295:1:23","nodeType":"YulLiteral","src":"13295:1:23","type":"","value":"4"},{"kind":"number","nativeSrc":"13298:4:23","nodeType":"YulLiteral","src":"13298:4:23","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"13288:6:23","nodeType":"YulIdentifier","src":"13288:6:23"},"nativeSrc":"13288:15:23","nodeType":"YulFunctionCall","src":"13288:15:23"},"nativeSrc":"13288:15:23","nodeType":"YulExpressionStatement","src":"13288:15:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13319:1:23","nodeType":"YulLiteral","src":"13319:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"13322:4:23","nodeType":"YulLiteral","src":"13322:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13312:6:23","nodeType":"YulIdentifier","src":"13312:6:23"},"nativeSrc":"13312:15:23","nodeType":"YulFunctionCall","src":"13312:15:23"},"nativeSrc":"13312:15:23","nodeType":"YulExpressionStatement","src":"13312:15:23"}]},"name":"panic_error_0x32","nativeSrc":"13206:127:23","nodeType":"YulFunctionDefinition","src":"13206:127:23"},{"body":{"nativeSrc":"13444:775:23","nodeType":"YulBlock","src":"13444:775:23","statements":[{"nativeSrc":"13454:12:23","nodeType":"YulVariableDeclaration","src":"13454:12:23","value":{"kind":"number","nativeSrc":"13464:2:23","nodeType":"YulLiteral","src":"13464:2:23","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"13458:2:23","nodeType":"YulTypedName","src":"13458:2:23","type":""}]},{"body":{"nativeSrc":"13511:16:23","nodeType":"YulBlock","src":"13511:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13520:1:23","nodeType":"YulLiteral","src":"13520:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"13523:1:23","nodeType":"YulLiteral","src":"13523:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13513:6:23","nodeType":"YulIdentifier","src":"13513:6:23"},"nativeSrc":"13513:12:23","nodeType":"YulFunctionCall","src":"13513:12:23"},"nativeSrc":"13513:12:23","nodeType":"YulExpressionStatement","src":"13513:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13486:7:23","nodeType":"YulIdentifier","src":"13486:7:23"},{"name":"headStart","nativeSrc":"13495:9:23","nodeType":"YulIdentifier","src":"13495:9:23"}],"functionName":{"name":"sub","nativeSrc":"13482:3:23","nodeType":"YulIdentifier","src":"13482:3:23"},"nativeSrc":"13482:23:23","nodeType":"YulFunctionCall","src":"13482:23:23"},{"name":"_1","nativeSrc":"13507:2:23","nodeType":"YulIdentifier","src":"13507:2:23"}],"functionName":{"name":"slt","nativeSrc":"13478:3:23","nodeType":"YulIdentifier","src":"13478:3:23"},"nativeSrc":"13478:32:23","nodeType":"YulFunctionCall","src":"13478:32:23"},"nativeSrc":"13475:52:23","nodeType":"YulIf","src":"13475:52:23"},{"nativeSrc":"13536:30:23","nodeType":"YulVariableDeclaration","src":"13536:30:23","value":{"arguments":[{"name":"headStart","nativeSrc":"13556:9:23","nodeType":"YulIdentifier","src":"13556:9:23"}],"functionName":{"name":"mload","nativeSrc":"13550:5:23","nodeType":"YulIdentifier","src":"13550:5:23"},"nativeSrc":"13550:16:23","nodeType":"YulFunctionCall","src":"13550:16:23"},"variables":[{"name":"offset","nativeSrc":"13540:6:23","nodeType":"YulTypedName","src":"13540:6:23","type":""}]},{"body":{"nativeSrc":"13609:16:23","nodeType":"YulBlock","src":"13609:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13618:1:23","nodeType":"YulLiteral","src":"13618:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"13621:1:23","nodeType":"YulLiteral","src":"13621:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13611:6:23","nodeType":"YulIdentifier","src":"13611:6:23"},"nativeSrc":"13611:12:23","nodeType":"YulFunctionCall","src":"13611:12:23"},"nativeSrc":"13611:12:23","nodeType":"YulExpressionStatement","src":"13611:12:23"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"13581:6:23","nodeType":"YulIdentifier","src":"13581:6:23"},{"kind":"number","nativeSrc":"13589:18:23","nodeType":"YulLiteral","src":"13589:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13578:2:23","nodeType":"YulIdentifier","src":"13578:2:23"},"nativeSrc":"13578:30:23","nodeType":"YulFunctionCall","src":"13578:30:23"},"nativeSrc":"13575:50:23","nodeType":"YulIf","src":"13575:50:23"},{"nativeSrc":"13634:32:23","nodeType":"YulVariableDeclaration","src":"13634:32:23","value":{"arguments":[{"name":"headStart","nativeSrc":"13648:9:23","nodeType":"YulIdentifier","src":"13648:9:23"},{"name":"offset","nativeSrc":"13659:6:23","nodeType":"YulIdentifier","src":"13659:6:23"}],"functionName":{"name":"add","nativeSrc":"13644:3:23","nodeType":"YulIdentifier","src":"13644:3:23"},"nativeSrc":"13644:22:23","nodeType":"YulFunctionCall","src":"13644:22:23"},"variables":[{"name":"_2","nativeSrc":"13638:2:23","nodeType":"YulTypedName","src":"13638:2:23","type":""}]},{"body":{"nativeSrc":"13714:16:23","nodeType":"YulBlock","src":"13714:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13723:1:23","nodeType":"YulLiteral","src":"13723:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"13726:1:23","nodeType":"YulLiteral","src":"13726:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13716:6:23","nodeType":"YulIdentifier","src":"13716:6:23"},"nativeSrc":"13716:12:23","nodeType":"YulFunctionCall","src":"13716:12:23"},"nativeSrc":"13716:12:23","nodeType":"YulExpressionStatement","src":"13716:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"13693:2:23","nodeType":"YulIdentifier","src":"13693:2:23"},{"kind":"number","nativeSrc":"13697:4:23","nodeType":"YulLiteral","src":"13697:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"13689:3:23","nodeType":"YulIdentifier","src":"13689:3:23"},"nativeSrc":"13689:13:23","nodeType":"YulFunctionCall","src":"13689:13:23"},{"name":"dataEnd","nativeSrc":"13704:7:23","nodeType":"YulIdentifier","src":"13704:7:23"}],"functionName":{"name":"slt","nativeSrc":"13685:3:23","nodeType":"YulIdentifier","src":"13685:3:23"},"nativeSrc":"13685:27:23","nodeType":"YulFunctionCall","src":"13685:27:23"}],"functionName":{"name":"iszero","nativeSrc":"13678:6:23","nodeType":"YulIdentifier","src":"13678:6:23"},"nativeSrc":"13678:35:23","nodeType":"YulFunctionCall","src":"13678:35:23"},"nativeSrc":"13675:55:23","nodeType":"YulIf","src":"13675:55:23"},{"nativeSrc":"13739:19:23","nodeType":"YulVariableDeclaration","src":"13739:19:23","value":{"arguments":[{"name":"_2","nativeSrc":"13755:2:23","nodeType":"YulIdentifier","src":"13755:2:23"}],"functionName":{"name":"mload","nativeSrc":"13749:5:23","nodeType":"YulIdentifier","src":"13749:5:23"},"nativeSrc":"13749:9:23","nodeType":"YulFunctionCall","src":"13749:9:23"},"variables":[{"name":"_3","nativeSrc":"13743:2:23","nodeType":"YulTypedName","src":"13743:2:23","type":""}]},{"nativeSrc":"13767:71:23","nodeType":"YulVariableDeclaration","src":"13767:71:23","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"13834:2:23","nodeType":"YulIdentifier","src":"13834:2:23"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nativeSrc":"13794:39:23","nodeType":"YulIdentifier","src":"13794:39:23"},"nativeSrc":"13794:43:23","nodeType":"YulFunctionCall","src":"13794:43:23"}],"functionName":{"name":"allocate_memory","nativeSrc":"13778:15:23","nodeType":"YulIdentifier","src":"13778:15:23"},"nativeSrc":"13778:60:23","nodeType":"YulFunctionCall","src":"13778:60:23"},"variables":[{"name":"dst","nativeSrc":"13771:3:23","nodeType":"YulTypedName","src":"13771:3:23","type":""}]},{"nativeSrc":"13847:16:23","nodeType":"YulVariableDeclaration","src":"13847:16:23","value":{"name":"dst","nativeSrc":"13860:3:23","nodeType":"YulIdentifier","src":"13860:3:23"},"variables":[{"name":"dst_1","nativeSrc":"13851:5:23","nodeType":"YulTypedName","src":"13851:5:23","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"13879:3:23","nodeType":"YulIdentifier","src":"13879:3:23"},{"name":"_3","nativeSrc":"13884:2:23","nodeType":"YulIdentifier","src":"13884:2:23"}],"functionName":{"name":"mstore","nativeSrc":"13872:6:23","nodeType":"YulIdentifier","src":"13872:6:23"},"nativeSrc":"13872:15:23","nodeType":"YulFunctionCall","src":"13872:15:23"},"nativeSrc":"13872:15:23","nodeType":"YulExpressionStatement","src":"13872:15:23"},{"nativeSrc":"13896:19:23","nodeType":"YulAssignment","src":"13896:19:23","value":{"arguments":[{"name":"dst","nativeSrc":"13907:3:23","nodeType":"YulIdentifier","src":"13907:3:23"},{"name":"_1","nativeSrc":"13912:2:23","nodeType":"YulIdentifier","src":"13912:2:23"}],"functionName":{"name":"add","nativeSrc":"13903:3:23","nodeType":"YulIdentifier","src":"13903:3:23"},"nativeSrc":"13903:12:23","nodeType":"YulFunctionCall","src":"13903:12:23"},"variableNames":[{"name":"dst","nativeSrc":"13896:3:23","nodeType":"YulIdentifier","src":"13896:3:23"}]},{"nativeSrc":"13924:42:23","nodeType":"YulVariableDeclaration","src":"13924:42:23","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"13946:2:23","nodeType":"YulIdentifier","src":"13946:2:23"},{"arguments":[{"kind":"number","nativeSrc":"13954:1:23","nodeType":"YulLiteral","src":"13954:1:23","type":"","value":"5"},{"name":"_3","nativeSrc":"13957:2:23","nodeType":"YulIdentifier","src":"13957:2:23"}],"functionName":{"name":"shl","nativeSrc":"13950:3:23","nodeType":"YulIdentifier","src":"13950:3:23"},"nativeSrc":"13950:10:23","nodeType":"YulFunctionCall","src":"13950:10:23"}],"functionName":{"name":"add","nativeSrc":"13942:3:23","nodeType":"YulIdentifier","src":"13942:3:23"},"nativeSrc":"13942:19:23","nodeType":"YulFunctionCall","src":"13942:19:23"},{"name":"_1","nativeSrc":"13963:2:23","nodeType":"YulIdentifier","src":"13963:2:23"}],"functionName":{"name":"add","nativeSrc":"13938:3:23","nodeType":"YulIdentifier","src":"13938:3:23"},"nativeSrc":"13938:28:23","nodeType":"YulFunctionCall","src":"13938:28:23"},"variables":[{"name":"srcEnd","nativeSrc":"13928:6:23","nodeType":"YulTypedName","src":"13928:6:23","type":""}]},{"body":{"nativeSrc":"13998:16:23","nodeType":"YulBlock","src":"13998:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14007:1:23","nodeType":"YulLiteral","src":"14007:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"14010:1:23","nodeType":"YulLiteral","src":"14010:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"14000:6:23","nodeType":"YulIdentifier","src":"14000:6:23"},"nativeSrc":"14000:12:23","nodeType":"YulFunctionCall","src":"14000:12:23"},"nativeSrc":"14000:12:23","nodeType":"YulExpressionStatement","src":"14000:12:23"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"13981:6:23","nodeType":"YulIdentifier","src":"13981:6:23"},{"name":"dataEnd","nativeSrc":"13989:7:23","nodeType":"YulIdentifier","src":"13989:7:23"}],"functionName":{"name":"gt","nativeSrc":"13978:2:23","nodeType":"YulIdentifier","src":"13978:2:23"},"nativeSrc":"13978:19:23","nodeType":"YulFunctionCall","src":"13978:19:23"},"nativeSrc":"13975:39:23","nodeType":"YulIf","src":"13975:39:23"},{"nativeSrc":"14023:22:23","nodeType":"YulVariableDeclaration","src":"14023:22:23","value":{"arguments":[{"name":"_2","nativeSrc":"14038:2:23","nodeType":"YulIdentifier","src":"14038:2:23"},{"name":"_1","nativeSrc":"14042:2:23","nodeType":"YulIdentifier","src":"14042:2:23"}],"functionName":{"name":"add","nativeSrc":"14034:3:23","nodeType":"YulIdentifier","src":"14034:3:23"},"nativeSrc":"14034:11:23","nodeType":"YulFunctionCall","src":"14034:11:23"},"variables":[{"name":"src","nativeSrc":"14027:3:23","nodeType":"YulTypedName","src":"14027:3:23","type":""}]},{"body":{"nativeSrc":"14110:79:23","nodeType":"YulBlock","src":"14110:79:23","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"14131:3:23","nodeType":"YulIdentifier","src":"14131:3:23"},{"arguments":[{"name":"src","nativeSrc":"14142:3:23","nodeType":"YulIdentifier","src":"14142:3:23"}],"functionName":{"name":"mload","nativeSrc":"14136:5:23","nodeType":"YulIdentifier","src":"14136:5:23"},"nativeSrc":"14136:10:23","nodeType":"YulFunctionCall","src":"14136:10:23"}],"functionName":{"name":"mstore","nativeSrc":"14124:6:23","nodeType":"YulIdentifier","src":"14124:6:23"},"nativeSrc":"14124:23:23","nodeType":"YulFunctionCall","src":"14124:23:23"},"nativeSrc":"14124:23:23","nodeType":"YulExpressionStatement","src":"14124:23:23"},{"nativeSrc":"14160:19:23","nodeType":"YulAssignment","src":"14160:19:23","value":{"arguments":[{"name":"dst","nativeSrc":"14171:3:23","nodeType":"YulIdentifier","src":"14171:3:23"},{"name":"_1","nativeSrc":"14176:2:23","nodeType":"YulIdentifier","src":"14176:2:23"}],"functionName":{"name":"add","nativeSrc":"14167:3:23","nodeType":"YulIdentifier","src":"14167:3:23"},"nativeSrc":"14167:12:23","nodeType":"YulFunctionCall","src":"14167:12:23"},"variableNames":[{"name":"dst","nativeSrc":"14160:3:23","nodeType":"YulIdentifier","src":"14160:3:23"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"14065:3:23","nodeType":"YulIdentifier","src":"14065:3:23"},{"name":"srcEnd","nativeSrc":"14070:6:23","nodeType":"YulIdentifier","src":"14070:6:23"}],"functionName":{"name":"lt","nativeSrc":"14062:2:23","nodeType":"YulIdentifier","src":"14062:2:23"},"nativeSrc":"14062:15:23","nodeType":"YulFunctionCall","src":"14062:15:23"},"nativeSrc":"14054:135:23","nodeType":"YulForLoop","post":{"nativeSrc":"14078:23:23","nodeType":"YulBlock","src":"14078:23:23","statements":[{"nativeSrc":"14080:19:23","nodeType":"YulAssignment","src":"14080:19:23","value":{"arguments":[{"name":"src","nativeSrc":"14091:3:23","nodeType":"YulIdentifier","src":"14091:3:23"},{"name":"_1","nativeSrc":"14096:2:23","nodeType":"YulIdentifier","src":"14096:2:23"}],"functionName":{"name":"add","nativeSrc":"14087:3:23","nodeType":"YulIdentifier","src":"14087:3:23"},"nativeSrc":"14087:12:23","nodeType":"YulFunctionCall","src":"14087:12:23"},"variableNames":[{"name":"src","nativeSrc":"14080:3:23","nodeType":"YulIdentifier","src":"14080:3:23"}]}]},"pre":{"nativeSrc":"14058:3:23","nodeType":"YulBlock","src":"14058:3:23","statements":[]},"src":"14054:135:23"},{"nativeSrc":"14198:15:23","nodeType":"YulAssignment","src":"14198:15:23","value":{"name":"dst_1","nativeSrc":"14208:5:23","nodeType":"YulIdentifier","src":"14208:5:23"},"variableNames":[{"name":"value0","nativeSrc":"14198:6:23","nodeType":"YulIdentifier","src":"14198:6:23"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nativeSrc":"13338:881:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13410:9:23","nodeType":"YulTypedName","src":"13410:9:23","type":""},{"name":"dataEnd","nativeSrc":"13421:7:23","nodeType":"YulTypedName","src":"13421:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13433:6:23","nodeType":"YulTypedName","src":"13433:6:23","type":""}],"src":"13338:881:23"},{"body":{"nativeSrc":"14398:171:23","nodeType":"YulBlock","src":"14398:171:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14415:9:23","nodeType":"YulIdentifier","src":"14415:9:23"},{"kind":"number","nativeSrc":"14426:2:23","nodeType":"YulLiteral","src":"14426:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14408:6:23","nodeType":"YulIdentifier","src":"14408:6:23"},"nativeSrc":"14408:21:23","nodeType":"YulFunctionCall","src":"14408:21:23"},"nativeSrc":"14408:21:23","nodeType":"YulExpressionStatement","src":"14408:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14449:9:23","nodeType":"YulIdentifier","src":"14449:9:23"},{"kind":"number","nativeSrc":"14460:2:23","nodeType":"YulLiteral","src":"14460:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14445:3:23","nodeType":"YulIdentifier","src":"14445:3:23"},"nativeSrc":"14445:18:23","nodeType":"YulFunctionCall","src":"14445:18:23"},{"kind":"number","nativeSrc":"14465:2:23","nodeType":"YulLiteral","src":"14465:2:23","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"14438:6:23","nodeType":"YulIdentifier","src":"14438:6:23"},"nativeSrc":"14438:30:23","nodeType":"YulFunctionCall","src":"14438:30:23"},"nativeSrc":"14438:30:23","nodeType":"YulExpressionStatement","src":"14438:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14488:9:23","nodeType":"YulIdentifier","src":"14488:9:23"},{"kind":"number","nativeSrc":"14499:2:23","nodeType":"YulLiteral","src":"14499:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14484:3:23","nodeType":"YulIdentifier","src":"14484:3:23"},"nativeSrc":"14484:18:23","nodeType":"YulFunctionCall","src":"14484:18:23"},{"hexValue":"496e697469616c697a6174696f6e206661696c6564","kind":"string","nativeSrc":"14504:23:23","nodeType":"YulLiteral","src":"14504:23:23","type":"","value":"Initialization failed"}],"functionName":{"name":"mstore","nativeSrc":"14477:6:23","nodeType":"YulIdentifier","src":"14477:6:23"},"nativeSrc":"14477:51:23","nodeType":"YulFunctionCall","src":"14477:51:23"},"nativeSrc":"14477:51:23","nodeType":"YulExpressionStatement","src":"14477:51:23"},{"nativeSrc":"14537:26:23","nodeType":"YulAssignment","src":"14537:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"14549:9:23","nodeType":"YulIdentifier","src":"14549:9:23"},{"kind":"number","nativeSrc":"14560:2:23","nodeType":"YulLiteral","src":"14560:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14545:3:23","nodeType":"YulIdentifier","src":"14545:3:23"},"nativeSrc":"14545:18:23","nodeType":"YulFunctionCall","src":"14545:18:23"},"variableNames":[{"name":"tail","nativeSrc":"14537:4:23","nodeType":"YulIdentifier","src":"14537:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14224:345:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14375:9:23","nodeType":"YulTypedName","src":"14375:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14389:4:23","nodeType":"YulTypedName","src":"14389:4:23","type":""}],"src":"14224:345:23"},{"body":{"nativeSrc":"14748:176:23","nodeType":"YulBlock","src":"14748:176:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14765:9:23","nodeType":"YulIdentifier","src":"14765:9:23"},{"kind":"number","nativeSrc":"14776:2:23","nodeType":"YulLiteral","src":"14776:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14758:6:23","nodeType":"YulIdentifier","src":"14758:6:23"},"nativeSrc":"14758:21:23","nodeType":"YulFunctionCall","src":"14758:21:23"},"nativeSrc":"14758:21:23","nodeType":"YulExpressionStatement","src":"14758:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14799:9:23","nodeType":"YulIdentifier","src":"14799:9:23"},{"kind":"number","nativeSrc":"14810:2:23","nodeType":"YulLiteral","src":"14810:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14795:3:23","nodeType":"YulIdentifier","src":"14795:3:23"},"nativeSrc":"14795:18:23","nodeType":"YulFunctionCall","src":"14795:18:23"},{"kind":"number","nativeSrc":"14815:2:23","nodeType":"YulLiteral","src":"14815:2:23","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"14788:6:23","nodeType":"YulIdentifier","src":"14788:6:23"},"nativeSrc":"14788:30:23","nodeType":"YulFunctionCall","src":"14788:30:23"},"nativeSrc":"14788:30:23","nodeType":"YulExpressionStatement","src":"14788:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14838:9:23","nodeType":"YulIdentifier","src":"14838:9:23"},{"kind":"number","nativeSrc":"14849:2:23","nodeType":"YulLiteral","src":"14849:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14834:3:23","nodeType":"YulIdentifier","src":"14834:3:23"},"nativeSrc":"14834:18:23","nodeType":"YulFunctionCall","src":"14834:18:23"},{"hexValue":"496e76616c696420626173652061737365742061646472657373","kind":"string","nativeSrc":"14854:28:23","nodeType":"YulLiteral","src":"14854:28:23","type":"","value":"Invalid base asset address"}],"functionName":{"name":"mstore","nativeSrc":"14827:6:23","nodeType":"YulIdentifier","src":"14827:6:23"},"nativeSrc":"14827:56:23","nodeType":"YulFunctionCall","src":"14827:56:23"},"nativeSrc":"14827:56:23","nodeType":"YulExpressionStatement","src":"14827:56:23"},{"nativeSrc":"14892:26:23","nodeType":"YulAssignment","src":"14892:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"14904:9:23","nodeType":"YulIdentifier","src":"14904:9:23"},{"kind":"number","nativeSrc":"14915:2:23","nodeType":"YulLiteral","src":"14915:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14900:3:23","nodeType":"YulIdentifier","src":"14900:3:23"},"nativeSrc":"14900:18:23","nodeType":"YulFunctionCall","src":"14900:18:23"},"variableNames":[{"name":"tail","nativeSrc":"14892:4:23","nodeType":"YulIdentifier","src":"14892:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_391a75680d8ec99739af126cde56833526e4b720a416f24f1d7ee98c294a45b1__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14574:350:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14725:9:23","nodeType":"YulTypedName","src":"14725:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14739:4:23","nodeType":"YulTypedName","src":"14739:4:23","type":""}],"src":"14574:350:23"},{"body":{"nativeSrc":"14977:77:23","nodeType":"YulBlock","src":"14977:77:23","statements":[{"nativeSrc":"14987:16:23","nodeType":"YulAssignment","src":"14987:16:23","value":{"arguments":[{"name":"x","nativeSrc":"14998:1:23","nodeType":"YulIdentifier","src":"14998:1:23"},{"name":"y","nativeSrc":"15001:1:23","nodeType":"YulIdentifier","src":"15001:1:23"}],"functionName":{"name":"add","nativeSrc":"14994:3:23","nodeType":"YulIdentifier","src":"14994:3:23"},"nativeSrc":"14994:9:23","nodeType":"YulFunctionCall","src":"14994:9:23"},"variableNames":[{"name":"sum","nativeSrc":"14987:3:23","nodeType":"YulIdentifier","src":"14987:3:23"}]},{"body":{"nativeSrc":"15026:22:23","nodeType":"YulBlock","src":"15026:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"15028:16:23","nodeType":"YulIdentifier","src":"15028:16:23"},"nativeSrc":"15028:18:23","nodeType":"YulFunctionCall","src":"15028:18:23"},"nativeSrc":"15028:18:23","nodeType":"YulExpressionStatement","src":"15028:18:23"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"15018:1:23","nodeType":"YulIdentifier","src":"15018:1:23"},{"name":"sum","nativeSrc":"15021:3:23","nodeType":"YulIdentifier","src":"15021:3:23"}],"functionName":{"name":"gt","nativeSrc":"15015:2:23","nodeType":"YulIdentifier","src":"15015:2:23"},"nativeSrc":"15015:10:23","nodeType":"YulFunctionCall","src":"15015:10:23"},"nativeSrc":"15012:36:23","nodeType":"YulIf","src":"15012:36:23"}]},"name":"checked_add_t_uint256","nativeSrc":"14929:125:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"14960:1:23","nodeType":"YulTypedName","src":"14960:1:23","type":""},{"name":"y","nativeSrc":"14963:1:23","nodeType":"YulTypedName","src":"14963:1:23","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"14969:3:23","nodeType":"YulTypedName","src":"14969:3:23","type":""}],"src":"14929:125:23"},{"body":{"nativeSrc":"15233:165:23","nodeType":"YulBlock","src":"15233:165:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15250:9:23","nodeType":"YulIdentifier","src":"15250:9:23"},{"kind":"number","nativeSrc":"15261:2:23","nodeType":"YulLiteral","src":"15261:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15243:6:23","nodeType":"YulIdentifier","src":"15243:6:23"},"nativeSrc":"15243:21:23","nodeType":"YulFunctionCall","src":"15243:21:23"},"nativeSrc":"15243:21:23","nodeType":"YulExpressionStatement","src":"15243:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15284:9:23","nodeType":"YulIdentifier","src":"15284:9:23"},{"kind":"number","nativeSrc":"15295:2:23","nodeType":"YulLiteral","src":"15295:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15280:3:23","nodeType":"YulIdentifier","src":"15280:3:23"},"nativeSrc":"15280:18:23","nodeType":"YulFunctionCall","src":"15280:18:23"},{"kind":"number","nativeSrc":"15300:2:23","nodeType":"YulLiteral","src":"15300:2:23","type":"","value":"15"}],"functionName":{"name":"mstore","nativeSrc":"15273:6:23","nodeType":"YulIdentifier","src":"15273:6:23"},"nativeSrc":"15273:30:23","nodeType":"YulFunctionCall","src":"15273:30:23"},"nativeSrc":"15273:30:23","nodeType":"YulExpressionStatement","src":"15273:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15323:9:23","nodeType":"YulIdentifier","src":"15323:9:23"},{"kind":"number","nativeSrc":"15334:2:23","nodeType":"YulLiteral","src":"15334:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15319:3:23","nodeType":"YulIdentifier","src":"15319:3:23"},"nativeSrc":"15319:18:23","nodeType":"YulFunctionCall","src":"15319:18:23"},{"hexValue":"496e76616c69642077656967687473","kind":"string","nativeSrc":"15339:17:23","nodeType":"YulLiteral","src":"15339:17:23","type":"","value":"Invalid weights"}],"functionName":{"name":"mstore","nativeSrc":"15312:6:23","nodeType":"YulIdentifier","src":"15312:6:23"},"nativeSrc":"15312:45:23","nodeType":"YulFunctionCall","src":"15312:45:23"},"nativeSrc":"15312:45:23","nodeType":"YulExpressionStatement","src":"15312:45:23"},{"nativeSrc":"15366:26:23","nodeType":"YulAssignment","src":"15366:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"15378:9:23","nodeType":"YulIdentifier","src":"15378:9:23"},{"kind":"number","nativeSrc":"15389:2:23","nodeType":"YulLiteral","src":"15389:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15374:3:23","nodeType":"YulIdentifier","src":"15374:3:23"},"nativeSrc":"15374:18:23","nodeType":"YulFunctionCall","src":"15374:18:23"},"variableNames":[{"name":"tail","nativeSrc":"15366:4:23","nodeType":"YulIdentifier","src":"15366:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15059:339:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15210:9:23","nodeType":"YulTypedName","src":"15210:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15224:4:23","nodeType":"YulTypedName","src":"15224:4:23","type":""}],"src":"15059:339:23"},{"body":{"nativeSrc":"15511:101:23","nodeType":"YulBlock","src":"15511:101:23","statements":[{"nativeSrc":"15521:26:23","nodeType":"YulAssignment","src":"15521:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"15533:9:23","nodeType":"YulIdentifier","src":"15533:9:23"},{"kind":"number","nativeSrc":"15544:2:23","nodeType":"YulLiteral","src":"15544:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15529:3:23","nodeType":"YulIdentifier","src":"15529:3:23"},"nativeSrc":"15529:18:23","nodeType":"YulFunctionCall","src":"15529:18:23"},"variableNames":[{"name":"tail","nativeSrc":"15521:4:23","nodeType":"YulIdentifier","src":"15521:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15563:9:23","nodeType":"YulIdentifier","src":"15563:9:23"},{"arguments":[{"name":"value0","nativeSrc":"15578:6:23","nodeType":"YulIdentifier","src":"15578:6:23"},{"kind":"number","nativeSrc":"15586:18:23","nodeType":"YulLiteral","src":"15586:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"15574:3:23","nodeType":"YulIdentifier","src":"15574:3:23"},"nativeSrc":"15574:31:23","nodeType":"YulFunctionCall","src":"15574:31:23"}],"functionName":{"name":"mstore","nativeSrc":"15556:6:23","nodeType":"YulIdentifier","src":"15556:6:23"},"nativeSrc":"15556:50:23","nodeType":"YulFunctionCall","src":"15556:50:23"},"nativeSrc":"15556:50:23","nodeType":"YulExpressionStatement","src":"15556:50:23"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"15403:209:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15480:9:23","nodeType":"YulTypedName","src":"15480:9:23","type":""},{"name":"value0","nativeSrc":"15491:6:23","nodeType":"YulTypedName","src":"15491:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15502:4:23","nodeType":"YulTypedName","src":"15502:4:23","type":""}],"src":"15403:209:23"},{"body":{"nativeSrc":"15791:172:23","nodeType":"YulBlock","src":"15791:172:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15808:9:23","nodeType":"YulIdentifier","src":"15808:9:23"},{"kind":"number","nativeSrc":"15819:2:23","nodeType":"YulLiteral","src":"15819:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15801:6:23","nodeType":"YulIdentifier","src":"15801:6:23"},"nativeSrc":"15801:21:23","nodeType":"YulFunctionCall","src":"15801:21:23"},"nativeSrc":"15801:21:23","nodeType":"YulExpressionStatement","src":"15801:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15842:9:23","nodeType":"YulIdentifier","src":"15842:9:23"},{"kind":"number","nativeSrc":"15853:2:23","nodeType":"YulLiteral","src":"15853:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15838:3:23","nodeType":"YulIdentifier","src":"15838:3:23"},"nativeSrc":"15838:18:23","nodeType":"YulFunctionCall","src":"15838:18:23"},{"kind":"number","nativeSrc":"15858:2:23","nodeType":"YulLiteral","src":"15858:2:23","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"15831:6:23","nodeType":"YulIdentifier","src":"15831:6:23"},"nativeSrc":"15831:30:23","nodeType":"YulFunctionCall","src":"15831:30:23"},"nativeSrc":"15831:30:23","nodeType":"YulExpressionStatement","src":"15831:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15881:9:23","nodeType":"YulIdentifier","src":"15881:9:23"},{"kind":"number","nativeSrc":"15892:2:23","nodeType":"YulLiteral","src":"15892:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15877:3:23","nodeType":"YulIdentifier","src":"15877:3:23"},"nativeSrc":"15877:18:23","nodeType":"YulFunctionCall","src":"15877:18:23"},{"hexValue":"496e76616c6964206f7261636c652061646472657373","kind":"string","nativeSrc":"15897:24:23","nodeType":"YulLiteral","src":"15897:24:23","type":"","value":"Invalid oracle address"}],"functionName":{"name":"mstore","nativeSrc":"15870:6:23","nodeType":"YulIdentifier","src":"15870:6:23"},"nativeSrc":"15870:52:23","nodeType":"YulFunctionCall","src":"15870:52:23"},"nativeSrc":"15870:52:23","nodeType":"YulExpressionStatement","src":"15870:52:23"},{"nativeSrc":"15931:26:23","nodeType":"YulAssignment","src":"15931:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"15943:9:23","nodeType":"YulIdentifier","src":"15943:9:23"},{"kind":"number","nativeSrc":"15954:2:23","nodeType":"YulLiteral","src":"15954:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15939:3:23","nodeType":"YulIdentifier","src":"15939:3:23"},"nativeSrc":"15939:18:23","nodeType":"YulFunctionCall","src":"15939:18:23"},"variableNames":[{"name":"tail","nativeSrc":"15931:4:23","nodeType":"YulIdentifier","src":"15931:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15617:346:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15768:9:23","nodeType":"YulTypedName","src":"15768:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15782:4:23","nodeType":"YulTypedName","src":"15782:4:23","type":""}],"src":"15617:346:23"},{"body":{"nativeSrc":"16125:218:23","nodeType":"YulBlock","src":"16125:218:23","statements":[{"nativeSrc":"16135:26:23","nodeType":"YulAssignment","src":"16135:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"16147:9:23","nodeType":"YulIdentifier","src":"16147:9:23"},{"kind":"number","nativeSrc":"16158:2:23","nodeType":"YulLiteral","src":"16158:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16143:3:23","nodeType":"YulIdentifier","src":"16143:3:23"},"nativeSrc":"16143:18:23","nodeType":"YulFunctionCall","src":"16143:18:23"},"variableNames":[{"name":"tail","nativeSrc":"16135:4:23","nodeType":"YulIdentifier","src":"16135:4:23"}]},{"nativeSrc":"16170:29:23","nodeType":"YulVariableDeclaration","src":"16170:29:23","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"16188:3:23","nodeType":"YulLiteral","src":"16188:3:23","type":"","value":"160"},{"kind":"number","nativeSrc":"16193:1:23","nodeType":"YulLiteral","src":"16193:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"16184:3:23","nodeType":"YulIdentifier","src":"16184:3:23"},"nativeSrc":"16184:11:23","nodeType":"YulFunctionCall","src":"16184:11:23"},{"kind":"number","nativeSrc":"16197:1:23","nodeType":"YulLiteral","src":"16197:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"16180:3:23","nodeType":"YulIdentifier","src":"16180:3:23"},"nativeSrc":"16180:19:23","nodeType":"YulFunctionCall","src":"16180:19:23"},"variables":[{"name":"_1","nativeSrc":"16174:2:23","nodeType":"YulTypedName","src":"16174:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16215:9:23","nodeType":"YulIdentifier","src":"16215:9:23"},{"arguments":[{"name":"value0","nativeSrc":"16230:6:23","nodeType":"YulIdentifier","src":"16230:6:23"},{"name":"_1","nativeSrc":"16238:2:23","nodeType":"YulIdentifier","src":"16238:2:23"}],"functionName":{"name":"and","nativeSrc":"16226:3:23","nodeType":"YulIdentifier","src":"16226:3:23"},"nativeSrc":"16226:15:23","nodeType":"YulFunctionCall","src":"16226:15:23"}],"functionName":{"name":"mstore","nativeSrc":"16208:6:23","nodeType":"YulIdentifier","src":"16208:6:23"},"nativeSrc":"16208:34:23","nodeType":"YulFunctionCall","src":"16208:34:23"},"nativeSrc":"16208:34:23","nodeType":"YulExpressionStatement","src":"16208:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16262:9:23","nodeType":"YulIdentifier","src":"16262:9:23"},{"kind":"number","nativeSrc":"16273:2:23","nodeType":"YulLiteral","src":"16273:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16258:3:23","nodeType":"YulIdentifier","src":"16258:3:23"},"nativeSrc":"16258:18:23","nodeType":"YulFunctionCall","src":"16258:18:23"},{"arguments":[{"name":"value1","nativeSrc":"16282:6:23","nodeType":"YulIdentifier","src":"16282:6:23"},{"name":"_1","nativeSrc":"16290:2:23","nodeType":"YulIdentifier","src":"16290:2:23"}],"functionName":{"name":"and","nativeSrc":"16278:3:23","nodeType":"YulIdentifier","src":"16278:3:23"},"nativeSrc":"16278:15:23","nodeType":"YulFunctionCall","src":"16278:15:23"}],"functionName":{"name":"mstore","nativeSrc":"16251:6:23","nodeType":"YulIdentifier","src":"16251:6:23"},"nativeSrc":"16251:43:23","nodeType":"YulFunctionCall","src":"16251:43:23"},"nativeSrc":"16251:43:23","nodeType":"YulExpressionStatement","src":"16251:43:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16314:9:23","nodeType":"YulIdentifier","src":"16314:9:23"},{"kind":"number","nativeSrc":"16325:2:23","nodeType":"YulLiteral","src":"16325:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16310:3:23","nodeType":"YulIdentifier","src":"16310:3:23"},"nativeSrc":"16310:18:23","nodeType":"YulFunctionCall","src":"16310:18:23"},{"name":"value2","nativeSrc":"16330:6:23","nodeType":"YulIdentifier","src":"16330:6:23"}],"functionName":{"name":"mstore","nativeSrc":"16303:6:23","nodeType":"YulIdentifier","src":"16303:6:23"},"nativeSrc":"16303:34:23","nodeType":"YulFunctionCall","src":"16303:34:23"},"nativeSrc":"16303:34:23","nodeType":"YulExpressionStatement","src":"16303:34:23"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"15968:375:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16078:9:23","nodeType":"YulTypedName","src":"16078:9:23","type":""},{"name":"value2","nativeSrc":"16089:6:23","nodeType":"YulTypedName","src":"16089:6:23","type":""},{"name":"value1","nativeSrc":"16097:6:23","nodeType":"YulTypedName","src":"16097:6:23","type":""},{"name":"value0","nativeSrc":"16105:6:23","nodeType":"YulTypedName","src":"16105:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16116:4:23","nodeType":"YulTypedName","src":"16116:4:23","type":""}],"src":"15968:375:23"},{"body":{"nativeSrc":"16429:103:23","nodeType":"YulBlock","src":"16429:103:23","statements":[{"body":{"nativeSrc":"16475:16:23","nodeType":"YulBlock","src":"16475:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16484:1:23","nodeType":"YulLiteral","src":"16484:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"16487:1:23","nodeType":"YulLiteral","src":"16487:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16477:6:23","nodeType":"YulIdentifier","src":"16477:6:23"},"nativeSrc":"16477:12:23","nodeType":"YulFunctionCall","src":"16477:12:23"},"nativeSrc":"16477:12:23","nodeType":"YulExpressionStatement","src":"16477:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16450:7:23","nodeType":"YulIdentifier","src":"16450:7:23"},{"name":"headStart","nativeSrc":"16459:9:23","nodeType":"YulIdentifier","src":"16459:9:23"}],"functionName":{"name":"sub","nativeSrc":"16446:3:23","nodeType":"YulIdentifier","src":"16446:3:23"},"nativeSrc":"16446:23:23","nodeType":"YulFunctionCall","src":"16446:23:23"},{"kind":"number","nativeSrc":"16471:2:23","nodeType":"YulLiteral","src":"16471:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"16442:3:23","nodeType":"YulIdentifier","src":"16442:3:23"},"nativeSrc":"16442:32:23","nodeType":"YulFunctionCall","src":"16442:32:23"},"nativeSrc":"16439:52:23","nodeType":"YulIf","src":"16439:52:23"},{"nativeSrc":"16500:26:23","nodeType":"YulAssignment","src":"16500:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"16516:9:23","nodeType":"YulIdentifier","src":"16516:9:23"}],"functionName":{"name":"mload","nativeSrc":"16510:5:23","nodeType":"YulIdentifier","src":"16510:5:23"},"nativeSrc":"16510:16:23","nodeType":"YulFunctionCall","src":"16510:16:23"},"variableNames":[{"name":"value0","nativeSrc":"16500:6:23","nodeType":"YulIdentifier","src":"16500:6:23"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"16348:184:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16395:9:23","nodeType":"YulTypedName","src":"16395:9:23","type":""},{"name":"dataEnd","nativeSrc":"16406:7:23","nodeType":"YulTypedName","src":"16406:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16418:6:23","nodeType":"YulTypedName","src":"16418:6:23","type":""}],"src":"16348:184:23"},{"body":{"nativeSrc":"16711:176:23","nodeType":"YulBlock","src":"16711:176:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16728:9:23","nodeType":"YulIdentifier","src":"16728:9:23"},{"kind":"number","nativeSrc":"16739:2:23","nodeType":"YulLiteral","src":"16739:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"16721:6:23","nodeType":"YulIdentifier","src":"16721:6:23"},"nativeSrc":"16721:21:23","nodeType":"YulFunctionCall","src":"16721:21:23"},"nativeSrc":"16721:21:23","nodeType":"YulExpressionStatement","src":"16721:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16762:9:23","nodeType":"YulIdentifier","src":"16762:9:23"},{"kind":"number","nativeSrc":"16773:2:23","nodeType":"YulLiteral","src":"16773:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16758:3:23","nodeType":"YulIdentifier","src":"16758:3:23"},"nativeSrc":"16758:18:23","nodeType":"YulFunctionCall","src":"16758:18:23"},{"kind":"number","nativeSrc":"16778:2:23","nodeType":"YulLiteral","src":"16778:2:23","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"16751:6:23","nodeType":"YulIdentifier","src":"16751:6:23"},"nativeSrc":"16751:30:23","nodeType":"YulFunctionCall","src":"16751:30:23"},"nativeSrc":"16751:30:23","nodeType":"YulExpressionStatement","src":"16751:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16801:9:23","nodeType":"YulIdentifier","src":"16801:9:23"},{"kind":"number","nativeSrc":"16812:2:23","nodeType":"YulLiteral","src":"16812:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16797:3:23","nodeType":"YulIdentifier","src":"16797:3:23"},"nativeSrc":"16797:18:23","nodeType":"YulFunctionCall","src":"16797:18:23"},{"hexValue":"43616e6e6f742073776170207468652073616d6520746f6b656e","kind":"string","nativeSrc":"16817:28:23","nodeType":"YulLiteral","src":"16817:28:23","type":"","value":"Cannot swap the same token"}],"functionName":{"name":"mstore","nativeSrc":"16790:6:23","nodeType":"YulIdentifier","src":"16790:6:23"},"nativeSrc":"16790:56:23","nodeType":"YulFunctionCall","src":"16790:56:23"},"nativeSrc":"16790:56:23","nodeType":"YulExpressionStatement","src":"16790:56:23"},{"nativeSrc":"16855:26:23","nodeType":"YulAssignment","src":"16855:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"16867:9:23","nodeType":"YulIdentifier","src":"16867:9:23"},{"kind":"number","nativeSrc":"16878:2:23","nodeType":"YulLiteral","src":"16878:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16863:3:23","nodeType":"YulIdentifier","src":"16863:3:23"},"nativeSrc":"16863:18:23","nodeType":"YulFunctionCall","src":"16863:18:23"},"variableNames":[{"name":"tail","nativeSrc":"16855:4:23","nodeType":"YulIdentifier","src":"16855:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16537:350:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16688:9:23","nodeType":"YulTypedName","src":"16688:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16702:4:23","nodeType":"YulTypedName","src":"16702:4:23","type":""}],"src":"16537:350:23"},{"body":{"nativeSrc":"17066:182:23","nodeType":"YulBlock","src":"17066:182:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17083:9:23","nodeType":"YulIdentifier","src":"17083:9:23"},{"kind":"number","nativeSrc":"17094:2:23","nodeType":"YulLiteral","src":"17094:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17076:6:23","nodeType":"YulIdentifier","src":"17076:6:23"},"nativeSrc":"17076:21:23","nodeType":"YulFunctionCall","src":"17076:21:23"},"nativeSrc":"17076:21:23","nodeType":"YulExpressionStatement","src":"17076:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17117:9:23","nodeType":"YulIdentifier","src":"17117:9:23"},{"kind":"number","nativeSrc":"17128:2:23","nodeType":"YulLiteral","src":"17128:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17113:3:23","nodeType":"YulIdentifier","src":"17113:3:23"},"nativeSrc":"17113:18:23","nodeType":"YulFunctionCall","src":"17113:18:23"},{"kind":"number","nativeSrc":"17133:2:23","nodeType":"YulLiteral","src":"17133:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17106:6:23","nodeType":"YulIdentifier","src":"17106:6:23"},"nativeSrc":"17106:30:23","nodeType":"YulFunctionCall","src":"17106:30:23"},"nativeSrc":"17106:30:23","nodeType":"YulExpressionStatement","src":"17106:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17156:9:23","nodeType":"YulIdentifier","src":"17156:9:23"},{"kind":"number","nativeSrc":"17167:2:23","nodeType":"YulLiteral","src":"17167:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17152:3:23","nodeType":"YulIdentifier","src":"17152:3:23"},"nativeSrc":"17152:18:23","nodeType":"YulFunctionCall","src":"17152:18:23"},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","kind":"string","nativeSrc":"17172:34:23","nodeType":"YulLiteral","src":"17172:34:23","type":"","value":"Amount must be greater than zero"}],"functionName":{"name":"mstore","nativeSrc":"17145:6:23","nodeType":"YulIdentifier","src":"17145:6:23"},"nativeSrc":"17145:62:23","nodeType":"YulFunctionCall","src":"17145:62:23"},"nativeSrc":"17145:62:23","nodeType":"YulExpressionStatement","src":"17145:62:23"},{"nativeSrc":"17216:26:23","nodeType":"YulAssignment","src":"17216:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"17228:9:23","nodeType":"YulIdentifier","src":"17228:9:23"},{"kind":"number","nativeSrc":"17239:2:23","nodeType":"YulLiteral","src":"17239:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17224:3:23","nodeType":"YulIdentifier","src":"17224:3:23"},"nativeSrc":"17224:18:23","nodeType":"YulFunctionCall","src":"17224:18:23"},"variableNames":[{"name":"tail","nativeSrc":"17216:4:23","nodeType":"YulIdentifier","src":"17216:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16892:356:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17043:9:23","nodeType":"YulTypedName","src":"17043:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17057:4:23","nodeType":"YulTypedName","src":"17057:4:23","type":""}],"src":"16892:356:23"},{"body":{"nativeSrc":"17427:172:23","nodeType":"YulBlock","src":"17427:172:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17444:9:23","nodeType":"YulIdentifier","src":"17444:9:23"},{"kind":"number","nativeSrc":"17455:2:23","nodeType":"YulLiteral","src":"17455:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"17437:6:23","nodeType":"YulIdentifier","src":"17437:6:23"},"nativeSrc":"17437:21:23","nodeType":"YulFunctionCall","src":"17437:21:23"},"nativeSrc":"17437:21:23","nodeType":"YulExpressionStatement","src":"17437:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17478:9:23","nodeType":"YulIdentifier","src":"17478:9:23"},{"kind":"number","nativeSrc":"17489:2:23","nodeType":"YulLiteral","src":"17489:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17474:3:23","nodeType":"YulIdentifier","src":"17474:3:23"},"nativeSrc":"17474:18:23","nodeType":"YulFunctionCall","src":"17474:18:23"},{"kind":"number","nativeSrc":"17494:2:23","nodeType":"YulLiteral","src":"17494:2:23","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"17467:6:23","nodeType":"YulIdentifier","src":"17467:6:23"},"nativeSrc":"17467:30:23","nodeType":"YulFunctionCall","src":"17467:30:23"},"nativeSrc":"17467:30:23","nodeType":"YulExpressionStatement","src":"17467:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17517:9:23","nodeType":"YulIdentifier","src":"17517:9:23"},{"kind":"number","nativeSrc":"17528:2:23","nodeType":"YulLiteral","src":"17528:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17513:3:23","nodeType":"YulIdentifier","src":"17513:3:23"},"nativeSrc":"17513:18:23","nodeType":"YulFunctionCall","src":"17513:18:23"},{"hexValue":"496e73756666696369656e74204c6971756964697479","kind":"string","nativeSrc":"17533:24:23","nodeType":"YulLiteral","src":"17533:24:23","type":"","value":"Insufficient Liquidity"}],"functionName":{"name":"mstore","nativeSrc":"17506:6:23","nodeType":"YulIdentifier","src":"17506:6:23"},"nativeSrc":"17506:52:23","nodeType":"YulFunctionCall","src":"17506:52:23"},"nativeSrc":"17506:52:23","nodeType":"YulExpressionStatement","src":"17506:52:23"},{"nativeSrc":"17567:26:23","nodeType":"YulAssignment","src":"17567:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"17579:9:23","nodeType":"YulIdentifier","src":"17579:9:23"},{"kind":"number","nativeSrc":"17590:2:23","nodeType":"YulLiteral","src":"17590:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17575:3:23","nodeType":"YulIdentifier","src":"17575:3:23"},"nativeSrc":"17575:18:23","nodeType":"YulFunctionCall","src":"17575:18:23"},"variableNames":[{"name":"tail","nativeSrc":"17567:4:23","nodeType":"YulIdentifier","src":"17567:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17253:346:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17404:9:23","nodeType":"YulTypedName","src":"17404:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17418:4:23","nodeType":"YulTypedName","src":"17418:4:23","type":""}],"src":"17253:346:23"},{"body":{"nativeSrc":"17650:171:23","nodeType":"YulBlock","src":"17650:171:23","statements":[{"body":{"nativeSrc":"17681:111:23","nodeType":"YulBlock","src":"17681:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17702:1:23","nodeType":"YulLiteral","src":"17702:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"17709:3:23","nodeType":"YulLiteral","src":"17709:3:23","type":"","value":"224"},{"kind":"number","nativeSrc":"17714:10:23","nodeType":"YulLiteral","src":"17714:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"17705:3:23","nodeType":"YulIdentifier","src":"17705:3:23"},"nativeSrc":"17705:20:23","nodeType":"YulFunctionCall","src":"17705:20:23"}],"functionName":{"name":"mstore","nativeSrc":"17695:6:23","nodeType":"YulIdentifier","src":"17695:6:23"},"nativeSrc":"17695:31:23","nodeType":"YulFunctionCall","src":"17695:31:23"},"nativeSrc":"17695:31:23","nodeType":"YulExpressionStatement","src":"17695:31:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17746:1:23","nodeType":"YulLiteral","src":"17746:1:23","type":"","value":"4"},{"kind":"number","nativeSrc":"17749:4:23","nodeType":"YulLiteral","src":"17749:4:23","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"17739:6:23","nodeType":"YulIdentifier","src":"17739:6:23"},"nativeSrc":"17739:15:23","nodeType":"YulFunctionCall","src":"17739:15:23"},"nativeSrc":"17739:15:23","nodeType":"YulExpressionStatement","src":"17739:15:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17774:1:23","nodeType":"YulLiteral","src":"17774:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"17777:4:23","nodeType":"YulLiteral","src":"17777:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"17767:6:23","nodeType":"YulIdentifier","src":"17767:6:23"},"nativeSrc":"17767:15:23","nodeType":"YulFunctionCall","src":"17767:15:23"},"nativeSrc":"17767:15:23","nodeType":"YulExpressionStatement","src":"17767:15:23"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"17670:1:23","nodeType":"YulIdentifier","src":"17670:1:23"}],"functionName":{"name":"iszero","nativeSrc":"17663:6:23","nodeType":"YulIdentifier","src":"17663:6:23"},"nativeSrc":"17663:9:23","nodeType":"YulFunctionCall","src":"17663:9:23"},"nativeSrc":"17660:132:23","nodeType":"YulIf","src":"17660:132:23"},{"nativeSrc":"17801:14:23","nodeType":"YulAssignment","src":"17801:14:23","value":{"arguments":[{"name":"x","nativeSrc":"17810:1:23","nodeType":"YulIdentifier","src":"17810:1:23"},{"name":"y","nativeSrc":"17813:1:23","nodeType":"YulIdentifier","src":"17813:1:23"}],"functionName":{"name":"div","nativeSrc":"17806:3:23","nodeType":"YulIdentifier","src":"17806:3:23"},"nativeSrc":"17806:9:23","nodeType":"YulFunctionCall","src":"17806:9:23"},"variableNames":[{"name":"r","nativeSrc":"17801:1:23","nodeType":"YulIdentifier","src":"17801:1:23"}]}]},"name":"checked_div_t_uint256","nativeSrc":"17604:217:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"17635:1:23","nodeType":"YulTypedName","src":"17635:1:23","type":""},{"name":"y","nativeSrc":"17638:1:23","nodeType":"YulTypedName","src":"17638:1:23","type":""}],"returnVariables":[{"name":"r","nativeSrc":"17644:1:23","nodeType":"YulTypedName","src":"17644:1:23","type":""}],"src":"17604:217:23"},{"body":{"nativeSrc":"17875:79:23","nodeType":"YulBlock","src":"17875:79:23","statements":[{"nativeSrc":"17885:17:23","nodeType":"YulAssignment","src":"17885:17:23","value":{"arguments":[{"name":"x","nativeSrc":"17897:1:23","nodeType":"YulIdentifier","src":"17897:1:23"},{"name":"y","nativeSrc":"17900:1:23","nodeType":"YulIdentifier","src":"17900:1:23"}],"functionName":{"name":"sub","nativeSrc":"17893:3:23","nodeType":"YulIdentifier","src":"17893:3:23"},"nativeSrc":"17893:9:23","nodeType":"YulFunctionCall","src":"17893:9:23"},"variableNames":[{"name":"diff","nativeSrc":"17885:4:23","nodeType":"YulIdentifier","src":"17885:4:23"}]},{"body":{"nativeSrc":"17926:22:23","nodeType":"YulBlock","src":"17926:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"17928:16:23","nodeType":"YulIdentifier","src":"17928:16:23"},"nativeSrc":"17928:18:23","nodeType":"YulFunctionCall","src":"17928:18:23"},"nativeSrc":"17928:18:23","nodeType":"YulExpressionStatement","src":"17928:18:23"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"17917:4:23","nodeType":"YulIdentifier","src":"17917:4:23"},{"name":"x","nativeSrc":"17923:1:23","nodeType":"YulIdentifier","src":"17923:1:23"}],"functionName":{"name":"gt","nativeSrc":"17914:2:23","nodeType":"YulIdentifier","src":"17914:2:23"},"nativeSrc":"17914:11:23","nodeType":"YulFunctionCall","src":"17914:11:23"},"nativeSrc":"17911:37:23","nodeType":"YulIf","src":"17911:37:23"}]},"name":"checked_sub_t_uint256","nativeSrc":"17826:128:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"17857:1:23","nodeType":"YulTypedName","src":"17857:1:23","type":""},{"name":"y","nativeSrc":"17860:1:23","nodeType":"YulTypedName","src":"17860:1:23","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"17866:4:23","nodeType":"YulTypedName","src":"17866:4:23","type":""}],"src":"17826:128:23"},{"body":{"nativeSrc":"18133:227:23","nodeType":"YulBlock","src":"18133:227:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18150:9:23","nodeType":"YulIdentifier","src":"18150:9:23"},{"kind":"number","nativeSrc":"18161:2:23","nodeType":"YulLiteral","src":"18161:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"18143:6:23","nodeType":"YulIdentifier","src":"18143:6:23"},"nativeSrc":"18143:21:23","nodeType":"YulFunctionCall","src":"18143:21:23"},"nativeSrc":"18143:21:23","nodeType":"YulExpressionStatement","src":"18143:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18184:9:23","nodeType":"YulIdentifier","src":"18184:9:23"},{"kind":"number","nativeSrc":"18195:2:23","nodeType":"YulLiteral","src":"18195:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18180:3:23","nodeType":"YulIdentifier","src":"18180:3:23"},"nativeSrc":"18180:18:23","nodeType":"YulFunctionCall","src":"18180:18:23"},{"kind":"number","nativeSrc":"18200:2:23","nodeType":"YulLiteral","src":"18200:2:23","type":"","value":"37"}],"functionName":{"name":"mstore","nativeSrc":"18173:6:23","nodeType":"YulIdentifier","src":"18173:6:23"},"nativeSrc":"18173:30:23","nodeType":"YulFunctionCall","src":"18173:30:23"},"nativeSrc":"18173:30:23","nodeType":"YulExpressionStatement","src":"18173:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18223:9:23","nodeType":"YulIdentifier","src":"18223:9:23"},{"kind":"number","nativeSrc":"18234:2:23","nodeType":"YulLiteral","src":"18234:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18219:3:23","nodeType":"YulIdentifier","src":"18219:3:23"},"nativeSrc":"18219:18:23","nodeType":"YulFunctionCall","src":"18219:18:23"},{"hexValue":"416d6f756e7420746f2073656e64206d75737420626520677265617465722074","kind":"string","nativeSrc":"18239:34:23","nodeType":"YulLiteral","src":"18239:34:23","type":"","value":"Amount to send must be greater t"}],"functionName":{"name":"mstore","nativeSrc":"18212:6:23","nodeType":"YulIdentifier","src":"18212:6:23"},"nativeSrc":"18212:62:23","nodeType":"YulFunctionCall","src":"18212:62:23"},"nativeSrc":"18212:62:23","nodeType":"YulExpressionStatement","src":"18212:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18294:9:23","nodeType":"YulIdentifier","src":"18294:9:23"},{"kind":"number","nativeSrc":"18305:2:23","nodeType":"YulLiteral","src":"18305:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18290:3:23","nodeType":"YulIdentifier","src":"18290:3:23"},"nativeSrc":"18290:18:23","nodeType":"YulFunctionCall","src":"18290:18:23"},{"hexValue":"68616e2030","kind":"string","nativeSrc":"18310:7:23","nodeType":"YulLiteral","src":"18310:7:23","type":"","value":"han 0"}],"functionName":{"name":"mstore","nativeSrc":"18283:6:23","nodeType":"YulIdentifier","src":"18283:6:23"},"nativeSrc":"18283:35:23","nodeType":"YulFunctionCall","src":"18283:35:23"},"nativeSrc":"18283:35:23","nodeType":"YulExpressionStatement","src":"18283:35:23"},{"nativeSrc":"18327:27:23","nodeType":"YulAssignment","src":"18327:27:23","value":{"arguments":[{"name":"headStart","nativeSrc":"18339:9:23","nodeType":"YulIdentifier","src":"18339:9:23"},{"kind":"number","nativeSrc":"18350:3:23","nodeType":"YulLiteral","src":"18350:3:23","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"18335:3:23","nodeType":"YulIdentifier","src":"18335:3:23"},"nativeSrc":"18335:19:23","nodeType":"YulFunctionCall","src":"18335:19:23"},"variableNames":[{"name":"tail","nativeSrc":"18327:4:23","nodeType":"YulIdentifier","src":"18327:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17959:401:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18110:9:23","nodeType":"YulTypedName","src":"18110:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18124:4:23","nodeType":"YulTypedName","src":"18124:4:23","type":""}],"src":"17959:401:23"},{"body":{"nativeSrc":"18494:119:23","nodeType":"YulBlock","src":"18494:119:23","statements":[{"nativeSrc":"18504:26:23","nodeType":"YulAssignment","src":"18504:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"18516:9:23","nodeType":"YulIdentifier","src":"18516:9:23"},{"kind":"number","nativeSrc":"18527:2:23","nodeType":"YulLiteral","src":"18527:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18512:3:23","nodeType":"YulIdentifier","src":"18512:3:23"},"nativeSrc":"18512:18:23","nodeType":"YulFunctionCall","src":"18512:18:23"},"variableNames":[{"name":"tail","nativeSrc":"18504:4:23","nodeType":"YulIdentifier","src":"18504:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18546:9:23","nodeType":"YulIdentifier","src":"18546:9:23"},{"name":"value0","nativeSrc":"18557:6:23","nodeType":"YulIdentifier","src":"18557:6:23"}],"functionName":{"name":"mstore","nativeSrc":"18539:6:23","nodeType":"YulIdentifier","src":"18539:6:23"},"nativeSrc":"18539:25:23","nodeType":"YulFunctionCall","src":"18539:25:23"},"nativeSrc":"18539:25:23","nodeType":"YulExpressionStatement","src":"18539:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18584:9:23","nodeType":"YulIdentifier","src":"18584:9:23"},{"kind":"number","nativeSrc":"18595:2:23","nodeType":"YulLiteral","src":"18595:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18580:3:23","nodeType":"YulIdentifier","src":"18580:3:23"},"nativeSrc":"18580:18:23","nodeType":"YulFunctionCall","src":"18580:18:23"},{"name":"value1","nativeSrc":"18600:6:23","nodeType":"YulIdentifier","src":"18600:6:23"}],"functionName":{"name":"mstore","nativeSrc":"18573:6:23","nodeType":"YulIdentifier","src":"18573:6:23"},"nativeSrc":"18573:34:23","nodeType":"YulFunctionCall","src":"18573:34:23"},"nativeSrc":"18573:34:23","nodeType":"YulExpressionStatement","src":"18573:34:23"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"18365:248:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18455:9:23","nodeType":"YulTypedName","src":"18455:9:23","type":""},{"name":"value1","nativeSrc":"18466:6:23","nodeType":"YulTypedName","src":"18466:6:23","type":""},{"name":"value0","nativeSrc":"18474:6:23","nodeType":"YulTypedName","src":"18474:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18485:4:23","nodeType":"YulTypedName","src":"18485:4:23","type":""}],"src":"18365:248:23"},{"body":{"nativeSrc":"18792:178:23","nodeType":"YulBlock","src":"18792:178:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18809:9:23","nodeType":"YulIdentifier","src":"18809:9:23"},{"kind":"number","nativeSrc":"18820:2:23","nodeType":"YulLiteral","src":"18820:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"18802:6:23","nodeType":"YulIdentifier","src":"18802:6:23"},"nativeSrc":"18802:21:23","nodeType":"YulFunctionCall","src":"18802:21:23"},"nativeSrc":"18802:21:23","nodeType":"YulExpressionStatement","src":"18802:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18843:9:23","nodeType":"YulIdentifier","src":"18843:9:23"},{"kind":"number","nativeSrc":"18854:2:23","nodeType":"YulLiteral","src":"18854:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18839:3:23","nodeType":"YulIdentifier","src":"18839:3:23"},"nativeSrc":"18839:18:23","nodeType":"YulFunctionCall","src":"18839:18:23"},{"kind":"number","nativeSrc":"18859:2:23","nodeType":"YulLiteral","src":"18859:2:23","type":"","value":"28"}],"functionName":{"name":"mstore","nativeSrc":"18832:6:23","nodeType":"YulIdentifier","src":"18832:6:23"},"nativeSrc":"18832:30:23","nodeType":"YulFunctionCall","src":"18832:30:23"},"nativeSrc":"18832:30:23","nodeType":"YulExpressionStatement","src":"18832:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18882:9:23","nodeType":"YulIdentifier","src":"18882:9:23"},{"kind":"number","nativeSrc":"18893:2:23","nodeType":"YulLiteral","src":"18893:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18878:3:23","nodeType":"YulIdentifier","src":"18878:3:23"},"nativeSrc":"18878:18:23","nodeType":"YulFunctionCall","src":"18878:18:23"},{"hexValue":"5368617265206d7573742062652067726561746572207468616e2030","kind":"string","nativeSrc":"18898:30:23","nodeType":"YulLiteral","src":"18898:30:23","type":"","value":"Share must be greater than 0"}],"functionName":{"name":"mstore","nativeSrc":"18871:6:23","nodeType":"YulIdentifier","src":"18871:6:23"},"nativeSrc":"18871:58:23","nodeType":"YulFunctionCall","src":"18871:58:23"},"nativeSrc":"18871:58:23","nodeType":"YulExpressionStatement","src":"18871:58:23"},{"nativeSrc":"18938:26:23","nodeType":"YulAssignment","src":"18938:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"18950:9:23","nodeType":"YulIdentifier","src":"18950:9:23"},{"kind":"number","nativeSrc":"18961:2:23","nodeType":"YulLiteral","src":"18961:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18946:3:23","nodeType":"YulIdentifier","src":"18946:3:23"},"nativeSrc":"18946:18:23","nodeType":"YulFunctionCall","src":"18946:18:23"},"variableNames":[{"name":"tail","nativeSrc":"18938:4:23","nodeType":"YulIdentifier","src":"18938:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18618:352:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18769:9:23","nodeType":"YulTypedName","src":"18769:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18783:4:23","nodeType":"YulTypedName","src":"18783:4:23","type":""}],"src":"18618:352:23"},{"body":{"nativeSrc":"19149:162:23","nodeType":"YulBlock","src":"19149:162:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19166:9:23","nodeType":"YulIdentifier","src":"19166:9:23"},{"kind":"number","nativeSrc":"19177:2:23","nodeType":"YulLiteral","src":"19177:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"19159:6:23","nodeType":"YulIdentifier","src":"19159:6:23"},"nativeSrc":"19159:21:23","nodeType":"YulFunctionCall","src":"19159:21:23"},"nativeSrc":"19159:21:23","nodeType":"YulExpressionStatement","src":"19159:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19200:9:23","nodeType":"YulIdentifier","src":"19200:9:23"},{"kind":"number","nativeSrc":"19211:2:23","nodeType":"YulLiteral","src":"19211:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19196:3:23","nodeType":"YulIdentifier","src":"19196:3:23"},"nativeSrc":"19196:18:23","nodeType":"YulFunctionCall","src":"19196:18:23"},{"kind":"number","nativeSrc":"19216:2:23","nodeType":"YulLiteral","src":"19216:2:23","type":"","value":"12"}],"functionName":{"name":"mstore","nativeSrc":"19189:6:23","nodeType":"YulIdentifier","src":"19189:6:23"},"nativeSrc":"19189:30:23","nodeType":"YulFunctionCall","src":"19189:30:23"},"nativeSrc":"19189:30:23","nodeType":"YulExpressionStatement","src":"19189:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19239:9:23","nodeType":"YulIdentifier","src":"19239:9:23"},{"kind":"number","nativeSrc":"19250:2:23","nodeType":"YulLiteral","src":"19250:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19235:3:23","nodeType":"YulIdentifier","src":"19235:3:23"},"nativeSrc":"19235:18:23","nodeType":"YulFunctionCall","src":"19235:18:23"},{"hexValue":"4e6f206c6971756964697479","kind":"string","nativeSrc":"19255:14:23","nodeType":"YulLiteral","src":"19255:14:23","type":"","value":"No liquidity"}],"functionName":{"name":"mstore","nativeSrc":"19228:6:23","nodeType":"YulIdentifier","src":"19228:6:23"},"nativeSrc":"19228:42:23","nodeType":"YulFunctionCall","src":"19228:42:23"},"nativeSrc":"19228:42:23","nodeType":"YulExpressionStatement","src":"19228:42:23"},{"nativeSrc":"19279:26:23","nodeType":"YulAssignment","src":"19279:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"19291:9:23","nodeType":"YulIdentifier","src":"19291:9:23"},{"kind":"number","nativeSrc":"19302:2:23","nodeType":"YulLiteral","src":"19302:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19287:3:23","nodeType":"YulIdentifier","src":"19287:3:23"},"nativeSrc":"19287:18:23","nodeType":"YulFunctionCall","src":"19287:18:23"},"variableNames":[{"name":"tail","nativeSrc":"19279:4:23","nodeType":"YulIdentifier","src":"19279:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18975:336:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19126:9:23","nodeType":"YulTypedName","src":"19126:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19140:4:23","nodeType":"YulTypedName","src":"19140:4:23","type":""}],"src":"18975:336:23"},{"body":{"nativeSrc":"19445:175:23","nodeType":"YulBlock","src":"19445:175:23","statements":[{"nativeSrc":"19455:26:23","nodeType":"YulAssignment","src":"19455:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"19467:9:23","nodeType":"YulIdentifier","src":"19467:9:23"},{"kind":"number","nativeSrc":"19478:2:23","nodeType":"YulLiteral","src":"19478:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19463:3:23","nodeType":"YulIdentifier","src":"19463:3:23"},"nativeSrc":"19463:18:23","nodeType":"YulFunctionCall","src":"19463:18:23"},"variableNames":[{"name":"tail","nativeSrc":"19455:4:23","nodeType":"YulIdentifier","src":"19455:4:23"}]},{"nativeSrc":"19490:29:23","nodeType":"YulVariableDeclaration","src":"19490:29:23","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"19508:3:23","nodeType":"YulLiteral","src":"19508:3:23","type":"","value":"160"},{"kind":"number","nativeSrc":"19513:1:23","nodeType":"YulLiteral","src":"19513:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"19504:3:23","nodeType":"YulIdentifier","src":"19504:3:23"},"nativeSrc":"19504:11:23","nodeType":"YulFunctionCall","src":"19504:11:23"},{"kind":"number","nativeSrc":"19517:1:23","nodeType":"YulLiteral","src":"19517:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"19500:3:23","nodeType":"YulIdentifier","src":"19500:3:23"},"nativeSrc":"19500:19:23","nodeType":"YulFunctionCall","src":"19500:19:23"},"variables":[{"name":"_1","nativeSrc":"19494:2:23","nodeType":"YulTypedName","src":"19494:2:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19535:9:23","nodeType":"YulIdentifier","src":"19535:9:23"},{"arguments":[{"name":"value0","nativeSrc":"19550:6:23","nodeType":"YulIdentifier","src":"19550:6:23"},{"name":"_1","nativeSrc":"19558:2:23","nodeType":"YulIdentifier","src":"19558:2:23"}],"functionName":{"name":"and","nativeSrc":"19546:3:23","nodeType":"YulIdentifier","src":"19546:3:23"},"nativeSrc":"19546:15:23","nodeType":"YulFunctionCall","src":"19546:15:23"}],"functionName":{"name":"mstore","nativeSrc":"19528:6:23","nodeType":"YulIdentifier","src":"19528:6:23"},"nativeSrc":"19528:34:23","nodeType":"YulFunctionCall","src":"19528:34:23"},"nativeSrc":"19528:34:23","nodeType":"YulExpressionStatement","src":"19528:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19582:9:23","nodeType":"YulIdentifier","src":"19582:9:23"},{"kind":"number","nativeSrc":"19593:2:23","nodeType":"YulLiteral","src":"19593:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19578:3:23","nodeType":"YulIdentifier","src":"19578:3:23"},"nativeSrc":"19578:18:23","nodeType":"YulFunctionCall","src":"19578:18:23"},{"arguments":[{"name":"value1","nativeSrc":"19602:6:23","nodeType":"YulIdentifier","src":"19602:6:23"},{"name":"_1","nativeSrc":"19610:2:23","nodeType":"YulIdentifier","src":"19610:2:23"}],"functionName":{"name":"and","nativeSrc":"19598:3:23","nodeType":"YulIdentifier","src":"19598:3:23"},"nativeSrc":"19598:15:23","nodeType":"YulFunctionCall","src":"19598:15:23"}],"functionName":{"name":"mstore","nativeSrc":"19571:6:23","nodeType":"YulIdentifier","src":"19571:6:23"},"nativeSrc":"19571:43:23","nodeType":"YulFunctionCall","src":"19571:43:23"},"nativeSrc":"19571:43:23","nodeType":"YulExpressionStatement","src":"19571:43:23"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"19316:304:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19406:9:23","nodeType":"YulTypedName","src":"19406:9:23","type":""},{"name":"value1","nativeSrc":"19417:6:23","nodeType":"YulTypedName","src":"19417:6:23","type":""},{"name":"value0","nativeSrc":"19425:6:23","nodeType":"YulTypedName","src":"19425:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19436:4:23","nodeType":"YulTypedName","src":"19436:4:23","type":""}],"src":"19316:304:23"},{"body":{"nativeSrc":"19799:179:23","nodeType":"YulBlock","src":"19799:179:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19816:9:23","nodeType":"YulIdentifier","src":"19816:9:23"},{"kind":"number","nativeSrc":"19827:2:23","nodeType":"YulLiteral","src":"19827:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"19809:6:23","nodeType":"YulIdentifier","src":"19809:6:23"},"nativeSrc":"19809:21:23","nodeType":"YulFunctionCall","src":"19809:21:23"},"nativeSrc":"19809:21:23","nodeType":"YulExpressionStatement","src":"19809:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19850:9:23","nodeType":"YulIdentifier","src":"19850:9:23"},{"kind":"number","nativeSrc":"19861:2:23","nodeType":"YulLiteral","src":"19861:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19846:3:23","nodeType":"YulIdentifier","src":"19846:3:23"},"nativeSrc":"19846:18:23","nodeType":"YulFunctionCall","src":"19846:18:23"},{"kind":"number","nativeSrc":"19866:2:23","nodeType":"YulLiteral","src":"19866:2:23","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"19839:6:23","nodeType":"YulIdentifier","src":"19839:6:23"},"nativeSrc":"19839:30:23","nodeType":"YulFunctionCall","src":"19839:30:23"},"nativeSrc":"19839:30:23","nodeType":"YulExpressionStatement","src":"19839:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19889:9:23","nodeType":"YulIdentifier","src":"19889:9:23"},{"kind":"number","nativeSrc":"19900:2:23","nodeType":"YulLiteral","src":"19900:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19885:3:23","nodeType":"YulIdentifier","src":"19885:3:23"},"nativeSrc":"19885:18:23","nodeType":"YulFunctionCall","src":"19885:18:23"},{"hexValue":"496e73756666696369656e742042414c554e49206c6971756964697479","kind":"string","nativeSrc":"19905:31:23","nodeType":"YulLiteral","src":"19905:31:23","type":"","value":"Insufficient BALUNI liquidity"}],"functionName":{"name":"mstore","nativeSrc":"19878:6:23","nodeType":"YulIdentifier","src":"19878:6:23"},"nativeSrc":"19878:59:23","nodeType":"YulFunctionCall","src":"19878:59:23"},"nativeSrc":"19878:59:23","nodeType":"YulExpressionStatement","src":"19878:59:23"},{"nativeSrc":"19946:26:23","nodeType":"YulAssignment","src":"19946:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"19958:9:23","nodeType":"YulIdentifier","src":"19958:9:23"},{"kind":"number","nativeSrc":"19969:2:23","nodeType":"YulLiteral","src":"19969:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19954:3:23","nodeType":"YulIdentifier","src":"19954:3:23"},"nativeSrc":"19954:18:23","nodeType":"YulFunctionCall","src":"19954:18:23"},"variableNames":[{"name":"tail","nativeSrc":"19946:4:23","nodeType":"YulIdentifier","src":"19946:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19625:353:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19776:9:23","nodeType":"YulTypedName","src":"19776:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19790:4:23","nodeType":"YulTypedName","src":"19790:4:23","type":""}],"src":"19625:353:23"},{"body":{"nativeSrc":"20112:145:23","nodeType":"YulBlock","src":"20112:145:23","statements":[{"nativeSrc":"20122:26:23","nodeType":"YulAssignment","src":"20122:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"20134:9:23","nodeType":"YulIdentifier","src":"20134:9:23"},{"kind":"number","nativeSrc":"20145:2:23","nodeType":"YulLiteral","src":"20145:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20130:3:23","nodeType":"YulIdentifier","src":"20130:3:23"},"nativeSrc":"20130:18:23","nodeType":"YulFunctionCall","src":"20130:18:23"},"variableNames":[{"name":"tail","nativeSrc":"20122:4:23","nodeType":"YulIdentifier","src":"20122:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20164:9:23","nodeType":"YulIdentifier","src":"20164:9:23"},{"arguments":[{"name":"value0","nativeSrc":"20179:6:23","nodeType":"YulIdentifier","src":"20179:6:23"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"20195:3:23","nodeType":"YulLiteral","src":"20195:3:23","type":"","value":"160"},{"kind":"number","nativeSrc":"20200:1:23","nodeType":"YulLiteral","src":"20200:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"20191:3:23","nodeType":"YulIdentifier","src":"20191:3:23"},"nativeSrc":"20191:11:23","nodeType":"YulFunctionCall","src":"20191:11:23"},{"kind":"number","nativeSrc":"20204:1:23","nodeType":"YulLiteral","src":"20204:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"20187:3:23","nodeType":"YulIdentifier","src":"20187:3:23"},"nativeSrc":"20187:19:23","nodeType":"YulFunctionCall","src":"20187:19:23"}],"functionName":{"name":"and","nativeSrc":"20175:3:23","nodeType":"YulIdentifier","src":"20175:3:23"},"nativeSrc":"20175:32:23","nodeType":"YulFunctionCall","src":"20175:32:23"}],"functionName":{"name":"mstore","nativeSrc":"20157:6:23","nodeType":"YulIdentifier","src":"20157:6:23"},"nativeSrc":"20157:51:23","nodeType":"YulFunctionCall","src":"20157:51:23"},"nativeSrc":"20157:51:23","nodeType":"YulExpressionStatement","src":"20157:51:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20228:9:23","nodeType":"YulIdentifier","src":"20228:9:23"},{"kind":"number","nativeSrc":"20239:2:23","nodeType":"YulLiteral","src":"20239:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20224:3:23","nodeType":"YulIdentifier","src":"20224:3:23"},"nativeSrc":"20224:18:23","nodeType":"YulFunctionCall","src":"20224:18:23"},{"name":"value1","nativeSrc":"20244:6:23","nodeType":"YulIdentifier","src":"20244:6:23"}],"functionName":{"name":"mstore","nativeSrc":"20217:6:23","nodeType":"YulIdentifier","src":"20217:6:23"},"nativeSrc":"20217:34:23","nodeType":"YulFunctionCall","src":"20217:34:23"},"nativeSrc":"20217:34:23","nodeType":"YulExpressionStatement","src":"20217:34:23"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"19983:274:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20073:9:23","nodeType":"YulTypedName","src":"20073:9:23","type":""},{"name":"value1","nativeSrc":"20084:6:23","nodeType":"YulTypedName","src":"20084:6:23","type":""},{"name":"value0","nativeSrc":"20092:6:23","nodeType":"YulTypedName","src":"20092:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20103:4:23","nodeType":"YulTypedName","src":"20103:4:23","type":""}],"src":"19983:274:23"},{"body":{"nativeSrc":"20340:199:23","nodeType":"YulBlock","src":"20340:199:23","statements":[{"body":{"nativeSrc":"20386:16:23","nodeType":"YulBlock","src":"20386:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20395:1:23","nodeType":"YulLiteral","src":"20395:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"20398:1:23","nodeType":"YulLiteral","src":"20398:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"20388:6:23","nodeType":"YulIdentifier","src":"20388:6:23"},"nativeSrc":"20388:12:23","nodeType":"YulFunctionCall","src":"20388:12:23"},"nativeSrc":"20388:12:23","nodeType":"YulExpressionStatement","src":"20388:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"20361:7:23","nodeType":"YulIdentifier","src":"20361:7:23"},{"name":"headStart","nativeSrc":"20370:9:23","nodeType":"YulIdentifier","src":"20370:9:23"}],"functionName":{"name":"sub","nativeSrc":"20357:3:23","nodeType":"YulIdentifier","src":"20357:3:23"},"nativeSrc":"20357:23:23","nodeType":"YulFunctionCall","src":"20357:23:23"},{"kind":"number","nativeSrc":"20382:2:23","nodeType":"YulLiteral","src":"20382:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"20353:3:23","nodeType":"YulIdentifier","src":"20353:3:23"},"nativeSrc":"20353:32:23","nodeType":"YulFunctionCall","src":"20353:32:23"},"nativeSrc":"20350:52:23","nodeType":"YulIf","src":"20350:52:23"},{"nativeSrc":"20411:29:23","nodeType":"YulVariableDeclaration","src":"20411:29:23","value":{"arguments":[{"name":"headStart","nativeSrc":"20430:9:23","nodeType":"YulIdentifier","src":"20430:9:23"}],"functionName":{"name":"mload","nativeSrc":"20424:5:23","nodeType":"YulIdentifier","src":"20424:5:23"},"nativeSrc":"20424:16:23","nodeType":"YulFunctionCall","src":"20424:16:23"},"variables":[{"name":"value","nativeSrc":"20415:5:23","nodeType":"YulTypedName","src":"20415:5:23","type":""}]},{"body":{"nativeSrc":"20493:16:23","nodeType":"YulBlock","src":"20493:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20502:1:23","nodeType":"YulLiteral","src":"20502:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"20505:1:23","nodeType":"YulLiteral","src":"20505:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"20495:6:23","nodeType":"YulIdentifier","src":"20495:6:23"},"nativeSrc":"20495:12:23","nodeType":"YulFunctionCall","src":"20495:12:23"},"nativeSrc":"20495:12:23","nodeType":"YulExpressionStatement","src":"20495:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"20462:5:23","nodeType":"YulIdentifier","src":"20462:5:23"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"20483:5:23","nodeType":"YulIdentifier","src":"20483:5:23"}],"functionName":{"name":"iszero","nativeSrc":"20476:6:23","nodeType":"YulIdentifier","src":"20476:6:23"},"nativeSrc":"20476:13:23","nodeType":"YulFunctionCall","src":"20476:13:23"}],"functionName":{"name":"iszero","nativeSrc":"20469:6:23","nodeType":"YulIdentifier","src":"20469:6:23"},"nativeSrc":"20469:21:23","nodeType":"YulFunctionCall","src":"20469:21:23"}],"functionName":{"name":"eq","nativeSrc":"20459:2:23","nodeType":"YulIdentifier","src":"20459:2:23"},"nativeSrc":"20459:32:23","nodeType":"YulFunctionCall","src":"20459:32:23"}],"functionName":{"name":"iszero","nativeSrc":"20452:6:23","nodeType":"YulIdentifier","src":"20452:6:23"},"nativeSrc":"20452:40:23","nodeType":"YulFunctionCall","src":"20452:40:23"},"nativeSrc":"20449:60:23","nodeType":"YulIf","src":"20449:60:23"},{"nativeSrc":"20518:15:23","nodeType":"YulAssignment","src":"20518:15:23","value":{"name":"value","nativeSrc":"20528:5:23","nodeType":"YulIdentifier","src":"20528:5:23"},"variableNames":[{"name":"value0","nativeSrc":"20518:6:23","nodeType":"YulIdentifier","src":"20518:6:23"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"20262:277:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20306:9:23","nodeType":"YulTypedName","src":"20306:9:23","type":""},{"name":"dataEnd","nativeSrc":"20317:7:23","nodeType":"YulTypedName","src":"20317:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"20329:6:23","nodeType":"YulTypedName","src":"20329:6:23","type":""}],"src":"20262:277:23"},{"body":{"nativeSrc":"20718:169:23","nodeType":"YulBlock","src":"20718:169:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20735:9:23","nodeType":"YulIdentifier","src":"20735:9:23"},{"kind":"number","nativeSrc":"20746:2:23","nodeType":"YulLiteral","src":"20746:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"20728:6:23","nodeType":"YulIdentifier","src":"20728:6:23"},"nativeSrc":"20728:21:23","nodeType":"YulFunctionCall","src":"20728:21:23"},"nativeSrc":"20728:21:23","nodeType":"YulExpressionStatement","src":"20728:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20769:9:23","nodeType":"YulIdentifier","src":"20769:9:23"},{"kind":"number","nativeSrc":"20780:2:23","nodeType":"YulLiteral","src":"20780:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20765:3:23","nodeType":"YulIdentifier","src":"20765:3:23"},"nativeSrc":"20765:18:23","nodeType":"YulFunctionCall","src":"20765:18:23"},{"kind":"number","nativeSrc":"20785:2:23","nodeType":"YulLiteral","src":"20785:2:23","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"20758:6:23","nodeType":"YulIdentifier","src":"20758:6:23"},"nativeSrc":"20758:30:23","nodeType":"YulFunctionCall","src":"20758:30:23"},"nativeSrc":"20758:30:23","nodeType":"YulExpressionStatement","src":"20758:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20808:9:23","nodeType":"YulIdentifier","src":"20808:9:23"},{"kind":"number","nativeSrc":"20819:2:23","nodeType":"YulLiteral","src":"20819:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20804:3:23","nodeType":"YulIdentifier","src":"20804:3:23"},"nativeSrc":"20804:18:23","nodeType":"YulFunctionCall","src":"20804:18:23"},{"hexValue":"466565207472616e73666572206661696c6564","kind":"string","nativeSrc":"20824:21:23","nodeType":"YulLiteral","src":"20824:21:23","type":"","value":"Fee transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"20797:6:23","nodeType":"YulIdentifier","src":"20797:6:23"},"nativeSrc":"20797:49:23","nodeType":"YulFunctionCall","src":"20797:49:23"},"nativeSrc":"20797:49:23","nodeType":"YulExpressionStatement","src":"20797:49:23"},{"nativeSrc":"20855:26:23","nodeType":"YulAssignment","src":"20855:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"20867:9:23","nodeType":"YulIdentifier","src":"20867:9:23"},{"kind":"number","nativeSrc":"20878:2:23","nodeType":"YulLiteral","src":"20878:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20863:3:23","nodeType":"YulIdentifier","src":"20863:3:23"},"nativeSrc":"20863:18:23","nodeType":"YulFunctionCall","src":"20863:18:23"},"variableNames":[{"name":"tail","nativeSrc":"20855:4:23","nodeType":"YulIdentifier","src":"20855:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20544:343:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20695:9:23","nodeType":"YulTypedName","src":"20695:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20709:4:23","nodeType":"YulTypedName","src":"20709:4:23","type":""}],"src":"20544:343:23"},{"body":{"nativeSrc":"21066:169:23","nodeType":"YulBlock","src":"21066:169:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21083:9:23","nodeType":"YulIdentifier","src":"21083:9:23"},{"kind":"number","nativeSrc":"21094:2:23","nodeType":"YulLiteral","src":"21094:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"21076:6:23","nodeType":"YulIdentifier","src":"21076:6:23"},"nativeSrc":"21076:21:23","nodeType":"YulFunctionCall","src":"21076:21:23"},"nativeSrc":"21076:21:23","nodeType":"YulExpressionStatement","src":"21076:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21117:9:23","nodeType":"YulIdentifier","src":"21117:9:23"},{"kind":"number","nativeSrc":"21128:2:23","nodeType":"YulLiteral","src":"21128:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21113:3:23","nodeType":"YulIdentifier","src":"21113:3:23"},"nativeSrc":"21113:18:23","nodeType":"YulFunctionCall","src":"21113:18:23"},{"kind":"number","nativeSrc":"21133:2:23","nodeType":"YulLiteral","src":"21133:2:23","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"21106:6:23","nodeType":"YulIdentifier","src":"21106:6:23"},"nativeSrc":"21106:30:23","nodeType":"YulFunctionCall","src":"21106:30:23"},"nativeSrc":"21106:30:23","nodeType":"YulExpressionStatement","src":"21106:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21156:9:23","nodeType":"YulIdentifier","src":"21156:9:23"},{"kind":"number","nativeSrc":"21167:2:23","nodeType":"YulLiteral","src":"21167:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21152:3:23","nodeType":"YulIdentifier","src":"21152:3:23"},"nativeSrc":"21152:18:23","nodeType":"YulFunctionCall","src":"21152:18:23"},{"hexValue":"496e76616c696420617373657420696e646578","kind":"string","nativeSrc":"21172:21:23","nodeType":"YulLiteral","src":"21172:21:23","type":"","value":"Invalid asset index"}],"functionName":{"name":"mstore","nativeSrc":"21145:6:23","nodeType":"YulIdentifier","src":"21145:6:23"},"nativeSrc":"21145:49:23","nodeType":"YulFunctionCall","src":"21145:49:23"},"nativeSrc":"21145:49:23","nodeType":"YulExpressionStatement","src":"21145:49:23"},{"nativeSrc":"21203:26:23","nodeType":"YulAssignment","src":"21203:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"21215:9:23","nodeType":"YulIdentifier","src":"21215:9:23"},{"kind":"number","nativeSrc":"21226:2:23","nodeType":"YulLiteral","src":"21226:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21211:3:23","nodeType":"YulIdentifier","src":"21211:3:23"},"nativeSrc":"21211:18:23","nodeType":"YulFunctionCall","src":"21211:18:23"},"variableNames":[{"name":"tail","nativeSrc":"21203:4:23","nodeType":"YulIdentifier","src":"21203:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20892:343:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21043:9:23","nodeType":"YulTypedName","src":"21043:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21057:4:23","nodeType":"YulTypedName","src":"21057:4:23","type":""}],"src":"20892:343:23"},{"body":{"nativeSrc":"21414:173:23","nodeType":"YulBlock","src":"21414:173:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21431:9:23","nodeType":"YulIdentifier","src":"21431:9:23"},{"kind":"number","nativeSrc":"21442:2:23","nodeType":"YulLiteral","src":"21442:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"21424:6:23","nodeType":"YulIdentifier","src":"21424:6:23"},"nativeSrc":"21424:21:23","nodeType":"YulFunctionCall","src":"21424:21:23"},"nativeSrc":"21424:21:23","nodeType":"YulExpressionStatement","src":"21424:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21465:9:23","nodeType":"YulIdentifier","src":"21465:9:23"},{"kind":"number","nativeSrc":"21476:2:23","nodeType":"YulLiteral","src":"21476:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21461:3:23","nodeType":"YulIdentifier","src":"21461:3:23"},"nativeSrc":"21461:18:23","nodeType":"YulFunctionCall","src":"21461:18:23"},{"kind":"number","nativeSrc":"21481:2:23","nodeType":"YulLiteral","src":"21481:2:23","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"21454:6:23","nodeType":"YulIdentifier","src":"21454:6:23"},"nativeSrc":"21454:30:23","nodeType":"YulFunctionCall","src":"21454:30:23"},"nativeSrc":"21454:30:23","nodeType":"YulExpressionStatement","src":"21454:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21504:9:23","nodeType":"YulIdentifier","src":"21504:9:23"},{"kind":"number","nativeSrc":"21515:2:23","nodeType":"YulLiteral","src":"21515:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21500:3:23","nodeType":"YulIdentifier","src":"21500:3:23"},"nativeSrc":"21500:18:23","nodeType":"YulFunctionCall","src":"21500:18:23"},{"hexValue":"496e76616c6964207265736572766573206c656e677468","kind":"string","nativeSrc":"21520:25:23","nodeType":"YulLiteral","src":"21520:25:23","type":"","value":"Invalid reserves length"}],"functionName":{"name":"mstore","nativeSrc":"21493:6:23","nodeType":"YulIdentifier","src":"21493:6:23"},"nativeSrc":"21493:53:23","nodeType":"YulFunctionCall","src":"21493:53:23"},"nativeSrc":"21493:53:23","nodeType":"YulExpressionStatement","src":"21493:53:23"},{"nativeSrc":"21555:26:23","nodeType":"YulAssignment","src":"21555:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"21567:9:23","nodeType":"YulIdentifier","src":"21567:9:23"},{"kind":"number","nativeSrc":"21578:2:23","nodeType":"YulLiteral","src":"21578:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21563:3:23","nodeType":"YulIdentifier","src":"21563:3:23"},"nativeSrc":"21563:18:23","nodeType":"YulFunctionCall","src":"21563:18:23"},"variableNames":[{"name":"tail","nativeSrc":"21555:4:23","nodeType":"YulIdentifier","src":"21555:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21240:347:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21391:9:23","nodeType":"YulTypedName","src":"21391:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21405:4:23","nodeType":"YulTypedName","src":"21405:4:23","type":""}],"src":"21240:347:23"},{"body":{"nativeSrc":"21766:158:23","nodeType":"YulBlock","src":"21766:158:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21783:9:23","nodeType":"YulIdentifier","src":"21783:9:23"},{"kind":"number","nativeSrc":"21794:2:23","nodeType":"YulLiteral","src":"21794:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"21776:6:23","nodeType":"YulIdentifier","src":"21776:6:23"},"nativeSrc":"21776:21:23","nodeType":"YulFunctionCall","src":"21776:21:23"},"nativeSrc":"21776:21:23","nodeType":"YulExpressionStatement","src":"21776:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21817:9:23","nodeType":"YulIdentifier","src":"21817:9:23"},{"kind":"number","nativeSrc":"21828:2:23","nodeType":"YulLiteral","src":"21828:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21813:3:23","nodeType":"YulIdentifier","src":"21813:3:23"},"nativeSrc":"21813:18:23","nodeType":"YulFunctionCall","src":"21813:18:23"},{"kind":"number","nativeSrc":"21833:1:23","nodeType":"YulLiteral","src":"21833:1:23","type":"","value":"9"}],"functionName":{"name":"mstore","nativeSrc":"21806:6:23","nodeType":"YulIdentifier","src":"21806:6:23"},"nativeSrc":"21806:29:23","nodeType":"YulFunctionCall","src":"21806:29:23"},"nativeSrc":"21806:29:23","nodeType":"YulExpressionStatement","src":"21806:29:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21855:9:23","nodeType":"YulIdentifier","src":"21855:9:23"},{"kind":"number","nativeSrc":"21866:2:23","nodeType":"YulLiteral","src":"21866:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21851:3:23","nodeType":"YulIdentifier","src":"21851:3:23"},"nativeSrc":"21851:18:23","nodeType":"YulFunctionCall","src":"21851:18:23"},{"hexValue":"4e6f20617373657473","kind":"string","nativeSrc":"21871:11:23","nodeType":"YulLiteral","src":"21871:11:23","type":"","value":"No assets"}],"functionName":{"name":"mstore","nativeSrc":"21844:6:23","nodeType":"YulIdentifier","src":"21844:6:23"},"nativeSrc":"21844:39:23","nodeType":"YulFunctionCall","src":"21844:39:23"},"nativeSrc":"21844:39:23","nodeType":"YulExpressionStatement","src":"21844:39:23"},{"nativeSrc":"21892:26:23","nodeType":"YulAssignment","src":"21892:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"21904:9:23","nodeType":"YulIdentifier","src":"21904:9:23"},{"kind":"number","nativeSrc":"21915:2:23","nodeType":"YulLiteral","src":"21915:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21900:3:23","nodeType":"YulIdentifier","src":"21900:3:23"},"nativeSrc":"21900:18:23","nodeType":"YulFunctionCall","src":"21900:18:23"},"variableNames":[{"name":"tail","nativeSrc":"21892:4:23","nodeType":"YulIdentifier","src":"21892:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21592:332:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21743:9:23","nodeType":"YulTypedName","src":"21743:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21757:4:23","nodeType":"YulTypedName","src":"21757:4:23","type":""}],"src":"21592:332:23"},{"body":{"nativeSrc":"22103:224:23","nodeType":"YulBlock","src":"22103:224:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"22120:9:23","nodeType":"YulIdentifier","src":"22120:9:23"},{"kind":"number","nativeSrc":"22131:2:23","nodeType":"YulLiteral","src":"22131:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"22113:6:23","nodeType":"YulIdentifier","src":"22113:6:23"},"nativeSrc":"22113:21:23","nodeType":"YulFunctionCall","src":"22113:21:23"},"nativeSrc":"22113:21:23","nodeType":"YulExpressionStatement","src":"22113:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22154:9:23","nodeType":"YulIdentifier","src":"22154:9:23"},{"kind":"number","nativeSrc":"22165:2:23","nodeType":"YulLiteral","src":"22165:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22150:3:23","nodeType":"YulIdentifier","src":"22150:3:23"},"nativeSrc":"22150:18:23","nodeType":"YulFunctionCall","src":"22150:18:23"},{"kind":"number","nativeSrc":"22170:2:23","nodeType":"YulLiteral","src":"22170:2:23","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"22143:6:23","nodeType":"YulIdentifier","src":"22143:6:23"},"nativeSrc":"22143:30:23","nodeType":"YulFunctionCall","src":"22143:30:23"},"nativeSrc":"22143:30:23","nodeType":"YulExpressionStatement","src":"22143:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22193:9:23","nodeType":"YulIdentifier","src":"22193:9:23"},{"kind":"number","nativeSrc":"22204:2:23","nodeType":"YulLiteral","src":"22204:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22189:3:23","nodeType":"YulIdentifier","src":"22189:3:23"},"nativeSrc":"22189:18:23","nodeType":"YulFunctionCall","src":"22189:18:23"},{"hexValue":"546f74616c2076616c7565206d7573742062652067726561746572207468616e","kind":"string","nativeSrc":"22209:34:23","nodeType":"YulLiteral","src":"22209:34:23","type":"","value":"Total value must be greater than"}],"functionName":{"name":"mstore","nativeSrc":"22182:6:23","nodeType":"YulIdentifier","src":"22182:6:23"},"nativeSrc":"22182:62:23","nodeType":"YulFunctionCall","src":"22182:62:23"},"nativeSrc":"22182:62:23","nodeType":"YulExpressionStatement","src":"22182:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22264:9:23","nodeType":"YulIdentifier","src":"22264:9:23"},{"kind":"number","nativeSrc":"22275:2:23","nodeType":"YulLiteral","src":"22275:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22260:3:23","nodeType":"YulIdentifier","src":"22260:3:23"},"nativeSrc":"22260:18:23","nodeType":"YulFunctionCall","src":"22260:18:23"},{"hexValue":"2030","kind":"string","nativeSrc":"22280:4:23","nodeType":"YulLiteral","src":"22280:4:23","type":"","value":" 0"}],"functionName":{"name":"mstore","nativeSrc":"22253:6:23","nodeType":"YulIdentifier","src":"22253:6:23"},"nativeSrc":"22253:32:23","nodeType":"YulFunctionCall","src":"22253:32:23"},"nativeSrc":"22253:32:23","nodeType":"YulExpressionStatement","src":"22253:32:23"},{"nativeSrc":"22294:27:23","nodeType":"YulAssignment","src":"22294:27:23","value":{"arguments":[{"name":"headStart","nativeSrc":"22306:9:23","nodeType":"YulIdentifier","src":"22306:9:23"},{"kind":"number","nativeSrc":"22317:3:23","nodeType":"YulLiteral","src":"22317:3:23","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22302:3:23","nodeType":"YulIdentifier","src":"22302:3:23"},"nativeSrc":"22302:19:23","nodeType":"YulFunctionCall","src":"22302:19:23"},"variableNames":[{"name":"tail","nativeSrc":"22294:4:23","nodeType":"YulIdentifier","src":"22294:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21929:398:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22080:9:23","nodeType":"YulTypedName","src":"22080:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22094:4:23","nodeType":"YulTypedName","src":"22094:4:23","type":""}],"src":"21929:398:23"},{"body":{"nativeSrc":"22506:228:23","nodeType":"YulBlock","src":"22506:228:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"22523:9:23","nodeType":"YulIdentifier","src":"22523:9:23"},{"kind":"number","nativeSrc":"22534:2:23","nodeType":"YulLiteral","src":"22534:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"22516:6:23","nodeType":"YulIdentifier","src":"22516:6:23"},"nativeSrc":"22516:21:23","nodeType":"YulFunctionCall","src":"22516:21:23"},"nativeSrc":"22516:21:23","nodeType":"YulExpressionStatement","src":"22516:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22557:9:23","nodeType":"YulIdentifier","src":"22557:9:23"},{"kind":"number","nativeSrc":"22568:2:23","nodeType":"YulLiteral","src":"22568:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22553:3:23","nodeType":"YulIdentifier","src":"22553:3:23"},"nativeSrc":"22553:18:23","nodeType":"YulFunctionCall","src":"22553:18:23"},{"kind":"number","nativeSrc":"22573:2:23","nodeType":"YulLiteral","src":"22573:2:23","type":"","value":"38"}],"functionName":{"name":"mstore","nativeSrc":"22546:6:23","nodeType":"YulIdentifier","src":"22546:6:23"},"nativeSrc":"22546:30:23","nodeType":"YulFunctionCall","src":"22546:30:23"},"nativeSrc":"22546:30:23","nodeType":"YulExpressionStatement","src":"22546:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22596:9:23","nodeType":"YulIdentifier","src":"22596:9:23"},{"kind":"number","nativeSrc":"22607:2:23","nodeType":"YulLiteral","src":"22607:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22592:3:23","nodeType":"YulIdentifier","src":"22592:3:23"},"nativeSrc":"22592:18:23","nodeType":"YulFunctionCall","src":"22592:18:23"},{"hexValue":"546f74616c206c6971756964697479206d757374206265206772656174657220","kind":"string","nativeSrc":"22612:34:23","nodeType":"YulLiteral","src":"22612:34:23","type":"","value":"Total liquidity must be greater "}],"functionName":{"name":"mstore","nativeSrc":"22585:6:23","nodeType":"YulIdentifier","src":"22585:6:23"},"nativeSrc":"22585:62:23","nodeType":"YulFunctionCall","src":"22585:62:23"},"nativeSrc":"22585:62:23","nodeType":"YulExpressionStatement","src":"22585:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22667:9:23","nodeType":"YulIdentifier","src":"22667:9:23"},{"kind":"number","nativeSrc":"22678:2:23","nodeType":"YulLiteral","src":"22678:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22663:3:23","nodeType":"YulIdentifier","src":"22663:3:23"},"nativeSrc":"22663:18:23","nodeType":"YulFunctionCall","src":"22663:18:23"},{"hexValue":"7468616e2030","kind":"string","nativeSrc":"22683:8:23","nodeType":"YulLiteral","src":"22683:8:23","type":"","value":"than 0"}],"functionName":{"name":"mstore","nativeSrc":"22656:6:23","nodeType":"YulIdentifier","src":"22656:6:23"},"nativeSrc":"22656:36:23","nodeType":"YulFunctionCall","src":"22656:36:23"},"nativeSrc":"22656:36:23","nodeType":"YulExpressionStatement","src":"22656:36:23"},{"nativeSrc":"22701:27:23","nodeType":"YulAssignment","src":"22701:27:23","value":{"arguments":[{"name":"headStart","nativeSrc":"22713:9:23","nodeType":"YulIdentifier","src":"22713:9:23"},{"kind":"number","nativeSrc":"22724:3:23","nodeType":"YulLiteral","src":"22724:3:23","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22709:3:23","nodeType":"YulIdentifier","src":"22709:3:23"},"nativeSrc":"22709:19:23","nodeType":"YulFunctionCall","src":"22709:19:23"},"variableNames":[{"name":"tail","nativeSrc":"22701:4:23","nodeType":"YulIdentifier","src":"22701:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22332:402:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22483:9:23","nodeType":"YulTypedName","src":"22483:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22497:4:23","nodeType":"YulTypedName","src":"22497:4:23","type":""}],"src":"22332:402:23"},{"body":{"nativeSrc":"22913:163:23","nodeType":"YulBlock","src":"22913:163:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"22930:9:23","nodeType":"YulIdentifier","src":"22930:9:23"},{"kind":"number","nativeSrc":"22941:2:23","nodeType":"YulLiteral","src":"22941:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"22923:6:23","nodeType":"YulIdentifier","src":"22923:6:23"},"nativeSrc":"22923:21:23","nodeType":"YulFunctionCall","src":"22923:21:23"},"nativeSrc":"22923:21:23","nodeType":"YulExpressionStatement","src":"22923:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22964:9:23","nodeType":"YulIdentifier","src":"22964:9:23"},{"kind":"number","nativeSrc":"22975:2:23","nodeType":"YulLiteral","src":"22975:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22960:3:23","nodeType":"YulIdentifier","src":"22960:3:23"},"nativeSrc":"22960:18:23","nodeType":"YulFunctionCall","src":"22960:18:23"},{"kind":"number","nativeSrc":"22980:2:23","nodeType":"YulLiteral","src":"22980:2:23","type":"","value":"13"}],"functionName":{"name":"mstore","nativeSrc":"22953:6:23","nodeType":"YulIdentifier","src":"22953:6:23"},"nativeSrc":"22953:30:23","nodeType":"YulFunctionCall","src":"22953:30:23"},"nativeSrc":"22953:30:23","nodeType":"YulExpressionStatement","src":"22953:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23003:9:23","nodeType":"YulIdentifier","src":"23003:9:23"},{"kind":"number","nativeSrc":"23014:2:23","nodeType":"YulLiteral","src":"23014:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22999:3:23","nodeType":"YulIdentifier","src":"22999:3:23"},"nativeSrc":"22999:18:23","nodeType":"YulFunctionCall","src":"22999:18:23"},{"hexValue":"4d696e74207174792069732030","kind":"string","nativeSrc":"23019:15:23","nodeType":"YulLiteral","src":"23019:15:23","type":"","value":"Mint qty is 0"}],"functionName":{"name":"mstore","nativeSrc":"22992:6:23","nodeType":"YulIdentifier","src":"22992:6:23"},"nativeSrc":"22992:43:23","nodeType":"YulFunctionCall","src":"22992:43:23"},"nativeSrc":"22992:43:23","nodeType":"YulExpressionStatement","src":"22992:43:23"},{"nativeSrc":"23044:26:23","nodeType":"YulAssignment","src":"23044:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"23056:9:23","nodeType":"YulIdentifier","src":"23056:9:23"},{"kind":"number","nativeSrc":"23067:2:23","nodeType":"YulLiteral","src":"23067:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"23052:3:23","nodeType":"YulIdentifier","src":"23052:3:23"},"nativeSrc":"23052:18:23","nodeType":"YulFunctionCall","src":"23052:18:23"},"variableNames":[{"name":"tail","nativeSrc":"23044:4:23","nodeType":"YulIdentifier","src":"23044:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22739:337:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22890:9:23","nodeType":"YulTypedName","src":"22890:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22904:4:23","nodeType":"YulTypedName","src":"22904:4:23","type":""}],"src":"22739:337:23"},{"body":{"nativeSrc":"23160:194:23","nodeType":"YulBlock","src":"23160:194:23","statements":[{"body":{"nativeSrc":"23206:16:23","nodeType":"YulBlock","src":"23206:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"23215:1:23","nodeType":"YulLiteral","src":"23215:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"23218:1:23","nodeType":"YulLiteral","src":"23218:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"23208:6:23","nodeType":"YulIdentifier","src":"23208:6:23"},"nativeSrc":"23208:12:23","nodeType":"YulFunctionCall","src":"23208:12:23"},"nativeSrc":"23208:12:23","nodeType":"YulExpressionStatement","src":"23208:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"23181:7:23","nodeType":"YulIdentifier","src":"23181:7:23"},{"name":"headStart","nativeSrc":"23190:9:23","nodeType":"YulIdentifier","src":"23190:9:23"}],"functionName":{"name":"sub","nativeSrc":"23177:3:23","nodeType":"YulIdentifier","src":"23177:3:23"},"nativeSrc":"23177:23:23","nodeType":"YulFunctionCall","src":"23177:23:23"},{"kind":"number","nativeSrc":"23202:2:23","nodeType":"YulLiteral","src":"23202:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"23173:3:23","nodeType":"YulIdentifier","src":"23173:3:23"},"nativeSrc":"23173:32:23","nodeType":"YulFunctionCall","src":"23173:32:23"},"nativeSrc":"23170:52:23","nodeType":"YulIf","src":"23170:52:23"},{"nativeSrc":"23231:29:23","nodeType":"YulVariableDeclaration","src":"23231:29:23","value":{"arguments":[{"name":"headStart","nativeSrc":"23250:9:23","nodeType":"YulIdentifier","src":"23250:9:23"}],"functionName":{"name":"mload","nativeSrc":"23244:5:23","nodeType":"YulIdentifier","src":"23244:5:23"},"nativeSrc":"23244:16:23","nodeType":"YulFunctionCall","src":"23244:16:23"},"variables":[{"name":"value","nativeSrc":"23235:5:23","nodeType":"YulTypedName","src":"23235:5:23","type":""}]},{"body":{"nativeSrc":"23308:16:23","nodeType":"YulBlock","src":"23308:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"23317:1:23","nodeType":"YulLiteral","src":"23317:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"23320:1:23","nodeType":"YulLiteral","src":"23320:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"23310:6:23","nodeType":"YulIdentifier","src":"23310:6:23"},"nativeSrc":"23310:12:23","nodeType":"YulFunctionCall","src":"23310:12:23"},"nativeSrc":"23310:12:23","nodeType":"YulExpressionStatement","src":"23310:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"23282:5:23","nodeType":"YulIdentifier","src":"23282:5:23"},{"arguments":[{"name":"value","nativeSrc":"23293:5:23","nodeType":"YulIdentifier","src":"23293:5:23"},{"kind":"number","nativeSrc":"23300:4:23","nodeType":"YulLiteral","src":"23300:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"23289:3:23","nodeType":"YulIdentifier","src":"23289:3:23"},"nativeSrc":"23289:16:23","nodeType":"YulFunctionCall","src":"23289:16:23"}],"functionName":{"name":"eq","nativeSrc":"23279:2:23","nodeType":"YulIdentifier","src":"23279:2:23"},"nativeSrc":"23279:27:23","nodeType":"YulFunctionCall","src":"23279:27:23"}],"functionName":{"name":"iszero","nativeSrc":"23272:6:23","nodeType":"YulIdentifier","src":"23272:6:23"},"nativeSrc":"23272:35:23","nodeType":"YulFunctionCall","src":"23272:35:23"},"nativeSrc":"23269:55:23","nodeType":"YulIf","src":"23269:55:23"},{"nativeSrc":"23333:15:23","nodeType":"YulAssignment","src":"23333:15:23","value":{"name":"value","nativeSrc":"23343:5:23","nodeType":"YulIdentifier","src":"23343:5:23"},"variableNames":[{"name":"value0","nativeSrc":"23333:6:23","nodeType":"YulIdentifier","src":"23333:6:23"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nativeSrc":"23081:273:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23126:9:23","nodeType":"YulTypedName","src":"23126:9:23","type":""},{"name":"dataEnd","nativeSrc":"23137:7:23","nodeType":"YulTypedName","src":"23137:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"23149:6:23","nodeType":"YulTypedName","src":"23149:6:23","type":""}],"src":"23081:273:23"},{"body":{"nativeSrc":"23423:352:23","nodeType":"YulBlock","src":"23423:352:23","statements":[{"nativeSrc":"23433:16:23","nodeType":"YulVariableDeclaration","src":"23433:16:23","value":{"kind":"number","nativeSrc":"23448:1:23","nodeType":"YulLiteral","src":"23448:1:23","type":"","value":"1"},"variables":[{"name":"power_1","nativeSrc":"23437:7:23","nodeType":"YulTypedName","src":"23437:7:23","type":""}]},{"nativeSrc":"23458:10:23","nodeType":"YulAssignment","src":"23458:10:23","value":{"kind":"number","nativeSrc":"23467:1:23","nodeType":"YulLiteral","src":"23467:1:23","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"23458:5:23","nodeType":"YulIdentifier","src":"23458:5:23"}]},{"nativeSrc":"23477:13:23","nodeType":"YulAssignment","src":"23477:13:23","value":{"name":"_base","nativeSrc":"23485:5:23","nodeType":"YulIdentifier","src":"23485:5:23"},"variableNames":[{"name":"base","nativeSrc":"23477:4:23","nodeType":"YulIdentifier","src":"23477:4:23"}]},{"body":{"nativeSrc":"23541:228:23","nodeType":"YulBlock","src":"23541:228:23","statements":[{"body":{"nativeSrc":"23586:22:23","nodeType":"YulBlock","src":"23586:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"23588:16:23","nodeType":"YulIdentifier","src":"23588:16:23"},"nativeSrc":"23588:18:23","nodeType":"YulFunctionCall","src":"23588:18:23"},"nativeSrc":"23588:18:23","nodeType":"YulExpressionStatement","src":"23588:18:23"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"23561:4:23","nodeType":"YulIdentifier","src":"23561:4:23"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"23575:1:23","nodeType":"YulLiteral","src":"23575:1:23","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"23571:3:23","nodeType":"YulIdentifier","src":"23571:3:23"},"nativeSrc":"23571:6:23","nodeType":"YulFunctionCall","src":"23571:6:23"},{"name":"base","nativeSrc":"23579:4:23","nodeType":"YulIdentifier","src":"23579:4:23"}],"functionName":{"name":"div","nativeSrc":"23567:3:23","nodeType":"YulIdentifier","src":"23567:3:23"},"nativeSrc":"23567:17:23","nodeType":"YulFunctionCall","src":"23567:17:23"}],"functionName":{"name":"gt","nativeSrc":"23558:2:23","nodeType":"YulIdentifier","src":"23558:2:23"},"nativeSrc":"23558:27:23","nodeType":"YulFunctionCall","src":"23558:27:23"},"nativeSrc":"23555:53:23","nodeType":"YulIf","src":"23555:53:23"},{"body":{"nativeSrc":"23647:29:23","nodeType":"YulBlock","src":"23647:29:23","statements":[{"nativeSrc":"23649:25:23","nodeType":"YulAssignment","src":"23649:25:23","value":{"arguments":[{"name":"power","nativeSrc":"23662:5:23","nodeType":"YulIdentifier","src":"23662:5:23"},{"name":"base","nativeSrc":"23669:4:23","nodeType":"YulIdentifier","src":"23669:4:23"}],"functionName":{"name":"mul","nativeSrc":"23658:3:23","nodeType":"YulIdentifier","src":"23658:3:23"},"nativeSrc":"23658:16:23","nodeType":"YulFunctionCall","src":"23658:16:23"},"variableNames":[{"name":"power","nativeSrc":"23649:5:23","nodeType":"YulIdentifier","src":"23649:5:23"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"23628:8:23","nodeType":"YulIdentifier","src":"23628:8:23"},{"name":"power_1","nativeSrc":"23638:7:23","nodeType":"YulIdentifier","src":"23638:7:23"}],"functionName":{"name":"and","nativeSrc":"23624:3:23","nodeType":"YulIdentifier","src":"23624:3:23"},"nativeSrc":"23624:22:23","nodeType":"YulFunctionCall","src":"23624:22:23"},"nativeSrc":"23621:55:23","nodeType":"YulIf","src":"23621:55:23"},{"nativeSrc":"23689:23:23","nodeType":"YulAssignment","src":"23689:23:23","value":{"arguments":[{"name":"base","nativeSrc":"23701:4:23","nodeType":"YulIdentifier","src":"23701:4:23"},{"name":"base","nativeSrc":"23707:4:23","nodeType":"YulIdentifier","src":"23707:4:23"}],"functionName":{"name":"mul","nativeSrc":"23697:3:23","nodeType":"YulIdentifier","src":"23697:3:23"},"nativeSrc":"23697:15:23","nodeType":"YulFunctionCall","src":"23697:15:23"},"variableNames":[{"name":"base","nativeSrc":"23689:4:23","nodeType":"YulIdentifier","src":"23689:4:23"}]},{"nativeSrc":"23725:34:23","nodeType":"YulAssignment","src":"23725:34:23","value":{"arguments":[{"name":"power_1","nativeSrc":"23741:7:23","nodeType":"YulIdentifier","src":"23741:7:23"},{"name":"exponent","nativeSrc":"23750:8:23","nodeType":"YulIdentifier","src":"23750:8:23"}],"functionName":{"name":"shr","nativeSrc":"23737:3:23","nodeType":"YulIdentifier","src":"23737:3:23"},"nativeSrc":"23737:22:23","nodeType":"YulFunctionCall","src":"23737:22:23"},"variableNames":[{"name":"exponent","nativeSrc":"23725:8:23","nodeType":"YulIdentifier","src":"23725:8:23"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"23510:8:23","nodeType":"YulIdentifier","src":"23510:8:23"},{"name":"power_1","nativeSrc":"23520:7:23","nodeType":"YulIdentifier","src":"23520:7:23"}],"functionName":{"name":"gt","nativeSrc":"23507:2:23","nodeType":"YulIdentifier","src":"23507:2:23"},"nativeSrc":"23507:21:23","nodeType":"YulFunctionCall","src":"23507:21:23"},"nativeSrc":"23499:270:23","nodeType":"YulForLoop","post":{"nativeSrc":"23529:3:23","nodeType":"YulBlock","src":"23529:3:23","statements":[]},"pre":{"nativeSrc":"23503:3:23","nodeType":"YulBlock","src":"23503:3:23","statements":[]},"src":"23499:270:23"}]},"name":"checked_exp_helper","nativeSrc":"23359:416:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"23387:5:23","nodeType":"YulTypedName","src":"23387:5:23","type":""},{"name":"exponent","nativeSrc":"23394:8:23","nodeType":"YulTypedName","src":"23394:8:23","type":""}],"returnVariables":[{"name":"power","nativeSrc":"23407:5:23","nodeType":"YulTypedName","src":"23407:5:23","type":""},{"name":"base","nativeSrc":"23414:4:23","nodeType":"YulTypedName","src":"23414:4:23","type":""}],"src":"23359:416:23"},{"body":{"nativeSrc":"23839:747:23","nodeType":"YulBlock","src":"23839:747:23","statements":[{"body":{"nativeSrc":"23877:52:23","nodeType":"YulBlock","src":"23877:52:23","statements":[{"nativeSrc":"23891:10:23","nodeType":"YulAssignment","src":"23891:10:23","value":{"kind":"number","nativeSrc":"23900:1:23","nodeType":"YulLiteral","src":"23900:1:23","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"23891:5:23","nodeType":"YulIdentifier","src":"23891:5:23"}]},{"nativeSrc":"23914:5:23","nodeType":"YulLeave","src":"23914:5:23"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"23859:8:23","nodeType":"YulIdentifier","src":"23859:8:23"}],"functionName":{"name":"iszero","nativeSrc":"23852:6:23","nodeType":"YulIdentifier","src":"23852:6:23"},"nativeSrc":"23852:16:23","nodeType":"YulFunctionCall","src":"23852:16:23"},"nativeSrc":"23849:80:23","nodeType":"YulIf","src":"23849:80:23"},{"body":{"nativeSrc":"23962:52:23","nodeType":"YulBlock","src":"23962:52:23","statements":[{"nativeSrc":"23976:10:23","nodeType":"YulAssignment","src":"23976:10:23","value":{"kind":"number","nativeSrc":"23985:1:23","nodeType":"YulLiteral","src":"23985:1:23","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"23976:5:23","nodeType":"YulIdentifier","src":"23976:5:23"}]},{"nativeSrc":"23999:5:23","nodeType":"YulLeave","src":"23999:5:23"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"23948:4:23","nodeType":"YulIdentifier","src":"23948:4:23"}],"functionName":{"name":"iszero","nativeSrc":"23941:6:23","nodeType":"YulIdentifier","src":"23941:6:23"},"nativeSrc":"23941:12:23","nodeType":"YulFunctionCall","src":"23941:12:23"},"nativeSrc":"23938:76:23","nodeType":"YulIf","src":"23938:76:23"},{"cases":[{"body":{"nativeSrc":"24050:52:23","nodeType":"YulBlock","src":"24050:52:23","statements":[{"nativeSrc":"24064:10:23","nodeType":"YulAssignment","src":"24064:10:23","value":{"kind":"number","nativeSrc":"24073:1:23","nodeType":"YulLiteral","src":"24073:1:23","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"24064:5:23","nodeType":"YulIdentifier","src":"24064:5:23"}]},{"nativeSrc":"24087:5:23","nodeType":"YulLeave","src":"24087:5:23"}]},"nativeSrc":"24043:59:23","nodeType":"YulCase","src":"24043:59:23","value":{"kind":"number","nativeSrc":"24048:1:23","nodeType":"YulLiteral","src":"24048:1:23","type":"","value":"1"}},{"body":{"nativeSrc":"24118:123:23","nodeType":"YulBlock","src":"24118:123:23","statements":[{"body":{"nativeSrc":"24153:22:23","nodeType":"YulBlock","src":"24153:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"24155:16:23","nodeType":"YulIdentifier","src":"24155:16:23"},"nativeSrc":"24155:18:23","nodeType":"YulFunctionCall","src":"24155:18:23"},"nativeSrc":"24155:18:23","nodeType":"YulExpressionStatement","src":"24155:18:23"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"24138:8:23","nodeType":"YulIdentifier","src":"24138:8:23"},{"kind":"number","nativeSrc":"24148:3:23","nodeType":"YulLiteral","src":"24148:3:23","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"24135:2:23","nodeType":"YulIdentifier","src":"24135:2:23"},"nativeSrc":"24135:17:23","nodeType":"YulFunctionCall","src":"24135:17:23"},"nativeSrc":"24132:43:23","nodeType":"YulIf","src":"24132:43:23"},{"nativeSrc":"24188:25:23","nodeType":"YulAssignment","src":"24188:25:23","value":{"arguments":[{"name":"exponent","nativeSrc":"24201:8:23","nodeType":"YulIdentifier","src":"24201:8:23"},{"kind":"number","nativeSrc":"24211:1:23","nodeType":"YulLiteral","src":"24211:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"24197:3:23","nodeType":"YulIdentifier","src":"24197:3:23"},"nativeSrc":"24197:16:23","nodeType":"YulFunctionCall","src":"24197:16:23"},"variableNames":[{"name":"power","nativeSrc":"24188:5:23","nodeType":"YulIdentifier","src":"24188:5:23"}]},{"nativeSrc":"24226:5:23","nodeType":"YulLeave","src":"24226:5:23"}]},"nativeSrc":"24111:130:23","nodeType":"YulCase","src":"24111:130:23","value":{"kind":"number","nativeSrc":"24116:1:23","nodeType":"YulLiteral","src":"24116:1:23","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"24030:4:23","nodeType":"YulIdentifier","src":"24030:4:23"},"nativeSrc":"24023:218:23","nodeType":"YulSwitch","src":"24023:218:23"},{"body":{"nativeSrc":"24339:70:23","nodeType":"YulBlock","src":"24339:70:23","statements":[{"nativeSrc":"24353:28:23","nodeType":"YulAssignment","src":"24353:28:23","value":{"arguments":[{"name":"base","nativeSrc":"24366:4:23","nodeType":"YulIdentifier","src":"24366:4:23"},{"name":"exponent","nativeSrc":"24372:8:23","nodeType":"YulIdentifier","src":"24372:8:23"}],"functionName":{"name":"exp","nativeSrc":"24362:3:23","nodeType":"YulIdentifier","src":"24362:3:23"},"nativeSrc":"24362:19:23","nodeType":"YulFunctionCall","src":"24362:19:23"},"variableNames":[{"name":"power","nativeSrc":"24353:5:23","nodeType":"YulIdentifier","src":"24353:5:23"}]},{"nativeSrc":"24394:5:23","nodeType":"YulLeave","src":"24394:5:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"24263:4:23","nodeType":"YulIdentifier","src":"24263:4:23"},{"kind":"number","nativeSrc":"24269:2:23","nodeType":"YulLiteral","src":"24269:2:23","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"24260:2:23","nodeType":"YulIdentifier","src":"24260:2:23"},"nativeSrc":"24260:12:23","nodeType":"YulFunctionCall","src":"24260:12:23"},{"arguments":[{"name":"exponent","nativeSrc":"24277:8:23","nodeType":"YulIdentifier","src":"24277:8:23"},{"kind":"number","nativeSrc":"24287:2:23","nodeType":"YulLiteral","src":"24287:2:23","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"24274:2:23","nodeType":"YulIdentifier","src":"24274:2:23"},"nativeSrc":"24274:16:23","nodeType":"YulFunctionCall","src":"24274:16:23"}],"functionName":{"name":"and","nativeSrc":"24256:3:23","nodeType":"YulIdentifier","src":"24256:3:23"},"nativeSrc":"24256:35:23","nodeType":"YulFunctionCall","src":"24256:35:23"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"24300:4:23","nodeType":"YulIdentifier","src":"24300:4:23"},{"kind":"number","nativeSrc":"24306:3:23","nodeType":"YulLiteral","src":"24306:3:23","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"24297:2:23","nodeType":"YulIdentifier","src":"24297:2:23"},"nativeSrc":"24297:13:23","nodeType":"YulFunctionCall","src":"24297:13:23"},{"arguments":[{"name":"exponent","nativeSrc":"24315:8:23","nodeType":"YulIdentifier","src":"24315:8:23"},{"kind":"number","nativeSrc":"24325:2:23","nodeType":"YulLiteral","src":"24325:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"24312:2:23","nodeType":"YulIdentifier","src":"24312:2:23"},"nativeSrc":"24312:16:23","nodeType":"YulFunctionCall","src":"24312:16:23"}],"functionName":{"name":"and","nativeSrc":"24293:3:23","nodeType":"YulIdentifier","src":"24293:3:23"},"nativeSrc":"24293:36:23","nodeType":"YulFunctionCall","src":"24293:36:23"}],"functionName":{"name":"or","nativeSrc":"24253:2:23","nodeType":"YulIdentifier","src":"24253:2:23"},"nativeSrc":"24253:77:23","nodeType":"YulFunctionCall","src":"24253:77:23"},"nativeSrc":"24250:159:23","nodeType":"YulIf","src":"24250:159:23"},{"nativeSrc":"24418:57:23","nodeType":"YulVariableDeclaration","src":"24418:57:23","value":{"arguments":[{"name":"base","nativeSrc":"24460:4:23","nodeType":"YulIdentifier","src":"24460:4:23"},{"name":"exponent","nativeSrc":"24466:8:23","nodeType":"YulIdentifier","src":"24466:8:23"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"24441:18:23","nodeType":"YulIdentifier","src":"24441:18:23"},"nativeSrc":"24441:34:23","nodeType":"YulFunctionCall","src":"24441:34:23"},"variables":[{"name":"power_1","nativeSrc":"24422:7:23","nodeType":"YulTypedName","src":"24422:7:23","type":""},{"name":"base_1","nativeSrc":"24431:6:23","nodeType":"YulTypedName","src":"24431:6:23","type":""}]},{"body":{"nativeSrc":"24520:22:23","nodeType":"YulBlock","src":"24520:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"24522:16:23","nodeType":"YulIdentifier","src":"24522:16:23"},"nativeSrc":"24522:18:23","nodeType":"YulFunctionCall","src":"24522:18:23"},"nativeSrc":"24522:18:23","nodeType":"YulExpressionStatement","src":"24522:18:23"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"24490:7:23","nodeType":"YulIdentifier","src":"24490:7:23"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"24507:1:23","nodeType":"YulLiteral","src":"24507:1:23","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"24503:3:23","nodeType":"YulIdentifier","src":"24503:3:23"},"nativeSrc":"24503:6:23","nodeType":"YulFunctionCall","src":"24503:6:23"},{"name":"base_1","nativeSrc":"24511:6:23","nodeType":"YulIdentifier","src":"24511:6:23"}],"functionName":{"name":"div","nativeSrc":"24499:3:23","nodeType":"YulIdentifier","src":"24499:3:23"},"nativeSrc":"24499:19:23","nodeType":"YulFunctionCall","src":"24499:19:23"}],"functionName":{"name":"gt","nativeSrc":"24487:2:23","nodeType":"YulIdentifier","src":"24487:2:23"},"nativeSrc":"24487:32:23","nodeType":"YulFunctionCall","src":"24487:32:23"},"nativeSrc":"24484:58:23","nodeType":"YulIf","src":"24484:58:23"},{"nativeSrc":"24551:29:23","nodeType":"YulAssignment","src":"24551:29:23","value":{"arguments":[{"name":"power_1","nativeSrc":"24564:7:23","nodeType":"YulIdentifier","src":"24564:7:23"},{"name":"base_1","nativeSrc":"24573:6:23","nodeType":"YulIdentifier","src":"24573:6:23"}],"functionName":{"name":"mul","nativeSrc":"24560:3:23","nodeType":"YulIdentifier","src":"24560:3:23"},"nativeSrc":"24560:20:23","nodeType":"YulFunctionCall","src":"24560:20:23"},"variableNames":[{"name":"power","nativeSrc":"24551:5:23","nodeType":"YulIdentifier","src":"24551:5:23"}]}]},"name":"checked_exp_unsigned","nativeSrc":"23780:806:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"23810:4:23","nodeType":"YulTypedName","src":"23810:4:23","type":""},{"name":"exponent","nativeSrc":"23816:8:23","nodeType":"YulTypedName","src":"23816:8:23","type":""}],"returnVariables":[{"name":"power","nativeSrc":"23829:5:23","nodeType":"YulTypedName","src":"23829:5:23","type":""}],"src":"23780:806:23"},{"body":{"nativeSrc":"24661:61:23","nodeType":"YulBlock","src":"24661:61:23","statements":[{"nativeSrc":"24671:45:23","nodeType":"YulAssignment","src":"24671:45:23","value":{"arguments":[{"name":"base","nativeSrc":"24701:4:23","nodeType":"YulIdentifier","src":"24701:4:23"},{"name":"exponent","nativeSrc":"24707:8:23","nodeType":"YulIdentifier","src":"24707:8:23"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"24680:20:23","nodeType":"YulIdentifier","src":"24680:20:23"},"nativeSrc":"24680:36:23","nodeType":"YulFunctionCall","src":"24680:36:23"},"variableNames":[{"name":"power","nativeSrc":"24671:5:23","nodeType":"YulIdentifier","src":"24671:5:23"}]}]},"name":"checked_exp_t_uint256_t_uint256","nativeSrc":"24591:131:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"24632:4:23","nodeType":"YulTypedName","src":"24632:4:23","type":""},{"name":"exponent","nativeSrc":"24638:8:23","nodeType":"YulTypedName","src":"24638:8:23","type":""}],"returnVariables":[{"name":"power","nativeSrc":"24651:5:23","nodeType":"YulTypedName","src":"24651:5:23","type":""}],"src":"24591:131:23"},{"body":{"nativeSrc":"24901:177:23","nodeType":"YulBlock","src":"24901:177:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"24918:9:23","nodeType":"YulIdentifier","src":"24918:9:23"},{"kind":"number","nativeSrc":"24929:2:23","nodeType":"YulLiteral","src":"24929:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"24911:6:23","nodeType":"YulIdentifier","src":"24911:6:23"},"nativeSrc":"24911:21:23","nodeType":"YulFunctionCall","src":"24911:21:23"},"nativeSrc":"24911:21:23","nodeType":"YulExpressionStatement","src":"24911:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24952:9:23","nodeType":"YulIdentifier","src":"24952:9:23"},{"kind":"number","nativeSrc":"24963:2:23","nodeType":"YulLiteral","src":"24963:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24948:3:23","nodeType":"YulIdentifier","src":"24948:3:23"},"nativeSrc":"24948:18:23","nodeType":"YulFunctionCall","src":"24948:18:23"},{"kind":"number","nativeSrc":"24968:2:23","nodeType":"YulLiteral","src":"24968:2:23","type":"","value":"27"}],"functionName":{"name":"mstore","nativeSrc":"24941:6:23","nodeType":"YulIdentifier","src":"24941:6:23"},"nativeSrc":"24941:30:23","nodeType":"YulFunctionCall","src":"24941:30:23"},"nativeSrc":"24941:30:23","nodeType":"YulExpressionStatement","src":"24941:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24991:9:23","nodeType":"YulIdentifier","src":"24991:9:23"},{"kind":"number","nativeSrc":"25002:2:23","nodeType":"YulLiteral","src":"25002:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24987:3:23","nodeType":"YulIdentifier","src":"24987:3:23"},"nativeSrc":"24987:18:23","nodeType":"YulFunctionCall","src":"24987:18:23"},{"hexValue":"496e76616c696420746f6b656e20616d6f756e7420746f20616464","kind":"string","nativeSrc":"25007:29:23","nodeType":"YulLiteral","src":"25007:29:23","type":"","value":"Invalid token amount to add"}],"functionName":{"name":"mstore","nativeSrc":"24980:6:23","nodeType":"YulIdentifier","src":"24980:6:23"},"nativeSrc":"24980:57:23","nodeType":"YulFunctionCall","src":"24980:57:23"},"nativeSrc":"24980:57:23","nodeType":"YulExpressionStatement","src":"24980:57:23"},{"nativeSrc":"25046:26:23","nodeType":"YulAssignment","src":"25046:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"25058:9:23","nodeType":"YulIdentifier","src":"25058:9:23"},{"kind":"number","nativeSrc":"25069:2:23","nodeType":"YulLiteral","src":"25069:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"25054:3:23","nodeType":"YulIdentifier","src":"25054:3:23"},"nativeSrc":"25054:18:23","nodeType":"YulFunctionCall","src":"25054:18:23"},"variableNames":[{"name":"tail","nativeSrc":"25046:4:23","nodeType":"YulIdentifier","src":"25046:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"24727:351:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24878:9:23","nodeType":"YulTypedName","src":"24878:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24892:4:23","nodeType":"YulTypedName","src":"24892:4:23","type":""}],"src":"24727:351:23"},{"body":{"nativeSrc":"25257:180:23","nodeType":"YulBlock","src":"25257:180:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"25274:9:23","nodeType":"YulIdentifier","src":"25274:9:23"},{"kind":"number","nativeSrc":"25285:2:23","nodeType":"YulLiteral","src":"25285:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"25267:6:23","nodeType":"YulIdentifier","src":"25267:6:23"},"nativeSrc":"25267:21:23","nodeType":"YulFunctionCall","src":"25267:21:23"},"nativeSrc":"25267:21:23","nodeType":"YulExpressionStatement","src":"25267:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25308:9:23","nodeType":"YulIdentifier","src":"25308:9:23"},{"kind":"number","nativeSrc":"25319:2:23","nodeType":"YulLiteral","src":"25319:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25304:3:23","nodeType":"YulIdentifier","src":"25304:3:23"},"nativeSrc":"25304:18:23","nodeType":"YulFunctionCall","src":"25304:18:23"},{"kind":"number","nativeSrc":"25324:2:23","nodeType":"YulLiteral","src":"25324:2:23","type":"","value":"30"}],"functionName":{"name":"mstore","nativeSrc":"25297:6:23","nodeType":"YulIdentifier","src":"25297:6:23"},"nativeSrc":"25297:30:23","nodeType":"YulFunctionCall","src":"25297:30:23"},"nativeSrc":"25297:30:23","nodeType":"YulExpressionStatement","src":"25297:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25347:9:23","nodeType":"YulIdentifier","src":"25347:9:23"},{"kind":"number","nativeSrc":"25358:2:23","nodeType":"YulLiteral","src":"25358:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"25343:3:23","nodeType":"YulIdentifier","src":"25343:3:23"},"nativeSrc":"25343:18:23","nodeType":"YulFunctionCall","src":"25343:18:23"},{"hexValue":"4f766572666c6f7720696e6372656d656e74696e6720736c697070616765","kind":"string","nativeSrc":"25363:32:23","nodeType":"YulLiteral","src":"25363:32:23","type":"","value":"Overflow incrementing slippage"}],"functionName":{"name":"mstore","nativeSrc":"25336:6:23","nodeType":"YulIdentifier","src":"25336:6:23"},"nativeSrc":"25336:60:23","nodeType":"YulFunctionCall","src":"25336:60:23"},"nativeSrc":"25336:60:23","nodeType":"YulExpressionStatement","src":"25336:60:23"},{"nativeSrc":"25405:26:23","nodeType":"YulAssignment","src":"25405:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"25417:9:23","nodeType":"YulIdentifier","src":"25417:9:23"},{"kind":"number","nativeSrc":"25428:2:23","nodeType":"YulLiteral","src":"25428:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"25413:3:23","nodeType":"YulIdentifier","src":"25413:3:23"},"nativeSrc":"25413:18:23","nodeType":"YulFunctionCall","src":"25413:18:23"},"variableNames":[{"name":"tail","nativeSrc":"25405:4:23","nodeType":"YulIdentifier","src":"25405:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_9500bef01f061c69a5831abd395429bc0d4bf975a9340af0622098e5d0422cc6__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"25083:354:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25234:9:23","nodeType":"YulTypedName","src":"25234:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25248:4:23","nodeType":"YulTypedName","src":"25248:4:23","type":""}],"src":"25083:354:23"},{"body":{"nativeSrc":"25616:181:23","nodeType":"YulBlock","src":"25616:181:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"25633:9:23","nodeType":"YulIdentifier","src":"25633:9:23"},{"kind":"number","nativeSrc":"25644:2:23","nodeType":"YulLiteral","src":"25644:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"25626:6:23","nodeType":"YulIdentifier","src":"25626:6:23"},"nativeSrc":"25626:21:23","nodeType":"YulFunctionCall","src":"25626:21:23"},"nativeSrc":"25626:21:23","nodeType":"YulExpressionStatement","src":"25626:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25667:9:23","nodeType":"YulIdentifier","src":"25667:9:23"},{"kind":"number","nativeSrc":"25678:2:23","nodeType":"YulLiteral","src":"25678:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25663:3:23","nodeType":"YulIdentifier","src":"25663:3:23"},"nativeSrc":"25663:18:23","nodeType":"YulFunctionCall","src":"25663:18:23"},{"kind":"number","nativeSrc":"25683:2:23","nodeType":"YulLiteral","src":"25683:2:23","type":"","value":"31"}],"functionName":{"name":"mstore","nativeSrc":"25656:6:23","nodeType":"YulIdentifier","src":"25656:6:23"},"nativeSrc":"25656:30:23","nodeType":"YulFunctionCall","src":"25656:30:23"},"nativeSrc":"25656:30:23","nodeType":"YulExpressionStatement","src":"25656:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25706:9:23","nodeType":"YulIdentifier","src":"25706:9:23"},{"kind":"number","nativeSrc":"25717:2:23","nodeType":"YulLiteral","src":"25717:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"25702:3:23","nodeType":"YulIdentifier","src":"25702:3:23"},"nativeSrc":"25702:18:23","nodeType":"YulFunctionCall","src":"25702:18:23"},{"hexValue":"556e646572666c6f772064656372656d656e74696e6720736c697070616765","kind":"string","nativeSrc":"25722:33:23","nodeType":"YulLiteral","src":"25722:33:23","type":"","value":"Underflow decrementing slippage"}],"functionName":{"name":"mstore","nativeSrc":"25695:6:23","nodeType":"YulIdentifier","src":"25695:6:23"},"nativeSrc":"25695:61:23","nodeType":"YulFunctionCall","src":"25695:61:23"},"nativeSrc":"25695:61:23","nodeType":"YulExpressionStatement","src":"25695:61:23"},{"nativeSrc":"25765:26:23","nodeType":"YulAssignment","src":"25765:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"25777:9:23","nodeType":"YulIdentifier","src":"25777:9:23"},{"kind":"number","nativeSrc":"25788:2:23","nodeType":"YulLiteral","src":"25788:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"25773:3:23","nodeType":"YulIdentifier","src":"25773:3:23"},"nativeSrc":"25773:18:23","nodeType":"YulFunctionCall","src":"25773:18:23"},"variableNames":[{"name":"tail","nativeSrc":"25765:4:23","nodeType":"YulIdentifier","src":"25765:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_7fe042c7e90969a67f580740cd6d07f084ba832097aca9eaaa282ad95462461f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"25442:355:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25593:9:23","nodeType":"YulTypedName","src":"25593:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25607:4:23","nodeType":"YulTypedName","src":"25607:4:23","type":""}],"src":"25442:355:23"},{"body":{"nativeSrc":"25976:176:23","nodeType":"YulBlock","src":"25976:176:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"25993:9:23","nodeType":"YulIdentifier","src":"25993:9:23"},{"kind":"number","nativeSrc":"26004:2:23","nodeType":"YulLiteral","src":"26004:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"25986:6:23","nodeType":"YulIdentifier","src":"25986:6:23"},"nativeSrc":"25986:21:23","nodeType":"YulFunctionCall","src":"25986:21:23"},"nativeSrc":"25986:21:23","nodeType":"YulExpressionStatement","src":"25986:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26027:9:23","nodeType":"YulIdentifier","src":"26027:9:23"},{"kind":"number","nativeSrc":"26038:2:23","nodeType":"YulLiteral","src":"26038:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26023:3:23","nodeType":"YulIdentifier","src":"26023:3:23"},"nativeSrc":"26023:18:23","nodeType":"YulFunctionCall","src":"26023:18:23"},{"kind":"number","nativeSrc":"26043:2:23","nodeType":"YulLiteral","src":"26043:2:23","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"26016:6:23","nodeType":"YulIdentifier","src":"26016:6:23"},"nativeSrc":"26016:30:23","nodeType":"YulFunctionCall","src":"26016:30:23"},"nativeSrc":"26016:30:23","nodeType":"YulExpressionStatement","src":"26016:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26066:9:23","nodeType":"YulIdentifier","src":"26066:9:23"},{"kind":"number","nativeSrc":"26077:2:23","nodeType":"YulLiteral","src":"26077:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26062:3:23","nodeType":"YulIdentifier","src":"26062:3:23"},"nativeSrc":"26062:18:23","nodeType":"YulFunctionCall","src":"26062:18:23"},{"hexValue":"496e76616c696420726562616c616e6365722061646472657373","kind":"string","nativeSrc":"26082:28:23","nodeType":"YulLiteral","src":"26082:28:23","type":"","value":"Invalid rebalancer address"}],"functionName":{"name":"mstore","nativeSrc":"26055:6:23","nodeType":"YulIdentifier","src":"26055:6:23"},"nativeSrc":"26055:56:23","nodeType":"YulFunctionCall","src":"26055:56:23"},"nativeSrc":"26055:56:23","nodeType":"YulExpressionStatement","src":"26055:56:23"},{"nativeSrc":"26120:26:23","nodeType":"YulAssignment","src":"26120:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"26132:9:23","nodeType":"YulIdentifier","src":"26132:9:23"},{"kind":"number","nativeSrc":"26143:2:23","nodeType":"YulLiteral","src":"26143:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26128:3:23","nodeType":"YulIdentifier","src":"26128:3:23"},"nativeSrc":"26128:18:23","nodeType":"YulFunctionCall","src":"26128:18:23"},"variableNames":[{"name":"tail","nativeSrc":"26120:4:23","nodeType":"YulIdentifier","src":"26120:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_b3262886d4e83856703b764357b6a852eb26ef34a7982063b49217460e097ddc__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"25802:350:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25953:9:23","nodeType":"YulTypedName","src":"25953:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25967:4:23","nodeType":"YulTypedName","src":"25967:4:23","type":""}],"src":"25802:350:23"},{"body":{"nativeSrc":"26331:224:23","nodeType":"YulBlock","src":"26331:224:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"26348:9:23","nodeType":"YulIdentifier","src":"26348:9:23"},{"kind":"number","nativeSrc":"26359:2:23","nodeType":"YulLiteral","src":"26359:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"26341:6:23","nodeType":"YulIdentifier","src":"26341:6:23"},"nativeSrc":"26341:21:23","nodeType":"YulFunctionCall","src":"26341:21:23"},"nativeSrc":"26341:21:23","nodeType":"YulExpressionStatement","src":"26341:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26382:9:23","nodeType":"YulIdentifier","src":"26382:9:23"},{"kind":"number","nativeSrc":"26393:2:23","nodeType":"YulLiteral","src":"26393:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26378:3:23","nodeType":"YulIdentifier","src":"26378:3:23"},"nativeSrc":"26378:18:23","nodeType":"YulFunctionCall","src":"26378:18:23"},{"kind":"number","nativeSrc":"26398:2:23","nodeType":"YulLiteral","src":"26398:2:23","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"26371:6:23","nodeType":"YulIdentifier","src":"26371:6:23"},"nativeSrc":"26371:30:23","nodeType":"YulFunctionCall","src":"26371:30:23"},"nativeSrc":"26371:30:23","nodeType":"YulExpressionStatement","src":"26371:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26421:9:23","nodeType":"YulIdentifier","src":"26421:9:23"},{"kind":"number","nativeSrc":"26432:2:23","nodeType":"YulLiteral","src":"26432:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26417:3:23","nodeType":"YulIdentifier","src":"26417:3:23"},"nativeSrc":"26417:18:23","nodeType":"YulFunctionCall","src":"26417:18:23"},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d6174","kind":"string","nativeSrc":"26437:34:23","nodeType":"YulLiteral","src":"26437:34:23","type":"","value":"Assets and weights length mismat"}],"functionName":{"name":"mstore","nativeSrc":"26410:6:23","nodeType":"YulIdentifier","src":"26410:6:23"},"nativeSrc":"26410:62:23","nodeType":"YulFunctionCall","src":"26410:62:23"},"nativeSrc":"26410:62:23","nodeType":"YulExpressionStatement","src":"26410:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26492:9:23","nodeType":"YulIdentifier","src":"26492:9:23"},{"kind":"number","nativeSrc":"26503:2:23","nodeType":"YulLiteral","src":"26503:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26488:3:23","nodeType":"YulIdentifier","src":"26488:3:23"},"nativeSrc":"26488:18:23","nodeType":"YulFunctionCall","src":"26488:18:23"},{"hexValue":"6368","kind":"string","nativeSrc":"26508:4:23","nodeType":"YulLiteral","src":"26508:4:23","type":"","value":"ch"}],"functionName":{"name":"mstore","nativeSrc":"26481:6:23","nodeType":"YulIdentifier","src":"26481:6:23"},"nativeSrc":"26481:32:23","nodeType":"YulFunctionCall","src":"26481:32:23"},"nativeSrc":"26481:32:23","nodeType":"YulExpressionStatement","src":"26481:32:23"},{"nativeSrc":"26522:27:23","nodeType":"YulAssignment","src":"26522:27:23","value":{"arguments":[{"name":"headStart","nativeSrc":"26534:9:23","nodeType":"YulIdentifier","src":"26534:9:23"},{"kind":"number","nativeSrc":"26545:3:23","nodeType":"YulLiteral","src":"26545:3:23","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"26530:3:23","nodeType":"YulIdentifier","src":"26530:3:23"},"nativeSrc":"26530:19:23","nodeType":"YulFunctionCall","src":"26530:19:23"},"variableNames":[{"name":"tail","nativeSrc":"26522:4:23","nodeType":"YulIdentifier","src":"26522:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"26157:398:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26308:9:23","nodeType":"YulTypedName","src":"26308:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26322:4:23","nodeType":"YulTypedName","src":"26322:4:23","type":""}],"src":"26157:398:23"},{"body":{"nativeSrc":"26734:171:23","nodeType":"YulBlock","src":"26734:171:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"26751:9:23","nodeType":"YulIdentifier","src":"26751:9:23"},{"kind":"number","nativeSrc":"26762:2:23","nodeType":"YulLiteral","src":"26762:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"26744:6:23","nodeType":"YulIdentifier","src":"26744:6:23"},"nativeSrc":"26744:21:23","nodeType":"YulFunctionCall","src":"26744:21:23"},"nativeSrc":"26744:21:23","nodeType":"YulExpressionStatement","src":"26744:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26785:9:23","nodeType":"YulIdentifier","src":"26785:9:23"},{"kind":"number","nativeSrc":"26796:2:23","nodeType":"YulLiteral","src":"26796:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26781:3:23","nodeType":"YulIdentifier","src":"26781:3:23"},"nativeSrc":"26781:18:23","nodeType":"YulFunctionCall","src":"26781:18:23"},{"kind":"number","nativeSrc":"26801:2:23","nodeType":"YulLiteral","src":"26801:2:23","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"26774:6:23","nodeType":"YulIdentifier","src":"26774:6:23"},"nativeSrc":"26774:30:23","nodeType":"YulFunctionCall","src":"26774:30:23"},"nativeSrc":"26774:30:23","nodeType":"YulExpressionStatement","src":"26774:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26824:9:23","nodeType":"YulIdentifier","src":"26824:9:23"},{"kind":"number","nativeSrc":"26835:2:23","nodeType":"YulLiteral","src":"26835:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26820:3:23","nodeType":"YulIdentifier","src":"26820:3:23"},"nativeSrc":"26820:18:23","nodeType":"YulFunctionCall","src":"26820:18:23"},{"hexValue":"496e76616c69642061737365742061646472657373","kind":"string","nativeSrc":"26840:23:23","nodeType":"YulLiteral","src":"26840:23:23","type":"","value":"Invalid asset address"}],"functionName":{"name":"mstore","nativeSrc":"26813:6:23","nodeType":"YulIdentifier","src":"26813:6:23"},"nativeSrc":"26813:51:23","nodeType":"YulFunctionCall","src":"26813:51:23"},"nativeSrc":"26813:51:23","nodeType":"YulExpressionStatement","src":"26813:51:23"},{"nativeSrc":"26873:26:23","nodeType":"YulAssignment","src":"26873:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"26885:9:23","nodeType":"YulIdentifier","src":"26885:9:23"},{"kind":"number","nativeSrc":"26896:2:23","nodeType":"YulLiteral","src":"26896:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"26881:3:23","nodeType":"YulIdentifier","src":"26881:3:23"},"nativeSrc":"26881:18:23","nodeType":"YulFunctionCall","src":"26881:18:23"},"variableNames":[{"name":"tail","nativeSrc":"26873:4:23","nodeType":"YulIdentifier","src":"26873:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"26560:345:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26711:9:23","nodeType":"YulTypedName","src":"26711:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26725:4:23","nodeType":"YulTypedName","src":"26725:4:23","type":""}],"src":"26560:345:23"},{"body":{"nativeSrc":"27084:164:23","nodeType":"YulBlock","src":"27084:164:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"27101:9:23","nodeType":"YulIdentifier","src":"27101:9:23"},{"kind":"number","nativeSrc":"27112:2:23","nodeType":"YulLiteral","src":"27112:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"27094:6:23","nodeType":"YulIdentifier","src":"27094:6:23"},"nativeSrc":"27094:21:23","nodeType":"YulFunctionCall","src":"27094:21:23"},"nativeSrc":"27094:21:23","nodeType":"YulExpressionStatement","src":"27094:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27135:9:23","nodeType":"YulIdentifier","src":"27135:9:23"},{"kind":"number","nativeSrc":"27146:2:23","nodeType":"YulLiteral","src":"27146:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27131:3:23","nodeType":"YulIdentifier","src":"27131:3:23"},"nativeSrc":"27131:18:23","nodeType":"YulFunctionCall","src":"27131:18:23"},{"kind":"number","nativeSrc":"27151:2:23","nodeType":"YulLiteral","src":"27151:2:23","type":"","value":"14"}],"functionName":{"name":"mstore","nativeSrc":"27124:6:23","nodeType":"YulIdentifier","src":"27124:6:23"},"nativeSrc":"27124:30:23","nodeType":"YulFunctionCall","src":"27124:30:23"},"nativeSrc":"27124:30:23","nodeType":"YulExpressionStatement","src":"27124:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27174:9:23","nodeType":"YulIdentifier","src":"27174:9:23"},{"kind":"number","nativeSrc":"27185:2:23","nodeType":"YulLiteral","src":"27185:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27170:3:23","nodeType":"YulIdentifier","src":"27170:3:23"},"nativeSrc":"27170:18:23","nodeType":"YulFunctionCall","src":"27170:18:23"},{"hexValue":"496e76616c696420776569676874","kind":"string","nativeSrc":"27190:16:23","nodeType":"YulLiteral","src":"27190:16:23","type":"","value":"Invalid weight"}],"functionName":{"name":"mstore","nativeSrc":"27163:6:23","nodeType":"YulIdentifier","src":"27163:6:23"},"nativeSrc":"27163:44:23","nodeType":"YulFunctionCall","src":"27163:44:23"},"nativeSrc":"27163:44:23","nodeType":"YulExpressionStatement","src":"27163:44:23"},{"nativeSrc":"27216:26:23","nodeType":"YulAssignment","src":"27216:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"27228:9:23","nodeType":"YulIdentifier","src":"27228:9:23"},{"kind":"number","nativeSrc":"27239:2:23","nodeType":"YulLiteral","src":"27239:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"27224:3:23","nodeType":"YulIdentifier","src":"27224:3:23"},"nativeSrc":"27224:18:23","nodeType":"YulFunctionCall","src":"27224:18:23"},"variableNames":[{"name":"tail","nativeSrc":"27216:4:23","nodeType":"YulIdentifier","src":"27216:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"26910:338:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27061:9:23","nodeType":"YulTypedName","src":"27061:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27075:4:23","nodeType":"YulTypedName","src":"27075:4:23","type":""}],"src":"26910:338:23"},{"body":{"nativeSrc":"27334:103:23","nodeType":"YulBlock","src":"27334:103:23","statements":[{"body":{"nativeSrc":"27380:16:23","nodeType":"YulBlock","src":"27380:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"27389:1:23","nodeType":"YulLiteral","src":"27389:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"27392:1:23","nodeType":"YulLiteral","src":"27392:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"27382:6:23","nodeType":"YulIdentifier","src":"27382:6:23"},"nativeSrc":"27382:12:23","nodeType":"YulFunctionCall","src":"27382:12:23"},"nativeSrc":"27382:12:23","nodeType":"YulExpressionStatement","src":"27382:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"27355:7:23","nodeType":"YulIdentifier","src":"27355:7:23"},{"name":"headStart","nativeSrc":"27364:9:23","nodeType":"YulIdentifier","src":"27364:9:23"}],"functionName":{"name":"sub","nativeSrc":"27351:3:23","nodeType":"YulIdentifier","src":"27351:3:23"},"nativeSrc":"27351:23:23","nodeType":"YulFunctionCall","src":"27351:23:23"},{"kind":"number","nativeSrc":"27376:2:23","nodeType":"YulLiteral","src":"27376:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"27347:3:23","nodeType":"YulIdentifier","src":"27347:3:23"},"nativeSrc":"27347:32:23","nodeType":"YulFunctionCall","src":"27347:32:23"},"nativeSrc":"27344:52:23","nodeType":"YulIf","src":"27344:52:23"},{"nativeSrc":"27405:26:23","nodeType":"YulAssignment","src":"27405:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"27421:9:23","nodeType":"YulIdentifier","src":"27421:9:23"}],"functionName":{"name":"mload","nativeSrc":"27415:5:23","nodeType":"YulIdentifier","src":"27415:5:23"},"nativeSrc":"27415:16:23","nodeType":"YulFunctionCall","src":"27415:16:23"},"variableNames":[{"name":"value0","nativeSrc":"27405:6:23","nodeType":"YulIdentifier","src":"27405:6:23"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"27253:184:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27300:9:23","nodeType":"YulTypedName","src":"27300:9:23","type":""},{"name":"dataEnd","nativeSrc":"27311:7:23","nodeType":"YulTypedName","src":"27311:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"27323:6:23","nodeType":"YulTypedName","src":"27323:6:23","type":""}],"src":"27253:184:23"},{"body":{"nativeSrc":"27861:604:23","nodeType":"YulBlock","src":"27861:604:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"27878:9:23","nodeType":"YulIdentifier","src":"27878:9:23"},{"kind":"number","nativeSrc":"27889:3:23","nodeType":"YulLiteral","src":"27889:3:23","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"27871:6:23","nodeType":"YulIdentifier","src":"27871:6:23"},"nativeSrc":"27871:22:23","nodeType":"YulFunctionCall","src":"27871:22:23"},"nativeSrc":"27871:22:23","nodeType":"YulExpressionStatement","src":"27871:22:23"},{"nativeSrc":"27902:71:23","nodeType":"YulVariableDeclaration","src":"27902:71:23","value":{"arguments":[{"name":"value0","nativeSrc":"27945:6:23","nodeType":"YulIdentifier","src":"27945:6:23"},{"arguments":[{"name":"headStart","nativeSrc":"27957:9:23","nodeType":"YulIdentifier","src":"27957:9:23"},{"kind":"number","nativeSrc":"27968:3:23","nodeType":"YulLiteral","src":"27968:3:23","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"27953:3:23","nodeType":"YulIdentifier","src":"27953:3:23"},"nativeSrc":"27953:19:23","nodeType":"YulFunctionCall","src":"27953:19:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"27916:28:23","nodeType":"YulIdentifier","src":"27916:28:23"},"nativeSrc":"27916:57:23","nodeType":"YulFunctionCall","src":"27916:57:23"},"variables":[{"name":"tail_1","nativeSrc":"27906:6:23","nodeType":"YulTypedName","src":"27906:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27993:9:23","nodeType":"YulIdentifier","src":"27993:9:23"},{"kind":"number","nativeSrc":"28004:2:23","nodeType":"YulLiteral","src":"28004:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27989:3:23","nodeType":"YulIdentifier","src":"27989:3:23"},"nativeSrc":"27989:18:23","nodeType":"YulFunctionCall","src":"27989:18:23"},{"arguments":[{"name":"tail_1","nativeSrc":"28013:6:23","nodeType":"YulIdentifier","src":"28013:6:23"},{"name":"headStart","nativeSrc":"28021:9:23","nodeType":"YulIdentifier","src":"28021:9:23"}],"functionName":{"name":"sub","nativeSrc":"28009:3:23","nodeType":"YulIdentifier","src":"28009:3:23"},"nativeSrc":"28009:22:23","nodeType":"YulFunctionCall","src":"28009:22:23"}],"functionName":{"name":"mstore","nativeSrc":"27982:6:23","nodeType":"YulIdentifier","src":"27982:6:23"},"nativeSrc":"27982:50:23","nodeType":"YulFunctionCall","src":"27982:50:23"},"nativeSrc":"27982:50:23","nodeType":"YulExpressionStatement","src":"27982:50:23"},{"nativeSrc":"28041:58:23","nodeType":"YulVariableDeclaration","src":"28041:58:23","value":{"arguments":[{"name":"value1","nativeSrc":"28084:6:23","nodeType":"YulIdentifier","src":"28084:6:23"},{"name":"tail_1","nativeSrc":"28092:6:23","nodeType":"YulIdentifier","src":"28092:6:23"}],"functionName":{"name":"abi_encode_array_address_dyn","nativeSrc":"28055:28:23","nodeType":"YulIdentifier","src":"28055:28:23"},"nativeSrc":"28055:44:23","nodeType":"YulFunctionCall","src":"28055:44:23"},"variables":[{"name":"tail_2","nativeSrc":"28045:6:23","nodeType":"YulTypedName","src":"28045:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28119:9:23","nodeType":"YulIdentifier","src":"28119:9:23"},{"kind":"number","nativeSrc":"28130:2:23","nodeType":"YulLiteral","src":"28130:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"28115:3:23","nodeType":"YulIdentifier","src":"28115:3:23"},"nativeSrc":"28115:18:23","nodeType":"YulFunctionCall","src":"28115:18:23"},{"arguments":[{"name":"tail_2","nativeSrc":"28139:6:23","nodeType":"YulIdentifier","src":"28139:6:23"},{"name":"headStart","nativeSrc":"28147:9:23","nodeType":"YulIdentifier","src":"28147:9:23"}],"functionName":{"name":"sub","nativeSrc":"28135:3:23","nodeType":"YulIdentifier","src":"28135:3:23"},"nativeSrc":"28135:22:23","nodeType":"YulFunctionCall","src":"28135:22:23"}],"functionName":{"name":"mstore","nativeSrc":"28108:6:23","nodeType":"YulIdentifier","src":"28108:6:23"},"nativeSrc":"28108:50:23","nodeType":"YulFunctionCall","src":"28108:50:23"},"nativeSrc":"28108:50:23","nodeType":"YulExpressionStatement","src":"28108:50:23"},{"nativeSrc":"28167:52:23","nodeType":"YulAssignment","src":"28167:52:23","value":{"arguments":[{"name":"value2","nativeSrc":"28204:6:23","nodeType":"YulIdentifier","src":"28204:6:23"},{"name":"tail_2","nativeSrc":"28212:6:23","nodeType":"YulIdentifier","src":"28212:6:23"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nativeSrc":"28175:28:23","nodeType":"YulIdentifier","src":"28175:28:23"},"nativeSrc":"28175:44:23","nodeType":"YulFunctionCall","src":"28175:44:23"},"variableNames":[{"name":"tail","nativeSrc":"28167:4:23","nodeType":"YulIdentifier","src":"28167:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28239:9:23","nodeType":"YulIdentifier","src":"28239:9:23"},{"kind":"number","nativeSrc":"28250:2:23","nodeType":"YulLiteral","src":"28250:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"28235:3:23","nodeType":"YulIdentifier","src":"28235:3:23"},"nativeSrc":"28235:18:23","nodeType":"YulFunctionCall","src":"28235:18:23"},{"name":"value3","nativeSrc":"28255:6:23","nodeType":"YulIdentifier","src":"28255:6:23"}],"functionName":{"name":"mstore","nativeSrc":"28228:6:23","nodeType":"YulIdentifier","src":"28228:6:23"},"nativeSrc":"28228:34:23","nodeType":"YulFunctionCall","src":"28228:34:23"},"nativeSrc":"28228:34:23","nodeType":"YulExpressionStatement","src":"28228:34:23"},{"nativeSrc":"28271:29:23","nodeType":"YulVariableDeclaration","src":"28271:29:23","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"28289:3:23","nodeType":"YulLiteral","src":"28289:3:23","type":"","value":"160"},{"kind":"number","nativeSrc":"28294:1:23","nodeType":"YulLiteral","src":"28294:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"28285:3:23","nodeType":"YulIdentifier","src":"28285:3:23"},"nativeSrc":"28285:11:23","nodeType":"YulFunctionCall","src":"28285:11:23"},{"kind":"number","nativeSrc":"28298:1:23","nodeType":"YulLiteral","src":"28298:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"28281:3:23","nodeType":"YulIdentifier","src":"28281:3:23"},"nativeSrc":"28281:19:23","nodeType":"YulFunctionCall","src":"28281:19:23"},"variables":[{"name":"_1","nativeSrc":"28275:2:23","nodeType":"YulTypedName","src":"28275:2:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28320:9:23","nodeType":"YulIdentifier","src":"28320:9:23"},{"kind":"number","nativeSrc":"28331:3:23","nodeType":"YulLiteral","src":"28331:3:23","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"28316:3:23","nodeType":"YulIdentifier","src":"28316:3:23"},"nativeSrc":"28316:19:23","nodeType":"YulFunctionCall","src":"28316:19:23"},{"arguments":[{"name":"value4","nativeSrc":"28341:6:23","nodeType":"YulIdentifier","src":"28341:6:23"},{"name":"_1","nativeSrc":"28349:2:23","nodeType":"YulIdentifier","src":"28349:2:23"}],"functionName":{"name":"and","nativeSrc":"28337:3:23","nodeType":"YulIdentifier","src":"28337:3:23"},"nativeSrc":"28337:15:23","nodeType":"YulFunctionCall","src":"28337:15:23"}],"functionName":{"name":"mstore","nativeSrc":"28309:6:23","nodeType":"YulIdentifier","src":"28309:6:23"},"nativeSrc":"28309:44:23","nodeType":"YulFunctionCall","src":"28309:44:23"},"nativeSrc":"28309:44:23","nodeType":"YulExpressionStatement","src":"28309:44:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28373:9:23","nodeType":"YulIdentifier","src":"28373:9:23"},{"kind":"number","nativeSrc":"28384:3:23","nodeType":"YulLiteral","src":"28384:3:23","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"28369:3:23","nodeType":"YulIdentifier","src":"28369:3:23"},"nativeSrc":"28369:19:23","nodeType":"YulFunctionCall","src":"28369:19:23"},{"arguments":[{"name":"value5","nativeSrc":"28394:6:23","nodeType":"YulIdentifier","src":"28394:6:23"},{"name":"_1","nativeSrc":"28402:2:23","nodeType":"YulIdentifier","src":"28402:2:23"}],"functionName":{"name":"and","nativeSrc":"28390:3:23","nodeType":"YulIdentifier","src":"28390:3:23"},"nativeSrc":"28390:15:23","nodeType":"YulFunctionCall","src":"28390:15:23"}],"functionName":{"name":"mstore","nativeSrc":"28362:6:23","nodeType":"YulIdentifier","src":"28362:6:23"},"nativeSrc":"28362:44:23","nodeType":"YulFunctionCall","src":"28362:44:23"},"nativeSrc":"28362:44:23","nodeType":"YulExpressionStatement","src":"28362:44:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28426:9:23","nodeType":"YulIdentifier","src":"28426:9:23"},{"kind":"number","nativeSrc":"28437:3:23","nodeType":"YulLiteral","src":"28437:3:23","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"28422:3:23","nodeType":"YulIdentifier","src":"28422:3:23"},"nativeSrc":"28422:19:23","nodeType":"YulFunctionCall","src":"28422:19:23"},{"arguments":[{"name":"value6","nativeSrc":"28447:6:23","nodeType":"YulIdentifier","src":"28447:6:23"},{"name":"_1","nativeSrc":"28455:2:23","nodeType":"YulIdentifier","src":"28455:2:23"}],"functionName":{"name":"and","nativeSrc":"28443:3:23","nodeType":"YulIdentifier","src":"28443:3:23"},"nativeSrc":"28443:15:23","nodeType":"YulFunctionCall","src":"28443:15:23"}],"functionName":{"name":"mstore","nativeSrc":"28415:6:23","nodeType":"YulIdentifier","src":"28415:6:23"},"nativeSrc":"28415:44:23","nodeType":"YulFunctionCall","src":"28415:44:23"},"nativeSrc":"28415:44:23","nodeType":"YulExpressionStatement","src":"28415:44:23"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__fromStack_reversed","nativeSrc":"27442:1023:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27782:9:23","nodeType":"YulTypedName","src":"27782:9:23","type":""},{"name":"value6","nativeSrc":"27793:6:23","nodeType":"YulTypedName","src":"27793:6:23","type":""},{"name":"value5","nativeSrc":"27801:6:23","nodeType":"YulTypedName","src":"27801:6:23","type":""},{"name":"value4","nativeSrc":"27809:6:23","nodeType":"YulTypedName","src":"27809:6:23","type":""},{"name":"value3","nativeSrc":"27817:6:23","nodeType":"YulTypedName","src":"27817:6:23","type":""},{"name":"value2","nativeSrc":"27825:6:23","nodeType":"YulTypedName","src":"27825:6:23","type":""},{"name":"value1","nativeSrc":"27833:6:23","nodeType":"YulTypedName","src":"27833:6:23","type":""},{"name":"value0","nativeSrc":"27841:6:23","nodeType":"YulTypedName","src":"27841:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27852:4:23","nodeType":"YulTypedName","src":"27852:4:23","type":""}],"src":"27442:1023:23"},{"body":{"nativeSrc":"28526:65:23","nodeType":"YulBlock","src":"28526:65:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"28543:1:23","nodeType":"YulLiteral","src":"28543:1:23","type":"","value":"0"},{"name":"ptr","nativeSrc":"28546:3:23","nodeType":"YulIdentifier","src":"28546:3:23"}],"functionName":{"name":"mstore","nativeSrc":"28536:6:23","nodeType":"YulIdentifier","src":"28536:6:23"},"nativeSrc":"28536:14:23","nodeType":"YulFunctionCall","src":"28536:14:23"},"nativeSrc":"28536:14:23","nodeType":"YulExpressionStatement","src":"28536:14:23"},{"nativeSrc":"28559:26:23","nodeType":"YulAssignment","src":"28559:26:23","value":{"arguments":[{"kind":"number","nativeSrc":"28577:1:23","nodeType":"YulLiteral","src":"28577:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"28580:4:23","nodeType":"YulLiteral","src":"28580:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"28567:9:23","nodeType":"YulIdentifier","src":"28567:9:23"},"nativeSrc":"28567:18:23","nodeType":"YulFunctionCall","src":"28567:18:23"},"variableNames":[{"name":"data","nativeSrc":"28559:4:23","nodeType":"YulIdentifier","src":"28559:4:23"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"28470:121:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"28509:3:23","nodeType":"YulTypedName","src":"28509:3:23","type":""}],"returnVariables":[{"name":"data","nativeSrc":"28517:4:23","nodeType":"YulTypedName","src":"28517:4:23","type":""}],"src":"28470:121:23"},{"body":{"nativeSrc":"28677:437:23","nodeType":"YulBlock","src":"28677:437:23","statements":[{"body":{"nativeSrc":"28710:398:23","nodeType":"YulBlock","src":"28710:398:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"28731:1:23","nodeType":"YulLiteral","src":"28731:1:23","type":"","value":"0"},{"name":"array","nativeSrc":"28734:5:23","nodeType":"YulIdentifier","src":"28734:5:23"}],"functionName":{"name":"mstore","nativeSrc":"28724:6:23","nodeType":"YulIdentifier","src":"28724:6:23"},"nativeSrc":"28724:16:23","nodeType":"YulFunctionCall","src":"28724:16:23"},"nativeSrc":"28724:16:23","nodeType":"YulExpressionStatement","src":"28724:16:23"},{"nativeSrc":"28753:30:23","nodeType":"YulVariableDeclaration","src":"28753:30:23","value":{"arguments":[{"kind":"number","nativeSrc":"28775:1:23","nodeType":"YulLiteral","src":"28775:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"28778:4:23","nodeType":"YulLiteral","src":"28778:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"28765:9:23","nodeType":"YulIdentifier","src":"28765:9:23"},"nativeSrc":"28765:18:23","nodeType":"YulFunctionCall","src":"28765:18:23"},"variables":[{"name":"data","nativeSrc":"28757:4:23","nodeType":"YulTypedName","src":"28757:4:23","type":""}]},{"nativeSrc":"28796:57:23","nodeType":"YulVariableDeclaration","src":"28796:57:23","value":{"arguments":[{"name":"data","nativeSrc":"28819:4:23","nodeType":"YulIdentifier","src":"28819:4:23"},{"arguments":[{"kind":"number","nativeSrc":"28829:1:23","nodeType":"YulLiteral","src":"28829:1:23","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"28836:10:23","nodeType":"YulIdentifier","src":"28836:10:23"},{"kind":"number","nativeSrc":"28848:2:23","nodeType":"YulLiteral","src":"28848:2:23","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"28832:3:23","nodeType":"YulIdentifier","src":"28832:3:23"},"nativeSrc":"28832:19:23","nodeType":"YulFunctionCall","src":"28832:19:23"}],"functionName":{"name":"shr","nativeSrc":"28825:3:23","nodeType":"YulIdentifier","src":"28825:3:23"},"nativeSrc":"28825:27:23","nodeType":"YulFunctionCall","src":"28825:27:23"}],"functionName":{"name":"add","nativeSrc":"28815:3:23","nodeType":"YulIdentifier","src":"28815:3:23"},"nativeSrc":"28815:38:23","nodeType":"YulFunctionCall","src":"28815:38:23"},"variables":[{"name":"deleteStart","nativeSrc":"28800:11:23","nodeType":"YulTypedName","src":"28800:11:23","type":""}]},{"body":{"nativeSrc":"28890:23:23","nodeType":"YulBlock","src":"28890:23:23","statements":[{"nativeSrc":"28892:19:23","nodeType":"YulAssignment","src":"28892:19:23","value":{"name":"data","nativeSrc":"28907:4:23","nodeType":"YulIdentifier","src":"28907:4:23"},"variableNames":[{"name":"deleteStart","nativeSrc":"28892:11:23","nodeType":"YulIdentifier","src":"28892:11:23"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"28872:10:23","nodeType":"YulIdentifier","src":"28872:10:23"},{"kind":"number","nativeSrc":"28884:4:23","nodeType":"YulLiteral","src":"28884:4:23","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"28869:2:23","nodeType":"YulIdentifier","src":"28869:2:23"},"nativeSrc":"28869:20:23","nodeType":"YulFunctionCall","src":"28869:20:23"},"nativeSrc":"28866:47:23","nodeType":"YulIf","src":"28866:47:23"},{"nativeSrc":"28926:41:23","nodeType":"YulVariableDeclaration","src":"28926:41:23","value":{"arguments":[{"name":"data","nativeSrc":"28940:4:23","nodeType":"YulIdentifier","src":"28940:4:23"},{"arguments":[{"kind":"number","nativeSrc":"28950:1:23","nodeType":"YulLiteral","src":"28950:1:23","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"28957:3:23","nodeType":"YulIdentifier","src":"28957:3:23"},{"kind":"number","nativeSrc":"28962:2:23","nodeType":"YulLiteral","src":"28962:2:23","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"28953:3:23","nodeType":"YulIdentifier","src":"28953:3:23"},"nativeSrc":"28953:12:23","nodeType":"YulFunctionCall","src":"28953:12:23"}],"functionName":{"name":"shr","nativeSrc":"28946:3:23","nodeType":"YulIdentifier","src":"28946:3:23"},"nativeSrc":"28946:20:23","nodeType":"YulFunctionCall","src":"28946:20:23"}],"functionName":{"name":"add","nativeSrc":"28936:3:23","nodeType":"YulIdentifier","src":"28936:3:23"},"nativeSrc":"28936:31:23","nodeType":"YulFunctionCall","src":"28936:31:23"},"variables":[{"name":"_1","nativeSrc":"28930:2:23","nodeType":"YulTypedName","src":"28930:2:23","type":""}]},{"nativeSrc":"28980:24:23","nodeType":"YulVariableDeclaration","src":"28980:24:23","value":{"name":"deleteStart","nativeSrc":"28993:11:23","nodeType":"YulIdentifier","src":"28993:11:23"},"variables":[{"name":"start","nativeSrc":"28984:5:23","nodeType":"YulTypedName","src":"28984:5:23","type":""}]},{"body":{"nativeSrc":"29078:20:23","nodeType":"YulBlock","src":"29078:20:23","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"29087:5:23","nodeType":"YulIdentifier","src":"29087:5:23"},{"kind":"number","nativeSrc":"29094:1:23","nodeType":"YulLiteral","src":"29094:1:23","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"29080:6:23","nodeType":"YulIdentifier","src":"29080:6:23"},"nativeSrc":"29080:16:23","nodeType":"YulFunctionCall","src":"29080:16:23"},"nativeSrc":"29080:16:23","nodeType":"YulExpressionStatement","src":"29080:16:23"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"29028:5:23","nodeType":"YulIdentifier","src":"29028:5:23"},{"name":"_1","nativeSrc":"29035:2:23","nodeType":"YulIdentifier","src":"29035:2:23"}],"functionName":{"name":"lt","nativeSrc":"29025:2:23","nodeType":"YulIdentifier","src":"29025:2:23"},"nativeSrc":"29025:13:23","nodeType":"YulFunctionCall","src":"29025:13:23"},"nativeSrc":"29017:81:23","nodeType":"YulForLoop","post":{"nativeSrc":"29039:26:23","nodeType":"YulBlock","src":"29039:26:23","statements":[{"nativeSrc":"29041:22:23","nodeType":"YulAssignment","src":"29041:22:23","value":{"arguments":[{"name":"start","nativeSrc":"29054:5:23","nodeType":"YulIdentifier","src":"29054:5:23"},{"kind":"number","nativeSrc":"29061:1:23","nodeType":"YulLiteral","src":"29061:1:23","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"29050:3:23","nodeType":"YulIdentifier","src":"29050:3:23"},"nativeSrc":"29050:13:23","nodeType":"YulFunctionCall","src":"29050:13:23"},"variableNames":[{"name":"start","nativeSrc":"29041:5:23","nodeType":"YulIdentifier","src":"29041:5:23"}]}]},"pre":{"nativeSrc":"29021:3:23","nodeType":"YulBlock","src":"29021:3:23","statements":[]},"src":"29017:81:23"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"28693:3:23","nodeType":"YulIdentifier","src":"28693:3:23"},{"kind":"number","nativeSrc":"28698:2:23","nodeType":"YulLiteral","src":"28698:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"28690:2:23","nodeType":"YulIdentifier","src":"28690:2:23"},"nativeSrc":"28690:11:23","nodeType":"YulFunctionCall","src":"28690:11:23"},"nativeSrc":"28687:421:23","nodeType":"YulIf","src":"28687:421:23"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"28596:518:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"28649:5:23","nodeType":"YulTypedName","src":"28649:5:23","type":""},{"name":"len","nativeSrc":"28656:3:23","nodeType":"YulTypedName","src":"28656:3:23","type":""},{"name":"startIndex","nativeSrc":"28661:10:23","nodeType":"YulTypedName","src":"28661:10:23","type":""}],"src":"28596:518:23"},{"body":{"nativeSrc":"29204:81:23","nodeType":"YulBlock","src":"29204:81:23","statements":[{"nativeSrc":"29214:65:23","nodeType":"YulAssignment","src":"29214:65:23","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"29229:4:23","nodeType":"YulIdentifier","src":"29229:4:23"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"29247:1:23","nodeType":"YulLiteral","src":"29247:1:23","type":"","value":"3"},{"name":"len","nativeSrc":"29250:3:23","nodeType":"YulIdentifier","src":"29250:3:23"}],"functionName":{"name":"shl","nativeSrc":"29243:3:23","nodeType":"YulIdentifier","src":"29243:3:23"},"nativeSrc":"29243:11:23","nodeType":"YulFunctionCall","src":"29243:11:23"},{"arguments":[{"kind":"number","nativeSrc":"29260:1:23","nodeType":"YulLiteral","src":"29260:1:23","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"29256:3:23","nodeType":"YulIdentifier","src":"29256:3:23"},"nativeSrc":"29256:6:23","nodeType":"YulFunctionCall","src":"29256:6:23"}],"functionName":{"name":"shr","nativeSrc":"29239:3:23","nodeType":"YulIdentifier","src":"29239:3:23"},"nativeSrc":"29239:24:23","nodeType":"YulFunctionCall","src":"29239:24:23"}],"functionName":{"name":"not","nativeSrc":"29235:3:23","nodeType":"YulIdentifier","src":"29235:3:23"},"nativeSrc":"29235:29:23","nodeType":"YulFunctionCall","src":"29235:29:23"}],"functionName":{"name":"and","nativeSrc":"29225:3:23","nodeType":"YulIdentifier","src":"29225:3:23"},"nativeSrc":"29225:40:23","nodeType":"YulFunctionCall","src":"29225:40:23"},{"arguments":[{"kind":"number","nativeSrc":"29271:1:23","nodeType":"YulLiteral","src":"29271:1:23","type":"","value":"1"},{"name":"len","nativeSrc":"29274:3:23","nodeType":"YulIdentifier","src":"29274:3:23"}],"functionName":{"name":"shl","nativeSrc":"29267:3:23","nodeType":"YulIdentifier","src":"29267:3:23"},"nativeSrc":"29267:11:23","nodeType":"YulFunctionCall","src":"29267:11:23"}],"functionName":{"name":"or","nativeSrc":"29222:2:23","nodeType":"YulIdentifier","src":"29222:2:23"},"nativeSrc":"29222:57:23","nodeType":"YulFunctionCall","src":"29222:57:23"},"variableNames":[{"name":"used","nativeSrc":"29214:4:23","nodeType":"YulIdentifier","src":"29214:4:23"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"29119:166:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"29181:4:23","nodeType":"YulTypedName","src":"29181:4:23","type":""},{"name":"len","nativeSrc":"29187:3:23","nodeType":"YulTypedName","src":"29187:3:23","type":""}],"returnVariables":[{"name":"used","nativeSrc":"29195:4:23","nodeType":"YulTypedName","src":"29195:4:23","type":""}],"src":"29119:166:23"},{"body":{"nativeSrc":"29386:1249:23","nodeType":"YulBlock","src":"29386:1249:23","statements":[{"nativeSrc":"29396:24:23","nodeType":"YulVariableDeclaration","src":"29396:24:23","value":{"arguments":[{"name":"src","nativeSrc":"29416:3:23","nodeType":"YulIdentifier","src":"29416:3:23"}],"functionName":{"name":"mload","nativeSrc":"29410:5:23","nodeType":"YulIdentifier","src":"29410:5:23"},"nativeSrc":"29410:10:23","nodeType":"YulFunctionCall","src":"29410:10:23"},"variables":[{"name":"newLen","nativeSrc":"29400:6:23","nodeType":"YulTypedName","src":"29400:6:23","type":""}]},{"body":{"nativeSrc":"29463:22:23","nodeType":"YulBlock","src":"29463:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"29465:16:23","nodeType":"YulIdentifier","src":"29465:16:23"},"nativeSrc":"29465:18:23","nodeType":"YulFunctionCall","src":"29465:18:23"},"nativeSrc":"29465:18:23","nodeType":"YulExpressionStatement","src":"29465:18:23"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"29435:6:23","nodeType":"YulIdentifier","src":"29435:6:23"},{"kind":"number","nativeSrc":"29443:18:23","nodeType":"YulLiteral","src":"29443:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"29432:2:23","nodeType":"YulIdentifier","src":"29432:2:23"},"nativeSrc":"29432:30:23","nodeType":"YulFunctionCall","src":"29432:30:23"},"nativeSrc":"29429:56:23","nodeType":"YulIf","src":"29429:56:23"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"29538:4:23","nodeType":"YulIdentifier","src":"29538:4:23"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"29576:4:23","nodeType":"YulIdentifier","src":"29576:4:23"}],"functionName":{"name":"sload","nativeSrc":"29570:5:23","nodeType":"YulIdentifier","src":"29570:5:23"},"nativeSrc":"29570:11:23","nodeType":"YulFunctionCall","src":"29570:11:23"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"29544:25:23","nodeType":"YulIdentifier","src":"29544:25:23"},"nativeSrc":"29544:38:23","nodeType":"YulFunctionCall","src":"29544:38:23"},{"name":"newLen","nativeSrc":"29584:6:23","nodeType":"YulIdentifier","src":"29584:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"29494:43:23","nodeType":"YulIdentifier","src":"29494:43:23"},"nativeSrc":"29494:97:23","nodeType":"YulFunctionCall","src":"29494:97:23"},"nativeSrc":"29494:97:23","nodeType":"YulExpressionStatement","src":"29494:97:23"},{"nativeSrc":"29600:18:23","nodeType":"YulVariableDeclaration","src":"29600:18:23","value":{"kind":"number","nativeSrc":"29617:1:23","nodeType":"YulLiteral","src":"29617:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"29604:9:23","nodeType":"YulTypedName","src":"29604:9:23","type":""}]},{"nativeSrc":"29627:23:23","nodeType":"YulVariableDeclaration","src":"29627:23:23","value":{"kind":"number","nativeSrc":"29646:4:23","nodeType":"YulLiteral","src":"29646:4:23","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"29631:11:23","nodeType":"YulTypedName","src":"29631:11:23","type":""}]},{"nativeSrc":"29659:17:23","nodeType":"YulAssignment","src":"29659:17:23","value":{"kind":"number","nativeSrc":"29672:4:23","nodeType":"YulLiteral","src":"29672:4:23","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"29659:9:23","nodeType":"YulIdentifier","src":"29659:9:23"}]},{"cases":[{"body":{"nativeSrc":"29722:656:23","nodeType":"YulBlock","src":"29722:656:23","statements":[{"nativeSrc":"29736:35:23","nodeType":"YulVariableDeclaration","src":"29736:35:23","value":{"arguments":[{"name":"newLen","nativeSrc":"29755:6:23","nodeType":"YulIdentifier","src":"29755:6:23"},{"arguments":[{"kind":"number","nativeSrc":"29767:2:23","nodeType":"YulLiteral","src":"29767:2:23","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"29763:3:23","nodeType":"YulIdentifier","src":"29763:3:23"},"nativeSrc":"29763:7:23","nodeType":"YulFunctionCall","src":"29763:7:23"}],"functionName":{"name":"and","nativeSrc":"29751:3:23","nodeType":"YulIdentifier","src":"29751:3:23"},"nativeSrc":"29751:20:23","nodeType":"YulFunctionCall","src":"29751:20:23"},"variables":[{"name":"loopEnd","nativeSrc":"29740:7:23","nodeType":"YulTypedName","src":"29740:7:23","type":""}]},{"nativeSrc":"29784:49:23","nodeType":"YulVariableDeclaration","src":"29784:49:23","value":{"arguments":[{"name":"slot","nativeSrc":"29828:4:23","nodeType":"YulIdentifier","src":"29828:4:23"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"29798:29:23","nodeType":"YulIdentifier","src":"29798:29:23"},"nativeSrc":"29798:35:23","nodeType":"YulFunctionCall","src":"29798:35:23"},"variables":[{"name":"dstPtr","nativeSrc":"29788:6:23","nodeType":"YulTypedName","src":"29788:6:23","type":""}]},{"nativeSrc":"29846:10:23","nodeType":"YulVariableDeclaration","src":"29846:10:23","value":{"kind":"number","nativeSrc":"29855:1:23","nodeType":"YulLiteral","src":"29855:1:23","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"29850:1:23","nodeType":"YulTypedName","src":"29850:1:23","type":""}]},{"body":{"nativeSrc":"29933:172:23","nodeType":"YulBlock","src":"29933:172:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"29958:6:23","nodeType":"YulIdentifier","src":"29958:6:23"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"29976:3:23","nodeType":"YulIdentifier","src":"29976:3:23"},{"name":"srcOffset","nativeSrc":"29981:9:23","nodeType":"YulIdentifier","src":"29981:9:23"}],"functionName":{"name":"add","nativeSrc":"29972:3:23","nodeType":"YulIdentifier","src":"29972:3:23"},"nativeSrc":"29972:19:23","nodeType":"YulFunctionCall","src":"29972:19:23"}],"functionName":{"name":"mload","nativeSrc":"29966:5:23","nodeType":"YulIdentifier","src":"29966:5:23"},"nativeSrc":"29966:26:23","nodeType":"YulFunctionCall","src":"29966:26:23"}],"functionName":{"name":"sstore","nativeSrc":"29951:6:23","nodeType":"YulIdentifier","src":"29951:6:23"},"nativeSrc":"29951:42:23","nodeType":"YulFunctionCall","src":"29951:42:23"},"nativeSrc":"29951:42:23","nodeType":"YulExpressionStatement","src":"29951:42:23"},{"nativeSrc":"30010:24:23","nodeType":"YulAssignment","src":"30010:24:23","value":{"arguments":[{"name":"dstPtr","nativeSrc":"30024:6:23","nodeType":"YulIdentifier","src":"30024:6:23"},{"kind":"number","nativeSrc":"30032:1:23","nodeType":"YulLiteral","src":"30032:1:23","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"30020:3:23","nodeType":"YulIdentifier","src":"30020:3:23"},"nativeSrc":"30020:14:23","nodeType":"YulFunctionCall","src":"30020:14:23"},"variableNames":[{"name":"dstPtr","nativeSrc":"30010:6:23","nodeType":"YulIdentifier","src":"30010:6:23"}]},{"nativeSrc":"30051:40:23","nodeType":"YulAssignment","src":"30051:40:23","value":{"arguments":[{"name":"srcOffset","nativeSrc":"30068:9:23","nodeType":"YulIdentifier","src":"30068:9:23"},{"name":"srcOffset_1","nativeSrc":"30079:11:23","nodeType":"YulIdentifier","src":"30079:11:23"}],"functionName":{"name":"add","nativeSrc":"30064:3:23","nodeType":"YulIdentifier","src":"30064:3:23"},"nativeSrc":"30064:27:23","nodeType":"YulFunctionCall","src":"30064:27:23"},"variableNames":[{"name":"srcOffset","nativeSrc":"30051:9:23","nodeType":"YulIdentifier","src":"30051:9:23"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"29880:1:23","nodeType":"YulIdentifier","src":"29880:1:23"},{"name":"loopEnd","nativeSrc":"29883:7:23","nodeType":"YulIdentifier","src":"29883:7:23"}],"functionName":{"name":"lt","nativeSrc":"29877:2:23","nodeType":"YulIdentifier","src":"29877:2:23"},"nativeSrc":"29877:14:23","nodeType":"YulFunctionCall","src":"29877:14:23"},"nativeSrc":"29869:236:23","nodeType":"YulForLoop","post":{"nativeSrc":"29892:28:23","nodeType":"YulBlock","src":"29892:28:23","statements":[{"nativeSrc":"29894:24:23","nodeType":"YulAssignment","src":"29894:24:23","value":{"arguments":[{"name":"i","nativeSrc":"29903:1:23","nodeType":"YulIdentifier","src":"29903:1:23"},{"name":"srcOffset_1","nativeSrc":"29906:11:23","nodeType":"YulIdentifier","src":"29906:11:23"}],"functionName":{"name":"add","nativeSrc":"29899:3:23","nodeType":"YulIdentifier","src":"29899:3:23"},"nativeSrc":"29899:19:23","nodeType":"YulFunctionCall","src":"29899:19:23"},"variableNames":[{"name":"i","nativeSrc":"29894:1:23","nodeType":"YulIdentifier","src":"29894:1:23"}]}]},"pre":{"nativeSrc":"29873:3:23","nodeType":"YulBlock","src":"29873:3:23","statements":[]},"src":"29869:236:23"},{"body":{"nativeSrc":"30153:166:23","nodeType":"YulBlock","src":"30153:166:23","statements":[{"nativeSrc":"30171:43:23","nodeType":"YulVariableDeclaration","src":"30171:43:23","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"30198:3:23","nodeType":"YulIdentifier","src":"30198:3:23"},{"name":"srcOffset","nativeSrc":"30203:9:23","nodeType":"YulIdentifier","src":"30203:9:23"}],"functionName":{"name":"add","nativeSrc":"30194:3:23","nodeType":"YulIdentifier","src":"30194:3:23"},"nativeSrc":"30194:19:23","nodeType":"YulFunctionCall","src":"30194:19:23"}],"functionName":{"name":"mload","nativeSrc":"30188:5:23","nodeType":"YulIdentifier","src":"30188:5:23"},"nativeSrc":"30188:26:23","nodeType":"YulFunctionCall","src":"30188:26:23"},"variables":[{"name":"lastValue","nativeSrc":"30175:9:23","nodeType":"YulTypedName","src":"30175:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"30238:6:23","nodeType":"YulIdentifier","src":"30238:6:23"},{"arguments":[{"name":"lastValue","nativeSrc":"30250:9:23","nodeType":"YulIdentifier","src":"30250:9:23"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"30277:1:23","nodeType":"YulLiteral","src":"30277:1:23","type":"","value":"3"},{"name":"newLen","nativeSrc":"30280:6:23","nodeType":"YulIdentifier","src":"30280:6:23"}],"functionName":{"name":"shl","nativeSrc":"30273:3:23","nodeType":"YulIdentifier","src":"30273:3:23"},"nativeSrc":"30273:14:23","nodeType":"YulFunctionCall","src":"30273:14:23"},{"kind":"number","nativeSrc":"30289:3:23","nodeType":"YulLiteral","src":"30289:3:23","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"30269:3:23","nodeType":"YulIdentifier","src":"30269:3:23"},"nativeSrc":"30269:24:23","nodeType":"YulFunctionCall","src":"30269:24:23"},{"arguments":[{"kind":"number","nativeSrc":"30299:1:23","nodeType":"YulLiteral","src":"30299:1:23","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"30295:3:23","nodeType":"YulIdentifier","src":"30295:3:23"},"nativeSrc":"30295:6:23","nodeType":"YulFunctionCall","src":"30295:6:23"}],"functionName":{"name":"shr","nativeSrc":"30265:3:23","nodeType":"YulIdentifier","src":"30265:3:23"},"nativeSrc":"30265:37:23","nodeType":"YulFunctionCall","src":"30265:37:23"}],"functionName":{"name":"not","nativeSrc":"30261:3:23","nodeType":"YulIdentifier","src":"30261:3:23"},"nativeSrc":"30261:42:23","nodeType":"YulFunctionCall","src":"30261:42:23"}],"functionName":{"name":"and","nativeSrc":"30246:3:23","nodeType":"YulIdentifier","src":"30246:3:23"},"nativeSrc":"30246:58:23","nodeType":"YulFunctionCall","src":"30246:58:23"}],"functionName":{"name":"sstore","nativeSrc":"30231:6:23","nodeType":"YulIdentifier","src":"30231:6:23"},"nativeSrc":"30231:74:23","nodeType":"YulFunctionCall","src":"30231:74:23"},"nativeSrc":"30231:74:23","nodeType":"YulExpressionStatement","src":"30231:74:23"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"30124:7:23","nodeType":"YulIdentifier","src":"30124:7:23"},{"name":"newLen","nativeSrc":"30133:6:23","nodeType":"YulIdentifier","src":"30133:6:23"}],"functionName":{"name":"lt","nativeSrc":"30121:2:23","nodeType":"YulIdentifier","src":"30121:2:23"},"nativeSrc":"30121:19:23","nodeType":"YulFunctionCall","src":"30121:19:23"},"nativeSrc":"30118:201:23","nodeType":"YulIf","src":"30118:201:23"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"30339:4:23","nodeType":"YulIdentifier","src":"30339:4:23"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"30353:1:23","nodeType":"YulLiteral","src":"30353:1:23","type":"","value":"1"},{"name":"newLen","nativeSrc":"30356:6:23","nodeType":"YulIdentifier","src":"30356:6:23"}],"functionName":{"name":"shl","nativeSrc":"30349:3:23","nodeType":"YulIdentifier","src":"30349:3:23"},"nativeSrc":"30349:14:23","nodeType":"YulFunctionCall","src":"30349:14:23"},{"kind":"number","nativeSrc":"30365:1:23","nodeType":"YulLiteral","src":"30365:1:23","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"30345:3:23","nodeType":"YulIdentifier","src":"30345:3:23"},"nativeSrc":"30345:22:23","nodeType":"YulFunctionCall","src":"30345:22:23"}],"functionName":{"name":"sstore","nativeSrc":"30332:6:23","nodeType":"YulIdentifier","src":"30332:6:23"},"nativeSrc":"30332:36:23","nodeType":"YulFunctionCall","src":"30332:36:23"},"nativeSrc":"30332:36:23","nodeType":"YulExpressionStatement","src":"30332:36:23"}]},"nativeSrc":"29715:663:23","nodeType":"YulCase","src":"29715:663:23","value":{"kind":"number","nativeSrc":"29720:1:23","nodeType":"YulLiteral","src":"29720:1:23","type":"","value":"1"}},{"body":{"nativeSrc":"30395:234:23","nodeType":"YulBlock","src":"30395:234:23","statements":[{"nativeSrc":"30409:14:23","nodeType":"YulVariableDeclaration","src":"30409:14:23","value":{"kind":"number","nativeSrc":"30422:1:23","nodeType":"YulLiteral","src":"30422:1:23","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"30413:5:23","nodeType":"YulTypedName","src":"30413:5:23","type":""}]},{"body":{"nativeSrc":"30458:67:23","nodeType":"YulBlock","src":"30458:67:23","statements":[{"nativeSrc":"30476:35:23","nodeType":"YulAssignment","src":"30476:35:23","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"30495:3:23","nodeType":"YulIdentifier","src":"30495:3:23"},{"name":"srcOffset","nativeSrc":"30500:9:23","nodeType":"YulIdentifier","src":"30500:9:23"}],"functionName":{"name":"add","nativeSrc":"30491:3:23","nodeType":"YulIdentifier","src":"30491:3:23"},"nativeSrc":"30491:19:23","nodeType":"YulFunctionCall","src":"30491:19:23"}],"functionName":{"name":"mload","nativeSrc":"30485:5:23","nodeType":"YulIdentifier","src":"30485:5:23"},"nativeSrc":"30485:26:23","nodeType":"YulFunctionCall","src":"30485:26:23"},"variableNames":[{"name":"value","nativeSrc":"30476:5:23","nodeType":"YulIdentifier","src":"30476:5:23"}]}]},"condition":{"name":"newLen","nativeSrc":"30439:6:23","nodeType":"YulIdentifier","src":"30439:6:23"},"nativeSrc":"30436:89:23","nodeType":"YulIf","src":"30436:89:23"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"30545:4:23","nodeType":"YulIdentifier","src":"30545:4:23"},{"arguments":[{"name":"value","nativeSrc":"30604:5:23","nodeType":"YulIdentifier","src":"30604:5:23"},{"name":"newLen","nativeSrc":"30611:6:23","nodeType":"YulIdentifier","src":"30611:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"30551:52:23","nodeType":"YulIdentifier","src":"30551:52:23"},"nativeSrc":"30551:67:23","nodeType":"YulFunctionCall","src":"30551:67:23"}],"functionName":{"name":"sstore","nativeSrc":"30538:6:23","nodeType":"YulIdentifier","src":"30538:6:23"},"nativeSrc":"30538:81:23","nodeType":"YulFunctionCall","src":"30538:81:23"},"nativeSrc":"30538:81:23","nodeType":"YulExpressionStatement","src":"30538:81:23"}]},"nativeSrc":"30387:242:23","nodeType":"YulCase","src":"30387:242:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"29695:6:23","nodeType":"YulIdentifier","src":"29695:6:23"},{"kind":"number","nativeSrc":"29703:2:23","nodeType":"YulLiteral","src":"29703:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"29692:2:23","nodeType":"YulIdentifier","src":"29692:2:23"},"nativeSrc":"29692:14:23","nodeType":"YulFunctionCall","src":"29692:14:23"},"nativeSrc":"29685:944:23","nodeType":"YulSwitch","src":"29685:944:23"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"29290:1345:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"29371:4:23","nodeType":"YulTypedName","src":"29371:4:23","type":""},{"name":"src","nativeSrc":"29377:3:23","nodeType":"YulTypedName","src":"29377:3:23","type":""}],"src":"29290:1345:23"},{"body":{"nativeSrc":"30777:164:23","nodeType":"YulBlock","src":"30777:164:23","statements":[{"nativeSrc":"30787:27:23","nodeType":"YulVariableDeclaration","src":"30787:27:23","value":{"arguments":[{"name":"value0","nativeSrc":"30807:6:23","nodeType":"YulIdentifier","src":"30807:6:23"}],"functionName":{"name":"mload","nativeSrc":"30801:5:23","nodeType":"YulIdentifier","src":"30801:5:23"},"nativeSrc":"30801:13:23","nodeType":"YulFunctionCall","src":"30801:13:23"},"variables":[{"name":"length","nativeSrc":"30791:6:23","nodeType":"YulTypedName","src":"30791:6:23","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"30829:3:23","nodeType":"YulIdentifier","src":"30829:3:23"},{"arguments":[{"name":"value0","nativeSrc":"30838:6:23","nodeType":"YulIdentifier","src":"30838:6:23"},{"kind":"number","nativeSrc":"30846:4:23","nodeType":"YulLiteral","src":"30846:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"30834:3:23","nodeType":"YulIdentifier","src":"30834:3:23"},"nativeSrc":"30834:17:23","nodeType":"YulFunctionCall","src":"30834:17:23"},{"name":"length","nativeSrc":"30853:6:23","nodeType":"YulIdentifier","src":"30853:6:23"}],"functionName":{"name":"mcopy","nativeSrc":"30823:5:23","nodeType":"YulIdentifier","src":"30823:5:23"},"nativeSrc":"30823:37:23","nodeType":"YulFunctionCall","src":"30823:37:23"},"nativeSrc":"30823:37:23","nodeType":"YulExpressionStatement","src":"30823:37:23"},{"nativeSrc":"30869:26:23","nodeType":"YulVariableDeclaration","src":"30869:26:23","value":{"arguments":[{"name":"pos","nativeSrc":"30883:3:23","nodeType":"YulIdentifier","src":"30883:3:23"},{"name":"length","nativeSrc":"30888:6:23","nodeType":"YulIdentifier","src":"30888:6:23"}],"functionName":{"name":"add","nativeSrc":"30879:3:23","nodeType":"YulIdentifier","src":"30879:3:23"},"nativeSrc":"30879:16:23","nodeType":"YulFunctionCall","src":"30879:16:23"},"variables":[{"name":"_1","nativeSrc":"30873:2:23","nodeType":"YulTypedName","src":"30873:2:23","type":""}]},{"expression":{"arguments":[{"name":"_1","nativeSrc":"30911:2:23","nodeType":"YulIdentifier","src":"30911:2:23"},{"kind":"number","nativeSrc":"30915:1:23","nodeType":"YulLiteral","src":"30915:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"30904:6:23","nodeType":"YulIdentifier","src":"30904:6:23"},"nativeSrc":"30904:13:23","nodeType":"YulFunctionCall","src":"30904:13:23"},"nativeSrc":"30904:13:23","nodeType":"YulExpressionStatement","src":"30904:13:23"},{"nativeSrc":"30926:9:23","nodeType":"YulAssignment","src":"30926:9:23","value":{"name":"_1","nativeSrc":"30933:2:23","nodeType":"YulIdentifier","src":"30933:2:23"},"variableNames":[{"name":"end","nativeSrc":"30926:3:23","nodeType":"YulIdentifier","src":"30926:3:23"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"30640:301:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"30753:3:23","nodeType":"YulTypedName","src":"30753:3:23","type":""},{"name":"value0","nativeSrc":"30758:6:23","nodeType":"YulTypedName","src":"30758:6:23","type":""}],"returnVariables":[{"name":"end","nativeSrc":"30769:3:23","nodeType":"YulTypedName","src":"30769:3:23","type":""}],"src":"30640:301:23"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_uint256_dyn(value1, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), not(31)), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), 0)\n        value1 := array\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_address_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_address(value_2)\n        value3 := value_2\n    }\n    function abi_encode_tuple_t_contract$_IBaluniV1Registry_$6110__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let _1 := 0x20\n        let srcPtr := add(value0, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, iszero(iszero(mload(srcPtr))))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, 0x20), sub(pos, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, pos)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Only Periphery\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Rebalance not needed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_encode_tuple_t_stringliteral_0ced64e7a7e72856969cefe00640aa7f13f8db705f9748f7d3003a20bc61daa4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Initialization failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_391a75680d8ec99739af126cde56833526e4b720a416f24f1d7ee98c294a45b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Invalid base asset address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid weights\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid oracle address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Cannot swap the same token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Insufficient Liquidity\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_293eab1376cea4527a492c75c5b4d240032b8920c86961428e65758e4fd3daec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Amount to send must be greater t\")\n        mstore(add(headStart, 96), \"han 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Share must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"No liquidity\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_fc2f8692ca59eb8838d740ab96a08e7dab54c967cc56eb0a9b640ce78eb1103e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Insufficient BALUNI liquidity\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Fee transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid asset index\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid reserves length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"No assets\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Total value must be greater than\")\n        mstore(add(headStart, 96), \" 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Total liquidity must be greater \")\n        mstore(add(headStart, 96), \"than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Mint qty is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function abi_encode_tuple_t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid token amount to add\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9500bef01f061c69a5831abd395429bc0d4bf975a9340af0622098e5d0422cc6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Overflow incrementing slippage\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7fe042c7e90969a67f580740cd6d07f084ba832097aca9eaaa282ad95462461f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Underflow decrementing slippage\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b3262886d4e83856703b764357b6a852eb26ef34a7982063b49217460e097ddc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Invalid rebalancer address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Assets and weights length mismat\")\n        mstore(add(headStart, 96), \"ch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid asset address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid weight\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_address_t_address_t_address__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 224)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 224))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_address_dyn(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_array_uint256_dyn(value2, tail_2)\n        mstore(add(headStart, 96), value3)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), and(value5, _1))\n        mstore(add(headStart, 192), and(value6, _1))\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"468":[{"length":32,"start":13528},{"length":32,"start":13569},{"length":32,"start":13888}]},"linkReferences":{},"object":"608060405260043610610254575f3560e01c80637b1039991161013f578063b2b55d70116100b3578063d66bd52411610078578063d66bd52414610703578063dd62ed3e1461072e578063de836ebd1461074d578063e73faa2d1461076c578063f2fde38b14610780578063f47b45e81461079f575f80fd5b8063b2b55d701461064d578063c2ee3a081461066c578063cdf456e114610681578063cf8fa764146106a0578063d14ef46d146106bf575f80fd5b80638a77c8dc116101045780638a77c8dc1461057b5780638da5cb5b1461058f57806395d89b41146105cb578063a1f241cc146105df578063a9059cbb146105fe578063ad3cb1cc1461061d575f80fd5b80637b103999146104cf5780637fec8d381461050657806389ab35321461051b57806389afcb441461053d57806389b3179b1461055c575f80fd5b806323b872dd116101d65780634f1ef2861161019b5780634f1ef2861461043557806352d1902d1461044857806367e4ac2c1461045c5780636e81221c1461047d57806370a082311461049c578063715018a6146104bb575f80fd5b806323b872dd1461039b578063250aa683146103ba578063313ce567146103d957806336bf6e39146103f45780634aa0665214610416575f80fd5b806318160ddd1161021c57806318160ddd1461031e57806318904ea41461033e5780631a68650214610352578063228835ac1461036657806322acb86714610387575f80fd5b806306fdde03146102585780630723c999146102825780630902f1ac146102ae578063095ea7b3146102c257806312899068146102f1575b5f80fd5b348015610263575f80fd5b5061026c6107c1565b6040516102799190614307565b60405180910390f35b34801561028d575f80fd5b506102a161029c366004614360565b610881565b60405161027991906143b5565b3480156102b9575f80fd5b506102a1610acc565b3480156102cd575f80fd5b506102e16102dc3660046143c7565b610bb4565b6040519015158152602001610279565b3480156102fc575f80fd5b5061031061030b366004614360565b610bcd565b604051908152602001610279565b348015610329575f80fd5b505f80516020614c9a83398151915254610310565b348015610349575f80fd5b506102a1610c4d565b34801561035d575f80fd5b50610310610ce9565b348015610371575f80fd5b506103856103803660046144c3565b610cfa565b005b348015610392575f80fd5b506102a1611034565b3480156103a6575f80fd5b506102e16103b5366004614597565b6110d0565b3480156103c5575f80fd5b506103106103d4366004614360565b6110f5565b3480156103e4575f80fd5b5060405160128152602001610279565b3480156103ff575f80fd5b5061040861116d565b6040516102799291906145d5565b348015610421575f80fd5b50610310610430366004614597565b611181565b6103856104433660046145ed565b61134a565b348015610453575f80fd5b50610310611369565b348015610467575f80fd5b50610470611384565b60405161027991906146c6565b348015610488575f80fd5b506103106104973660046146d8565b61143b565b3480156104a7575f80fd5b506103106104b6366004614360565b611739565b3480156104c6575f80fd5b5061038561175f565b3480156104da575f80fd5b506005546104ee906001600160a01b031681565b6040516001600160a01b039091168152602001610279565b348015610511575f80fd5b5061031060015481565b348015610526575f80fd5b5061052f611772565b604051610279929190614728565b348015610548575f80fd5b506102a1610557366004614360565b611929565b348015610567575f80fd5b50610310610576366004614360565b611e95565b348015610586575f80fd5b506102e1611f1b565b34801561059a575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166104ee565b3480156105d6575f80fd5b5061026c611f95565b3480156105ea575f80fd5b506103106105f9366004614597565b611fd3565b348015610609575f80fd5b506102e16106183660046143c7565b6120b1565b348015610628575f80fd5b5061026c604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610658575f80fd5b50610310610667366004614360565b6120be565b348015610677575f80fd5b5061031060025481565b34801561068c575f80fd5b506003546104ee906001600160a01b031681565b3480156106ab575f80fd5b506103106106ba366004614777565b6121a6565b3480156106ca575f80fd5b506106de6106d9366004614777565b61221b565b604080516001600160a01b039094168452602084019290925290820152606001610279565b34801561070e575f80fd5b5061031061071d366004614360565b60066020525f908152604090205481565b348015610739575f80fd5b5061031061074836600461478e565b612255565b348015610758575f80fd5b506103106107673660046147c5565b61229e565b348015610777575f80fd5b5061031061263d565b34801561078b575f80fd5b5061038561079a366004614360565b612731565b3480156107aa575f80fd5b506107b361276e565b604051610279929190614811565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060915f80516020614c7a833981519152916107ff90614835565b80601f016020809104026020016040519081016040528092919081815260200182805461082b90614835565b80156108765780601f1061084d57610100808354040283529160200191610876565b820191905f5260205f20905b81548152906001019060200180831161085957829003601f168201915b505050505091505090565b60605f60055f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108f89190614867565b9050336001600160a01b0382161461092b5760405162461bcd60e51b815260040161092290614882565b60405180910390fd5b610933611f1b565b6109765760405162461bcd60e51b8152602060048201526014602482015273149958985b185b98d9481b9bdd081b995959195960621b6044820152606401610922565b5f8061098061286c565b915091505f61098f8383612998565b90505f61099b82612a96565b9050600454816109ab91906148be565b5f8054919250906001600160401b038111156109c9576109c96143f1565b6040519080825280602002602001820160405280156109f2578160200160208202803683370190505b5090505f5b8351811015610a6b575f848281518110610a1357610a136148d5565b60200260200101511115610a6357610a4481858381518110610a3757610a376148d5565b6020026020010151612ad1565b828281518110610a5657610a566148d5565b6020026020010181815250505b6001016109f7565b50610a768883612ba0565b610a7e612bd4565b336001600160a01b03167fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e84604051610ab791906143b5565b60405180910390a29550505050505b50919050565b60605f60055f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b1f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b439190614867565b604051630fa6707960e21b81523060048201529091506001600160a01b03821690633e99c1e4906024015f60405180830381865afa158015610b87573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610bae91908101906148e9565b91505090565b5f33610bc1818585612f94565b60019150505b92915050565b5f805b5f54811015610c4557826001600160a01b03165f8281548110610bf557610bf56148d5565b5f9182526020909120600390910201546001600160a01b031603610c3d575f8181548110610c2557610c256148d5565b905f5260205f20906003020160020154915050919050565b600101610bd0565b505f92915050565b5f8054606091906001600160401b03811115610c6b57610c6b6143f1565b604051908082528060200260200182016040528015610c94578160200160208202803683370190505b5090505f5b5f54811015610ac6575f8181548110610cb457610cb46148d5565b905f5260205f20906003020160020154828281518110610cd657610cd66148d5565b6020908102919091010152600101610c99565b5f80610cf361286c565b5092915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f81158015610d3e5750825b90505f826001600160401b03166001148015610d595750303b155b905081158015610d67575080155b15610d855760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610daf57845460ff60401b1916600160401b1785555b610db833612fa6565b610e0460405180604001604052806009815260200168042616c756e69204c560bc1b81525060405180604001604052806009815260200168042414c554e492d4c560bc1b815250612fb7565b600580546001600160a01b0319166001600160a01b038816179055670de0b6b3a76400006002555f610e368a8a612fc9565b905080610e7d5760405162461bcd60e51b8152602060048201526015602482015274125b9a5d1a585b1a5e985d1a5bdb8819985a5b1959605a1b6044820152606401610922565b600188905560055460408051631bf01e9b60e01b815290516001600160a01b0390921691631bf01e9b916004808201926020929091908290030181865afa158015610eca573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eee9190614867565b600380546001600160a01b0319166001600160a01b0392909216918217905564e8d4a51000600455610f625760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964206261736520617373657420616464726573730000000000006044820152606401610922565b5f805b8a51811015610f9d578a8181518110610f8057610f806148d5565b602002602001015182610f939190614974565b9150600101610f65565b508061271014610fe15760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207765696768747360881b6044820152606401610922565b5050831561102957845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b5f8054606091906001600160401b03811115611052576110526143f1565b60405190808252806020026020018201604052801561107b578160200160208202803683370190505b5090505f5b5f54811015610ac6575f818154811061109b5761109b6148d5565b905f5260205f209060030201600101548282815181106110bd576110bd6148d5565b6020908102919091010152600101611080565b5f336110dd85828561340d565b6110e8858585613470565b60019150505b9392505050565b5f805b5f54811015610c4557826001600160a01b03165f828154811061111d5761111d6148d5565b5f9182526020909120600390910201546001600160a01b031603611165575f818154811061114d5761114d6148d5565b905f5260205f20906003020160010154915050919050565b6001016110f8565b5f606061117861286c565b90939092509050565b5f8060055f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111d3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111f79190614867565b90505f6001600160a01b031660055f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611253573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112779190614867565b6001600160a01b0316036112c65760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206f7261636c65206164647265737360501b6044820152606401610922565b60405163248391ff60e01b81526001600160a01b0386811660048301528581166024830152604482018590525f919083169063248391ff90606401602060405180830381865afa15801561131c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113409190614987565b9695505050505050565b6113526134cd565b61135b82613571565b6113658282613579565b5050565b5f611372613635565b505f80516020614cba83398151915290565b5f8054606091906001600160401b038111156113a2576113a26143f1565b6040519080825280602002602001820160405280156113cb578160200160208202803683370190505b5090505f5b5f54811015610ac6575f81815481106113eb576113eb6148d5565b5f91825260209091206003909102015482516001600160a01b039091169083908390811061141b5761141b6148d5565b6001600160a01b03909216602092830291909101909101526001016113d0565b5f61144461367e565b600554604080516385462d6f60e01b815290515f926001600160a01b0316916385462d6f9160048083019260209291908290030181865afa15801561148b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114af9190614987565b9050846001600160a01b0316866001600160a01b0316036115125760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152606401610922565b5f84116115615760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610922565b6001600160a01b0386165f9081526006602052604081208054869290611588908490614974565b909155505f905061159a878787611fd3565b9050806115a6876120be565b10156115ed5760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74204c697175696469747960501b6044820152606401610922565b6001600160a01b0386165f9081526006602052604081208054839290611614908490614974565b909155505f905061271061162884846148be565b611632919061499e565b905061163e81836149bd565b93505f841161169d5760405162461bcd60e51b815260206004820152602560248201527f416d6f756e7420746f2073656e64206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610922565b6116a5612bd4565b866001600160a01b0316886001600160a01b0316866001600160a01b03167fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e4606289886040516116fd929190918252602082015260400190565b60405180910390a450505061173160017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b949350505050565b6001600160a01b03165f9081525f80516020614c7a833981519152602052604090205490565b6117676136c8565b6117705f613723565b565b6060805f8061177f61286c565b5f549193509150806001600160401b0381111561179e5761179e6143f1565b6040519080825280602002602001820160405280156117c7578160200160208202803683370190505b509450806001600160401b038111156117e2576117e26143f1565b60405190808252806020026020018201604052801561180b578160200160208202803683370190505b5093505f5b81811015611921575f8484838151811061182c5761182c6148d5565b602002602001015161271061184191906148be565b61184b919061499e565b90505f808381548110611860576118606148d5565b905f5260205f209060030201600101549050808211156118cb5761188481836149bd565b878481518110611896576118966148d5565b60200260200101818152505060018884815181106118b6576118b66148d5565b91151560209283029190910190910152611917565b6118d582826149bd565b8784815181106118e7576118e76148d5565b6020026020010181815250505f888481518110611906576119066148d5565b911515602092830291909101909101525b5050600101611810565b505050509091565b60605f60055f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa15801561197c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119a09190614867565b9050336001600160a01b038216146119ca5760405162461bcd60e51b815260040161092290614882565b600554604080516385462d6f60e01b815290515f926001600160a01b0316916385462d6f9160048083019260209291908290030181865afa158015611a11573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a359190614987565b90505f60055f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a88573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611aac9190614867565b90505f611ab830611739565b90505f8111611b095760405162461bcd60e51b815260206004820152601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152606401610922565b5f611b1f5f80516020614c9a8339815191525490565b90505f8111611b5f5760405162461bcd60e51b815260206004820152600c60248201526b4e6f206c697175696469747960a01b6044820152606401610922565b5f80546001600160401b03811115611b7957611b796143f1565b604051908082528060200260200182016040528015611ba2578160200160208202803683370190505b5090505f612710611bb387866148be565b611bbd919061499e565b90505f611bca82866149bd565b90505f5b5f54811015611cb4575f876001600160a01b031663a3e113fb305f8581548110611bfa57611bfa6148d5565b5f91825260209091206003909102015460405160e084901b6001600160e01b03191681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015611c53573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c779190614987565b905085611c8484836148be565b611c8e919061499e565b858381518110611ca057611ca06148d5565b602090810291909101015250600101611bce565b5080611cbf30611739565b1015611d0d5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e742042414c554e49206c69717569646974790000006044820152606401610922565b60055460408051631d8cf42560e11b815290515f926001600160a01b031691633b19e84a9160048083019260209291908290030181865afa158015611d54573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d789190614867565b60405163a9059cbb60e01b81526001600160a01b0382166004820152602481018590529091505f90309063a9059cbb906044016020604051808303815f875af1158015611dc7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611deb91906149d0565b905080611e305760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606401610922565b611e3a3084613793565b611e42612bd4565b8b6001600160a01b03167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca584604051611e7d91815260200190565b60405180910390a250929a9950505050505050505050565b5f80611e9f611772565b9150505f5b5f54811015611f1257836001600160a01b03165f8281548110611ec957611ec96148d5565b5f9182526020909120600390910201546001600160a01b031603611f0a57818181518110611ef957611ef96148d5565b602002602001015192505050919050565b600101611ea4565b505f9392505050565b5f805f611f26611772565b915091505f5b8151811015611f8c57828181518110611f4757611f476148d5565b60200260200101518015611f755750600154828281518110611f6b57611f6b6148d5565b6020026020010151115b15611f84576001935050505090565b600101611f2c565b505f9250505090565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f80516020614c7a833981519152916107ff90614835565b5f80611fe0858585611181565b90505f611fec86610bcd565b90505f611ff886610bcd565b90505f612004886110f5565b90505f612010886110f5565b90505f61271061202086886148be565b61202a919061499e565b90505f61271061203a86896148be565b612044919061499e565b905061204f8b611e95565b8411156120675761206082886149bd565b9650612074565b6120718288614974565b96505b61207d8a611e95565b8310156120955761208e8188614974565b96506120a2565b61209f81886149bd565b96505b50949998505050505050505050565b5f33610bc1818585613470565b5f8060055f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015612110573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121349190614867565b60405163a3e113fb60e01b81523060048201526001600160a01b0385811660248301529192509082169063a3e113fb90604401602060405180830381865afa158015612182573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110ee9190614987565b5f806121b061286c565b915050805183106121f95760405162461bcd60e51b8152602060048201526013602482015272092dcecc2d8d2c840c2e6e6cae840d2dcc8caf606b1b6044820152606401610922565b80838151811061220b5761220b6148d5565b6020026020010151915050919050565b5f8181548110612229575f80fd5b5f9182526020909120600390910201805460018201546002909201546001600160a01b03909116925083565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b5f8060055f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122f0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123149190614867565b9050336001600160a01b0382161461233e5760405162461bcd60e51b815260040161092290614882565b5f6123545f80516020614c9a8339815191525490565b90505f80612360610acc565b80515f54919250146123b45760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152606401610922565b5f546123ee5760405162461bcd60e51b81526020600482015260096024820152684e6f2061737365747360b81b6044820152606401610922565b5f5b5f54811015612489575f80828154811061240c5761240c6148d5565b5f918252602082206003918202015490546001600160a01b03918216935016820361244d57888381518110612443576124436148d5565b5061248192505050565b612470828a8581518110612463576124636148d5565b60200260200101516137c7565b905061247c8186614974565b945050505b6001016123f0565b505f82116124e45760405162461bcd60e51b815260206004820152602260248201527f546f74616c2076616c7565206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608401610922565b5f835f03612500576004546124f990846148be565b905061259e565b5f61250961286c565b5090505f811161256a5760405162461bcd60e51b815260206004820152602660248201527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608401610922565b60045461257790826148be565b856004548661258691906148be565b61259091906148be565b61259a919061499e565b9150505b805f036125dd5760405162461bcd60e51b815260206004820152600d60248201526c04d696e7420717479206973203609c1b6044820152606401610922565b6125e78882612ba0565b6125ef612bd4565b876001600160a01b03167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968858260405161262a91815260200190565b60405180910390a2979650505050505050565b5f8060035f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561268f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906126b391906149ef565b60ff1690505f6126c48260126149bd565b6126cf90600a614aef565b90505f6126da61286c565b5090505f6126f35f80516020614c9a8339815191525490565b9050805f03612706575f94505050505090565b6002548161271485856148be565b61271e919061499e565b61272891906148be565b94505050505090565b6127396136c8565b6001600160a01b03811661276257604051631e4fbdf760e01b81525f6004820152602401610922565b61276b81613723565b50565b6060805f60055f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127c2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906127e69190614867565b9050336001600160a01b038216146128105760405162461bcd60e51b815260040161092290614882565b612818611f1b565b61285b5760405162461bcd60e51b8152602060048201526014602482015273149958985b185b98d9481b9bdd081b995959195960621b6044820152606401610922565b6128636137e1565b92509250509091565b5f8054606090806001600160401b0381111561288a5761288a6143f1565b6040519080825280602002602001820160405280156128b3578160200160208202803683370190505b5091505f5b81811015612992575f8082815481106128d3576128d36148d5565b5f91825260208220600390910201546001600160a01b031691506128f6826120be565b6003549091506001600160a01b03908116908316036129335780858481518110612922576129226148d5565b602002602001018181525050612961565b5f61293e83836137c7565b905080868581518110612953576129536148d5565b602002602001018181525050505b848381518110612973576129736148d5565b6020026020010151866129869190614974565b955050506001016128b8565b50509091565b5f546060906001600160401b038111156129b4576129b46143f1565b6040519080825280602002602001820160405280156129dd578160200160208202803683370190505b5090505f5b5f54811015610cf3575f6127105f8381548110612a0157612a016148d5565b905f5260205f2090600302016001015486612a1c91906148be565b612a26919061499e565b905080848381518110612a3b57612a3b6148d5565b60200260200101511015612a8d57838281518110612a5b57612a5b6148d5565b602002602001015181612a6e91906149bd565b838381518110612a8057612a806148d5565b6020026020010181815250505b506001016129e2565b5f805b5f54811015610ac657828181518110612ab457612ab46148d5565b602002602001015182612ac79190614974565b9150600101612a99565b6003545f805490916001600160a01b031690829085908110612af557612af56148d5565b5f9182526020909120600390910201546001600160a01b031603612b1a575080610bc7565b5f612b4f5f8581548110612b3057612b306148d5565b5f9182526020909120600390910201546001600160a01b031684613e62565b90505f81116110ee5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152606401610922565b6001600160a01b038216612bc95760405163ec442f0560e01b81525f6004820152602401610922565b6113655f8383613e7b565b5f80612bde611772565b915091505f60055f9054906101000a90046001600160a01b03166001600160a01b03166385462d6f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612c33573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612c579190614987565b9050606461012c5f5b5f54811015612f8c575f808281548110612c7c57612c7c6148d5565b905f5260205f20906003020160020154905083868381518110612ca157612ca16148d5565b602002602001015111612cda57835f8381548110612cc157612cc16148d5565b905f5260205f2090600302016002018190555050612f84565b868281518110612cec57612cec6148d5565b602002602001015115612dca5783868381518110612d0c57612d0c6148d5565b6020026020010151612d1e919061499e565b5f8381548110612d3057612d306148d5565b905f5260205f2090600302016002015f828254612d4d9190614974565b92505081905550805f8381548110612d6757612d676148d5565b905f5260205f209060030201600201541015612dc55760405162461bcd60e51b815260206004820152601e60248201527f4f766572666c6f7720696e6372656d656e74696e6720736c69707061676500006044820152606401610922565b612f32565b858281518110612ddc57612ddc6148d5565b60200260200101515f8381548110612df657612df66148d5565b905f5260205f209060030201600201541115612ed85783868381518110612e1f57612e1f6148d5565b6020026020010151612e31919061499e565b5f8381548110612e4357612e436148d5565b905f5260205f2090600302016002015f828254612e6091906149bd565b92505081905550805f8381548110612e7a57612e7a6148d5565b905f5260205f209060030201600201541115612dc55760405162461bcd60e51b815260206004820152601f60248201527f556e646572666c6f772064656372656d656e74696e6720736c697070616765006044820152606401610922565b83868381518110612eeb57612eeb6148d5565b6020026020010151612efd919061499e565b5f8381548110612f0f57612f0f6148d5565b905f5260205f2090600302016002015f828254612f2c9190614974565b90915550505b825f8381548110612f4557612f456148d5565b905f5260205f209060030201600201541115612f8257825f8381548110612f6e57612f6e6148d5565b905f5260205f209060030201600201819055505b505b600101612c60565b505050505050565b612fa18383836001613fb4565b505050565b612fae614098565b61276b816140e1565b612fbf614098565b61136582826140e9565b5f8060055f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa15801561301b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061303f9190614867565b90505f6001600160a01b031660055f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa15801561309b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906130bf9190614867565b6001600160a01b0316036131155760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420726562616c616e63657220616464726573730000000000006044820152606401610922565b82518451146131715760405162461bcd60e51b815260206004820152602260248201527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608401610922565b5f5b8451811015613402575f6001600160a01b0316858281518110613198576131986148d5565b60200260200101516001600160a01b0316036131ee5760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206173736574206164647265737360581b6044820152606401610922565b5f848281518110613201576132016148d5565b6020026020010151116132475760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b6044820152606401610922565b5f6040518060600160405280878481518110613265576132656148d5565b60200260200101516001600160a01b0316815260200186848151811061328d5761328d6148d5565b60209081029190910181015182525f918101829052835460018082018655948352818320845160039092020180546001600160a01b0319166001600160a01b0390921691909117815590830151938101939093556040909101516002909201919091558551869083908110613304576133046148d5565b6020908102919091010151604051636eb1769f60e11b81523060048201526001600160a01b0385811660248301529192509082169063dd62ed3e90604401602060405180830381865afa15801561335d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906133819190614987565b5f036133f95760405163095ea7b360e01b81526001600160a01b0384811660048301525f19602483015282169063095ea7b3906044016020604051808303815f875af11580156133d3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906133f791906149d0565b505b50600101613173565b506001949350505050565b5f6134188484612255565b90505f19811461346a578181101561345c57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610922565b61346a84848484035f613fb4565b50505050565b6001600160a01b03831661349957604051634b637e8f60e11b81525f6004820152602401610922565b6001600160a01b0382166134c25760405163ec442f0560e01b81525f6004820152602401610922565b612fa1838383613e7b565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061355357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166135475f80516020614cba833981519152546001600160a01b031690565b6001600160a01b031614155b156117705760405163703e46dd60e11b815260040160405180910390fd5b61276b6136c8565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156135d3575060408051601f3d908101601f191682019092526135d091810190614987565b60015b6135fb57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610922565b5f80516020614cba833981519152811461362b57604051632a87526960e21b815260048101829052602401610922565b612fa18383614139565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146117705760405163703e46dd60e11b815260040160405180910390fd5b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f008054600119016136c257604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b336136fa7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146117705760405163118cdaa760e01b8152336004820152602401610922565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6001600160a01b0382166137bc57604051634b637e8f60e11b81525f6004820152602401610922565b611365825f83613e7b565b6003545f906110ee9084906001600160a01b031684611181565b6060805f60055f9054906101000a90046001600160a01b03166001600160a01b0316631acb61416040518163ffffffff1660e01b8152600401602060405180830381865afa158015613835573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906138599190614867565b90505f60055f9054906101000a90046001600160a01b03166001600160a01b031663cff49d686040518163ffffffff1660e01b8152600401602060405180830381865afa1580156138ac573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906138d09190614867565b5f8054919250906001600160401b038111156138ee576138ee6143f1565b604051908082528060200260200182016040528015613917578160200160208202803683370190505b505f8054919250906001600160401b03811115613936576139366143f1565b60405190808252806020026020018201604052801561395f578160200160208202803683370190505b505f8054919250906001600160401b0381111561397e5761397e6143f1565b6040519080825280602002602001820160405280156139a7578160200160208202803683370190505b505f8054919250906001600160401b038111156139c6576139c66143f1565b6040519080825280602002602001820160405280156139ef578160200160208202803683370190505b505f8054919250906001600160401b03811115613a0e57613a0e6143f1565b604051908082528060200260200182016040528015613a37578160200160208202803683370190505b505f8054919250906001600160401b03811115613a5657613a566143f1565b604051908082528060200260200182016040528015613a7f578160200160208202803683370190505b5090505f5b5f54811015613bda575f8181548110613a9f57613a9f6148d5565b5f91825260209091206003909102015487516001600160a01b0390911690889083908110613acf57613acf6148d5565b60200260200101906001600160a01b031690816001600160a01b0316815250505f8181548110613b0157613b016148d5565b905f5260205f20906003020160010154868281518110613b2357613b236148d5565b602002602001018181525050868181518110613b4157613b416148d5565b60209081029190910101516040516370a0823160e01b81526001600160a01b038b81166004830152909116906370a0823190602401602060405180830381865afa158015613b91573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613bb59190614987565b858281518110613bc757613bc76148d5565b6020908102919091010152600101613a84565b505f613be4610acc565b9050876001600160a01b031663f0bf77148289896001548e8f60035f9054906101000a90046001600160a01b03166040518863ffffffff1660e01b8152600401613c349796959493929190614afa565b5f604051808303815f87803b158015613c4b575f80fd5b505af1158015613c5d573d5f803e3d5ffd5b505050505f5b5f54811015613e1057878181518110613c7e57613c7e6148d5565b60209081029190910101516040516370a0823160e01b81526001600160a01b038c81166004830152909116906370a0823190602401602060405180830381865afa158015613cce573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613cf29190614987565b858281518110613d0457613d046148d5565b602002602001018181525050858181518110613d2257613d226148d5565b6020026020010151858281518110613d3c57613d3c6148d5565b60200260200101511115613dab57858181518110613d5c57613d5c6148d5565b6020026020010151858281518110613d7657613d766148d5565b6020026020010151613d8891906149bd565b848281518110613d9a57613d9a6148d5565b602002602001018181525050613e08565b848181518110613dbd57613dbd6148d5565b6020026020010151868281518110613dd757613dd76148d5565b6020026020010151613de991906149bd565b838281518110613dfb57613dfb6148d5565b6020026020010181815250505b600101613c63565b50336001600160a01b03167f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b888604051613e4a91906146c6565b60405180910390a25090999098509650505050505050565b6003545f906110ee906001600160a01b03168484611181565b5f80516020614c7a8339815191526001600160a01b038416613eb55781816002015f828254613eaa9190614974565b90915550613f259050565b6001600160a01b0384165f9081526020829052604090205482811015613f075760405163391434e360e21b81526001600160a01b03861660048201526024810182905260448101849052606401610922565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b038316613f43576002810180548390039055613f61565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051613fa691815260200190565b60405180910390a350505050565b5f80516020614c7a8339815191526001600160a01b038516613feb5760405163e602df0560e01b81525f6004820152602401610922565b6001600160a01b03841661401457604051634a1406b160e11b81525f6004820152602401610922565b6001600160a01b038086165f9081526001830160209081526040808320938816835292905220839055811561409157836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161408891815260200190565b60405180910390a35b5050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661177057604051631afcd79f60e31b815260040160405180910390fd5b612739614098565b6140f1614098565b5f80516020614c7a8339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0361412a8482614ba8565b506004810161346a8382614ba8565b6141428261418e565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561418657612fa182826141f1565b611365614263565b806001600160a01b03163b5f036141c357604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610922565b5f80516020614cba83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b03168460405161420d9190614c63565b5f60405180830381855af49150503d805f8114614245576040519150601f19603f3d011682016040523d82523d5f602084013e61424a565b606091505b509150915061425a858383614282565b95945050505050565b34156117705760405163b398979f60e01b815260040160405180910390fd5b60608261429757614292826142de565b6110ee565b81511580156142ae57506001600160a01b0384163b155b156142d757604051639996b31560e01b81526001600160a01b0385166004820152602401610922565b50806110ee565b8051156142ee5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461276b575f80fd5b803561435b8161433c565b919050565b5f60208284031215614370575f80fd5b81356110ee8161433c565b5f815180845260208085019450602084015f5b838110156143aa5781518752958201959082019060010161438e565b509495945050505050565b602081525f6110ee602083018461437b565b5f80604083850312156143d8575f80fd5b82356143e38161433c565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b038111828210171561442d5761442d6143f1565b604052919050565b5f6001600160401b0382111561444d5761444d6143f1565b5060051b60200190565b5f82601f830112614466575f80fd5b8135602061447b61447683614435565b614405565b8083825260208201915060208460051b87010193508684111561449c575f80fd5b602086015b848110156144b857803583529183019183016144a1565b509695505050505050565b5f805f80608085870312156144d6575f80fd5b84356001600160401b03808211156144ec575f80fd5b818701915087601f8301126144ff575f80fd5b8135602061450f61447683614435565b82815260059290921b8401810191818101908b84111561452d575f80fd5b948201945b838610156145545785356145458161433c565b82529482019490820190614532565b98505088013592505080821115614569575f80fd5b5061457687828801614457565b9350506040850135915061458c60608601614350565b905092959194509250565b5f805f606084860312156145a9575f80fd5b83356145b48161433c565b925060208401356145c48161433c565b929592945050506040919091013590565b828152604060208201525f611731604083018461437b565b5f80604083850312156145fe575f80fd5b82356146098161433c565b91506020838101356001600160401b0380821115614625575f80fd5b818601915086601f830112614638575f80fd5b81358181111561464a5761464a6143f1565b61465c601f8201601f19168501614405565b91508082528784828501011115614671575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f815180845260208085019450602084015f5b838110156143aa5781516001600160a01b0316875295820195908201906001016146a1565b602081525f6110ee602083018461468e565b5f805f80608085870312156146eb575f80fd5b84356146f68161433c565b935060208501356147068161433c565b925060408501359150606085013561471d8161433c565b939692955090935050565b604080825283519082018190525f906020906060840190828701845b82811015614762578151151584529284019290840190600101614744565b5050508381036020850152611340818661437b565b5f60208284031215614787575f80fd5b5035919050565b5f806040838503121561479f575f80fd5b82356147aa8161433c565b915060208301356147ba8161433c565b809150509250929050565b5f80604083850312156147d6575f80fd5b82356147e18161433c565b915060208301356001600160401b038111156147fb575f80fd5b61480785828601614457565b9150509250929050565b604081525f614823604083018561437b565b828103602084015261425a818561437b565b600181811c9082168061484957607f821691505b602082108103610ac657634e487b7160e01b5f52602260045260245ffd5b5f60208284031215614877575f80fd5b81516110ee8161433c565b6020808252600e908201526d4f6e6c792050657269706865727960901b604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610bc757610bc76148aa565b634e487b7160e01b5f52603260045260245ffd5b5f60208083850312156148fa575f80fd5b82516001600160401b0381111561490f575f80fd5b8301601f8101851361491f575f80fd5b805161492d61447682614435565b81815260059190911b8201830190838101908783111561494b575f80fd5b928401925b8284101561496957835182529284019290840190614950565b979650505050505050565b80820180821115610bc757610bc76148aa565b5f60208284031215614997575f80fd5b5051919050565b5f826149b857634e487b7160e01b5f52601260045260245ffd5b500490565b81810381811115610bc757610bc76148aa565b5f602082840312156149e0575f80fd5b815180151581146110ee575f80fd5b5f602082840312156149ff575f80fd5b815160ff811681146110ee575f80fd5b600181815b80851115614a4957815f1904821115614a2f57614a2f6148aa565b80851615614a3c57918102915b93841c9390800290614a14565b509250929050565b5f82614a5f57506001610bc7565b81614a6b57505f610bc7565b8160018114614a815760028114614a8b57614aa7565b6001915050610bc7565b60ff841115614a9c57614a9c6148aa565b50506001821b610bc7565b5060208310610133831016604e8410600b8410161715614aca575081810a610bc7565b614ad48383614a0f565b805f1904821115614ae757614ae76148aa565b029392505050565b5f6110ee8383614a51565b60e081525f614b0c60e083018a61437b565b8281036020840152614b1e818a61468e565b90508281036040840152614b32818961437b565b606084019790975250506001600160a01b03938416608082015291831660a083015290911660c0909101529392505050565b601f821115612fa157805f5260205f20601f840160051c81016020851015614b895750805b601f840160051c820191505b81811015614091575f8155600101614b95565b81516001600160401b03811115614bc157614bc16143f1565b614bd581614bcf8454614835565b84614b64565b602080601f831160018114614c08575f8415614bf15750858301515b5f19600386901b1c1916600185901b178555612f8c565b5f85815260208120601f198616915b82811015614c3657888601518255948401946001909101908401614c17565b5085821015614c5357878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f82518060208501845e5f92019182525091905056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220ccb57b5033de849f166d4cac28981883d979b4b70e3bd5faf182b6dc84efba2b64736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x254 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B103999 GT PUSH2 0x13F JUMPI DUP1 PUSH4 0xB2B55D70 GT PUSH2 0xB3 JUMPI DUP1 PUSH4 0xD66BD524 GT PUSH2 0x78 JUMPI DUP1 PUSH4 0xD66BD524 EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x74D JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x780 JUMPI DUP1 PUSH4 0xF47B45E8 EQ PUSH2 0x79F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0x6BF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8A77C8DC GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0xA1F241CC EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x61D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B103999 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0x89B3179B EQ PUSH2 0x55C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x250AA683 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x416 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x21C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x18904EA4 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x228835AC EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x387 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x12899068 EQ PUSH2 0x2F1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x4307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x43B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0xACC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x43C7 JUMP JUMPDEST PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x279 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x279 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x310 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0xC4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0xCE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x44C3 JUMP JUMPDEST PUSH2 0xCFA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x1034 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x4597 JUMP JUMPDEST PUSH2 0x10D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH2 0x10F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x279 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP3 SWAP2 SWAP1 PUSH2 0x45D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x430 CALLDATASIZE PUSH1 0x4 PUSH2 0x4597 JUMP JUMPDEST PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x385 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x45ED JUMP JUMPDEST PUSH2 0x134A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x1369 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x470 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x46C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x46D8 JUMP JUMPDEST PUSH2 0x143B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x4B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH2 0x1739 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x175F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x4EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x279 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x511 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH2 0x1772 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP3 SWAP2 SWAP1 PUSH2 0x4728 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x548 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x557 CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH2 0x1929 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x567 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH2 0x1E95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x586 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x1F1B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x1F95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x5F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4597 JUMP JUMPDEST PUSH2 0x1FD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x618 CALLDATASIZE PUSH1 0x4 PUSH2 0x43C7 JUMP JUMPDEST PUSH2 0x20B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x628 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x658 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x667 CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH2 0x20BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x677 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x4EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x6BA CALLDATASIZE PUSH1 0x4 PUSH2 0x4777 JUMP JUMPDEST PUSH2 0x21A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6DE PUSH2 0x6D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4777 JUMP JUMPDEST PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x279 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x71D CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x739 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x748 CALLDATASIZE PUSH1 0x4 PUSH2 0x478E JUMP JUMPDEST PUSH2 0x2255 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x758 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x767 CALLDATASIZE PUSH1 0x4 PUSH2 0x47C5 JUMP JUMPDEST PUSH2 0x229E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x777 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x263D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x79A CALLDATASIZE PUSH1 0x4 PUSH2 0x4360 JUMP JUMPDEST PUSH2 0x2731 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B3 PUSH2 0x276E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP3 SWAP2 SWAP1 PUSH2 0x4811 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C7A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x7FF SWAP1 PUSH2 0x4835 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x82B SWAP1 PUSH2 0x4835 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x876 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x84D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x876 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x859 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F8 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x92B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x4882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x933 PUSH2 0x1F1B JUMP JUMPDEST PUSH2 0x976 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x980 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH2 0x98F DUP4 DUP4 PUSH2 0x2998 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x99B DUP3 PUSH2 0x2A96 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 PUSH2 0x9AB SWAP2 SWAP1 PUSH2 0x48BE JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x9C9 JUMPI PUSH2 0x9C9 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9F2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xA6B JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA13 JUMPI PUSH2 0xA13 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0xA63 JUMPI PUSH2 0xA44 DUP2 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA37 JUMPI PUSH2 0xA37 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2AD1 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA56 JUMPI PUSH2 0xA56 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x9F7 JUMP JUMPDEST POP PUSH2 0xA76 DUP9 DUP4 PUSH2 0x2BA0 JUMP JUMPDEST PUSH2 0xA7E PUSH2 0x2BD4 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP5 PUSH1 0x40 MLOAD PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0x43B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP6 POP POP POP POP POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB1F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB43 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFA67079 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x3E99C1E4 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB87 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xBAE SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x48E9 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0xBC1 DUP2 DUP6 DUP6 PUSH2 0x2F94 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xC45 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBF5 JUMPI PUSH2 0xBF5 PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC3D JUMPI PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC25 JUMPI PUSH2 0xC25 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xBD0 JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xC6B JUMPI PUSH2 0xC6B PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC94 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xAC6 JUMPI PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xCB4 JUMPI PUSH2 0xCB4 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCD6 JUMPI PUSH2 0xCD6 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xC99 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCF3 PUSH2 0x286C JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xD3E JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xD59 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xD67 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xD85 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xDAF JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xDB8 CALLER PUSH2 0x2FA6 JUMP JUMPDEST PUSH2 0xE04 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL DUP2 MSTORE POP PUSH2 0x2FB7 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE PUSH0 PUSH2 0xE36 DUP11 DUP11 PUSH2 0x2FC9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xE7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9A5D1A585B1A5E985D1A5BDB8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 DUP9 SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1BF01E9B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x1BF01E9B SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xECA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH5 0xE8D4A51000 PUSH1 0x4 SSTORE PUSH2 0xF62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420626173652061737365742061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP11 MLOAD DUP2 LT ISZERO PUSH2 0xF9D JUMPI DUP11 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xF80 JUMPI PUSH2 0xF80 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0xF65 JUMP JUMPDEST POP DUP1 PUSH2 0x2710 EQ PUSH2 0xFE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST POP POP DUP4 ISZERO PUSH2 0x1029 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1052 JUMPI PUSH2 0x1052 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x107B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xAC6 JUMPI PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x109B JUMPI PUSH2 0x109B PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10BD JUMPI PUSH2 0x10BD PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1080 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x10DD DUP6 DUP3 DUP6 PUSH2 0x340D JUMP JUMPDEST PUSH2 0x10E8 DUP6 DUP6 DUP6 PUSH2 0x3470 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xC45 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x111D JUMPI PUSH2 0x111D PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1165 JUMPI PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x114D JUMPI PUSH2 0x114D PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x10F8 JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH2 0x1178 PUSH2 0x286C JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11D3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11F7 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1253 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1277 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x12C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206F7261636C652061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1340 SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1352 PUSH2 0x34CD JUMP JUMPDEST PUSH2 0x135B DUP3 PUSH2 0x3571 JUMP JUMPDEST PUSH2 0x1365 DUP3 DUP3 PUSH2 0x3579 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1372 PUSH2 0x3635 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4CBA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x13A2 JUMPI PUSH2 0x13A2 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13CB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xAC6 JUMPI PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13EB JUMPI PUSH2 0x13EB PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x141B JUMPI PUSH2 0x141B PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x13D0 JUMP JUMPDEST PUSH0 PUSH2 0x1444 PUSH2 0x367E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x85462D6F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x148B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14AF SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1512 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 DUP5 GT PUSH2 0x1561 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x1588 SWAP1 DUP5 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0x159A DUP8 DUP8 DUP8 PUSH2 0x1FD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x15A6 DUP8 PUSH2 0x20BE JUMP JUMPDEST LT ISZERO PUSH2 0x15ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74204C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1614 SWAP1 DUP5 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0x2710 PUSH2 0x1628 DUP5 DUP5 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x1632 SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST SWAP1 POP PUSH2 0x163E DUP2 DUP4 PUSH2 0x49BD JUMP JUMPDEST SWAP4 POP PUSH0 DUP5 GT PUSH2 0x169D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F2073656E64206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x16A5 PUSH2 0x2BD4 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 DUP10 DUP9 PUSH1 0x40 MLOAD PUSH2 0x16FD SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0x1731 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C7A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1767 PUSH2 0x36C8 JUMP JUMPDEST PUSH2 0x1770 PUSH0 PUSH2 0x3723 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH2 0x177F PUSH2 0x286C JUMP JUMPDEST PUSH0 SLOAD SWAP2 SWAP4 POP SWAP2 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x179E JUMPI PUSH2 0x179E PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17C7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x17E2 JUMPI PUSH2 0x17E2 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x180B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1921 JUMPI PUSH0 DUP5 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x182C JUMPI PUSH2 0x182C PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2710 PUSH2 0x1841 SWAP2 SWAP1 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x184B SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1860 JUMPI PUSH2 0x1860 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18CB JUMPI PUSH2 0x1884 DUP2 DUP4 PUSH2 0x49BD JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1896 JUMPI PUSH2 0x1896 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x18B6 JUMPI PUSH2 0x18B6 PUSH2 0x48D5 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x18D5 DUP3 DUP3 PUSH2 0x49BD JUMP JUMPDEST DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x18E7 JUMPI PUSH2 0x18E7 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1906 JUMPI PUSH2 0x1906 PUSH2 0x48D5 JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x1810 JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x197C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19A0 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x19CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x4882 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x85462D6F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x85462D6F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A11 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A35 SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A88 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AAC SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1AB8 ADDRESS PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1B09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 PUSH2 0x1B1F PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1B5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B79 JUMPI PUSH2 0x1B79 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1BA2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x1BB3 DUP8 DUP7 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x1BBD SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1BCA DUP3 DUP7 PUSH2 0x49BD JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x1CB4 JUMPI PUSH0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA3E113FB ADDRESS PUSH0 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1BFA JUMPI PUSH2 0x1BFA PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C53 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C77 SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1C84 DUP5 DUP4 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x1C8E SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CA0 JUMPI PUSH2 0x1CA0 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x1BCE JUMP JUMPDEST POP DUP1 PUSH2 0x1CBF ADDRESS PUSH2 0x1739 JUMP JUMPDEST LT ISZERO PUSH2 0x1D0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042414C554E49206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1D8CF425 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3B19E84A SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D54 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D78 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH0 SWAP1 ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DC7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DEB SWAP2 SWAP1 PUSH2 0x49D0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1E30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x1E3A ADDRESS DUP5 PUSH2 0x3793 JUMP JUMPDEST PUSH2 0x1E42 PUSH2 0x2BD4 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1E7D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1E9F PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x1F12 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1EC9 JUMPI PUSH2 0x1EC9 PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1F0A JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1EF9 JUMPI PUSH2 0x1EF9 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1EA4 JUMP JUMPDEST POP PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x1F26 PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1F8C JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1F47 JUMPI PUSH2 0x1F47 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 ISZERO PUSH2 0x1F75 JUMPI POP PUSH1 0x1 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F6B JUMPI PUSH2 0x1F6B PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x1F84 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1F2C JUMP JUMPDEST POP PUSH0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C7A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x7FF SWAP1 PUSH2 0x4835 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1FE0 DUP6 DUP6 DUP6 PUSH2 0x1181 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1FEC DUP7 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1FF8 DUP7 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2004 DUP9 PUSH2 0x10F5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2010 DUP9 PUSH2 0x10F5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x2020 DUP7 DUP9 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x202A SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x203A DUP7 DUP10 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x2044 SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST SWAP1 POP PUSH2 0x204F DUP12 PUSH2 0x1E95 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x2067 JUMPI PUSH2 0x2060 DUP3 DUP9 PUSH2 0x49BD JUMP JUMPDEST SWAP7 POP PUSH2 0x2074 JUMP JUMPDEST PUSH2 0x2071 DUP3 DUP9 PUSH2 0x4974 JUMP JUMPDEST SWAP7 POP JUMPDEST PUSH2 0x207D DUP11 PUSH2 0x1E95 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x2095 JUMPI PUSH2 0x208E DUP2 DUP9 PUSH2 0x4974 JUMP JUMPDEST SWAP7 POP PUSH2 0x20A2 JUMP JUMPDEST PUSH2 0x209F DUP2 DUP9 PUSH2 0x49BD JUMP JUMPDEST SWAP7 POP JUMPDEST POP SWAP5 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0xBC1 DUP2 DUP6 DUP6 PUSH2 0x3470 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2110 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2134 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA3E113FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA3E113FB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2182 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10EE SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x21B0 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP POP DUP1 MLOAD DUP4 LT PUSH2 0x21F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x92DCECC2D8D2C840C2E6E6CAE840D2DCC8CAF PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST DUP1 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x220B JUMPI PUSH2 0x220B PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2229 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2314 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x233E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x4882 JUMP JUMPDEST PUSH0 PUSH2 0x2354 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0x2360 PUSH2 0xACC JUMP JUMPDEST DUP1 MLOAD PUSH0 SLOAD SWAP2 SWAP3 POP EQ PUSH2 0x23B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x23EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x4E6F20617373657473 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x2489 JUMPI PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x240C JUMPI PUSH2 0x240C PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP2 DUP3 MUL ADD SLOAD SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP AND DUP3 SUB PUSH2 0x244D JUMPI DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2443 JUMPI PUSH2 0x2443 PUSH2 0x48D5 JUMP JUMPDEST POP PUSH2 0x2481 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2470 DUP3 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2463 JUMPI PUSH2 0x2463 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x37C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x247C DUP2 DUP7 PUSH2 0x4974 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x23F0 JUMP JUMPDEST POP PUSH0 DUP3 GT PUSH2 0x24E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 DUP4 PUSH0 SUB PUSH2 0x2500 JUMPI PUSH1 0x4 SLOAD PUSH2 0x24F9 SWAP1 DUP5 PUSH2 0x48BE JUMP JUMPDEST SWAP1 POP PUSH2 0x259E JUMP JUMPDEST PUSH0 PUSH2 0x2509 PUSH2 0x286C JUMP JUMPDEST POP SWAP1 POP PUSH0 DUP2 GT PUSH2 0x256A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2577 SWAP1 DUP3 PUSH2 0x48BE JUMP JUMPDEST DUP6 PUSH1 0x4 SLOAD DUP7 PUSH2 0x2586 SWAP2 SWAP1 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x2590 SWAP2 SWAP1 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x259A SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x25DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4D696E7420717479206973203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x25E7 DUP9 DUP3 PUSH2 0x2BA0 JUMP JUMPDEST PUSH2 0x25EF PUSH2 0x2BD4 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP3 PUSH1 0x40 MLOAD PUSH2 0x262A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x268F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26B3 SWAP2 SWAP1 PUSH2 0x49EF JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH2 0x26C4 DUP3 PUSH1 0x12 PUSH2 0x49BD JUMP JUMPDEST PUSH2 0x26CF SWAP1 PUSH1 0xA PUSH2 0x4AEF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x26DA PUSH2 0x286C JUMP JUMPDEST POP SWAP1 POP PUSH0 PUSH2 0x26F3 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x2706 JUMPI PUSH0 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 PUSH2 0x2714 DUP6 DUP6 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x271E SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST PUSH2 0x2728 SWAP2 SWAP1 PUSH2 0x48BE JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2739 PUSH2 0x36C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2762 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x276B DUP2 PUSH2 0x3723 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27C2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27E6 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x2810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP1 PUSH2 0x4882 JUMP JUMPDEST PUSH2 0x2818 PUSH2 0x1F1B JUMP JUMPDEST PUSH2 0x285B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x149958985B185B98D9481B9BDD081B9959591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x2863 PUSH2 0x37E1 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x60 SWAP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x288A JUMPI PUSH2 0x288A PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x28B3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2992 JUMPI PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x28D3 JUMPI PUSH2 0x28D3 PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x28F6 DUP3 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x2933 JUMPI DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2922 JUMPI PUSH2 0x2922 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2961 JUMP JUMPDEST PUSH0 PUSH2 0x293E DUP4 DUP4 PUSH2 0x37C7 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2953 JUMPI PUSH2 0x2953 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2973 JUMPI PUSH2 0x2973 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x2986 SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP6 POP POP POP PUSH1 0x1 ADD PUSH2 0x28B8 JUMP JUMPDEST POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x29B4 JUMPI PUSH2 0x29B4 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29DD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xCF3 JUMPI PUSH0 PUSH2 0x2710 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2A01 JUMPI PUSH2 0x2A01 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x2A1C SWAP2 SWAP1 PUSH2 0x48BE JUMP JUMPDEST PUSH2 0x2A26 SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2A3B JUMPI PUSH2 0x2A3B PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO PUSH2 0x2A8D JUMPI DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A5B JUMPI PUSH2 0x2A5B PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 PUSH2 0x2A6E SWAP2 SWAP1 PUSH2 0x49BD JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2A80 JUMPI PUSH2 0x2A80 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x29E2 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0xAC6 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2AB4 JUMPI PUSH2 0x2AB4 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x2AC7 SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x2A99 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH0 DUP1 SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x2AF5 JUMPI PUSH2 0x2AF5 PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x2B1A JUMPI POP DUP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH0 PUSH2 0x2B4F PUSH0 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x2B30 JUMPI PUSH2 0x2B30 PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x3E62 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x10EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2BC9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x1365 PUSH0 DUP4 DUP4 PUSH2 0x3E7B JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2BDE PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x85462D6F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C33 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C57 SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH2 0x12C PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x2F8C JUMPI PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2C7C JUMPI PUSH2 0x2C7C PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2CA1 JUMPI PUSH2 0x2CA1 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x2CDA JUMPI DUP4 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2CC1 JUMPI PUSH2 0x2CC1 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x2F84 JUMP JUMPDEST DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2CEC JUMPI PUSH2 0x2CEC PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD ISZERO PUSH2 0x2DCA JUMPI DUP4 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2D0C JUMPI PUSH2 0x2D0C PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2D1E SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2D30 JUMPI PUSH2 0x2D30 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2D4D SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2D67 JUMPI PUSH2 0x2D67 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x2DC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F766572666C6F7720696E6372656D656E74696E6720736C6970706167650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x2F32 JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2DDC JUMPI PUSH2 0x2DDC PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2DF6 JUMPI PUSH2 0x2DF6 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x2ED8 JUMPI DUP4 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2E1F JUMPI PUSH2 0x2E1F PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2E31 SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E43 JUMPI PUSH2 0x2E43 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2E60 SWAP2 SWAP1 PUSH2 0x49BD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E7A JUMPI PUSH2 0x2E7A PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x2DC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E646572666C6F772064656372656D656E74696E6720736C69707061676500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST DUP4 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2EEB JUMPI PUSH2 0x2EEB PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2EFD SWAP2 SWAP1 PUSH2 0x499E JUMP JUMPDEST PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2F0F JUMPI PUSH2 0x2F0F PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2F2C SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP3 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2F45 JUMPI PUSH2 0x2F45 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x2F82 JUMPI DUP3 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2F6E JUMPI PUSH2 0x2F6E PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2C60 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2FA1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3FB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2FAE PUSH2 0x4098 JUMP JUMPDEST PUSH2 0x276B DUP2 PUSH2 0x40E1 JUMP JUMPDEST PUSH2 0x2FBF PUSH2 0x4098 JUMP JUMPDEST PUSH2 0x1365 DUP3 DUP3 PUSH2 0x40E9 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x301B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x303F SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x309B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30BF SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3115 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726562616C616E6365722061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x3171 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3402 JUMPI PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3198 JUMPI PUSH2 0x3198 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x31EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061737365742061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3201 JUMPI PUSH2 0x3201 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x3247 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3265 JUMPI PUSH2 0x3265 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x328D JUMPI PUSH2 0x328D PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE DUP2 DUP4 KECCAK256 DUP5 MLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP1 DUP4 ADD MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP6 MLOAD DUP7 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x3304 JUMPI PUSH2 0x3304 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x335D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3381 SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST PUSH0 SUB PUSH2 0x33F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH0 NOT PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33D3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33F7 SWAP2 SWAP1 PUSH2 0x49D0 JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x3173 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3418 DUP5 DUP5 PUSH2 0x2255 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x346A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x345C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x346A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x3FB4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3499 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x34C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x2FA1 DUP4 DUP4 DUP4 PUSH2 0x3E7B JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x3553 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3547 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4CBA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x276B PUSH2 0x36C8 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x35D3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x35D0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x4987 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x35FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4CBA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x362B JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x2FA1 DUP4 DUP4 PUSH2 0x4139 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 DUP1 SLOAD PUSH1 0x1 NOT ADD PUSH2 0x36C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x36FA PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x37BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x1365 DUP3 PUSH0 DUP4 PUSH2 0x3E7B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH0 SWAP1 PUSH2 0x10EE SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1ACB6141 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3835 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3859 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCFF49D68 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38AC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38D0 SWAP2 SWAP1 PUSH2 0x4867 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x38EE JUMPI PUSH2 0x38EE PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3917 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3936 JUMPI PUSH2 0x3936 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x395F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x397E JUMPI PUSH2 0x397E PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x39A7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x39C6 JUMPI PUSH2 0x39C6 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x39EF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3A0E JUMPI PUSH2 0x3A0E PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3A37 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3A56 JUMPI PUSH2 0x3A56 PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3A7F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x3BDA JUMPI PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3A9F JUMPI PUSH2 0x3A9F PUSH2 0x48D5 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x3ACF JUMPI PUSH2 0x3ACF PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3B01 JUMPI PUSH2 0x3B01 PUSH2 0x48D5 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3B23 JUMPI PUSH2 0x3B23 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3B41 JUMPI PUSH2 0x3B41 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B91 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BB5 SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3BC7 JUMPI PUSH2 0x3BC7 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3A84 JUMP JUMPDEST POP PUSH0 PUSH2 0x3BE4 PUSH2 0xACC JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF0BF7714 DUP3 DUP10 DUP10 PUSH1 0x1 SLOAD DUP15 DUP16 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C34 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4AFA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C4B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C5D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x3E10 JUMPI DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3C7E JUMPI PUSH2 0x3C7E PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CCE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CF2 SWAP2 SWAP1 PUSH2 0x4987 JUMP JUMPDEST DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3D04 JUMPI PUSH2 0x3D04 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3D22 JUMPI PUSH2 0x3D22 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3D3C JUMPI PUSH2 0x3D3C PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x3DAB JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3D5C JUMPI PUSH2 0x3D5C PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3D76 JUMPI PUSH2 0x3D76 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3D88 SWAP2 SWAP1 PUSH2 0x49BD JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3D9A JUMPI PUSH2 0x3D9A PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x3E08 JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3DBD JUMPI PUSH2 0x3DBD PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3DD7 JUMPI PUSH2 0x3DD7 PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3DE9 SWAP2 SWAP1 PUSH2 0x49BD JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3DFB JUMPI PUSH2 0x3DFB PUSH2 0x48D5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3C63 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP9 PUSH1 0x40 MLOAD PUSH2 0x3E4A SWAP2 SWAP1 PUSH2 0x46C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH0 SWAP1 PUSH2 0x10EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0x1181 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C7A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3EB5 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3EAA SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x3F25 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3F07 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3F43 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x3F61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x3FA6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C7A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x3FEB JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4014 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x4091 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4088 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1770 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2739 PUSH2 0x4098 JUMP JUMPDEST PUSH2 0x40F1 PUSH2 0x4098 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4C7A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x412A DUP5 DUP3 PUSH2 0x4BA8 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x346A DUP4 DUP3 PUSH2 0x4BA8 JUMP JUMPDEST PUSH2 0x4142 DUP3 PUSH2 0x418E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x4186 JUMPI PUSH2 0x2FA1 DUP3 DUP3 PUSH2 0x41F1 JUMP JUMPDEST PUSH2 0x1365 PUSH2 0x4263 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x41C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4CBA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x420D SWAP2 SWAP1 PUSH2 0x4C63 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x4245 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x424A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x425A DUP6 DUP4 DUP4 PUSH2 0x4282 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1770 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x4297 JUMPI PUSH2 0x4292 DUP3 PUSH2 0x42DE JUMP JUMPDEST PUSH2 0x10EE JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x42AE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x42D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x922 JUMP JUMPDEST POP DUP1 PUSH2 0x10EE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x42EE JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x276B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x435B DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4370 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10EE DUP2 PUSH2 0x433C JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43AA JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x438E JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x10EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x437B JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x43E3 DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x442D JUMPI PUSH2 0x442D PUSH2 0x43F1 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x444D JUMPI PUSH2 0x444D PUSH2 0x43F1 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4466 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x447B PUSH2 0x4476 DUP4 PUSH2 0x4435 JUMP JUMPDEST PUSH2 0x4405 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x449C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x44B8 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x44A1 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x44D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x44EC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x44FF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x450F PUSH2 0x4476 DUP4 PUSH2 0x4435 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP12 DUP5 GT ISZERO PUSH2 0x452D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x4554 JUMPI DUP6 CALLDATALOAD PUSH2 0x4545 DUP2 PUSH2 0x433C JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x4532 JUMP JUMPDEST SWAP9 POP POP DUP9 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x4569 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4576 DUP8 DUP3 DUP9 ADD PUSH2 0x4457 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x458C PUSH1 0x60 DUP7 ADD PUSH2 0x4350 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x45A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x45B4 DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x45C4 DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1731 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x437B JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x45FE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4609 DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4625 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4638 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x464A JUMPI PUSH2 0x464A PUSH2 0x43F1 JUMP JUMPDEST PUSH2 0x465C PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x4405 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4671 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43AA JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x46A1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x10EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x468E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x46EB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x46F6 DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x4706 DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x471D DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4762 JUMPI DUP2 MLOAD ISZERO ISZERO DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4744 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1340 DUP2 DUP7 PUSH2 0x437B JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4787 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x479F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x47AA DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x47BA DUP2 PUSH2 0x433C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x47D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x47E1 DUP2 PUSH2 0x433C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x47FB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4807 DUP6 DUP3 DUP7 ADD PUSH2 0x4457 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x4823 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x437B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x425A DUP2 DUP6 PUSH2 0x437B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4849 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAC6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4877 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x10EE DUP2 PUSH2 0x433C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x4F6E6C7920506572697068657279 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xBC7 JUMPI PUSH2 0xBC7 PUSH2 0x48AA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x48FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x490F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x491F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x492D PUSH2 0x4476 DUP3 PUSH2 0x4435 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x494B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x4969 JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x4950 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xBC7 JUMPI PUSH2 0xBC7 PUSH2 0x48AA JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4997 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x49B8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xBC7 JUMPI PUSH2 0xBC7 PUSH2 0x48AA JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x10EE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49FF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x10EE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x4A49 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x4A2F JUMPI PUSH2 0x4A2F PUSH2 0x48AA JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x4A3C JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x4A14 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x4A5F JUMPI POP PUSH1 0x1 PUSH2 0xBC7 JUMP JUMPDEST DUP2 PUSH2 0x4A6B JUMPI POP PUSH0 PUSH2 0xBC7 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4A81 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4A8B JUMPI PUSH2 0x4AA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x4A9C JUMPI PUSH2 0x4A9C PUSH2 0x48AA JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xBC7 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x4ACA JUMPI POP DUP2 DUP2 EXP PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4AD4 DUP4 DUP4 PUSH2 0x4A0F JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x4AE7 JUMPI PUSH2 0x4AE7 PUSH2 0x48AA JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10EE DUP4 DUP4 PUSH2 0x4A51 JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH0 PUSH2 0x4B0C PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x437B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4B1E DUP2 DUP11 PUSH2 0x468E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x4B32 DUP2 DUP10 PUSH2 0x437B JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2FA1 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4B89 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4091 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4B95 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4BC1 JUMPI PUSH2 0x4BC1 PUSH2 0x43F1 JUMP JUMPDEST PUSH2 0x4BD5 DUP2 PUSH2 0x4BCF DUP5 SLOAD PUSH2 0x4835 JUMP JUMPDEST DUP5 PUSH2 0x4B64 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4C08 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x4BF1 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2F8C JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C36 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x4C17 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x4C53 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE0052C63247E1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02360894A13B LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA2646970667358221220CC 0xB5 PUSH28 0x5033DE849F166D4CAC28981883D979B4B70E3BD5FAF182B6DC84EFBA 0x2B PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"2058:27583:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5834:993:16;;;;;;;;;;-1:-1:-1;5834:993:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;21479:212::-;;;;;;;;;;;;;:::i;5505:186:3:-;;;;;;;;;;-1:-1:-1;5505:186:3;;;;;:::i;:::-;;:::i;:::-;;;2159:14:23;;2152:22;2134:41;;2122:2;2107:18;5505:186:3;1994:187:23;10603:310:16;;;;;;;;;;-1:-1:-1;10603:310:16;;;;;:::i;:::-;;:::i;:::-;;;2332:25:23;;;2320:2;2305:18;10603:310:16;2186:177:23;4191:152:3;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;4322:14:3;4191:152;;13069:294:16;;;;;;;;;;;;;:::i;20667:145::-;;;;;;;;;;;;;:::i;3059:844::-;;;;;;;;;;-1:-1:-1;3059:844:16;;;;;:::i;:::-;;:::i;:::-;;22709:284;;;;;;;;;;;;;:::i;6251:244:3:-;;;;;;;;;;-1:-1:-1;6251:244:3;;;;;:::i;:::-;;:::i;12410:309:16:-;;;;;;;;;;-1:-1:-1;12410:309:16;;;;;:::i;:::-;;:::i;4049:82:3:-;;;;;;;;;;-1:-1:-1;4049:82:3;;4122:2;5607:36:23;;5595:2;5580:18;4049:82:3;5465:184:23;20327:211:16;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;17716:389::-;;;;;;;;;;-1:-1:-1;17716:389:16;;;;;:::i;:::-;;:::i;4158:214:2:-;;;;;;:::i;:::-;;:::i;3705:134::-;;;;;;;;;;;;;:::i;22252:279:16:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;7626:1028::-;;;;;;;;;;-1:-1:-1;7626:1028:16;;;;;:::i;:::-;;:::i;4401:171:3:-;;;;;;;;;;-1:-1:-1;4401:171:3;;;;;:::i;:::-;;:::i;3155:101:0:-;;;;;;;;;;;;;:::i;2374:33:16:-;;;;;;;;;;-1:-1:-1;2374:33:16;;;;-1:-1:-1;;;;;2374:33:16;;;;;;-1:-1:-1;;;;;8605:32:23;;;8587:51;;8575:2;8560:18;2374:33:16;8415:229:23;2251:22:16;;;;;;;;;;;;;;;;18729:864;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;15982:1335::-;;;;;;;;;;-1:-1:-1;15982:1335:16;;;;;:::i;:::-;;:::i;12727:334::-;;;;;;;;;;-1:-1:-1;12727:334:16;;;;;:::i;:::-;;:::i;29292:346::-;;;;;;;;;;;;;:::i;2441:144:0:-;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;3268:148:3;;;;;;;;;;;;;:::i;9044:1372:16:-;;;;;;;;;;-1:-1:-1;9044:1372:16;;;;;:::i;:::-;;:::i;4767:178:3:-;;;;;;;;;;-1:-1:-1;4767:178:3;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;21877:231:16;;;;;;;;;;-1:-1:-1;21877:231:16;;;;;:::i;:::-;;:::i;2280:18::-;;;;;;;;;;;;;;;;2305:24;;;;;;;;;;-1:-1:-1;2305:24:16;;;;-1:-1:-1;;;;;2305:24:16;;;19781:275;;;;;;;;;;-1:-1:-1;19781:275:16;;;;;:::i;:::-;;:::i;2213:29::-;;;;;;;;;;-1:-1:-1;2213:29:16;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;10087:32:23;;;10069:51;;10151:2;10136:18;;10129:34;;;;10179:18;;;10172:34;10057:2;10042:18;2213:29:16;9867:345:23;2416:43:16;;;;;;;;;;-1:-1:-1;2416:43:16;;;;;:::i;:::-;;;;;;;;;;;;;;5003:195:3;;;;;;;;;;-1:-1:-1;5003:195:3;;;;;:::i;:::-;;:::i;13574:1387:16:-;;;;;;;;;;-1:-1:-1;13574:1387:16;;;;;:::i;:::-;;:::i;20931:414::-;;;;;;;;;;;;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;18163:281:16:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;3011:144:3:-;3141:7;3134:14;;3056:13;;-1:-1:-1;;;;;;;;;;;2359:20:3;3134:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144;:::o;5834:993:16:-;5910:16;4039:17;4059:8;;;;;;;;;-1:-1:-1;;;;;4059:8:16;-1:-1:-1;;;;;4059:31:16;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4039:53;-1:-1:-1;4111:10:16;-1:-1:-1;;;;;4111:23:16;;;4103:50;;;;-1:-1:-1;;;4103:50:16;;;;;;;:::i;:::-;;;;;;;;;5947:19:::1;:17;:19::i;:::-;5939:52;;;::::0;-1:-1:-1;;;5939:52:16;;12754:2:23;5939:52:16::1;::::0;::::1;12736:21:23::0;12793:2;12773:18;;;12766:30;-1:-1:-1;;;12812:18:23;;;12805:50;12872:18;;5939:52:16::1;12552:344:23::0;5939:52:16::1;6003:22;6027:27:::0;6058:24:::1;:22;:24::i;:::-;6002:80;;;;6103:29;6135:50;6158:14;6174:10;6135:22;:50::i;:::-;6103:82;;6204:27;6234:43;6264:12;6234:29;:43::i;:::-;6204:73;;6313:13;;6290:36;;;;;:::i;:::-;6339:24;6380:17:::0;;6290:36;;-1:-1:-1;6339:24:16;-1:-1:-1;;;;;6366:32:16;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;6366:32:16::1;;6339:59;;6416:9;6411:188;6435:12;:19;6431:1;:23;6411:188;;;6498:1;6480:12;6493:1;6480:15;;;;;;;;:::i;:::-;;;;;;;:19;6476:112;;;6533:39;6553:1;6556:12;6569:1;6556:15;;;;;;;;:::i;:::-;;;;;;;6533:19;:39::i;:::-;6520:7;6528:1;6520:10;;;;;;;;:::i;:::-;;;;;;:52;;;::::0;::::1;6476:112;6456:3;;6411:188;;;;6611:36;6617:8;6627:19;6611:5;:36::i;:::-;6715:16;:14;:16::i;:::-;6767:10;-1:-1:-1::0;;;;;6749:43:16::1;;6779:12;6749:43;;;;;;:::i;:::-;;;;;;;;6812:7:::0;-1:-1:-1;;;;;4164:1:16::1;4028:145:::0;5834:993;;;:::o;21479:212::-;21523:16;21552:17;21572:8;;;;;;;;;-1:-1:-1;;;;;21572:8:16;-1:-1:-1;;;;;21572:31:16;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21623:60;;-1:-1:-1;;;21623:60:16;;21677:4;21623:60;;;8587:51:23;21552:53:16;;-1:-1:-1;;;;;;21623:45:16;;;;;8560:18:23;;21623:60:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21623:60:16;;;;;;;;;;;;:::i;:::-;21616:67;;;21479:212;:::o;5505:186:3:-;5578:4;966:10:4;5632:31:3;966:10:4;5648:7:3;5657:5;5632:8;:31::i;:::-;5680:4;5673:11;;;5505:186;;;;;:::o;10603:310:16:-;10660:7;;10680:172;10704:10;:17;10700:21;;10680:172;;;10770:5;-1:-1:-1;;;;;10747:28:16;:10;10758:1;10747:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;10747:19:16;:28;10743:98;;10803:10;10814:1;10803:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;10796:29;;;10603:310;;;:::o;10743:98::-;10723:3;;10680:172;;;-1:-1:-1;10869:1:16;;10603:310;-1:-1:-1;;10603:310:16:o;13069:294::-;13145:26;13188:17;;13116:16;;13145:26;-1:-1:-1;;;;;13174:32:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13174:32:16;;13145:61;;13222:9;13217:112;13241:10;:17;13237:21;;13217:112;;;13295:10;13306:1;13295:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;13280:9;13290:1;13280:12;;;;;;;;:::i;:::-;;;;;;;;;;:37;13260:3;;13217:112;;20667:145;20711:7;20732:16;20754:24;:22;:24::i;:::-;-1:-1:-1;20731:47:16;20667:145;-1:-1:-1;;20667:145:16:o;3059:844::-;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;-1:-1:-1;;;;;4348:14:1;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;-1:-1:-1;;;;;4790:16:1;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;3244:26:16::1;3259:10;3244:14;:26::i;:::-;3281:38;;;;;;;;;;;;;;-1:-1:-1::0;;;3281:38:16::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;3281:38:16::1;;::::0;:12:::1;:38::i;:::-;3330:8;:39:::0;;-1:-1:-1;;;;;;3330:39:16::1;-1:-1:-1::0;;;;;3330:39:16;::::1;;::::0;;3386:4:::1;3380:3;:10:::0;-1:-1:-1;3415:35:16::1;3432:7:::0;3441:8;3415:16:::1;:35::i;:::-;3401:49;;3469:6;3461:40;;;::::0;-1:-1:-1;;;3461:40:16;;14426:2:23;3461:40:16::1;::::0;::::1;14408:21:23::0;14465:2;14445:18;;;14438:30;-1:-1:-1;;;14484:18:23;;;14477:51;14545:18;;3461:40:16::1;14224:345:23::0;3461:40:16::1;3514:7;:18:::0;;;3555:8:::1;::::0;:18:::1;::::0;;-1:-1:-1;;;3555:18:16;;;;-1:-1:-1;;;;;3555:8:16;;::::1;::::0;:16:::1;::::0;:18:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:8;:18:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3543:9;:30:::0;;-1:-1:-1;;;;;;3543:30:16::1;-1:-1:-1::0;;;;;3543:30:16;;;::::1;::::0;;::::1;::::0;;3600:14:::1;3584:13;:30:::0;3625:62:::1;;;::::0;-1:-1:-1;;;3625:62:16;;14776:2:23;3625:62:16::1;::::0;::::1;14758:21:23::0;14815:2;14795:18;;;14788:30;14854:28;14834:18;;;14827:56;14900:18;;3625:62:16::1;14574:350:23::0;3625:62:16::1;3700:19;3741:9:::0;3736:99:::1;3760:8;:15;3756:1;:19;3736:99;;;3812:8;3821:1;3812:11;;;;;;;;:::i;:::-;;;;;;;3797:26;;;;;:::i;:::-;::::0;-1:-1:-1;3777:3:16::1;;3736:99;;;;3855:11;3870:5;3855:20;3847:48;;;::::0;-1:-1:-1;;;3847:48:16;;15261:2:23;3847:48:16::1;::::0;::::1;15243:21:23::0;15300:2;15280:18;;;15273:30;-1:-1:-1;;;15319:18:23;;;15312:45;15374:18;;3847:48:16::1;15059:339:23::0;3847:48:16::1;3233:670;;5070:14:1::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;15556:50:23;;5142:14:1;;15544:2:23;15529:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;3059:844:16;;;;:::o;22709:284::-;22783:24;22824:17;;22754:16;;22783:24;-1:-1:-1;;;;;22810:32:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22810:32:16;;22783:59;;22858:9;22853:108;22877:10;:17;22873:21;;22853:108;;;22929:10;22940:1;22929:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;22916:7;22924:1;22916:10;;;;;;;;:::i;:::-;;;;;;;;;;:33;22896:3;;22853:108;;6251:244:3;6338:4;966:10:4;6394:37:3;6410:4;966:10:4;6425:5:3;6394:15;:37::i;:::-;6441:26;6451:4;6457:2;6461:5;6441:9;:26::i;:::-;6484:4;6477:11;;;6251:244;;;;;;:::o;12410:309:16:-;12470:7;;12490:170;12514:10;:17;12510:21;;12490:170;;;12580:5;-1:-1:-1;;;;;12557:28:16;:10;12568:1;12557:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;12557:19:16;:28;12553:96;;12613:10;12624:1;12613:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;12606:27;;;12410:309;;;:::o;12553:96::-;12533:3;;12490:170;;20327:211;20383:16;20401:27;20466:24;:22;:24::i;:::-;20441:49;;;;-1:-1:-1;20327:211:16;-1:-1:-1;20327:211:16:o;17716:389::-;17811:7;17831:28;17878:8;;;;;;;;;-1:-1:-1;;;;;17878:8:16;-1:-1:-1;;;;;17878:24:16;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17831:74;;17962:1;-1:-1:-1;;;;;17924:40:16;:8;;;;;;;;;-1:-1:-1;;;;;17924:8:16;-1:-1:-1;;;;;17924:24:16;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17924:40:16;;17916:75;;;;-1:-1:-1;;;17916:75:16;;15819:2:23;17916:75:16;;;15801:21:23;15858:2;15838:18;;;15831:30;-1:-1:-1;;;15877:18:23;;;15870:52;15939:18;;17916:75:16;15617:346:23;17916:75:16;18022:48;;-1:-1:-1;;;18022:48:16;;-1:-1:-1;;;;;16226:15:23;;;18022:48:16;;;16208:34:23;16278:15;;;16258:18;;;16251:43;16310:18;;;16303:34;;;18002:17:16;;18022:20;;;;;;16143:18:23;;18022:48:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18002:68;17716:389;-1:-1:-1;;;;;;17716:389:16:o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:2;:::o;22252:279:16:-;22325:23;22365:17;;22296:16;;22325:23;-1:-1:-1;;;;;22351:32:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22351:32:16;;22325:58;;22399:9;22394:106;22418:10;:17;22414:21;;22394:106;;;22469:10;22480:1;22469:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;22457:9;;-1:-1:-1;;;;;22469:19:16;;;;22457:6;;22464:1;;22457:9;;;;;;:::i;:::-;-1:-1:-1;;;;;22457:31:16;;;:9;;;;;;;;;;;:31;22437:3;;22394:106;;7626:1028;7784:17;3251:21:5;:19;:21::i;:::-;7833:8:16::1;::::0;:21:::1;::::0;;-1:-1:-1;;;7833:21:16;;;;7814:16:::1;::::0;-1:-1:-1;;;;;7833:8:16::1;::::0;:19:::1;::::0;:21:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:21:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7814:40;;7886:7;-1:-1:-1::0;;;;;7873:20:16::1;:9;-1:-1:-1::0;;;;;7873:20:16::1;::::0;7865:59:::1;;;::::0;-1:-1:-1;;;7865:59:16;;16739:2:23;7865:59:16::1;::::0;::::1;16721:21:23::0;16778:2;16758:18;;;16751:30;16817:28;16797:18;;;16790:56;16863:18;;7865:59:16::1;16537:350:23::0;7865:59:16::1;7952:1;7943:6;:10;7935:55;;;::::0;-1:-1:-1;;;7935:55:16;;17094:2:23;7935:55:16::1;::::0;::::1;17076:21:23::0;;;17113:18;;;17106:30;17172:34;17152:18;;;17145:62;17224:18;;7935:55:16::1;16892:356:23::0;7935:55:16::1;-1:-1:-1::0;;;;;8001:19:16;::::1;;::::0;;;:8:::1;:19;::::0;;;;:29;;8024:6;;8001:19;:29:::1;::::0;8024:6;;8001:29:::1;:::i;:::-;::::0;;;-1:-1:-1;8043:22:16::1;::::0;-1:-1:-1;8068:52:16::1;8093:9:::0;8104:7;8113:6;8068:24:::1;:52::i;:::-;8043:77;;8167:14;8139:24;8155:7;8139:15;:24::i;:::-;:42;;8131:77;;;::::0;-1:-1:-1;;;8131:77:16;;17455:2:23;8131:77:16::1;::::0;::::1;17437:21:23::0;17494:2;17474:18;;;17467:30;-1:-1:-1;;;17513:18:23;;;17506:52;17575:18;;8131:77:16::1;17253:346:23::0;8131:77:16::1;-1:-1:-1::0;;;;;8219:17:16;::::1;;::::0;;;:8:::1;:17;::::0;;;;:35;;8240:14;;8219:17;:35:::1;::::0;8240:14;;8219:35:::1;:::i;:::-;::::0;;;-1:-1:-1;8267:11:16::1;::::0;-1:-1:-1;8311:5:16::1;8282:25;8299:8:::0;8282:14;:25:::1;:::i;:::-;8281:35;;;;:::i;:::-;8267:49:::0;-1:-1:-1;8339:20:16::1;8267:49:::0;8339:14;:20:::1;:::i;:::-;8327:32;;8392:1;8380:9;:13;8372:63;;;::::0;-1:-1:-1;;;8372:63:16;;18161:2:23;8372:63:16::1;::::0;::::1;18143:21:23::0;18200:2;18180:18;;;18173:30;18239:34;18219:18;;;18212:62;-1:-1:-1;;;18290:18:23;;;18283:35;18335:19;;8372:63:16::1;17959:401:23::0;8372:63:16::1;8530:16;:14;:16::i;:::-;8590:7;-1:-1:-1::0;;;;;8564:53:16::1;8579:9;-1:-1:-1::0;;;;;8564:53:16::1;8569:8;-1:-1:-1::0;;;;;8564:53:16::1;;8599:6;8607:9;8564:53;;;;;;18539:25:23::0;;;18595:2;18580:18;;18573:34;18527:2;18512:18;;18365:248;8564:53:16::1;;;;;;;;8630:16;;;3293:20:5::0;1805:1;2388:30;3969:23;3716:283;3293:20;7626:1028:16;;;;;;:::o;4401:171:3:-;-1:-1:-1;;;;;4545:20:3;4466:7;4545:20;;;-1:-1:-1;;;;;;;;;;;4545:20:3;;;;;;;4401:171::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;18729:864:16:-;18774:24;18800:27;18841:14;18857:27;18888:24;:22;:24::i;:::-;18923:17;18943;18840:72;;-1:-1:-1;18840:72:16;-1:-1:-1;18943:17:16;-1:-1:-1;;;;;18986:21:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18986:21:16;;18973:34;;19045:9;-1:-1:-1;;;;;19031:24:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19031:24:16;;19018:37;;19073:9;19068:474;19092:9;19088:1;:13;19068:474;;;19123:21;19173:6;19148:10;19159:1;19148:13;;;;;;;;:::i;:::-;;;;;;;19164:5;19148:21;;;;:::i;:::-;19147:32;;;;:::i;:::-;19123:56;;19194:20;19217:10;19228:1;19217:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;19194:43;;19274:12;19258:13;:28;19254:277;;;19323:28;19339:12;19323:13;:28;:::i;:::-;19307:10;19318:1;19307:13;;;;;;;;:::i;:::-;;;;;;:44;;;;;19386:4;19370:10;19381:1;19370:13;;;;;;;;:::i;:::-;:20;;;:13;;;;;;;;;;;:20;19254:277;;;19447:28;19462:13;19447:12;:28;:::i;:::-;19431:10;19442:1;19431:13;;;;;;;;:::i;:::-;;;;;;:44;;;;;19510:5;19494:10;19505:1;19494:13;;;;;;;;:::i;:::-;:21;;;:13;;;;;;;;;;;:21;19254:277;-1:-1:-1;;19103:3:16;;19068:474;;;;19554:31;;;18729:864;;:::o;15982:1335::-;16040:16;4039:17;4059:8;;;;;;;;;-1:-1:-1;;;;;4059:8:16;-1:-1:-1;;;;;4059:31:16;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4039:53;-1:-1:-1;4111:10:16;-1:-1:-1;;;;;4111:23:16;;;4103:50;;;;-1:-1:-1;;;4103:50:16;;;;;;;:::i;:::-;16088:8:::1;::::0;:21:::1;::::0;;-1:-1:-1;;;16088:21:16;;;;16069:16:::1;::::0;-1:-1:-1;;;;;16088:8:16::1;::::0;:19:::1;::::0;:21:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:21:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16069:40;;16120:17;16140:8;;;;;;;;;-1:-1:-1::0;;;;;16140:8:16::1;-1:-1:-1::0;;;;;16140:31:16::1;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16120:53;;16186:13;16202:24;16220:4;16202:9;:24::i;:::-;16186:40;;16253:1;16245:5;:9;16237:50;;;::::0;-1:-1:-1;;;16237:50:16;;18820:2:23;16237:50:16::1;::::0;::::1;18802:21:23::0;18859:2;18839:18;;;18832:30;18898;18878:18;;;18871:58;18946:18;;16237:50:16::1;18618:352:23::0;16237:50:16::1;16300:19;16322:13;-1:-1:-1::0;;;;;;;;;;;4322:14:3;;4191:152;16322:13:16::1;16300:35;;16368:1;16354:11;:15;16346:40;;;::::0;-1:-1:-1;;;16346:40:16;;19177:2:23;16346:40:16::1;::::0;::::1;19159:21:23::0;19216:2;19196:18;;;19189:30;-1:-1:-1;;;19235:18:23;;;19228:42;19287:18;;16346:40:16::1;18975:336:23::0;16346:40:16::1;16399:24;16440:17:::0;;-1:-1:-1;;;;;16426:32:16;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;16426:32:16::1;-1:-1:-1::0;16399:59:16;-1:-1:-1;16469:11:16::1;16504:5;16484:16;16492:8:::0;16484:5;:16:::1;:::i;:::-;16483:26;;;;:::i;:::-;16469:40:::0;-1:-1:-1;16520:21:16::1;16544:11;16469:40:::0;16544:5;:11:::1;:::i;:::-;16520:35;;16573:9;16568:304;16592:10;:17:::0;16588:21;::::1;16568:304;;;16631:20;16677:9;-1:-1:-1::0;;;;;16654:49:16::1;;16730:4;16754:10;16765:1;16754:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:19:::0;16654:134:::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;;16654:134:16;;;-1:-1:-1;;;;;19546:15:23;;;16654:134:16::1;::::0;::::1;19528:34:23::0;16754:19:16;::::1;19578:18:23::0;;;19571:43;19463:18;;16654:134:16::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16631:157:::0;-1:-1:-1;16849:11:16;16817:28:::1;16832:13:::0;16631:157;16817:28:::1;:::i;:::-;16816:44;;;;:::i;:::-;16803:7;16811:1;16803:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:57;-1:-1:-1;16611:3:16::1;;16568:304;;;;16920:13;16892:24;16910:4;16892:9;:24::i;:::-;:41;;16884:83;;;::::0;-1:-1:-1;;;16884:83:16;;19827:2:23;16884:83:16::1;::::0;::::1;19809:21:23::0;19866:2;19846:18;;;19839:30;19905:31;19885:18;;;19878:59;19954:18;;16884:83:16::1;19625:353:23::0;16884:83:16::1;16999:8;::::0;:22:::1;::::0;;-1:-1:-1;;;16999:22:16;;;;16980:16:::1;::::0;-1:-1:-1;;;;;16999:8:16::1;::::0;:20:::1;::::0;:22:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:22:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17058:45;::::0;-1:-1:-1;;;17058:45:16;;-1:-1:-1;;;;;20175:32:23;;17058:45:16::1;::::0;::::1;20157:51:23::0;20224:18;;;20217:34;;;16980:41:16;;-1:-1:-1;17032:23:16::1;::::0;17073:4:::1;::::0;17058:30:::1;::::0;20130:18:23;;17058:45:16::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17032:71;;17122:18;17114:50;;;::::0;-1:-1:-1;;;17114:50:16;;20746:2:23;17114:50:16::1;::::0;::::1;20728:21:23::0;20785:2;20765:18;;;20758:30;-1:-1:-1;;;20804:18:23;;;20797:49;20863:18;;17114:50:16::1;20544:343:23::0;17114:50:16::1;17177:35;17191:4;17198:13;17177:5;:35::i;:::-;17225:16;:14;:16::i;:::-;17264:2;-1:-1:-1::0;;;;;17259:23:16::1;;17268:13;17259:23;;;;2332:25:23::0;;2320:2;2305:18;;2186:177;17259:23:16::1;;;;;;;;-1:-1:-1::0;17302:7:16;;15982:1335;-1:-1:-1;;;;;;;;;;15982:1335:16:o;12727:334::-;12793:7;12816:27;12847:14;:12;:14::i;:::-;12813:48;;;12877:9;12872:163;12896:10;:17;12892:21;;12872:163;;;12962:5;-1:-1:-1;;;;;12939:28:16;:10;12950:1;12939:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;12939:19:16;:28;12935:89;;12995:10;13006:1;12995:13;;;;;;;;:::i;:::-;;;;;;;12988:20;;;;12727:334;;;:::o;12935:89::-;12915:3;;12872:163;;;-1:-1:-1;13052:1:16;;12727:334;-1:-1:-1;;;12727:334:16:o;29292:346::-;29342:4;29360:24;29386:27;29417:14;:12;:14::i;:::-;29359:72;;;;29447:9;29442:166;29466:10;:17;29462:1;:21;29442:166;;;29509:10;29520:1;29509:13;;;;;;;;:::i;:::-;;;;;;;:40;;;;;29542:7;;29526:10;29537:1;29526:13;;;;;;;;:::i;:::-;;;;;;;:23;29509:40;29505:92;;;29577:4;29570:11;;;;;29292:346;:::o;29505:92::-;29485:3;;29442:166;;;;29625:5;29618:12;;;;29292:346;:::o;3268:148:3:-;3400:9;3393:16;;3315:13;;-1:-1:-1;;;;;;;;;;;2359:20:3;3393:16;;;:::i;9044:1372:16:-;9185:7;9205:17;9225:40;9238:9;9249:7;9258:6;9225:12;:40::i;:::-;9205:60;;9278:20;9301:22;9313:9;9301:11;:22::i;:::-;9278:45;;9334:18;9355:20;9367:7;9355:11;:20::i;:::-;9334:41;;9388:23;9414:25;9429:9;9414:14;:25::i;:::-;9388:51;;9450:21;9474:23;9489:7;9474:14;:23::i;:::-;9450:47;-1:-1:-1;9539:26:16;9599:5;9570:24;9582:12;9570:9;:24;:::i;:::-;9568:36;;;;:::i;:::-;9539:65;-1:-1:-1;9615:24:16;9669:5;9643:22;9655:10;9643:9;:22;:::i;:::-;9642:32;;;;:::i;:::-;9615:59;;9789:31;9810:9;9789:20;:31::i;:::-;9771:15;:49;9767:268;;;9849:30;9861:18;9849:9;:30;:::i;:::-;9837:42;;9767:268;;;9993:30;10005:18;9993:9;:30;:::i;:::-;9981:42;;9767:268;10143:29;10164:7;10143:20;:29::i;:::-;10127:13;:45;10123:257;;;10201:28;10213:16;10201:9;:28;:::i;:::-;10189:40;;10123:257;;;10340:28;10352:16;10340:9;:28;:::i;:::-;10328:40;;10123:257;-1:-1:-1;10399:9:16;;9044:1372;-1:-1:-1;;;;;;;;;9044:1372:16:o;4767:178:3:-;4836:4;966:10:4;4890:27:3;966:10:4;4907:2:3;4911:5;4890:9;:27::i;21877:231:16:-;21938:7;21958:17;21978:8;;;;;;;;;-1:-1:-1;;;;;21978:8:16;-1:-1:-1;;;;;21978:31:16;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22029:71;;-1:-1:-1;;;22029:71:16;;22087:4;22029:71;;;19528:34:23;-1:-1:-1;;;;;19598:15:23;;;19578:18;;;19571:43;21958:53:16;;-1:-1:-1;22029:49:16;;;;;;19463:18:23;;22029:71:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;19781:275::-;19848:7;19871:30;19905:24;:22;:24::i;:::-;19868:61;;;19961:13;:20;19948:10;:33;19940:65;;;;-1:-1:-1;;;19940:65:16;;21094:2:23;19940:65:16;;;21076:21:23;21133:2;21113:18;;;21106:30;-1:-1:-1;;;21152:18:23;;;21145:49;21211:18;;19940:65:16;20892:343:23;19940:65:16;20023:13;20037:10;20023:25;;;;;;;;:::i;:::-;;;;;;;20016:32;;;19781:275;;;:::o;2213:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2213:29:16;;;;-1:-1:-1;2213:29:16;:::o;5003:195:3:-;-1:-1:-1;;;;;5162:20:3;;;5083:7;5162:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;5003:195::o;13574:1387:16:-;13658:7;4039:17;4059:8;;;;;;;;;-1:-1:-1;;;;;4059:8:16;-1:-1:-1;;;;;4059:31:16;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4039:53;-1:-1:-1;4111:10:16;-1:-1:-1;;;;;4111:23:16;;;4103:50;;;;-1:-1:-1;;;4103:50:16;;;;;;;:::i;:::-;13678:19:::1;13700:13;-1:-1:-1::0;;;;;;;;;;;4322:14:3;;4191:152;13700:13:16::1;13678:35;;13724:18;13757:26:::0;13786:13:::1;:11;:13::i;:::-;13839:16:::0;;13818:10:::1;:17:::0;13757:42;;-1:-1:-1;13818:37:16::1;13810:73;;;::::0;-1:-1:-1;;;13810:73:16;;21442:2:23;13810:73:16::1;::::0;::::1;21424:21:23::0;21481:2;21461:18;;;21454:30;21520:25;21500:18;;;21493:53;21563:18;;13810:73:16::1;21240:347:23::0;13810:73:16::1;13922:1;13902:17:::0;13894:43:::1;;;::::0;-1:-1:-1;;;13894:43:16;;21794:2:23;13894:43:16::1;::::0;::::1;21776:21:23::0;21833:1;21813:18;;;21806:29;-1:-1:-1;;;21851:18:23;;;21844:39;21900:18;;13894:43:16::1;21592:332:23::0;13894:43:16::1;13955:9;13950:367;13974:10;:17:::0;13970:21;::::1;13950:367;;;14013:13;14029:10:::0;14040:1:::1;14029:13;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;;::::1;;:19:::0;14108:9;;-1:-1:-1;;;;;14029:19:16;;::::1;::::0;-1:-1:-1;14108:9:16::1;14099:18:::0;;14095:108:::1;;14150:7;14158:1;14150:10;;;;;;;;:::i;:::-;-1:-1:-1::0;14179:8:16::1;::::0;-1:-1:-1;;;14179:8:16::1;14095:108;14229:38;14249:5;14256:7;14264:1;14256:10;;;;;;;;:::i;:::-;;;;;;;14229:19;:38::i;:::-;14217:50:::0;-1:-1:-1;14282:23:16::1;14217:50:::0;14282:23;::::1;:::i;:::-;;;13998:319;;13950:367;13993:3;;13950:367;;;;14350:1;14337:10;:14;14329:61;;;::::0;-1:-1:-1;;;14329:61:16;;22131:2:23;14329:61:16::1;::::0;::::1;22113:21:23::0;22170:2;22150:18;;;22143:30;22209:34;22189:18;;;22182:62;-1:-1:-1;;;22260:18:23;;;22253:32;22302:19;;14329:61:16::1;21929:398:23::0;14329:61:16::1;14403:14;14434:11;14449:1;14434:16:::0;14430:357:::1;;14489:13;::::0;14476:26:::1;::::0;:10;:26:::1;:::i;:::-;14467:35;;14430:357;;;14536:22;14564:24;:22;:24::i;:::-;14535:53;;;14628:1;14611:14;:18;14603:69;;;::::0;-1:-1:-1;;;14603:69:16;;22534:2:23;14603:69:16::1;::::0;::::1;22516:21:23::0;22573:2;22553:18;;;22546:30;22612:34;22592:18;;;22585:62;-1:-1:-1;;;22663:18:23;;;22656:36;22709:19;;14603:69:16::1;22332:402:23::0;14603:69:16::1;14761:13;::::0;14744:30:::1;::::0;:14;:30:::1;:::i;:::-;14728:11;14711:13;;14698:10;:26;;;;:::i;:::-;14697:42;;;;:::i;:::-;14696:79;;;;:::i;:::-;14687:88;;14520:267;14430:357;14805:6;14815:1;14805:11:::0;14797:37:::1;;;::::0;-1:-1:-1;;;14797:37:16;;22941:2:23;14797:37:16::1;::::0;::::1;22923:21:23::0;22980:2;22960:18;;;22953:30;-1:-1:-1;;;22999:18:23;;;22992:43;23052:18;;14797:37:16::1;22739:337:23::0;14797:37:16::1;14847:17;14853:2;14857:6;14847:5;:17::i;:::-;14877:16;:14;:16::i;:::-;14916:2;-1:-1:-1::0;;;;;14911:16:16::1;;14920:6;14911:16;;;;2332:25:23::0;;2320:2;2305:18;;2186:177;14911:16:16::1;;;;;;;;14947:6:::0;13574:1387;-1:-1:-1;;;;;;;13574:1387:16:o;20931:414::-;20975:7;20995:19;21032:9;;;;;;;;;-1:-1:-1;;;;;21032:9:16;-1:-1:-1;;;;;21017:34:16;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20995:58;;;-1:-1:-1;21064:14:16;21088:16;20995:58;21088:2;:16;:::i;:::-;21081:24;;:2;:24;:::i;:::-;21064:41;;21117:16;21139:24;:22;:24::i;:::-;21116:47;;;21174:19;21196:13;-1:-1:-1;;;;;;;;;;;4322:14:3;;4191:152;21196:13:16;21174:35;;21224:11;21239:1;21224:16;21220:57;;21264:1;21257:8;;;;;;20931:414;:::o;21220:57::-;21333:3;;21318:11;21297:17;21308:6;21297:8;:17;:::i;:::-;21296:33;;;;:::i;:::-;21295:41;;;;:::i;:::-;21287:50;;;;;;20931:414;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;8587:51:23::0;8560:18;;3534:31:0::1;8415:229:23::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;18163:281:16:-;18258:29;18289:32;4039:17;4059:8;;;;;;;;;-1:-1:-1;;;;;4059:8:16;-1:-1:-1;;;;;4059:31:16;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4039:53;-1:-1:-1;4111:10:16;-1:-1:-1;;;;;4111:23:16;;;4103:50;;;;-1:-1:-1;;;4103:50:16;;;;;;;:::i;:::-;18347:19:::1;:17;:19::i;:::-;18339:52;;;::::0;-1:-1:-1;;;18339:52:16;;12754:2:23;18339:52:16::1;::::0;::::1;12736:21:23::0;12793:2;12773:18;;;12766:30;-1:-1:-1;;;12812:18:23;;;12805:50;12872:18;;18339:52:16::1;12552:344:23::0;18339:52:16::1;18409:27;:25;:27::i;:::-;18402:34;;;;4028:145:::0;18163:281;;:::o;23232:755::-;23289:22;23373:17;;23313:27;;23373:17;-1:-1:-1;;;;;23414:24:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23414:24:16;;23401:37;;23454:9;23449:485;23473:9;23469:1;:13;23449:485;;;23504:13;23520:10;23531:1;23520:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;:19;-1:-1:-1;;;;;23520:19:16;;-1:-1:-1;23577:31:16;23520:19;23577:15;:31::i;:::-;23648:9;;23554:54;;-1:-1:-1;;;;;;23648:9:16;;;23630:27;;;;23625:252;;23695:12;23679:10;23690:1;23679:13;;;;;;;;:::i;:::-;;;;;;:28;;;;;23625:252;;;23748:17;23768:49;23796:5;23804:12;23768:19;:49::i;:::-;23748:69;;23852:9;23836:10;23847:1;23836:13;;;;;;;;:::i;:::-;;;;;;:25;;;;;23729:148;23625:252;23909:10;23920:1;23909:13;;;;;;;;:::i;:::-;;;;;;;23891:31;;;;;:::i;:::-;;-1:-1:-1;;;23484:3:16;;23449:485;;;;23944:35;23232:755;;:::o;26925:555::-;27129:10;:17;27058:29;;-1:-1:-1;;;;;27115:32:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27115:32:16;;27100:47;;27163:9;27158:283;27182:10;:17;27178:21;;27158:283;;;27221:23;27289:5;27265:10;27276:1;27265:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;27248:14;:37;;;;:::i;:::-;27247:47;;;;:::i;:::-;27221:73;;27329:15;27313:10;27324:1;27313:13;;;;;;;;:::i;:::-;;;;;;;:31;27309:121;;;27401:10;27412:1;27401:13;;;;;;;;:::i;:::-;;;;;;;27383:15;:31;;;;:::i;:::-;27365:12;27378:1;27365:15;;;;;;;;:::i;:::-;;;;;;:49;;;;;27309:121;-1:-1:-1;27201:3:16;;27158:283;;26276:306;26385:27;;26425:113;26449:10;:17;26445:21;;26425:113;;;26511:12;26524:1;26511:15;;;;;;;;:::i;:::-;;;;;;;26488:38;;;;;:::i;:::-;;-1:-1:-1;26468:3:16;;26425:113;;27762:361;27901:9;;27850:7;27874:17;;27850:7;;-1:-1:-1;;;;;27901:9:16;;27850:7;;27885:5;;27874:17;;;;;;:::i;:::-;;;;;;;;;;;;;;:23;-1:-1:-1;;;;;27874:23:16;:36;27870:60;;-1:-1:-1;27919:11:16;27912:18;;27870:60;27941:19;27963:57;27983:10;27994:5;27983:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:23;-1:-1:-1;;;;;27983:23:16;28008:11;27963:19;:57::i;:::-;27941:79;;28053:1;28039:11;:15;28031:55;;;;-1:-1:-1;;;28031:55:16;;24929:2:23;28031:55:16;;;24911:21:23;24968:2;24948:18;;;24941:30;25007:29;24987:18;;;24980:57;25054:18;;28031:55:16;24727:351:23;8996:208:3;-1:-1:-1;;;;;9066:21:3;;9062:91;;9110:32;;-1:-1:-1;;;9110:32:3;;9139:1;9110:32;;;8587:51:23;8560:18;;9110:32:3;8415:229:23;9062:91:3;9162:35;9178:1;9182:7;9191:5;9162:7;:35::i;11017:1385:16:-;11064:24;11090:27;11121:14;:12;:14::i;:::-;11063:72;;;;11146:16;11165:8;;;;;;;;;-1:-1:-1;;;;;11165:8:16;-1:-1:-1;;;;;11165:19:16;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11146:40;-1:-1:-1;11213:3:16;11297;11199:11;11313:1082;11337:10;:17;11333:21;;11313:1082;;;11376:24;11403:10;11414:1;11403:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;11376:49;;11461:3;11444:10;11455:1;11444:13;;;;;;;;:::i;:::-;;;;;;;:20;11440:139;;11533:3;11508:10;11519:1;11508:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;:28;;;;11555:8;;;11440:139;11597:10;11608:1;11597:13;;;;;;;;:::i;:::-;;;;;;;11593:633;;;11673:3;11657:10;11668:1;11657:13;;;;;;;;:::i;:::-;;;;;;;:19;;;;:::i;:::-;11631:10;11642:1;11631:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:45;;;;;;;:::i;:::-;;;;;;;;11731:16;11705:10;11716:1;11705:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:42;;11697:85;;;;-1:-1:-1;;;11697:85:16;;25285:2:23;11697:85:16;;;25267:21:23;25324:2;25304:18;;;25297:30;25363:32;25343:18;;;25336:60;25413:18;;11697:85:16;25083:354:23;11697:85:16;11593:633;;;11852:10;11863:1;11852:13;;;;;;;;:::i;:::-;;;;;;;11827:10;11838:1;11827:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:38;11823:388;;;11932:3;11916:10;11927:1;11916:13;;;;;;;;:::i;:::-;;;;;;;:19;;;;:::i;:::-;11890:10;11901:1;11890:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:45;;;;;;;:::i;:::-;;;;;;;;11994:16;11968:10;11979:1;11968:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:42;;11960:86;;;;-1:-1:-1;;;11960:86:16;;25644:2:23;11960:86:16;;;25626:21:23;25683:2;25663:18;;;25656:30;25722:33;25702:18;;;25695:61;25773:18;;11960:86:16;25442:355:23;11823:388:16;12188:3;12172:10;12183:1;12172:13;;;;;;;;:::i;:::-;;;;;;;:19;;;;:::i;:::-;12146:10;12157:1;12146:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:45;;;;;;;:::i;:::-;;;;-1:-1:-1;;11823:388:16;12271:13;12246:10;12257:1;12246:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:38;12242:142;;;12355:13;12330:10;12341:1;12330:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;:38;;;;12242:142;11361:1034;11313:1082;11356:3;;11313:1082;;;;11052:1350;;;;;11017:1385::o;10264:128:3:-;10348:37;10357:5;10364:7;10373:5;10380:4;10348:8;:37::i;:::-;10264:128;;;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;2577:147:3:-:0;6931:20:1;:18;:20::i;:::-;2679:38:3::1;2702:5;2709:7;2679:22;:38::i;4394:1041:16:-:0;4491:4;4508:18;4529:8;;;;;;;;;-1:-1:-1;;;;;4529:8:16;-1:-1:-1;;;;;4529:28:16;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4508:51;;4622:1;-1:-1:-1;;;;;4580:44:16;:8;;;;;;;;;-1:-1:-1;;;;;4580:8:16;-1:-1:-1;;;;;4580:28:16;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4580:44:16;;4572:83;;;;-1:-1:-1;;;4572:83:16;;26004:2:23;4572:83:16;;;25986:21:23;26043:2;26023:18;;;26016:30;26082:28;26062:18;;;26055:56;26128:18;;4572:83:16;25802:350:23;4572:83:16;4692:8;:15;4674:7;:14;:33;4666:80;;;;-1:-1:-1;;;4666:80:16;;26359:2:23;4666:80:16;;;26341:21:23;26398:2;26378:18;;;26371:30;26437:34;26417:18;;;26410:62;-1:-1:-1;;;26488:18:23;;;26481:32;26530:19;;4666:80:16;26157:398:23;4666:80:16;4764:9;4759:647;4783:7;:14;4779:1;:18;4759:647;;;4849:1;-1:-1:-1;;;;;4827:24:16;:7;4835:1;4827:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4827:24:16;;4819:58;;;;-1:-1:-1;;;4819:58:16;;26762:2:23;4819:58:16;;;26744:21:23;26801:2;26781:18;;;26774:30;-1:-1:-1;;;26820:18:23;;;26813:51;26881:18;;4819:58:16;26560:345:23;4819:58:16;4914:1;4900:8;4909:1;4900:11;;;;;;;;:::i;:::-;;;;;;;:15;4892:42;;;;-1:-1:-1;;;4892:42:16;;27112:2:23;4892:42:16;;;27094:21:23;27151:2;27131:18;;;27124:30;-1:-1:-1;;;27170:18:23;;;27163:44;27224:18;;4892:42:16;26910:338:23;4892:42:16;4951:10;4985:180;;;;;;;;5025:7;5033:1;5025:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4985:180:16;;;;;5066:8;5075:1;5066:11;;;;;;;;:::i;:::-;;;;;;;;;;;;4985:180;;5110:1;4985:180;;;;;;4951:229;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4951:229:16;-1:-1:-1;;;;;4951:229:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5219:10;;;;5227:1;;5219:10;;;;;;:::i;:::-;;;;;;;;;;;5249:51;;-1:-1:-1;;;5249:51:16;;5273:4;5249:51;;;19528:34:23;-1:-1:-1;;;;;19598:15:23;;;19578:18;;;19571:43;5219:10:16;;-1:-1:-1;5249:15:16;;;;;;19463:18:23;;5249:51:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5304:1;5249:56;5245:150;;5326:53;;-1:-1:-1;;;5326:53:16;;-1:-1:-1;;;;;20175:32:23;;;5326:53:16;;;20157:51:23;-1:-1:-1;;20224:18:23;;;20217:34;5326:13:16;;;;;20130:18:23;;5326:53:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5245:150;-1:-1:-1;4799:3:16;;4759:647;;;-1:-1:-1;5423:4:16;;4394:1041;-1:-1:-1;;;;4394:1041:16:o;11993:477:3:-;12092:24;12119:25;12129:5;12136:7;12119:9;:25::i;:::-;12092:52;;-1:-1:-1;;12158:16:3;:37;12154:310;;12234:5;12215:16;:24;12211:130;;;12266:60;;-1:-1:-1;;;12266:60:3;;-1:-1:-1;;;;;10087:32:23;;12266:60:3;;;10069:51:23;10136:18;;;10129:34;;;10179:18;;;10172:34;;;10042:18;;12266:60:3;9867:345:23;12211:130:3;12382:57;12391:5;12398:7;12426:5;12407:16;:24;12433:5;12382:8;:57::i;:::-;12082:388;11993:477;;;:::o;6868:300::-;-1:-1:-1;;;;;6951:18:3;;6947:86;;6992:30;;-1:-1:-1;;;6992:30:3;;7019:1;6992:30;;;8587:51:23;8560:18;;6992:30:3;8415:229:23;6947:86:3;-1:-1:-1;;;;;7046:16:3;;7042:86;;7085:32;;-1:-1:-1;;;7085:32:3;;7114:1;7085:32;;;8587:51:23;8560:18;;7085:32:3;8415:229:23;7042:86:3;7137:24;7145:4;7151:2;7155:5;7137:7;:24::i;4599:312:2:-;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;-1:-1:-1;;;;;;;;;;;2035:53:8;-1:-1:-1;;;;;2035:53:8;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:2;;;;;;;;;;;3911:84:16;2334:13:0;:11;:13::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:2;;-1:-1:-1;;;;;8605:32:23;;6513:60:2;;;8587:51:23;8560:18;;6513:60:2;8415:229:23;6147:437:2;-1:-1:-1;;;;;;;;;;;6245:40:2;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:2;;;;;2332:25:23;;;2305:18;;6312:34:2;2186:177:23;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:2;;;;;;;;;;;3326:384:5;2388:30;3526:9;;-1:-1:-1;;3526:20:5;3522:88;;3569:30;;-1:-1:-1;;;3569:30:5;;;;;;;;;;;3522:88;1847:1;3684:19;;3326:384::o;2658:162:0:-;966:10:4;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:4;2763:40:0;;;8587:51:23;8560:18;;2763:40:0;8415:229:23;3774:248:0;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;9522:206:3:-;-1:-1:-1;;;;;9592:21:3;;9588:89;;9636:30;;-1:-1:-1;;;9636:30:3;;9663:1;9636:30;;;8587:51:23;8560:18;;9636:30:3;8415:229:23;9588:89:3;9686:35;9694:7;9711:1;9715:5;9686:7;:35::i;28885:176:16:-;29035:9;;28972:19;;29011:42;;29024:9;;-1:-1:-1;;;;;29035:9:16;29046:6;29011:12;:42::i;24383:1654::-;24438:16;24456;24485:17;24505:8;;;;;;;;;-1:-1:-1;;;;;24505:8:16;-1:-1:-1;;;;;24505:31:16;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24485:53;;24549:18;24570:8;;;;;;;;;-1:-1:-1;;;;;24570:8:16;-1:-1:-1;;;;;24570:28:16;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24613:23;24653:17;;24549:51;;-1:-1:-1;24613:23:16;-1:-1:-1;;;;;24639:32:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24639:32:16;-1:-1:-1;24682:24:16;24723:17;;24613:58;;-1:-1:-1;24682:24:16;-1:-1:-1;;;;;24709:32:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24709:32:16;-1:-1:-1;24752:36:16;24805:17;;24682:59;;-1:-1:-1;24752:36:16;-1:-1:-1;;;;;24791:32:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24791:32:16;-1:-1:-1;24834:39:16;24890:17;;24752:71;;-1:-1:-1;24834:39:16;-1:-1:-1;;;;;24876:32:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24876:32:16;-1:-1:-1;24919:29:16;24965:17;;24834:74;;-1:-1:-1;24919:29:16;-1:-1:-1;;;;;24951:32:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24951:32:16;-1:-1:-1;24994:32:16;25043:17;;24919:64;;-1:-1:-1;24994:32:16;-1:-1:-1;;;;;25029:32:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25029:32:16;;24994:67;;25079:9;25074:232;25098:10;:17;25094:21;;25074:232;;;25149:10;25160:1;25149:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;25137:9;;-1:-1:-1;;;;;25149:19:16;;;;25137:6;;25144:1;;25137:9;;;;;;:::i;:::-;;;;;;:31;-1:-1:-1;;;;;25137:31:16;;;-1:-1:-1;;;;;25137:31:16;;;;;25196:10;25207:1;25196:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;25183:7;25191:1;25183:10;;;;;;;;:::i;:::-;;;;;;:33;;;;;25263:6;25270:1;25263:9;;;;;;;;:::i;:::-;;;;;;;;;;;25256:38;;-1:-1:-1;;;25256:38:16;;-1:-1:-1;;;;;8605:32:23;;;25256:38:16;;;8587:51:23;25256:27:16;;;;;;8560:18:23;;25256:38:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25231:19;25251:1;25231:22;;;;;;;;:::i;:::-;;;;;;;;;;:63;25117:3;;25074:232;;;;25318:25;25346:13;:11;:13::i;:::-;25318:41;;25392:10;-1:-1:-1;;;;;25372:41:16;;25414:8;25424:6;25432:7;25441;;25450:9;25461;25472;;;;;;;;;-1:-1:-1;;;;;25472:9:16;25372:110;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25500:9;25495:428;25519:10;:17;25515:21;;25495:428;;;25593:6;25600:1;25593:9;;;;;;;;:::i;:::-;;;;;;;;;;;25586:38;;-1:-1:-1;;;25586:38:16;;-1:-1:-1;;;;;8605:32:23;;;25586:38:16;;;8587:51:23;25586:27:16;;;;;;8560:18:23;;25586:38:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25558:22;25581:1;25558:25;;;;;;;;:::i;:::-;;;;;;:66;;;;;25673:19;25693:1;25673:22;;;;;;;;:::i;:::-;;;;;;;25645;25668:1;25645:25;;;;;;;;:::i;:::-;;;;;;;:50;25641:271;;;25762:19;25782:1;25762:22;;;;;;;;:::i;:::-;;;;;;;25734;25757:1;25734:25;;;;;;;;:::i;:::-;;;;;;;:50;;;;:::i;:::-;25716:12;25729:1;25716:15;;;;;;;;:::i;:::-;;;;;;:68;;;;;25641:271;;;25871:22;25894:1;25871:25;;;;;;;;:::i;:::-;;;;;;;25846:19;25866:1;25846:22;;;;;;;;:::i;:::-;;;;;;;:50;;;;:::i;:::-;25825:15;25841:1;25825:18;;;;;;;;:::i;:::-;;;;;;:71;;;;;25641:271;25538:3;;25495:428;;;;25959:10;-1:-1:-1;;;;;25940:38:16;;25971:6;25940:38;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;25999:12:16;;26013:15;;-1:-1:-1;24383:1654:16;-1:-1:-1;;;;;;;24383:1654:16:o;28424:160::-;28549:9;;28509:7;;28536:40;;-1:-1:-1;;;;;28549:9:16;28560:7;28569:6;28536:12;:40::i;7483:1170:3:-;-1:-1:-1;;;;;;;;;;;;;;;;7625:18:3;;7621:546;;7779:5;7761:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7621:546:3;;-1:-1:-1;7621:546:3;;-1:-1:-1;;;;;7837:17:3;;7815:19;7837:17;;;;;;;;;;;7872:19;;;7868:115;;;7918:50;;-1:-1:-1;;;7918:50:3;;-1:-1:-1;;;;;10087:32:23;;7918:50:3;;;10069:51:23;10136:18;;;10129:34;;;10179:18;;;10172:34;;;10042:18;;7918:50:3;9867:345:23;7868:115:3;-1:-1:-1;;;;;8103:17:3;;:11;:17;;;;;;;;;;8123:19;;;;8103:39;;7621:546;-1:-1:-1;;;;;8181:16:3;;8177:429;;8344:14;;;:23;;;;;;;8177:429;;;-1:-1:-1;;;;;8557:15:3;;:11;:15;;;;;;;;;;:24;;;;;;8177:429;8636:2;-1:-1:-1;;;;;8621:25:3;8630:4;-1:-1:-1;;;;;8621:25:3;;8640:5;8621:25;;;;2332::23;;2320:2;2305:18;;2186:177;8621:25:3;;;;;;;;7558:1095;7483:1170;;;:::o;11224:487::-;-1:-1:-1;;;;;;;;;;;;;;;;11389:19:3;;11385:89;;11431:32;;-1:-1:-1;;;11431:32:3;;11460:1;11431:32;;;8587:51:23;8560:18;;11431:32:3;8415:229:23;11385:89:3;-1:-1:-1;;;;;11487:21:3;;11483:90;;11531:31;;-1:-1:-1;;;11531:31:3;;11559:1;11531:31;;;8587:51:23;8560:18;;11531:31:3;8415:229:23;11483:90:3;-1:-1:-1;;;;;11582:20:3;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11629:76;;;;11679:7;-1:-1:-1;;;;;11663:31:3;11672:5;-1:-1:-1;;;;;11663:31:3;;11688:5;11663:31;;;;2332:25:23;;2320:2;2305:18;;2186:177;11663:31:3;;;;;;;;11629:76;11322:389;11224:487;;;;:::o;7084:141:1:-;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1980:235:0;6931:20:1;:18;:20::i;2730:216:3:-;6931:20:1;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2895:7:3;:15:::1;2905:5:::0;2895:7;:15:::1;:::i;:::-;-1:-1:-1::0;2920:9:3::1;::::0;::::1;:19;2932:7:::0;2920:9;:19:::1;:::i;2779:335:8:-:0;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:8;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;2186:281::-;2263:17;-1:-1:-1;;;;;2263:29:8;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:8;;-1:-1:-1;;;;;8605:32:23;;2320:47:8;;;8587:51:23;8560:18;;2320:47:8;8415:229:23;2259:119:8;-1:-1:-1;;;;;;;;;;;2387:73:8;;-1:-1:-1;;;;;;2387:73:8;-1:-1:-1;;;;;2387:73:8;;;;;;;;;;2186:281::o;4106:253:13:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:13;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:13:o;6598:122:8:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:8;;;;;;;;;;;4625:582:13;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:13;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:13;;-1:-1:-1;;;;;8605:32:23;;5121:24:13;;;8587:51:23;8560:18;;5121:24:13;8415:229:23;5041:119:13;-1:-1:-1;5180:10:13;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:13;;;;;;;;;;;14:418:23;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:131::-;-1:-1:-1;;;;;512:31:23;;502:42;;492:70;;558:1;555;548:12;573:134;641:20;;670:31;641:20;670:31;:::i;:::-;573:134;;;:::o;712:247::-;771:6;824:2;812:9;803:7;799:23;795:32;792:52;;;840:1;837;830:12;792:52;879:9;866:23;898:31;923:5;898:31;:::i;964:439::-;1017:3;1055:5;1049:12;1082:6;1077:3;1070:19;1108:4;1137;1132:3;1128:14;1121:21;;1176:4;1169:5;1165:16;1199:1;1209:169;1223:6;1220:1;1217:13;1209:169;;;1284:13;;1272:26;;1318:12;;;;1353:15;;;;1245:1;1238:9;1209:169;;;-1:-1:-1;1394:3:23;;964:439;-1:-1:-1;;;;;964:439:23:o;1408:261::-;1587:2;1576:9;1569:21;1550:4;1607:56;1659:2;1648:9;1644:18;1636:6;1607:56;:::i;1674:315::-;1742:6;1750;1803:2;1791:9;1782:7;1778:23;1774:32;1771:52;;;1819:1;1816;1809:12;1771:52;1858:9;1845:23;1877:31;1902:5;1877:31;:::i;:::-;1927:5;1979:2;1964:18;;;;1951:32;;-1:-1:-1;;;1674:315:23:o;2368:127::-;2429:10;2424:3;2420:20;2417:1;2410:31;2460:4;2457:1;2450:15;2484:4;2481:1;2474:15;2500:275;2571:2;2565:9;2636:2;2617:13;;-1:-1:-1;;2613:27:23;2601:40;;-1:-1:-1;;;;;2656:34:23;;2692:22;;;2653:62;2650:88;;;2718:18;;:::i;:::-;2754:2;2747:22;2500:275;;-1:-1:-1;2500:275:23:o;2780:183::-;2840:4;-1:-1:-1;;;;;2865:6:23;2862:30;2859:56;;;2895:18;;:::i;:::-;-1:-1:-1;2940:1:23;2936:14;2952:4;2932:25;;2780:183::o;2968:668::-;3022:5;3075:3;3068:4;3060:6;3056:17;3052:27;3042:55;;3093:1;3090;3083:12;3042:55;3129:6;3116:20;3155:4;3179:60;3195:43;3235:2;3195:43;:::i;:::-;3179:60;:::i;:::-;3261:3;3285:2;3280:3;3273:15;3313:4;3308:3;3304:14;3297:21;;3370:4;3364:2;3361:1;3357:10;3349:6;3345:23;3341:34;3327:48;;3398:3;3390:6;3387:15;3384:35;;;3415:1;3412;3405:12;3384:35;3451:4;3443:6;3439:17;3465:142;3481:6;3476:3;3473:15;3465:142;;;3547:17;;3535:30;;3585:12;;;;3498;;3465:142;;;-1:-1:-1;3625:5:23;2968:668;-1:-1:-1;;;;;;2968:668:23:o;3641:1358::-;3777:6;3785;3793;3801;3854:3;3842:9;3833:7;3829:23;3825:33;3822:53;;;3871:1;3868;3861:12;3822:53;3911:9;3898:23;-1:-1:-1;;;;;3981:2:23;3973:6;3970:14;3967:34;;;3997:1;3994;3987:12;3967:34;4035:6;4024:9;4020:22;4010:32;;4080:7;4073:4;4069:2;4065:13;4061:27;4051:55;;4102:1;4099;4092:12;4051:55;4138:2;4125:16;4160:4;4184:60;4200:43;4240:2;4200:43;:::i;4184:60::-;4278:15;;;4360:1;4356:10;;;;4348:19;;4344:28;;;4309:12;;;;4384:19;;;4381:39;;;4416:1;4413;4406:12;4381:39;4440:11;;;;4460:217;4476:6;4471:3;4468:15;4460:217;;;4556:3;4543:17;4573:31;4598:5;4573:31;:::i;:::-;4617:18;;4493:12;;;;4655;;;;4460:217;;;4696:5;-1:-1:-1;;4739:18:23;;4726:32;;-1:-1:-1;;4770:16:23;;;4767:36;;;4799:1;4796;4789:12;4767:36;;4822:63;4877:7;4866:8;4855:9;4851:24;4822:63;:::i;:::-;4812:73;;;4932:2;4921:9;4917:18;4904:32;4894:42;;4955:38;4989:2;4978:9;4974:18;4955:38;:::i;:::-;4945:48;;3641:1358;;;;;;;:::o;5004:456::-;5081:6;5089;5097;5150:2;5138:9;5129:7;5125:23;5121:32;5118:52;;;5166:1;5163;5156:12;5118:52;5205:9;5192:23;5224:31;5249:5;5224:31;:::i;:::-;5274:5;-1:-1:-1;5331:2:23;5316:18;;5303:32;5344:33;5303:32;5344:33;:::i;:::-;5004:456;;5396:7;;-1:-1:-1;;;5450:2:23;5435:18;;;;5422:32;;5004:456::o;5654:332::-;5861:6;5850:9;5843:25;5904:2;5899;5888:9;5884:18;5877:30;5824:4;5924:56;5976:2;5965:9;5961:18;5953:6;5924:56;:::i;5991:898::-;6068:6;6076;6129:2;6117:9;6108:7;6104:23;6100:32;6097:52;;;6145:1;6142;6135:12;6097:52;6184:9;6171:23;6203:31;6228:5;6203:31;:::i;:::-;6253:5;-1:-1:-1;6277:2:23;6315:18;;;6302:32;-1:-1:-1;;;;;6383:14:23;;;6380:34;;;6410:1;6407;6400:12;6380:34;6448:6;6437:9;6433:22;6423:32;;6493:7;6486:4;6482:2;6478:13;6474:27;6464:55;;6515:1;6512;6505:12;6464:55;6551:2;6538:16;6573:2;6569;6566:10;6563:36;;;6579:18;;:::i;:::-;6621:53;6664:2;6645:13;;-1:-1:-1;;6641:27:23;6637:36;;6621:53;:::i;:::-;6608:66;;6697:2;6690:5;6683:17;6737:7;6732:2;6727;6723;6719:11;6715:20;6712:33;6709:53;;;6758:1;6755;6748:12;6709:53;6813:2;6808;6804;6800:11;6795:2;6788:5;6784:14;6771:45;6857:1;6852:2;6847;6840:5;6836:14;6832:23;6825:34;;6878:5;6868:15;;;;;5991:898;;;;;:::o;7076:465::-;7129:3;7167:5;7161:12;7194:6;7189:3;7182:19;7220:4;7249;7244:3;7240:14;7233:21;;7288:4;7281:5;7277:16;7311:1;7321:195;7335:6;7332:1;7329:13;7321:195;;;7400:13;;-1:-1:-1;;;;;7396:39:23;7384:52;;7456:12;;;;7491:15;;;;7432:1;7350:9;7321:195;;7546:261;7725:2;7714:9;7707:21;7688:4;7745:56;7797:2;7786:9;7782:18;7774:6;7745:56;:::i;7812:598::-;7898:6;7906;7914;7922;7975:3;7963:9;7954:7;7950:23;7946:33;7943:53;;;7992:1;7989;7982:12;7943:53;8031:9;8018:23;8050:31;8075:5;8050:31;:::i;:::-;8100:5;-1:-1:-1;8157:2:23;8142:18;;8129:32;8170:33;8129:32;8170:33;:::i;:::-;8222:7;-1:-1:-1;8276:2:23;8261:18;;8248:32;;-1:-1:-1;8332:2:23;8317:18;;8304:32;8345:33;8304:32;8345:33;:::i;:::-;7812:598;;;;-1:-1:-1;7812:598:23;;-1:-1:-1;;7812:598:23:o;8649:820::-;8911:2;8923:21;;;8993:13;;8896:18;;;9015:22;;;8863:4;;9090;;9068:2;9053:18;;;9117:17;;;8863:4;9162:185;9176:6;9173:1;9170:13;9162:185;;;9251:13;;9244:21;9237:29;9225:42;;9287:12;;;;9322:15;;;;9198:1;9191:9;9162:185;;;9166:3;;;9394:9;9389:3;9385:19;9378:4;9367:9;9363:20;9356:49;9422:41;9459:3;9451:6;9422:41;:::i;9682:180::-;9741:6;9794:2;9782:9;9773:7;9769:23;9765:32;9762:52;;;9810:1;9807;9800:12;9762:52;-1:-1:-1;9833:23:23;;9682:180;-1:-1:-1;9682:180:23:o;10217:388::-;10285:6;10293;10346:2;10334:9;10325:7;10321:23;10317:32;10314:52;;;10362:1;10359;10352:12;10314:52;10401:9;10388:23;10420:31;10445:5;10420:31;:::i;:::-;10470:5;-1:-1:-1;10527:2:23;10512:18;;10499:32;10540:33;10499:32;10540:33;:::i;:::-;10592:7;10582:17;;;10217:388;;;;;:::o;10610:483::-;10703:6;10711;10764:2;10752:9;10743:7;10739:23;10735:32;10732:52;;;10780:1;10777;10770:12;10732:52;10819:9;10806:23;10838:31;10863:5;10838:31;:::i;:::-;10888:5;-1:-1:-1;10944:2:23;10929:18;;10916:32;-1:-1:-1;;;;;10960:30:23;;10957:50;;;11003:1;11000;10993:12;10957:50;11026:61;11079:7;11070:6;11059:9;11055:22;11026:61;:::i;:::-;11016:71;;;10610:483;;;;;:::o;11098:465::-;11355:2;11344:9;11337:21;11318:4;11381:56;11433:2;11422:9;11418:18;11410:6;11381:56;:::i;:::-;11485:9;11477:6;11473:22;11468:2;11457:9;11453:18;11446:50;11513:44;11550:6;11542;11513:44;:::i;11568:380::-;11647:1;11643:12;;;;11690;;;11711:61;;11765:4;11757:6;11753:17;11743:27;;11711:61;11818:2;11810:6;11807:14;11787:18;11784:38;11781:161;;11864:10;11859:3;11855:20;11852:1;11845:31;11899:4;11896:1;11889:15;11927:4;11924:1;11917:15;11953:251;12023:6;12076:2;12064:9;12055:7;12051:23;12047:32;12044:52;;;12092:1;12089;12082:12;12044:52;12124:9;12118:16;12143:31;12168:5;12143:31;:::i;12209:338::-;12411:2;12393:21;;;12450:2;12430:18;;;12423:30;-1:-1:-1;;;12484:2:23;12469:18;;12462:44;12538:2;12523:18;;12209:338::o;12901:127::-;12962:10;12957:3;12953:20;12950:1;12943:31;12993:4;12990:1;12983:15;13017:4;13014:1;13007:15;13033:168;13106:9;;;13137;;13154:15;;;13148:22;;13134:37;13124:71;;13175:18;;:::i;13206:127::-;13267:10;13262:3;13258:20;13255:1;13248:31;13298:4;13295:1;13288:15;13322:4;13319:1;13312:15;13338:881;13433:6;13464:2;13507;13495:9;13486:7;13482:23;13478:32;13475:52;;;13523:1;13520;13513:12;13475:52;13556:9;13550:16;-1:-1:-1;;;;;13581:6:23;13578:30;13575:50;;;13621:1;13618;13611:12;13575:50;13644:22;;13697:4;13689:13;;13685:27;-1:-1:-1;13675:55:23;;13726:1;13723;13716:12;13675:55;13755:2;13749:9;13778:60;13794:43;13834:2;13794:43;:::i;13778:60::-;13872:15;;;13954:1;13950:10;;;;13942:19;;13938:28;;;13903:12;;;;13978:19;;;13975:39;;;14010:1;14007;14000:12;13975:39;14034:11;;;;14054:135;14070:6;14065:3;14062:15;14054:135;;;14136:10;;14124:23;;14087:12;;;;14167;;;;14054:135;;;14208:5;13338:881;-1:-1:-1;;;;;;;13338:881:23:o;14929:125::-;14994:9;;;15015:10;;;15012:36;;;15028:18;;:::i;16348:184::-;16418:6;16471:2;16459:9;16450:7;16446:23;16442:32;16439:52;;;16487:1;16484;16477:12;16439:52;-1:-1:-1;16510:16:23;;16348:184;-1:-1:-1;16348:184:23:o;17604:217::-;17644:1;17670;17660:132;;17714:10;17709:3;17705:20;17702:1;17695:31;17749:4;17746:1;17739:15;17777:4;17774:1;17767:15;17660:132;-1:-1:-1;17806:9:23;;17604:217::o;17826:128::-;17893:9;;;17914:11;;;17911:37;;;17928:18;;:::i;20262:277::-;20329:6;20382:2;20370:9;20361:7;20357:23;20353:32;20350:52;;;20398:1;20395;20388:12;20350:52;20430:9;20424:16;20483:5;20476:13;20469:21;20462:5;20459:32;20449:60;;20505:1;20502;20495:12;23081:273;23149:6;23202:2;23190:9;23181:7;23177:23;23173:32;23170:52;;;23218:1;23215;23208:12;23170:52;23250:9;23244:16;23300:4;23293:5;23289:16;23282:5;23279:27;23269:55;;23320:1;23317;23310:12;23359:416;23448:1;23485:5;23448:1;23499:270;23520:7;23510:8;23507:21;23499:270;;;23579:4;23575:1;23571:6;23567:17;23561:4;23558:27;23555:53;;;23588:18;;:::i;:::-;23638:7;23628:8;23624:22;23621:55;;;23658:16;;;;23621:55;23737:22;;;;23697:15;;;;23499:270;;;23503:3;23359:416;;;;;:::o;23780:806::-;23829:5;23859:8;23849:80;;-1:-1:-1;23900:1:23;23914:5;;23849:80;23948:4;23938:76;;-1:-1:-1;23985:1:23;23999:5;;23938:76;24030:4;24048:1;24043:59;;;;24116:1;24111:130;;;;24023:218;;24043:59;24073:1;24064:10;;24087:5;;;24111:130;24148:3;24138:8;24135:17;24132:43;;;24155:18;;:::i;:::-;-1:-1:-1;;24211:1:23;24197:16;;24226:5;;24023:218;;24325:2;24315:8;24312:16;24306:3;24300:4;24297:13;24293:36;24287:2;24277:8;24274:16;24269:2;24263:4;24260:12;24256:35;24253:77;24250:159;;;-1:-1:-1;24362:19:23;;;24394:5;;24250:159;24441:34;24466:8;24460:4;24441:34;:::i;:::-;24511:6;24507:1;24503:6;24499:19;24490:7;24487:32;24484:58;;;24522:18;;:::i;:::-;24560:20;;23780:806;-1:-1:-1;;;23780:806:23:o;24591:131::-;24651:5;24680:36;24707:8;24701:4;24680:36;:::i;27442:1023::-;27889:3;27878:9;27871:22;27852:4;27916:57;27968:3;27957:9;27953:19;27945:6;27916:57;:::i;:::-;28021:9;28013:6;28009:22;28004:2;27993:9;27989:18;27982:50;28055:44;28092:6;28084;28055:44;:::i;:::-;28041:58;;28147:9;28139:6;28135:22;28130:2;28119:9;28115:18;28108:50;28175:44;28212:6;28204;28175:44;:::i;:::-;28250:2;28235:18;;28228:34;;;;-1:-1:-1;;;;;;;28337:15:23;;;28331:3;28316:19;;28309:44;28390:15;;;28289:3;28369:19;;28362:44;28443:15;;;28437:3;28422:19;;;28415:44;28167:52;27442:1023;-1:-1:-1;;;27442:1023:23:o;28596:518::-;28698:2;28693:3;28690:11;28687:421;;;28734:5;28731:1;28724:16;28778:4;28775:1;28765:18;28848:2;28836:10;28832:19;28829:1;28825:27;28819:4;28815:38;28884:4;28872:10;28869:20;28866:47;;;-1:-1:-1;28907:4:23;28866:47;28962:2;28957:3;28953:12;28950:1;28946:20;28940:4;28936:31;28926:41;;29017:81;29035:2;29028:5;29025:13;29017:81;;;29094:1;29080:16;;29061:1;29050:13;29017:81;;29290:1345;29416:3;29410:10;-1:-1:-1;;;;;29435:6:23;29432:30;29429:56;;;29465:18;;:::i;:::-;29494:97;29584:6;29544:38;29576:4;29570:11;29544:38;:::i;:::-;29538:4;29494:97;:::i;:::-;29646:4;;29703:2;29692:14;;29720:1;29715:663;;;;30422:1;30439:6;30436:89;;;-1:-1:-1;30491:19:23;;;30485:26;30436:89;-1:-1:-1;;29247:1:23;29243:11;;;29239:24;29235:29;29225:40;29271:1;29267:11;;;29222:57;30538:81;;29685:944;;29715:663;28543:1;28536:14;;;28580:4;28567:18;;-1:-1:-1;;29751:20:23;;;29869:236;29883:7;29880:1;29877:14;29869:236;;;29972:19;;;29966:26;29951:42;;30064:27;;;;30032:1;30020:14;;;;29899:19;;29869:236;;;29873:3;30133:6;30124:7;30121:19;30118:201;;;30194:19;;;30188:26;-1:-1:-1;;30277:1:23;30273:14;;;30289:3;30269:24;30265:37;30261:42;30246:58;30231:74;;30118:201;-1:-1:-1;;;;;30365:1:23;30349:14;;;30345:22;30332:36;;-1:-1:-1;29290:1345:23:o;30640:301::-;30769:3;30807:6;30801:13;30853:6;30846:4;30838:6;30834:17;30829:3;30823:37;30915:1;30879:16;;30904:13;;;-1:-1:-1;30879:16:23;30640:301;-1:-1:-1;30640:301:23:o"},"gasEstimates":{"creation":{"codeDepositCost":"3945400","executionCost":"infinite","totalCost":"infinite"},"external":{"ONE()":"2361","UPGRADE_INTERFACE_VERSION()":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","assetInfos(uint256)":"9029","assetLiquidity(uint256)":"infinite","balanceOf(address)":"infinite","baseAsset()":"2425","burn(address)":"infinite","computeTotalValuation()":"infinite","decimals()":"266","getAmountOut(address,address,uint256)":"infinite","getAmountOutWithSlippage(address,address,uint256)":"infinite","getAssetReserve(address)":"infinite","getAssets()":"infinite","getDeviation()":"infinite","getDeviationForToken(address)":"infinite","getReserves()":"infinite","getSlippage(address)":"infinite","getSlippages()":"infinite","getTokenWeight(address)":"infinite","getWeights()":"infinite","initialize(address[],uint256[],uint256,address)":"infinite","isRebalanceNeeded()":"infinite","liquidity()":"infinite","mint(address,uint256[])":"infinite","name()":"infinite","owner()":"2397","performRebalanceIfNeeded()":"infinite","proxiableUUID()":"infinite","rebalanceWeights(address)":"infinite","registry()":"2382","renounceOwnership()":"infinite","reserves(address)":"2554","swap(address,address,uint256,address)":"infinite","symbol()":"infinite","totalSupply()":"infinite","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"infinite","trigger()":"2362","unitPrice()":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite","_calculateAmountsToAdd(uint256,uint256[] memory)":"infinite","_calculateLiquidity(uint256,uint256)":"infinite","_calculateTotalAddedLiquidity(uint256[] memory)":"infinite","_computeTotalValuation()":"infinite","_convertBaseToToken(address,uint256)":"infinite","_convertTokenToBase(address,uint256)":"infinite","_performRebalanceIfNeeded()":"infinite","initializeAssets(address[] memory,uint256[] memory)":"infinite","updateSlippage()":"infinite"}},"methodIdentifiers":{"ONE()":"c2ee3a08","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","assetInfos(uint256)":"d14ef46d","assetLiquidity(uint256)":"cf8fa764","balanceOf(address)":"70a08231","baseAsset()":"cdf456e1","burn(address)":"89afcb44","computeTotalValuation()":"36bf6e39","decimals()":"313ce567","getAmountOut(address,address,uint256)":"4aa06652","getAmountOutWithSlippage(address,address,uint256)":"a1f241cc","getAssetReserve(address)":"b2b55d70","getAssets()":"67e4ac2c","getDeviation()":"89ab3532","getDeviationForToken(address)":"89b3179b","getReserves()":"0902f1ac","getSlippage(address)":"12899068","getSlippages()":"18904ea4","getTokenWeight(address)":"250aa683","getWeights()":"22acb867","initialize(address[],uint256[],uint256,address)":"228835ac","isRebalanceNeeded()":"8a77c8dc","liquidity()":"1a686502","mint(address,uint256[])":"de836ebd","name()":"06fdde03","owner()":"8da5cb5b","performRebalanceIfNeeded()":"f47b45e8","proxiableUUID()":"52d1902d","rebalanceWeights(address)":"0723c999","registry()":"7b103999","renounceOwnership()":"715018a6","reserves(address)":"d66bd524","swap(address,address,uint256,address)":"6e81221c","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","trigger()":"7fec8d38","unitPrice()":"e73faa2d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesBurned\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesMinted\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"RebalancePerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsAdded\",\"type\":\"uint256[]\"}],\"name\":\"WeightsRebalanced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetInfos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetIndex\",\"type\":\"uint256\"}],\"name\":\"assetLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computeTotalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVal\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"valuations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOutWithSlippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeviation\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"directions\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deviations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getDeviationForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getSlippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSlippages\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_trigger\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRebalanceNeeded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsToAdd\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsToRemove\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IBaluniV1Registry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trigger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"assetLiquidity(uint256)\":{\"details\":\"Returns the liquidity of a specific asset in the pool.\",\"params\":{\"assetIndex\":\"The index of the asset.\"},\"returns\":{\"_0\":\"The liquidity of the asset.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address)\":{\"details\":\"Burns the pool tokens and transfers the underlying assets to the specified address.\",\"params\":{\"to\":\"The address to transfer the underlying assets to.\"}},\"computeTotalValuation()\":{\"details\":\"Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\",\"returns\":{\"totalVal\":\"The total valuation of the pool.\",\"valuations\":\"An array of individual valuations.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAmountOut(address,address,uint256)\":{\"details\":\"Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\",\"params\":{\"amount\":\"The amount of `fromToken` being swapped.\",\"fromToken\":\"The address of the token being swapped from.\",\"toToken\":\"The address of the token being swapped to.\"},\"returns\":{\"_0\":\"The amount of `toToken` that will be received.\"}},\"getAmountOutWithSlippage(address,address,uint256)\":{\"details\":\"Calcola l'importo effettivo di `toToken` ricevuto tenendo conto dello slippage.\",\"params\":{\"amount\":\"The amount of `fromToken` being swapped.\",\"fromToken\":\"The address of the token being swapped from.\",\"toToken\":\"The address of the token being swapped to.\"},\"returns\":{\"_0\":\"The amount of `toToken` received after applying slippage.\"}},\"getAssetReserve(address)\":{\"details\":\"Returns the reserve amount of the specified asset.\",\"params\":{\"asset\":\"The address of the asset.\"},\"returns\":{\"_0\":\"The reserve amount of the asset.\"}},\"getAssets()\":{\"details\":\"Retrieves the list of assets in the pool.\",\"returns\":{\"_0\":\"An array of addresses representing the assets.\"}},\"getDeviation()\":{\"details\":\"Returns the deviation between the current weights and target weights of the assets in the pool.\",\"returns\":{\"directions\":\"An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\"}},\"getReserves()\":{\"details\":\"Returns an array of reserves for each asset in the pool.\",\"returns\":{\"_0\":\"An array of reserves.\"}},\"getSlippage(address)\":{\"details\":\"Restituisce lo slippage attuale per un dato token.\",\"params\":{\"token\":\"The address of the token.\"},\"returns\":{\"_0\":\"Lo slippage attuale per il token.\"}},\"getWeights()\":{\"details\":\"Retrieves the list of weights associated with the assets in the pool.\",\"returns\":{\"_0\":\"An array of uint256 values representing the weights.\"}},\"isRebalanceNeeded()\":{\"details\":\"Checks if rebalancing is needed for the pool.\",\"returns\":{\"_0\":\"A boolean value indicating whether rebalancing is needed or not.\"}},\"liquidity()\":{\"details\":\"Returns the total liquidity of the pool.\",\"returns\":{\"_0\":\"The total liquidity of the pool.\"}},\"mint(address,uint256[])\":{\"details\":\"Mints new tokens and adds them to the specified address.\",\"params\":{\"to\":\"The address to which the new tokens will be minted.\"},\"returns\":{\"_0\":\"The amount of tokens minted.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"performRebalanceIfNeeded()\":{\"details\":\"Performs rebalance\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"rebalanceWeights(address)\":{\"details\":\"Rebalances the weights of the pool by calculating the amounts to add for each token, transferring the calculated amounts from the user to the pool, minting the total added liquidity, updating the reserves, and emitting an event to indicate the rebalancing of weights.\",\"params\":{\"receiver\":\"The address to receive the minted liquidity tokens.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"swap(address,address,uint256,address)\":{\"details\":\"Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`. Requirements: - `fromToken` and `toToken` must be different tokens. - `amount` must be greater than zero. - Sufficient liquidity of `toToken` must be available in the contract. Emits a `Swap` event with the details of the swap. Updates the reserves after the swap.\",\"params\":{\"amount\":\"The amount of `fromToken` to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"receiver\":\"The address to receive the swapped tokens.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"amountOut\":\"The amount of `toToken` received after the swap.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unitPrice()\":{\"details\":\"Returns the unit price of the pool.\",\"returns\":{\"_0\":\"The unit price of the pool.\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address)\":{\"notice\":\"This function can only be called by the periphery contract.The pool tokens must have a balance greater than 0.The total supply of pool tokens must be greater than 0.The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.The function checks if the pool has sufficient liquidity before performing any transfers.If any transfer fails, the function reverts the entire operation.After the transfers, the function updates the reserves of the pool.Emits a `Burn` event with the address and share of pool tokens burned.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1Pool.sol\":\"BaluniV1Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {ContextUpgradeable} from \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {IERC20Errors} from \\\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\\n    struct ERC20Storage {\\n        mapping(address account => uint256) _balances;\\n\\n        mapping(address account => mapping(address spender => uint256)) _allowances;\\n\\n        uint256 _totalSupply;\\n\\n        string _name;\\n        string _symbol;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC20\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\\n\\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\\n        assembly {\\n            $.slot := ERC20StorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            $._totalSupply += value;\\n        } else {\\n            uint256 fromBalance = $._balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                $._balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                $._totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                $._balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        $._allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\\n    struct ReentrancyGuardStorage {\\n        uint256 _status;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ReentrancyGuard\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\\n\\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\\n        assembly {\\n            $.slot := ReentrancyGuardStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if ($._status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        $._status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        return $._status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/BaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\n\\r\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\n\\r\\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\\r\\nimport './interfaces/IBaluniV1Registry.sol';\\r\\nimport './interfaces/IBaluniV1Rebalancer.sol';\\r\\nimport './interfaces/IBaluniV1Oracle.sol';\\r\\n\\r\\ncontract BaluniV1Pool is\\r\\n    Initializable,\\r\\n    UUPSUpgradeable,\\r\\n    OwnableUpgradeable,\\r\\n    ERC20Upgradeable,\\r\\n    ReentrancyGuardUpgradeable\\r\\n{\\r\\n    AssetInfo[] public assetInfos;\\r\\n\\r\\n    uint256 public trigger;\\r\\n    uint256 public ONE;\\r\\n    address public baseAsset;\\r\\n    uint256 private scalingFactor;\\r\\n\\r\\n    IBaluniV1Registry public registry;\\r\\n\\r\\n    mapping(address => uint256) public reserves;\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n        uint256 slippage; // Nuovo parametro per lo slippage\\r\\n    }\\r\\n\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n\\r\\n    function initialize(\\r\\n        address[] memory _assets,\\r\\n        uint256[] memory _weights,\\r\\n        uint256 _trigger,\\r\\n        address _registry\\r\\n    ) external initializer {\\r\\n        __Ownable_init(msg.sender);\\r\\n        __ERC20_init('Baluni LP', 'BALUNI-LP');\\r\\n        registry = IBaluniV1Registry(_registry);\\r\\n        ONE = 1e18;\\r\\n        bool result = initializeAssets(_assets, _weights);\\r\\n        require(result, 'Initialization failed');\\r\\n\\r\\n        trigger = _trigger;\\r\\n        baseAsset = registry.getUSDC();\\r\\n        scalingFactor = 10 ** (18 - 6);\\r\\n        require(baseAsset != address(0), 'Invalid base asset address');\\r\\n\\r\\n        uint256 totalWeight = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < _weights.length; i++) {\\r\\n            totalWeight += _weights[i];\\r\\n        }\\r\\n\\r\\n        require(totalWeight == 10000, 'Invalid weights');\\r\\n    }\\r\\n\\r\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n    modifier onlyPeriphery() {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        require(msg.sender == periphery, 'Only Periphery');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the assets and their weights for the pool.\\r\\n     * @param _assets The array of asset addresses.\\r\\n     * @param _weights The array of weights corresponding to each asset.\\r\\n     */\\r\\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal returns (bool) {\\r\\n        address rebalancer = registry.getBaluniRebalancer();\\r\\n\\r\\n        require(registry.getBaluniRebalancer() != address(0), 'Invalid rebalancer address');\\r\\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n        for (uint256 i = 0; i < _assets.length; i++) {\\r\\n            require(_assets[i] != address(0), 'Invalid asset address');\\r\\n            require(_weights[i] > 0, 'Invalid weight');\\r\\n\\r\\n            assetInfos.push(\\r\\n                AssetInfo({\\r\\n                    asset: _assets[i],\\r\\n                    weight: _weights[i],\\r\\n                    slippage: 0 // Imposta slippage iniziale a 1%\\r\\n                })\\r\\n            );\\r\\n\\r\\n            IERC20 asset = IERC20(_assets[i]);\\r\\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\\r\\n                asset.approve(address(rebalancer), type(uint256).max);\\r\\n            }\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\\r\\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\\r\\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\\r\\n     * @param receiver The address to receive the minted liquidity tokens.\\r\\n     */\\r\\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation(); // 6dec\\r\\n\\r\\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations); // 6dec\\r\\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\\r\\n\\r\\n        totalAddedLiquidity *= scalingFactor;\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\\r\\n            if (amountsToAdd[i] > 0) {\\r\\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _mint(receiver, totalAddedLiquidity);\\r\\n\\r\\n        // Aggiorna lo slippage in base ai nuovi pesi\\r\\n        updateSlippage();\\r\\n\\r\\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - `fromToken` and `toToken` must be different tokens.\\r\\n     * - `amount` must be greater than zero.\\r\\n     * - Sufficient liquidity of `toToken` must be available in the contract.\\r\\n     *\\r\\n     * Emits a `Swap` event with the details of the swap.\\r\\n     *\\r\\n     * Updates the reserves after the swap.\\r\\n     *\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of `fromToken` to swap.\\r\\n     * @param receiver The address to receive the swapped tokens.\\r\\n     * @return amountOut The amount of `toToken` received after the swap.\\r\\n     */\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external nonReentrant returns (uint256 amountOut) {\\r\\n        uint256 _BPS_FEE = registry.getBPS_FEE();\\r\\n        require(fromToken != toToken, 'Cannot swap the same token');\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n        reserves[fromToken] += amount;\\r\\n\\r\\n        uint256 receivedAmount = getAmountOutWithSlippage(fromToken, toToken, amount);\\r\\n        require(getAssetReserve(toToken) >= receivedAmount, 'Insufficient Liquidity');\\r\\n        reserves[toToken] += receivedAmount;\\r\\n\\r\\n        uint256 fee = (receivedAmount * _BPS_FEE) / 10000;\\r\\n        amountOut = receivedAmount - fee;\\r\\n\\r\\n        require(amountOut > 0, 'Amount to send must be greater than 0');\\r\\n\\r\\n        // Aggiorna lo slippage in base ai pesi degli asset coinvolti nello swap\\r\\n        updateSlippage();\\r\\n\\r\\n        emit Swap(receiver, fromToken, toToken, amount, amountOut);\\r\\n\\r\\n        return amountOut;\\r\\n    }\\r\\n    /**\\r\\n     * @dev Calcola l'importo effettivo di `toToken` ricevuto tenendo conto dello slippage.\\r\\n     * @param fromToken The address of the token being swapped from.\\r\\n     * @param toToken The address of the token being swapped to.\\r\\n     * @param amount The amount of `fromToken` being swapped.\\r\\n     * @return The amount of `toToken` received after applying slippage.\\r\\n     */\\r\\n    function getAmountOutWithSlippage(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) public view returns (uint256) {\\r\\n        uint256 amountOut = getAmountOut(fromToken, toToken, amount);\\r\\n\\r\\n        uint256 slippageFrom = getSlippage(fromToken);\\r\\n        uint256 slippageTo = getSlippage(toToken);\\r\\n\\r\\n        uint256 fromTokenWeight = getTokenWeight(fromToken);\\r\\n        uint256 toTokenWeight = getTokenWeight(toToken);\\r\\n\\r\\n        // Calcola slippage\\r\\n        uint256 slippageFromAmount = ((amountOut * slippageFrom)) / 10000;\\r\\n        uint256 slippageToAmount = (amountOut * slippageTo) / 10000;\\r\\n\\r\\n        // Se fromToken \\u00e8 sovrappeso, sottrai slippageFromAmount da amountOut\\r\\n        if (fromTokenWeight > getDeviationForToken(fromToken)) {\\r\\n            amountOut = amountOut - slippageFromAmount;\\r\\n        } else {\\r\\n            // Altrimenti, aggiungi slippageFromAmount ad amountOut\\r\\n            amountOut = amountOut + slippageFromAmount;\\r\\n        }\\r\\n\\r\\n        // Se toToken \\u00e8 sottopeso, aggiungi slippageToAmount ad amountOut\\r\\n        if (toTokenWeight < getDeviationForToken(toToken)) {\\r\\n            amountOut = amountOut + slippageToAmount;\\r\\n        } else {\\r\\n            // Altrimenti, sottrai slippageToAmount da amountOut\\r\\n            amountOut = amountOut - slippageToAmount;\\r\\n        }\\r\\n\\r\\n        return amountOut;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Restituisce lo slippage attuale per un dato token.\\r\\n     * @param token The address of the token.\\r\\n     * @return Lo slippage attuale per il token.\\r\\n     */\\r\\n    function getSlippage(address token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            if (assetInfos[i].asset == token) {\\r\\n                return assetInfos[i].slippage;\\r\\n            }\\r\\n        }\\r\\n        return 0; // Default slippage se non trovato\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Funzione per aggiornare lo slippage in base ai pesi degli asset.\\r\\n     */\\r\\n    function updateSlippage() internal {\\r\\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\\r\\n        uint256 _BPS_FEE = registry.getBPS_FEE();\\r\\n\\r\\n        uint256 sdf = 100; // scale down factor applied to the deviation\\r\\n        uint256 slippageLimit = 300;\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 previousSlippage = assetInfos[i].slippage;\\r\\n            if (deviations[i] <= sdf) {\\r\\n                // 1%\\r\\n                assetInfos[i].slippage = sdf;\\r\\n                continue;\\r\\n            }\\r\\n            if (directions[i]) {\\r\\n                assetInfos[i].slippage += deviations[i] / sdf;\\r\\n\\r\\n                require(assetInfos[i].slippage >= previousSlippage, 'Overflow incrementing slippage');\\r\\n            } else {\\r\\n                if (assetInfos[i].slippage > deviations[i]) {\\r\\n                    assetInfos[i].slippage -= deviations[i] / sdf;\\r\\n\\r\\n                    require(assetInfos[i].slippage <= previousSlippage, 'Underflow decrementing slippage');\\r\\n                } else {\\r\\n                    //assetInfos[i].slippage = 0;\\r\\n                    assetInfos[i].slippage += deviations[i] / sdf;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            if (assetInfos[i].slippage > slippageLimit) {\\r\\n                // 5.3%\\r\\n                assetInfos[i].slippage = slippageLimit;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getTokenWeight(address token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            if (assetInfos[i].asset == token) {\\r\\n                return assetInfos[i].weight;\\r\\n            }\\r\\n        }\\r\\n        return 0; // Default weight se non trovato\\r\\n    }\\r\\n\\r\\n    function getDeviationForToken(address token) public view returns (uint256) {\\r\\n        (, uint256[] memory deviations) = getDeviation();\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            if (assetInfos[i].asset == token) {\\r\\n                return deviations[i];\\r\\n            }\\r\\n        }\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function getSlippages() external view returns (uint256[] memory) {\\r\\n        uint256[] memory slippages = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            slippages[i] = assetInfos[i].slippage;\\r\\n        }\\r\\n        return slippages;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Mints new tokens and adds them to the specified address.\\r\\n     * @param to The address to which the new tokens will be minted.\\r\\n     * @return The amount of tokens minted.\\r\\n     */\\r\\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        uint256 totalValue = 0;\\r\\n        uint256[] memory _reserves = getReserves();\\r\\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\\r\\n        require(assetInfos.length > 0, 'No assets');\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n            uint256 valuation;\\r\\n            if (asset == baseAsset) {\\r\\n                valuation = amounts[i];\\r\\n                continue;\\r\\n            }\\r\\n            valuation = _convertTokenToBase(asset, amounts[i]);\\r\\n            totalValue += valuation;\\r\\n        }\\r\\n\\r\\n        require(totalValue > 0, 'Total value must be greater than 0');\\r\\n\\r\\n        uint256 toMint;\\r\\n\\r\\n        if (totalSupply == 0) {\\r\\n            toMint = totalValue * scalingFactor;\\r\\n        } else {\\r\\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\\r\\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\\r\\n            toMint = ((totalValue * scalingFactor) * totalSupply) / (totalLiquidity * scalingFactor);\\r\\n        }\\r\\n        require(toMint != 0, 'Mint qty is 0');\\r\\n\\r\\n        _mint(to, toMint);\\r\\n\\r\\n        updateSlippage();\\r\\n\\r\\n        emit Mint(to, toMint);\\r\\n\\r\\n        return toMint;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\\r\\n     * @param to The address to transfer the underlying assets to.\\r\\n     * @notice This function can only be called by the periphery contract.\\r\\n     * @notice The pool tokens must have a balance greater than 0.\\r\\n     * @notice The total supply of pool tokens must be greater than 0.\\r\\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\\r\\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\\r\\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\\r\\n     * @notice If any transfer fails, the function reverts the entire operation.\\r\\n     * @notice After the transfers, the function updates the reserves of the pool.\\r\\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\\r\\n     */\\r\\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\\r\\n        uint256 _BPS_FEE = registry.getBPS_FEE();\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n\\r\\n        uint256 share = balanceOf(address(this));\\r\\n        require(share > 0, 'Share must be greater than 0');\\r\\n\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        require(totalSupply > 0, 'No liquidity');\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n        uint256 fee = (share * _BPS_FEE) / 10000;\\r\\n        uint256 shareAfterFee = share - fee;\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\\r\\n                address(this),\\r\\n                assetInfos[i].asset\\r\\n            );\\r\\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\\r\\n        }\\r\\n\\r\\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient BALUNI liquidity');\\r\\n\\r\\n        address treasury = registry.getTreasury();\\r\\n        bool feeTransferSuccess = IERC20(address(this)).transfer(treasury, fee);\\r\\n        require(feeTransferSuccess, 'Fee transfer failed');\\r\\n\\r\\n        _burn(address(this), shareAfterFee);\\r\\n\\r\\n        updateSlippage();\\r\\n\\r\\n        emit Burn(to, shareAfterFee);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\\r\\n     * @param fromToken The address of the token being swapped from.\\r\\n     * @param toToken The address of the token being swapped to.\\r\\n     * @param amount The amount of `fromToken` being swapped.\\r\\n     * @return The amount of `toToken` that will be received.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\\r\\n        IBaluniV1Oracle baluniOracle = IBaluniV1Oracle(registry.getBaluniOracle());\\r\\n        require(registry.getBaluniOracle() != address(0), 'Invalid oracle address');\\r\\n        uint256 amountOut = baluniOracle.convert(fromToken, toToken, amount);\\r\\n        return amountOut;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance\\r\\n     */\\r\\n    function performRebalanceIfNeeded()\\r\\n        external\\r\\n        onlyPeriphery\\r\\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove)\\r\\n    {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        return _performRebalanceIfNeeded();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\\r\\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\\r\\n     */\\r\\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\\r\\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n\\r\\n        directions = new bool[](numAssets);\\r\\n        deviations = new uint256[](numAssets);\\r\\n\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\\r\\n            uint256 targetWeight = assetInfos[i].weight;\\r\\n\\r\\n            if (currentWeight > targetWeight) {\\r\\n                deviations[i] = currentWeight - targetWeight;\\r\\n                directions[i] = true;\\r\\n            } else {\\r\\n                deviations[i] = targetWeight - currentWeight;\\r\\n                directions[i] = false;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return (directions, deviations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the liquidity of a specific asset in the pool.\\r\\n     * @param assetIndex The index of the asset.\\r\\n     * @return The liquidity of the asset.\\r\\n     */\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\\r\\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\\r\\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\\r\\n        return usdValuations[assetIndex];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\\r\\n     * @return totalVal The total valuation of the pool.\\r\\n     * @return valuations An array of individual valuations.\\r\\n     */\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\\r\\n        (totalVal, valuations) = _computeTotalValuation();\\r\\n        return (totalVal, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the total liquidity of the pool.\\r\\n     * @return The total liquidity of the pool.\\r\\n     */\\r\\n    function liquidity() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        return totalVal;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the unit price of the pool.\\r\\n     * @return The unit price of the pool.\\r\\n     */\\r\\n    function unitPrice() external view returns (uint256) {\\r\\n        uint256 baseDecimal = IERC20Metadata(baseAsset).decimals();\\r\\n        uint256 factor = 10 ** (18 - baseDecimal);\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        if (totalSupply == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        return (((totalVal * factor) / totalSupply) * ONE);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of reserves for each asset in the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves() public view returns (uint256[] memory) {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve amount of the specified asset.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve amount of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address asset) public view returns (uint256) {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        return IBaluniV1PoolPeriphery(periphery).getAssetReserve(address(this), asset);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of assets in the pool.\\r\\n     * @return An array of addresses representing the assets.\\r\\n     */\\r\\n    function getAssets() external view returns (address[] memory) {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n        }\\r\\n        return assets;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of weights associated with the assets in the pool.\\r\\n     * @return An array of uint256 values representing the weights.\\r\\n     */\\r\\n    function getWeights() external view returns (uint256[] memory) {\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n        }\\r\\n        return weights;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the assets in the pool.\\r\\n     * @return totalValuation The total valuation of the assets.\\r\\n     * @return valuations An array of valuations for each asset in the pool.\\r\\n     */\\r\\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n        valuations = new uint256[](numAssets);\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n            uint256 assetReserve = getAssetReserve(address(asset));\\r\\n\\r\\n            if ((address(asset) == baseAsset)) {\\r\\n                valuations[i] = assetReserve;\\r\\n            } else {\\r\\n                uint256 valuation = _convertTokenToBase(address(asset), assetReserve);\\r\\n                valuations[i] = valuation;\\r\\n            }\\r\\n            totalValuation += valuations[i];\\r\\n        }\\r\\n        return (totalValuation, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed.\\r\\n     * This function retrieves the assets and weights from the `assetInfos` array,\\r\\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\\r\\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\\r\\n     * @notice This function should only be called internally.\\r\\n     */\\r\\n    function _performRebalanceIfNeeded() internal returns (uint256[] memory, uint256[] memory) {\\r\\n        address periphery = registry.getBaluniPoolPeriphery();\\r\\n        address rebalancer = registry.getBaluniRebalancer();\\r\\n\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n        }\\r\\n\\r\\n        uint256[] memory balances = getReserves();\\r\\n\\r\\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n\\r\\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\\r\\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\\r\\n            } else {\\r\\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        emit RebalancePerformed(msg.sender, assets);\\r\\n\\r\\n        return (amountsToAdd, amountsToRemove);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the total added liquidity based on the amounts to add.\\r\\n     * @param amountsToAdd An array of amounts to add for each asset.\\r\\n     * @return totalAddedLiquidity The total added liquidity.\\r\\n     */\\r\\n    function _calculateTotalAddedLiquidity(\\r\\n        uint256[] memory amountsToAdd\\r\\n    ) internal view returns (uint256 totalAddedLiquidity) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            totalAddedLiquidity += amountsToAdd[i];\\r\\n        }\\r\\n        return totalAddedLiquidity;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\\r\\n     * @param totalValuation The total valuation of the pool.\\r\\n     * @param valuations An array of current valuations for each asset.\\r\\n     * @return amountsToAdd An array of amounts to add to each asset.\\r\\n     */\\r\\n    function _calculateAmountsToAdd(\\r\\n        uint256 totalValuation,\\r\\n        uint256[] memory valuations\\r\\n    ) internal view returns (uint256[] memory amountsToAdd) {\\r\\n        amountsToAdd = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\\r\\n            if (valuations[i] < targetValuation) {\\r\\n                amountsToAdd[i] = targetValuation - valuations[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return amountsToAdd;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\\r\\n     * @param index The index of the asset in the assetInfos array.\\r\\n     * @param amountToAdd The amount of native tokens to add as liquidity.\\r\\n     */\\r\\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\\r\\n        if (assetInfos[index].asset == baseAsset) return amountToAdd;\\r\\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\\r\\n        require(tokenAmount > 0, 'Invalid token amount to add');\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified amount of native token to the corresponding token amount.\\r\\n     * @param toToken The address of the native token to convert from.\\r\\n     * @param amount The amount of native token to convert.\\r\\n     * @return The corresponding token amount.\\r\\n     */\\r\\n    function _convertBaseToToken(address toToken, uint256 amount) internal view returns (uint256) {\\r\\n        return getAmountOut(baseAsset, toToken, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified token to the native token using the rebalancer contract.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param amount The amount of tokens to convert.\\r\\n     * @return tokenAmount The converted amount of tokens.\\r\\n     */\\r\\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 tokenAmount) {\\r\\n        return getAmountOut(fromToken, baseAsset, amount);\\r\\n    }\\r\\n\\r\\n    // return true if one of the deviation overcome the trigger\\r\\n    /**\\r\\n     * @dev Checks if rebalancing is needed for the pool.\\r\\n     * @return A boolean value indicating whether rebalancing is needed or not.\\r\\n     */\\r\\n    function isRebalanceNeeded() public view returns (bool) {\\r\\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\\r\\n        for (uint256 i = 0; i < deviations.length; i++) {\\r\\n            if (directions[i] && deviations[i] > trigger) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf340d61ba4b4f3bec21bf7bec42ae109d8fef72a2ad2d528df113b5a8772b238\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Oracle {\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\\r\\n\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation);\\r\\n}\\r\\n\",\"keccak256\":\"0x2bc62f7640b15a1772de630216f6fe6aa7a719cb6cf0255befdde19ec8de785a\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1PoolPeriphery\\r\\n * @dev Interface for the BaluniV1PoolPeriphery contract.\\r\\n */\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    /**\\r\\n     * @dev Swaps tokens in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @param receiver The address of the receiver.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs batch swaps between multiple token pairs.\\r\\n     * @param fromTokens An array of addresses representing the tokens to swap from.\\r\\n     * @param toTokens An array of addresses representing the tokens to swap to.\\r\\n     * @param amounts An array of amounts representing the amounts to swap.\\r\\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\\r\\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\\r\\n     */\\r\\n    function batchSwap(\\r\\n        address[] calldata fromTokens,\\r\\n        address[] calldata toTokens,\\r\\n        uint256[] calldata amounts,\\r\\n        address[] calldata receivers\\r\\n    ) external returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances weights in a pool.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function rebalanceWeights(address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Adds liquidity to a BaluniV1Pool.\\r\\n     * @param amounts An array of amounts for each asset to add as liquidity.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function addLiquidity(uint256[] memory amounts, address poolAddress, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Removes liquidity from a BaluniV1Pool.\\r\\n     * @param share The amount of liquidity tokens to remove.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed for the given tokens.\\r\\n     * @param poolAddress The address of the token pool to rebalance.\\r\\n     */\\r\\n    function performRebalanceIfNeeded(address poolAddress) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the given token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsContainingToken(address token) external view returns (address[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the version of the contract.\\r\\n     * @return The version string.\\r\\n     */\\r\\n    function getVersion() external view returns (uint64);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserves of the pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve of a specific asset in a pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x0d208337a9258876165804a1e3158e005dcdab6f38ced9147d2b05d951a0f54c\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n    struct RebalanceVars {\\r\\n        uint256 length;\\r\\n        uint256 totalValue;\\r\\n        uint256 finalUsdBalance;\\r\\n        uint256 overweightVaultsLength;\\r\\n        uint256 underweightVaultsLength;\\r\\n        uint256 totalActiveWeight;\\r\\n        uint256 amountOut;\\r\\n        uint256[] overweightVaults;\\r\\n        uint256[] overweightAmounts;\\r\\n        uint256[] underweightVaults;\\r\\n        uint256[] underweightAmounts;\\r\\n        uint256[] balances;\\r\\n    }\\r\\n\\r\\n    // Functions\\r\\n    function rebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        address baseAsset\\r\\n    ) external;\\r\\n\\r\\n    function checkRebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address baseAsset\\r\\n    ) external view returns (RebalanceVars memory);\\r\\n\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x61c44c9208ab5c5638160706c4737e8032440e73054a90378d0b65559653d57a\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolFactory(address _baluniPoolFactory) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x846d9e23f2a9579307f6f9b453f9426e1083b2f550bb999315a4abc32a648570\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2919,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"assetInfos","offset":0,"slot":"0","type":"t_array(t_struct(AssetInfo)2941_storage)dyn_storage"},{"astId":2921,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"trigger","offset":0,"slot":"1","type":"t_uint256"},{"astId":2923,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"ONE","offset":0,"slot":"2","type":"t_uint256"},{"astId":2925,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"baseAsset","offset":0,"slot":"3","type":"t_address"},{"astId":2927,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"scalingFactor","offset":0,"slot":"4","type":"t_uint256"},{"astId":2930,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"registry","offset":0,"slot":"5","type":"t_contract(IBaluniV1Registry)6110"},{"astId":2934,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"reserves","offset":0,"slot":"6","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(AssetInfo)2941_storage)dyn_storage":{"base":"t_struct(AssetInfo)2941_storage","encoding":"dynamic_array","label":"struct BaluniV1Pool.AssetInfo[]","numberOfBytes":"32"},"t_contract(IBaluniV1Registry)6110":{"encoding":"inplace","label":"contract IBaluniV1Registry","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(AssetInfo)2941_storage":{"encoding":"inplace","label":"struct BaluniV1Pool.AssetInfo","members":[{"astId":2936,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"asset","offset":0,"slot":"0","type":"t_address"},{"astId":2938,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"weight","offset":0,"slot":"1","type":"t_uint256"},{"astId":2940,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"slippage","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"burn(address)":{"notice":"This function can only be called by the periphery contract.The pool tokens must have a balance greater than 0.The total supply of pool tokens must be greater than 0.The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.The function checks if the pool has sufficient liquidity before performing any transfers.If any transfer fails, the function reverts the entire operation.After the transfers, the function updates the reserves of the pool.Emits a `Burn` event with the address and share of pool tokens burned."}},"version":1}}},"contracts/BaluniV1PoolRegistry.sol":{"BaluniV1PoolRegistry":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"}],"name":"PoolCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"addPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allPools","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllPools","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"getPoolAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset1","type":"address"},{"internalType":"address","name":"asset2","type":"address"}],"name":"getPoolByAssets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsByAsset","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_register","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_pool","type":"address"}],"name":"poolExist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"contract IBaluniV1Registry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_register","type":"address"},{"internalType":"uint64","name":"_version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"getAllPools()":{"details":"Retrieves all the pools created by the factory.","returns":{"_0":"An array of pool addresses."}},"getPoolAssets(address)":{"details":"Retrieves the assets of a specific pool.","params":{"poolAddress":"The address of the pool."},"returns":{"_0":"An array of asset addresses."}},"getPoolByAssets(address,address)":{"details":"Retrieves the pool address based on the given assets.","params":{"asset1":"The address of the first asset.","asset2":"The address of the second asset."},"returns":{"_0":"The address of the pool."}},"getPoolsByAsset(address)":{"details":"Returns an array of pool addresses that contain the specified token.","params":{"token":"The address of the token to search for."},"returns":{"_0":"An array of pool addresses."}},"getPoolsCount()":{"details":"Retrieves the number of pools created by the factory.","returns":{"_0":"The count of pools."}},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a0604052306080523480156012575f80fd5b506080516112eb6100395f395f8181610ab801528181610ae10152610c2501526112eb5ff3fe608060405260043610610105575f3560e01c80638da5cb5b11610092578063b4ac686011610062578063b4ac686014610343578063c4d66de814610356578063d88ff1f414610375578063d914cd4b14610389578063f2fde38b146103a8575f80fd5b80638da5cb5b1461028c5780638f2248bc146102c8578063ad3cb1cc146102e7578063b4340e6a14610324575f80fd5b806352d1902d116100d857806352d1902d146101c9578063531aa03e146101eb578063715018a61461022a5780637b1039991461023e57806389345efb1461025d575f80fd5b80632d5e94a71461010957806341d1de97146101695780634276b97b146101885780634f1ef286146101b4575b5f80fd5b348015610114575f80fd5b5061014c610123366004610f7a565b6001600160a01b039182165f908152600260209081526040808320938516835292905220541690565b6040516001600160a01b0390911681526020015b60405180910390f35b348015610174575f80fd5b5061014c610183366004610fb1565b6103c7565b348015610193575f80fd5b506101a76101a2366004610fc8565b6103ee565b6040516101609190610fe3565b6101c76101c2366004611074565b61045d565b005b3480156101d4575f80fd5b506101dd61047c565b604051908152602001610160565b3480156101f6575f80fd5b5061014c610205366004610f7a565b600260209081525f92835260408084209091529082529020546001600160a01b031681565b348015610235575f80fd5b506101c7610497565b348015610249575f80fd5b5060015461014c906001600160a01b031681565b348015610268575f80fd5b5061027c610277366004610fc8565b6104aa565b6040519015158152602001610160565b348015610297575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031661014c565b3480156102d3575f80fd5b506101c76102e2366004611116565b610504565b3480156102f2575f80fd5b50610317604051806040016040528060058152602001640352e302e360dc1b81525081565b604051610160919061114e565b34801561032f575f80fd5b506101a761033e366004610fc8565b6105ef565b34801561034e575f80fd5b505f546101dd565b348015610361575f80fd5b506101c7610370366004610fc8565b61081d565b348015610380575f80fd5b506101a761094e565b348015610394575f80fd5b506101c76103a3366004610fc8565b6109ad565b3480156103b3575f80fd5b506101c76103c2366004610fc8565b610a70565b5f81815481106103d5575f80fd5b5f918252602090912001546001600160a01b0316905081565b60605f829050806001600160a01b03166367e4ac2c6040518163ffffffff1660e01b81526004015f60405180830381865afa15801561042f573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526104569190810190611183565b9392505050565b610465610aad565b61046e82610b51565b6104788282610b59565b5050565b5f610485610c1a565b505f8051602061129683398151915290565b61049f610c63565b6104a85f610cbe565b565b5f805b5f548110156104fc57826001600160a01b03165f82815481106104d2576104d2611230565b5f918252602090912001546001600160a01b0316036104f45750600192915050565b6001016104ad565b505f92915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054829190600160401b900460ff168061054d5750805467ffffffffffffffff808416911610155b1561056b5760405163f92ee8a960e01b815260040160405180910390fd5b8054600160401b67ffffffffffffffff841668ffffffffffffffffff199092168217178255600180546001600160a01b0319166001600160a01b038716179055815460ff60401b191682556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a150505050565b5f80546060919067ffffffffffffffff81111561060e5761060e61102f565b604051908082528060200260200182016040528015610637578160200160208202803683370190505b5090505f805b5f54811015610777575f80828154811061065957610659611230565b905f5260205f20015f9054906101000a90046001600160a01b031690505f816001600160a01b03166367e4ac2c6040518163ffffffff1660e01b81526004015f60405180830381865afa1580156106b2573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526106d99190810190611183565b90505f5b815181101561075d57876001600160a01b031682828151811061070257610702611230565b60200260200101516001600160a01b031603610755578286868151811061072b5761072b611230565b6001600160a01b03909216602092830291909101909101528461074d81611244565b95505061075d565b6001016106dd565b508451840361076d575050610777565b505060010161063d565b505f8167ffffffffffffffff8111156107925761079261102f565b6040519080825280602002602001820160405280156107bb578160200160208202803683370190505b5090505f5b82811015610814578381815181106107da576107da611230565b60200260200101518282815181106107f4576107f4611230565b6001600160a01b03909216602092830291909101909101526001016107c0565b50949350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156108625750825b90505f8267ffffffffffffffff16600114801561087e5750303b155b90508115801561088c575080155b156108aa5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156108d457845460ff60401b1916600160401b1785555b6108dc610d2e565b6108e533610d36565b600180546001600160a01b0319166001600160a01b038816179055831561094657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b60605f8054806020026020016040519081016040528092919081815260200182805480156109a357602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610985575b5050505050905090565b6109b5610c63565b6001600160a01b038116610a225760405162461bcd60e51b815260206004820152602960248201527f42616c756e695631506f6f6c466163746f72793a20494e56414c49445f504f4f6044820152684c5f4144445245535360b81b60648201526084015b60405180910390fd5b5f80546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b0392909216919091179055565b610a78610c63565b6001600160a01b038116610aa157604051631e4fbdf760e01b81525f6004820152602401610a19565b610aaa81610cbe565b50565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610b3357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b275f80516020611296833981519152546001600160a01b031690565b6001600160a01b031614155b156104a85760405163703e46dd60e11b815260040160405180910390fd5b610aaa610c63565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610bb3575060408051601f3d908101601f19168201909252610bb091810190611268565b60015b610bdb57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610a19565b5f805160206112968339815191528114610c0b57604051632a87526960e21b815260048101829052602401610a19565b610c158383610d47565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104a85760405163703e46dd60e11b815260040160405180910390fd5b33610c957f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146104a85760405163118cdaa760e01b8152336004820152602401610a19565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6104a8610d9c565b610d3e610d9c565b610aaa81610de5565b610d5082610ded565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115610d9457610c158282610e50565b610478610ec2565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166104a857604051631afcd79f60e31b815260040160405180910390fd5b610a78610d9c565b806001600160a01b03163b5f03610e2257604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610a19565b5f8051602061129683398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051610e6c919061127f565b5f60405180830381855af49150503d805f8114610ea4576040519150601f19603f3d011682016040523d82523d5f602084013e610ea9565b606091505b5091509150610eb9858383610ee1565b95945050505050565b34156104a85760405163b398979f60e01b815260040160405180910390fd5b606082610ef657610ef182610f3d565b610456565b8151158015610f0d57506001600160a01b0384163b155b15610f3657604051639996b31560e01b81526001600160a01b0385166004820152602401610a19565b5092915050565b805115610f4d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b0381168114610aaa575f80fd5b5f8060408385031215610f8b575f80fd5b8235610f9681610f66565b91506020830135610fa681610f66565b809150509250929050565b5f60208284031215610fc1575f80fd5b5035919050565b5f60208284031215610fd8575f80fd5b813561045681610f66565b602080825282518282018190525f9190848201906040850190845b818110156110235783516001600160a01b031683529284019291840191600101610ffe565b50909695505050505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561106c5761106c61102f565b604052919050565b5f8060408385031215611085575f80fd5b823561109081610f66565b915060208381013567ffffffffffffffff808211156110ad575f80fd5b818601915086601f8301126110c0575f80fd5b8135818111156110d2576110d261102f565b6110e4601f8201601f19168501611043565b915080825287848285010111156110f9575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f8060408385031215611127575f80fd5b823561113281610f66565b9150602083013567ffffffffffffffff81168114610fa6575f80fd5b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f6020808385031215611194575f80fd5b825167ffffffffffffffff808211156111ab575f80fd5b818501915085601f8301126111be575f80fd5b8151818111156111d0576111d061102f565b8060051b91506111e1848301611043565b81815291830184019184810190888411156111fa575f80fd5b938501935b83851015611224578451925061121483610f66565b82825293850193908501906111ff565b98975050505050505050565b634e487b7160e01b5f52603260045260245ffd5b5f6001820161126157634e487b7160e01b5f52601160045260245ffd5b5060010190565b5f60208284031215611278575f80fd5b5051919050565b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca264697066735822122078e1256cdc08b6ed411cff706531fe4543d3bfc39a1d69f46f44afe1563f6a8964736f6c63430008190033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x12EB PUSH2 0x39 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xAB8 ADD MSTORE DUP2 DUP2 PUSH2 0xAE1 ADD MSTORE PUSH2 0xC25 ADD MSTORE PUSH2 0x12EB PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x105 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xB4AC6860 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xB4AC6860 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xD88FF1F4 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xD914CD4B EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xB4340E6A EQ PUSH2 0x324 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x531AA03E EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x89345EFB EQ PUSH2 0x25D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D5E94A7 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x41D1DE97 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x4276B97B EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1B4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x497 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x14C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x114E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0x5EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x1DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0x81D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x94E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0x9AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP3 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x67E4AC2C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x456 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1183 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x465 PUSH2 0xAAD JUMP JUMPDEST PUSH2 0x46E DUP3 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x478 DUP3 DUP3 PUSH2 0xB59 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x485 PUSH2 0xC1A JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1296 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x49F PUSH2 0xC63 JUMP JUMPDEST PUSH2 0x4A8 PUSH0 PUSH2 0xCBE JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x4FC JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4D2 JUMPI PUSH2 0x4D2 PUSH2 0x1230 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4F4 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x4AD JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x54D JUMPI POP DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0x56B JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND PUSH9 0xFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP3 AND DUP3 OR OR DUP3 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE DUP2 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60E JUMPI PUSH2 0x60E PUSH2 0x102F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x637 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x777 JUMPI PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x659 JUMPI PUSH2 0x659 PUSH2 0x1230 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x67E4AC2C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x6D9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1183 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x75D JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x702 JUMPI PUSH2 0x702 PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x755 JUMPI DUP3 DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x72B JUMPI PUSH2 0x72B PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP5 PUSH2 0x74D DUP2 PUSH2 0x1244 JUMP JUMPDEST SWAP6 POP POP PUSH2 0x75D JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6DD JUMP JUMPDEST POP DUP5 MLOAD DUP5 SUB PUSH2 0x76D JUMPI POP POP PUSH2 0x777 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x63D JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x792 JUMPI PUSH2 0x792 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7BB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x814 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7DA JUMPI PUSH2 0x7DA PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7F4 JUMPI PUSH2 0x7F4 PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x7C0 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x862 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x87E JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x88C JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x8D4 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x8DC PUSH2 0xD2E JUMP JUMPDEST PUSH2 0x8E5 CALLER PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x946 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x985 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9B5 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C756E695631506F6F6C466163746F72793A20494E56414C49445F504F4F PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x4C5F41444452455353 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA78 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH2 0xAAA DUP2 PUSH2 0xCBE JUMP JUMPDEST POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0xB33 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB27 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1296 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAAA PUSH2 0xC63 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBB3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBB0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBDB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1296 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xC0B JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH2 0xC15 DUP4 DUP4 PUSH2 0xD47 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0xC95 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x4A8 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xD3E PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xAAA DUP2 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0xD50 DUP3 PUSH2 0xDED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0xD94 JUMPI PUSH2 0xC15 DUP3 DUP3 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x478 PUSH2 0xEC2 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA78 PUSH2 0xD9C JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0xE22 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1296 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xE6C SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xEB9 DUP6 DUP4 DUP4 PUSH2 0xEE1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xEF6 JUMPI PUSH2 0xEF1 DUP3 PUSH2 0xF3D JUMP JUMPDEST PUSH2 0x456 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0xF0D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA19 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xF4D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAAA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF8B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF96 DUP2 PUSH2 0xF66 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xFA6 DUP2 PUSH2 0xF66 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x456 DUP2 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1023 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xFFE JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x106C JUMPI PUSH2 0x106C PUSH2 0x102F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1085 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1090 DUP2 PUSH2 0xF66 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10AD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x10D2 JUMPI PUSH2 0x10D2 PUSH2 0x102F JUMP JUMPDEST PUSH2 0x10E4 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x1043 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x10F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1127 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1132 DUP2 PUSH2 0xF66 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xFA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1194 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11AB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11BE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x11D0 JUMPI PUSH2 0x11D0 PUSH2 0x102F JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x11E1 DUP5 DUP4 ADD PUSH2 0x1043 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP9 DUP5 GT ISZERO PUSH2 0x11FA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1224 JUMPI DUP5 MLOAD SWAP3 POP PUSH2 0x1214 DUP4 PUSH2 0xF66 JUMP JUMPDEST DUP3 DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x11FF JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1261 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1278 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122078 0xE1 0x25 PUSH13 0xDC08B6ED411CFF706531FE4543 0xD3 0xBF 0xC3 SWAP11 SAR PUSH10 0xF46F44AFE1563F6A8964 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"1789:3499:17:-:0;;;1171:4:2;1128:48;;1789:3499:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_472":{"entryPoint":null,"id":472,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":3382,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":3557,"id":81,"parameterSlots":1,"returnSlots":0},"@__UUPSUpgradeable_init_502":{"entryPoint":3374,"id":502,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_5251":{"entryPoint":2897,"id":5251,"parameterSlots":1,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":3484,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_1871":{"entryPoint":3778,"id":1871,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_578":{"entryPoint":3098,"id":578,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":3171,"id":122,"parameterSlots":0,"returnSlots":0},"@_checkProxy_562":{"entryPoint":2733,"id":562,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_447":{"entryPoint":null,"id":447,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":null,"id":25,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":null,"id":438,"parameterSlots":0,"returnSlots":1},"@_msgSender_1275":{"entryPoint":null,"id":1275,"parameterSlots":0,"returnSlots":1},"@_revert_2753":{"entryPoint":3901,"id":2753,"parameterSlots":1,"returnSlots":0},"@_setImplementation_1657":{"entryPoint":3565,"id":1657,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":3262,"id":193,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_629":{"entryPoint":2905,"id":629,"parameterSlots":2,"returnSlots":0},"@addPool_5275":{"entryPoint":2477,"id":5275,"parameterSlots":1,"returnSlots":0},"@allPools_5187":{"entryPoint":967,"id":5187,"parameterSlots":0,"returnSlots":0},"@functionDelegateCall_2673":{"entryPoint":3664,"id":2673,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_2816":{"entryPoint":null,"id":2816,"parameterSlots":1,"returnSlots":1},"@getAllPools_5285":{"entryPoint":2382,"id":5285,"parameterSlots":0,"returnSlots":1},"@getImplementation_1630":{"entryPoint":null,"id":1630,"parameterSlots":0,"returnSlots":1},"@getPoolAssets_5316":{"entryPoint":1006,"id":5316,"parameterSlots":1,"returnSlots":1},"@getPoolByAssets_5336":{"entryPoint":null,"id":5336,"parameterSlots":2,"returnSlots":1},"@getPool_5196":{"entryPoint":null,"id":5196,"parameterSlots":0,"returnSlots":0},"@getPoolsByAsset_5466":{"entryPoint":1519,"id":5466,"parameterSlots":1,"returnSlots":1},"@getPoolsCount_5295":{"entryPoint":null,"id":5295,"parameterSlots":0,"returnSlots":1},"@initialize_5225":{"entryPoint":2077,"id":5225,"parameterSlots":1,"returnSlots":0},"@owner_105":{"entryPoint":null,"id":105,"parameterSlots":0,"returnSlots":1},"@poolExist_5498":{"entryPoint":1194,"id":5498,"parameterSlots":1,"returnSlots":1},"@proxiableUUID_520":{"entryPoint":1148,"id":520,"parameterSlots":0,"returnSlots":1},"@registry_5190":{"entryPoint":null,"id":5190,"parameterSlots":0,"returnSlots":0},"@reinitialize_5242":{"entryPoint":1284,"id":5242,"parameterSlots":2,"returnSlots":0},"@renounceOwnership_136":{"entryPoint":1175,"id":136,"parameterSlots":0,"returnSlots":0},"@transferOwnership_164":{"entryPoint":2672,"id":164,"parameterSlots":1,"returnSlots":0},"@upgradeToAndCall_1691":{"entryPoint":3399,"id":1691,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_540":{"entryPoint":1117,"id":540,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_2713":{"entryPoint":3809,"id":2713,"parameterSlots":3,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4040,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3962,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":4212,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint64":{"entryPoint":4374,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":4483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":4712,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4017,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4735,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4067,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IBaluniV1Registry_$6110__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4430,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_05f07676dc67392f7f7f6aab9a91a65df1780d5e1861fa32a8a8f53252c2841b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":4163,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":4676,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x32":{"entryPoint":4656,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4143,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":3942,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7517:23","nodeType":"YulBlock","src":"0:7517:23","statements":[{"nativeSrc":"6:3:23","nodeType":"YulBlock","src":"6:3:23","statements":[]},{"body":{"nativeSrc":"59:86:23","nodeType":"YulBlock","src":"59:86:23","statements":[{"body":{"nativeSrc":"123:16:23","nodeType":"YulBlock","src":"123:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"132:1:23","nodeType":"YulLiteral","src":"132:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"135:1:23","nodeType":"YulLiteral","src":"135:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"125:6:23","nodeType":"YulIdentifier","src":"125:6:23"},"nativeSrc":"125:12:23","nodeType":"YulFunctionCall","src":"125:12:23"},"nativeSrc":"125:12:23","nodeType":"YulExpressionStatement","src":"125:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"82:5:23","nodeType":"YulIdentifier","src":"82:5:23"},{"arguments":[{"name":"value","nativeSrc":"93:5:23","nodeType":"YulIdentifier","src":"93:5:23"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"108:3:23","nodeType":"YulLiteral","src":"108:3:23","type":"","value":"160"},{"kind":"number","nativeSrc":"113:1:23","nodeType":"YulLiteral","src":"113:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"104:3:23","nodeType":"YulIdentifier","src":"104:3:23"},"nativeSrc":"104:11:23","nodeType":"YulFunctionCall","src":"104:11:23"},{"kind":"number","nativeSrc":"117:1:23","nodeType":"YulLiteral","src":"117:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"100:3:23","nodeType":"YulIdentifier","src":"100:3:23"},"nativeSrc":"100:19:23","nodeType":"YulFunctionCall","src":"100:19:23"}],"functionName":{"name":"and","nativeSrc":"89:3:23","nodeType":"YulIdentifier","src":"89:3:23"},"nativeSrc":"89:31:23","nodeType":"YulFunctionCall","src":"89:31:23"}],"functionName":{"name":"eq","nativeSrc":"79:2:23","nodeType":"YulIdentifier","src":"79:2:23"},"nativeSrc":"79:42:23","nodeType":"YulFunctionCall","src":"79:42:23"}],"functionName":{"name":"iszero","nativeSrc":"72:6:23","nodeType":"YulIdentifier","src":"72:6:23"},"nativeSrc":"72:50:23","nodeType":"YulFunctionCall","src":"72:50:23"},"nativeSrc":"69:70:23","nodeType":"YulIf","src":"69:70:23"}]},"name":"validator_revert_address","nativeSrc":"14:131:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"48:5:23","nodeType":"YulTypedName","src":"48:5:23","type":""}],"src":"14:131:23"},{"body":{"nativeSrc":"237:301:23","nodeType":"YulBlock","src":"237:301:23","statements":[{"body":{"nativeSrc":"283:16:23","nodeType":"YulBlock","src":"283:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"292:1:23","nodeType":"YulLiteral","src":"292:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"295:1:23","nodeType":"YulLiteral","src":"295:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"285:6:23","nodeType":"YulIdentifier","src":"285:6:23"},"nativeSrc":"285:12:23","nodeType":"YulFunctionCall","src":"285:12:23"},"nativeSrc":"285:12:23","nodeType":"YulExpressionStatement","src":"285:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"258:7:23","nodeType":"YulIdentifier","src":"258:7:23"},{"name":"headStart","nativeSrc":"267:9:23","nodeType":"YulIdentifier","src":"267:9:23"}],"functionName":{"name":"sub","nativeSrc":"254:3:23","nodeType":"YulIdentifier","src":"254:3:23"},"nativeSrc":"254:23:23","nodeType":"YulFunctionCall","src":"254:23:23"},{"kind":"number","nativeSrc":"279:2:23","nodeType":"YulLiteral","src":"279:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"250:3:23","nodeType":"YulIdentifier","src":"250:3:23"},"nativeSrc":"250:32:23","nodeType":"YulFunctionCall","src":"250:32:23"},"nativeSrc":"247:52:23","nodeType":"YulIf","src":"247:52:23"},{"nativeSrc":"308:36:23","nodeType":"YulVariableDeclaration","src":"308:36:23","value":{"arguments":[{"name":"headStart","nativeSrc":"334:9:23","nodeType":"YulIdentifier","src":"334:9:23"}],"functionName":{"name":"calldataload","nativeSrc":"321:12:23","nodeType":"YulIdentifier","src":"321:12:23"},"nativeSrc":"321:23:23","nodeType":"YulFunctionCall","src":"321:23:23"},"variables":[{"name":"value","nativeSrc":"312:5:23","nodeType":"YulTypedName","src":"312:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"378:5:23","nodeType":"YulIdentifier","src":"378:5:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"353:24:23","nodeType":"YulIdentifier","src":"353:24:23"},"nativeSrc":"353:31:23","nodeType":"YulFunctionCall","src":"353:31:23"},"nativeSrc":"353:31:23","nodeType":"YulExpressionStatement","src":"353:31:23"},{"nativeSrc":"393:15:23","nodeType":"YulAssignment","src":"393:15:23","value":{"name":"value","nativeSrc":"403:5:23","nodeType":"YulIdentifier","src":"403:5:23"},"variableNames":[{"name":"value0","nativeSrc":"393:6:23","nodeType":"YulIdentifier","src":"393:6:23"}]},{"nativeSrc":"417:47:23","nodeType":"YulVariableDeclaration","src":"417:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"449:9:23","nodeType":"YulIdentifier","src":"449:9:23"},{"kind":"number","nativeSrc":"460:2:23","nodeType":"YulLiteral","src":"460:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"445:3:23","nodeType":"YulIdentifier","src":"445:3:23"},"nativeSrc":"445:18:23","nodeType":"YulFunctionCall","src":"445:18:23"}],"functionName":{"name":"calldataload","nativeSrc":"432:12:23","nodeType":"YulIdentifier","src":"432:12:23"},"nativeSrc":"432:32:23","nodeType":"YulFunctionCall","src":"432:32:23"},"variables":[{"name":"value_1","nativeSrc":"421:7:23","nodeType":"YulTypedName","src":"421:7:23","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"498:7:23","nodeType":"YulIdentifier","src":"498:7:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"473:24:23","nodeType":"YulIdentifier","src":"473:24:23"},"nativeSrc":"473:33:23","nodeType":"YulFunctionCall","src":"473:33:23"},"nativeSrc":"473:33:23","nodeType":"YulExpressionStatement","src":"473:33:23"},{"nativeSrc":"515:17:23","nodeType":"YulAssignment","src":"515:17:23","value":{"name":"value_1","nativeSrc":"525:7:23","nodeType":"YulIdentifier","src":"525:7:23"},"variableNames":[{"name":"value1","nativeSrc":"515:6:23","nodeType":"YulIdentifier","src":"515:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"150:388:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"195:9:23","nodeType":"YulTypedName","src":"195:9:23","type":""},{"name":"dataEnd","nativeSrc":"206:7:23","nodeType":"YulTypedName","src":"206:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"218:6:23","nodeType":"YulTypedName","src":"218:6:23","type":""},{"name":"value1","nativeSrc":"226:6:23","nodeType":"YulTypedName","src":"226:6:23","type":""}],"src":"150:388:23"},{"body":{"nativeSrc":"644:102:23","nodeType":"YulBlock","src":"644:102:23","statements":[{"nativeSrc":"654:26:23","nodeType":"YulAssignment","src":"654:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"666:9:23","nodeType":"YulIdentifier","src":"666:9:23"},{"kind":"number","nativeSrc":"677:2:23","nodeType":"YulLiteral","src":"677:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"662:3:23","nodeType":"YulIdentifier","src":"662:3:23"},"nativeSrc":"662:18:23","nodeType":"YulFunctionCall","src":"662:18:23"},"variableNames":[{"name":"tail","nativeSrc":"654:4:23","nodeType":"YulIdentifier","src":"654:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"696:9:23","nodeType":"YulIdentifier","src":"696:9:23"},{"arguments":[{"name":"value0","nativeSrc":"711:6:23","nodeType":"YulIdentifier","src":"711:6:23"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"727:3:23","nodeType":"YulLiteral","src":"727:3:23","type":"","value":"160"},{"kind":"number","nativeSrc":"732:1:23","nodeType":"YulLiteral","src":"732:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"723:3:23","nodeType":"YulIdentifier","src":"723:3:23"},"nativeSrc":"723:11:23","nodeType":"YulFunctionCall","src":"723:11:23"},{"kind":"number","nativeSrc":"736:1:23","nodeType":"YulLiteral","src":"736:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"719:3:23","nodeType":"YulIdentifier","src":"719:3:23"},"nativeSrc":"719:19:23","nodeType":"YulFunctionCall","src":"719:19:23"}],"functionName":{"name":"and","nativeSrc":"707:3:23","nodeType":"YulIdentifier","src":"707:3:23"},"nativeSrc":"707:32:23","nodeType":"YulFunctionCall","src":"707:32:23"}],"functionName":{"name":"mstore","nativeSrc":"689:6:23","nodeType":"YulIdentifier","src":"689:6:23"},"nativeSrc":"689:51:23","nodeType":"YulFunctionCall","src":"689:51:23"},"nativeSrc":"689:51:23","nodeType":"YulExpressionStatement","src":"689:51:23"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"543:203:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"613:9:23","nodeType":"YulTypedName","src":"613:9:23","type":""},{"name":"value0","nativeSrc":"624:6:23","nodeType":"YulTypedName","src":"624:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"635:4:23","nodeType":"YulTypedName","src":"635:4:23","type":""}],"src":"543:203:23"},{"body":{"nativeSrc":"821:110:23","nodeType":"YulBlock","src":"821:110:23","statements":[{"body":{"nativeSrc":"867:16:23","nodeType":"YulBlock","src":"867:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"876:1:23","nodeType":"YulLiteral","src":"876:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"879:1:23","nodeType":"YulLiteral","src":"879:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"869:6:23","nodeType":"YulIdentifier","src":"869:6:23"},"nativeSrc":"869:12:23","nodeType":"YulFunctionCall","src":"869:12:23"},"nativeSrc":"869:12:23","nodeType":"YulExpressionStatement","src":"869:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"842:7:23","nodeType":"YulIdentifier","src":"842:7:23"},{"name":"headStart","nativeSrc":"851:9:23","nodeType":"YulIdentifier","src":"851:9:23"}],"functionName":{"name":"sub","nativeSrc":"838:3:23","nodeType":"YulIdentifier","src":"838:3:23"},"nativeSrc":"838:23:23","nodeType":"YulFunctionCall","src":"838:23:23"},{"kind":"number","nativeSrc":"863:2:23","nodeType":"YulLiteral","src":"863:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"834:3:23","nodeType":"YulIdentifier","src":"834:3:23"},"nativeSrc":"834:32:23","nodeType":"YulFunctionCall","src":"834:32:23"},"nativeSrc":"831:52:23","nodeType":"YulIf","src":"831:52:23"},{"nativeSrc":"892:33:23","nodeType":"YulAssignment","src":"892:33:23","value":{"arguments":[{"name":"headStart","nativeSrc":"915:9:23","nodeType":"YulIdentifier","src":"915:9:23"}],"functionName":{"name":"calldataload","nativeSrc":"902:12:23","nodeType":"YulIdentifier","src":"902:12:23"},"nativeSrc":"902:23:23","nodeType":"YulFunctionCall","src":"902:23:23"},"variableNames":[{"name":"value0","nativeSrc":"892:6:23","nodeType":"YulIdentifier","src":"892:6:23"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"751:180:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"787:9:23","nodeType":"YulTypedName","src":"787:9:23","type":""},{"name":"dataEnd","nativeSrc":"798:7:23","nodeType":"YulTypedName","src":"798:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"810:6:23","nodeType":"YulTypedName","src":"810:6:23","type":""}],"src":"751:180:23"},{"body":{"nativeSrc":"1006:177:23","nodeType":"YulBlock","src":"1006:177:23","statements":[{"body":{"nativeSrc":"1052:16:23","nodeType":"YulBlock","src":"1052:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1061:1:23","nodeType":"YulLiteral","src":"1061:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"1064:1:23","nodeType":"YulLiteral","src":"1064:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1054:6:23","nodeType":"YulIdentifier","src":"1054:6:23"},"nativeSrc":"1054:12:23","nodeType":"YulFunctionCall","src":"1054:12:23"},"nativeSrc":"1054:12:23","nodeType":"YulExpressionStatement","src":"1054:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1027:7:23","nodeType":"YulIdentifier","src":"1027:7:23"},{"name":"headStart","nativeSrc":"1036:9:23","nodeType":"YulIdentifier","src":"1036:9:23"}],"functionName":{"name":"sub","nativeSrc":"1023:3:23","nodeType":"YulIdentifier","src":"1023:3:23"},"nativeSrc":"1023:23:23","nodeType":"YulFunctionCall","src":"1023:23:23"},{"kind":"number","nativeSrc":"1048:2:23","nodeType":"YulLiteral","src":"1048:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1019:3:23","nodeType":"YulIdentifier","src":"1019:3:23"},"nativeSrc":"1019:32:23","nodeType":"YulFunctionCall","src":"1019:32:23"},"nativeSrc":"1016:52:23","nodeType":"YulIf","src":"1016:52:23"},{"nativeSrc":"1077:36:23","nodeType":"YulVariableDeclaration","src":"1077:36:23","value":{"arguments":[{"name":"headStart","nativeSrc":"1103:9:23","nodeType":"YulIdentifier","src":"1103:9:23"}],"functionName":{"name":"calldataload","nativeSrc":"1090:12:23","nodeType":"YulIdentifier","src":"1090:12:23"},"nativeSrc":"1090:23:23","nodeType":"YulFunctionCall","src":"1090:23:23"},"variables":[{"name":"value","nativeSrc":"1081:5:23","nodeType":"YulTypedName","src":"1081:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1147:5:23","nodeType":"YulIdentifier","src":"1147:5:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"1122:24:23","nodeType":"YulIdentifier","src":"1122:24:23"},"nativeSrc":"1122:31:23","nodeType":"YulFunctionCall","src":"1122:31:23"},"nativeSrc":"1122:31:23","nodeType":"YulExpressionStatement","src":"1122:31:23"},{"nativeSrc":"1162:15:23","nodeType":"YulAssignment","src":"1162:15:23","value":{"name":"value","nativeSrc":"1172:5:23","nodeType":"YulIdentifier","src":"1172:5:23"},"variableNames":[{"name":"value0","nativeSrc":"1162:6:23","nodeType":"YulIdentifier","src":"1162:6:23"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"936:247:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"972:9:23","nodeType":"YulTypedName","src":"972:9:23","type":""},{"name":"dataEnd","nativeSrc":"983:7:23","nodeType":"YulTypedName","src":"983:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"995:6:23","nodeType":"YulTypedName","src":"995:6:23","type":""}],"src":"936:247:23"},{"body":{"nativeSrc":"1339:507:23","nodeType":"YulBlock","src":"1339:507:23","statements":[{"nativeSrc":"1349:12:23","nodeType":"YulVariableDeclaration","src":"1349:12:23","value":{"kind":"number","nativeSrc":"1359:2:23","nodeType":"YulLiteral","src":"1359:2:23","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"1353:2:23","nodeType":"YulTypedName","src":"1353:2:23","type":""}]},{"nativeSrc":"1370:32:23","nodeType":"YulVariableDeclaration","src":"1370:32:23","value":{"arguments":[{"name":"headStart","nativeSrc":"1388:9:23","nodeType":"YulIdentifier","src":"1388:9:23"},{"kind":"number","nativeSrc":"1399:2:23","nodeType":"YulLiteral","src":"1399:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1384:3:23","nodeType":"YulIdentifier","src":"1384:3:23"},"nativeSrc":"1384:18:23","nodeType":"YulFunctionCall","src":"1384:18:23"},"variables":[{"name":"tail_1","nativeSrc":"1374:6:23","nodeType":"YulTypedName","src":"1374:6:23","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1418:9:23","nodeType":"YulIdentifier","src":"1418:9:23"},{"kind":"number","nativeSrc":"1429:2:23","nodeType":"YulLiteral","src":"1429:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1411:6:23","nodeType":"YulIdentifier","src":"1411:6:23"},"nativeSrc":"1411:21:23","nodeType":"YulFunctionCall","src":"1411:21:23"},"nativeSrc":"1411:21:23","nodeType":"YulExpressionStatement","src":"1411:21:23"},{"nativeSrc":"1441:17:23","nodeType":"YulVariableDeclaration","src":"1441:17:23","value":{"name":"tail_1","nativeSrc":"1452:6:23","nodeType":"YulIdentifier","src":"1452:6:23"},"variables":[{"name":"pos","nativeSrc":"1445:3:23","nodeType":"YulTypedName","src":"1445:3:23","type":""}]},{"nativeSrc":"1467:27:23","nodeType":"YulVariableDeclaration","src":"1467:27:23","value":{"arguments":[{"name":"value0","nativeSrc":"1487:6:23","nodeType":"YulIdentifier","src":"1487:6:23"}],"functionName":{"name":"mload","nativeSrc":"1481:5:23","nodeType":"YulIdentifier","src":"1481:5:23"},"nativeSrc":"1481:13:23","nodeType":"YulFunctionCall","src":"1481:13:23"},"variables":[{"name":"length","nativeSrc":"1471:6:23","nodeType":"YulTypedName","src":"1471:6:23","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"1510:6:23","nodeType":"YulIdentifier","src":"1510:6:23"},{"name":"length","nativeSrc":"1518:6:23","nodeType":"YulIdentifier","src":"1518:6:23"}],"functionName":{"name":"mstore","nativeSrc":"1503:6:23","nodeType":"YulIdentifier","src":"1503:6:23"},"nativeSrc":"1503:22:23","nodeType":"YulFunctionCall","src":"1503:22:23"},"nativeSrc":"1503:22:23","nodeType":"YulExpressionStatement","src":"1503:22:23"},{"nativeSrc":"1534:25:23","nodeType":"YulAssignment","src":"1534:25:23","value":{"arguments":[{"name":"headStart","nativeSrc":"1545:9:23","nodeType":"YulIdentifier","src":"1545:9:23"},{"kind":"number","nativeSrc":"1556:2:23","nodeType":"YulLiteral","src":"1556:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1541:3:23","nodeType":"YulIdentifier","src":"1541:3:23"},"nativeSrc":"1541:18:23","nodeType":"YulFunctionCall","src":"1541:18:23"},"variableNames":[{"name":"pos","nativeSrc":"1534:3:23","nodeType":"YulIdentifier","src":"1534:3:23"}]},{"nativeSrc":"1568:29:23","nodeType":"YulVariableDeclaration","src":"1568:29:23","value":{"arguments":[{"name":"value0","nativeSrc":"1586:6:23","nodeType":"YulIdentifier","src":"1586:6:23"},{"kind":"number","nativeSrc":"1594:2:23","nodeType":"YulLiteral","src":"1594:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1582:3:23","nodeType":"YulIdentifier","src":"1582:3:23"},"nativeSrc":"1582:15:23","nodeType":"YulFunctionCall","src":"1582:15:23"},"variables":[{"name":"srcPtr","nativeSrc":"1572:6:23","nodeType":"YulTypedName","src":"1572:6:23","type":""}]},{"nativeSrc":"1606:10:23","nodeType":"YulVariableDeclaration","src":"1606:10:23","value":{"kind":"number","nativeSrc":"1615:1:23","nodeType":"YulLiteral","src":"1615:1:23","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1610:1:23","nodeType":"YulTypedName","src":"1610:1:23","type":""}]},{"body":{"nativeSrc":"1674:146:23","nodeType":"YulBlock","src":"1674:146:23","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1695:3:23","nodeType":"YulIdentifier","src":"1695:3:23"},{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"1710:6:23","nodeType":"YulIdentifier","src":"1710:6:23"}],"functionName":{"name":"mload","nativeSrc":"1704:5:23","nodeType":"YulIdentifier","src":"1704:5:23"},"nativeSrc":"1704:13:23","nodeType":"YulFunctionCall","src":"1704:13:23"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1727:3:23","nodeType":"YulLiteral","src":"1727:3:23","type":"","value":"160"},{"kind":"number","nativeSrc":"1732:1:23","nodeType":"YulLiteral","src":"1732:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1723:3:23","nodeType":"YulIdentifier","src":"1723:3:23"},"nativeSrc":"1723:11:23","nodeType":"YulFunctionCall","src":"1723:11:23"},{"kind":"number","nativeSrc":"1736:1:23","nodeType":"YulLiteral","src":"1736:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1719:3:23","nodeType":"YulIdentifier","src":"1719:3:23"},"nativeSrc":"1719:19:23","nodeType":"YulFunctionCall","src":"1719:19:23"}],"functionName":{"name":"and","nativeSrc":"1700:3:23","nodeType":"YulIdentifier","src":"1700:3:23"},"nativeSrc":"1700:39:23","nodeType":"YulFunctionCall","src":"1700:39:23"}],"functionName":{"name":"mstore","nativeSrc":"1688:6:23","nodeType":"YulIdentifier","src":"1688:6:23"},"nativeSrc":"1688:52:23","nodeType":"YulFunctionCall","src":"1688:52:23"},"nativeSrc":"1688:52:23","nodeType":"YulExpressionStatement","src":"1688:52:23"},{"nativeSrc":"1753:19:23","nodeType":"YulAssignment","src":"1753:19:23","value":{"arguments":[{"name":"pos","nativeSrc":"1764:3:23","nodeType":"YulIdentifier","src":"1764:3:23"},{"name":"_1","nativeSrc":"1769:2:23","nodeType":"YulIdentifier","src":"1769:2:23"}],"functionName":{"name":"add","nativeSrc":"1760:3:23","nodeType":"YulIdentifier","src":"1760:3:23"},"nativeSrc":"1760:12:23","nodeType":"YulFunctionCall","src":"1760:12:23"},"variableNames":[{"name":"pos","nativeSrc":"1753:3:23","nodeType":"YulIdentifier","src":"1753:3:23"}]},{"nativeSrc":"1785:25:23","nodeType":"YulAssignment","src":"1785:25:23","value":{"arguments":[{"name":"srcPtr","nativeSrc":"1799:6:23","nodeType":"YulIdentifier","src":"1799:6:23"},{"name":"_1","nativeSrc":"1807:2:23","nodeType":"YulIdentifier","src":"1807:2:23"}],"functionName":{"name":"add","nativeSrc":"1795:3:23","nodeType":"YulIdentifier","src":"1795:3:23"},"nativeSrc":"1795:15:23","nodeType":"YulFunctionCall","src":"1795:15:23"},"variableNames":[{"name":"srcPtr","nativeSrc":"1785:6:23","nodeType":"YulIdentifier","src":"1785:6:23"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1636:1:23","nodeType":"YulIdentifier","src":"1636:1:23"},{"name":"length","nativeSrc":"1639:6:23","nodeType":"YulIdentifier","src":"1639:6:23"}],"functionName":{"name":"lt","nativeSrc":"1633:2:23","nodeType":"YulIdentifier","src":"1633:2:23"},"nativeSrc":"1633:13:23","nodeType":"YulFunctionCall","src":"1633:13:23"},"nativeSrc":"1625:195:23","nodeType":"YulForLoop","post":{"nativeSrc":"1647:18:23","nodeType":"YulBlock","src":"1647:18:23","statements":[{"nativeSrc":"1649:14:23","nodeType":"YulAssignment","src":"1649:14:23","value":{"arguments":[{"name":"i","nativeSrc":"1658:1:23","nodeType":"YulIdentifier","src":"1658:1:23"},{"kind":"number","nativeSrc":"1661:1:23","nodeType":"YulLiteral","src":"1661:1:23","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1654:3:23","nodeType":"YulIdentifier","src":"1654:3:23"},"nativeSrc":"1654:9:23","nodeType":"YulFunctionCall","src":"1654:9:23"},"variableNames":[{"name":"i","nativeSrc":"1649:1:23","nodeType":"YulIdentifier","src":"1649:1:23"}]}]},"pre":{"nativeSrc":"1629:3:23","nodeType":"YulBlock","src":"1629:3:23","statements":[]},"src":"1625:195:23"},{"nativeSrc":"1829:11:23","nodeType":"YulAssignment","src":"1829:11:23","value":{"name":"pos","nativeSrc":"1837:3:23","nodeType":"YulIdentifier","src":"1837:3:23"},"variableNames":[{"name":"tail","nativeSrc":"1829:4:23","nodeType":"YulIdentifier","src":"1829:4:23"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"1188:658:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1308:9:23","nodeType":"YulTypedName","src":"1308:9:23","type":""},{"name":"value0","nativeSrc":"1319:6:23","nodeType":"YulTypedName","src":"1319:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1330:4:23","nodeType":"YulTypedName","src":"1330:4:23","type":""}],"src":"1188:658:23"},{"body":{"nativeSrc":"1883:95:23","nodeType":"YulBlock","src":"1883:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1900:1:23","nodeType":"YulLiteral","src":"1900:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1907:3:23","nodeType":"YulLiteral","src":"1907:3:23","type":"","value":"224"},{"kind":"number","nativeSrc":"1912:10:23","nodeType":"YulLiteral","src":"1912:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1903:3:23","nodeType":"YulIdentifier","src":"1903:3:23"},"nativeSrc":"1903:20:23","nodeType":"YulFunctionCall","src":"1903:20:23"}],"functionName":{"name":"mstore","nativeSrc":"1893:6:23","nodeType":"YulIdentifier","src":"1893:6:23"},"nativeSrc":"1893:31:23","nodeType":"YulFunctionCall","src":"1893:31:23"},"nativeSrc":"1893:31:23","nodeType":"YulExpressionStatement","src":"1893:31:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1940:1:23","nodeType":"YulLiteral","src":"1940:1:23","type":"","value":"4"},{"kind":"number","nativeSrc":"1943:4:23","nodeType":"YulLiteral","src":"1943:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1933:6:23","nodeType":"YulIdentifier","src":"1933:6:23"},"nativeSrc":"1933:15:23","nodeType":"YulFunctionCall","src":"1933:15:23"},"nativeSrc":"1933:15:23","nodeType":"YulExpressionStatement","src":"1933:15:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1964:1:23","nodeType":"YulLiteral","src":"1964:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"1967:4:23","nodeType":"YulLiteral","src":"1967:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1957:6:23","nodeType":"YulIdentifier","src":"1957:6:23"},"nativeSrc":"1957:15:23","nodeType":"YulFunctionCall","src":"1957:15:23"},"nativeSrc":"1957:15:23","nodeType":"YulExpressionStatement","src":"1957:15:23"}]},"name":"panic_error_0x41","nativeSrc":"1851:127:23","nodeType":"YulFunctionDefinition","src":"1851:127:23"},{"body":{"nativeSrc":"2028:230:23","nodeType":"YulBlock","src":"2028:230:23","statements":[{"nativeSrc":"2038:19:23","nodeType":"YulAssignment","src":"2038:19:23","value":{"arguments":[{"kind":"number","nativeSrc":"2054:2:23","nodeType":"YulLiteral","src":"2054:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"2048:5:23","nodeType":"YulIdentifier","src":"2048:5:23"},"nativeSrc":"2048:9:23","nodeType":"YulFunctionCall","src":"2048:9:23"},"variableNames":[{"name":"memPtr","nativeSrc":"2038:6:23","nodeType":"YulIdentifier","src":"2038:6:23"}]},{"nativeSrc":"2066:58:23","nodeType":"YulVariableDeclaration","src":"2066:58:23","value":{"arguments":[{"name":"memPtr","nativeSrc":"2088:6:23","nodeType":"YulIdentifier","src":"2088:6:23"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"2104:4:23","nodeType":"YulIdentifier","src":"2104:4:23"},{"kind":"number","nativeSrc":"2110:2:23","nodeType":"YulLiteral","src":"2110:2:23","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2100:3:23","nodeType":"YulIdentifier","src":"2100:3:23"},"nativeSrc":"2100:13:23","nodeType":"YulFunctionCall","src":"2100:13:23"},{"arguments":[{"kind":"number","nativeSrc":"2119:2:23","nodeType":"YulLiteral","src":"2119:2:23","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2115:3:23","nodeType":"YulIdentifier","src":"2115:3:23"},"nativeSrc":"2115:7:23","nodeType":"YulFunctionCall","src":"2115:7:23"}],"functionName":{"name":"and","nativeSrc":"2096:3:23","nodeType":"YulIdentifier","src":"2096:3:23"},"nativeSrc":"2096:27:23","nodeType":"YulFunctionCall","src":"2096:27:23"}],"functionName":{"name":"add","nativeSrc":"2084:3:23","nodeType":"YulIdentifier","src":"2084:3:23"},"nativeSrc":"2084:40:23","nodeType":"YulFunctionCall","src":"2084:40:23"},"variables":[{"name":"newFreePtr","nativeSrc":"2070:10:23","nodeType":"YulTypedName","src":"2070:10:23","type":""}]},{"body":{"nativeSrc":"2199:22:23","nodeType":"YulBlock","src":"2199:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2201:16:23","nodeType":"YulIdentifier","src":"2201:16:23"},"nativeSrc":"2201:18:23","nodeType":"YulFunctionCall","src":"2201:18:23"},"nativeSrc":"2201:18:23","nodeType":"YulExpressionStatement","src":"2201:18:23"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"2142:10:23","nodeType":"YulIdentifier","src":"2142:10:23"},{"kind":"number","nativeSrc":"2154:18:23","nodeType":"YulLiteral","src":"2154:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2139:2:23","nodeType":"YulIdentifier","src":"2139:2:23"},"nativeSrc":"2139:34:23","nodeType":"YulFunctionCall","src":"2139:34:23"},{"arguments":[{"name":"newFreePtr","nativeSrc":"2178:10:23","nodeType":"YulIdentifier","src":"2178:10:23"},{"name":"memPtr","nativeSrc":"2190:6:23","nodeType":"YulIdentifier","src":"2190:6:23"}],"functionName":{"name":"lt","nativeSrc":"2175:2:23","nodeType":"YulIdentifier","src":"2175:2:23"},"nativeSrc":"2175:22:23","nodeType":"YulFunctionCall","src":"2175:22:23"}],"functionName":{"name":"or","nativeSrc":"2136:2:23","nodeType":"YulIdentifier","src":"2136:2:23"},"nativeSrc":"2136:62:23","nodeType":"YulFunctionCall","src":"2136:62:23"},"nativeSrc":"2133:88:23","nodeType":"YulIf","src":"2133:88:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2237:2:23","nodeType":"YulLiteral","src":"2237:2:23","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2241:10:23","nodeType":"YulIdentifier","src":"2241:10:23"}],"functionName":{"name":"mstore","nativeSrc":"2230:6:23","nodeType":"YulIdentifier","src":"2230:6:23"},"nativeSrc":"2230:22:23","nodeType":"YulFunctionCall","src":"2230:22:23"},"nativeSrc":"2230:22:23","nodeType":"YulExpressionStatement","src":"2230:22:23"}]},"name":"allocate_memory","nativeSrc":"1983:275:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"2008:4:23","nodeType":"YulTypedName","src":"2008:4:23","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"2017:6:23","nodeType":"YulTypedName","src":"2017:6:23","type":""}],"src":"1983:275:23"},{"body":{"nativeSrc":"2359:802:23","nodeType":"YulBlock","src":"2359:802:23","statements":[{"body":{"nativeSrc":"2405:16:23","nodeType":"YulBlock","src":"2405:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2414:1:23","nodeType":"YulLiteral","src":"2414:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"2417:1:23","nodeType":"YulLiteral","src":"2417:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2407:6:23","nodeType":"YulIdentifier","src":"2407:6:23"},"nativeSrc":"2407:12:23","nodeType":"YulFunctionCall","src":"2407:12:23"},"nativeSrc":"2407:12:23","nodeType":"YulExpressionStatement","src":"2407:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2380:7:23","nodeType":"YulIdentifier","src":"2380:7:23"},{"name":"headStart","nativeSrc":"2389:9:23","nodeType":"YulIdentifier","src":"2389:9:23"}],"functionName":{"name":"sub","nativeSrc":"2376:3:23","nodeType":"YulIdentifier","src":"2376:3:23"},"nativeSrc":"2376:23:23","nodeType":"YulFunctionCall","src":"2376:23:23"},{"kind":"number","nativeSrc":"2401:2:23","nodeType":"YulLiteral","src":"2401:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2372:3:23","nodeType":"YulIdentifier","src":"2372:3:23"},"nativeSrc":"2372:32:23","nodeType":"YulFunctionCall","src":"2372:32:23"},"nativeSrc":"2369:52:23","nodeType":"YulIf","src":"2369:52:23"},{"nativeSrc":"2430:36:23","nodeType":"YulVariableDeclaration","src":"2430:36:23","value":{"arguments":[{"name":"headStart","nativeSrc":"2456:9:23","nodeType":"YulIdentifier","src":"2456:9:23"}],"functionName":{"name":"calldataload","nativeSrc":"2443:12:23","nodeType":"YulIdentifier","src":"2443:12:23"},"nativeSrc":"2443:23:23","nodeType":"YulFunctionCall","src":"2443:23:23"},"variables":[{"name":"value","nativeSrc":"2434:5:23","nodeType":"YulTypedName","src":"2434:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2500:5:23","nodeType":"YulIdentifier","src":"2500:5:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2475:24:23","nodeType":"YulIdentifier","src":"2475:24:23"},"nativeSrc":"2475:31:23","nodeType":"YulFunctionCall","src":"2475:31:23"},"nativeSrc":"2475:31:23","nodeType":"YulExpressionStatement","src":"2475:31:23"},{"nativeSrc":"2515:15:23","nodeType":"YulAssignment","src":"2515:15:23","value":{"name":"value","nativeSrc":"2525:5:23","nodeType":"YulIdentifier","src":"2525:5:23"},"variableNames":[{"name":"value0","nativeSrc":"2515:6:23","nodeType":"YulIdentifier","src":"2515:6:23"}]},{"nativeSrc":"2539:12:23","nodeType":"YulVariableDeclaration","src":"2539:12:23","value":{"kind":"number","nativeSrc":"2549:2:23","nodeType":"YulLiteral","src":"2549:2:23","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"2543:2:23","nodeType":"YulTypedName","src":"2543:2:23","type":""}]},{"nativeSrc":"2560:46:23","nodeType":"YulVariableDeclaration","src":"2560:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2591:9:23","nodeType":"YulIdentifier","src":"2591:9:23"},{"name":"_1","nativeSrc":"2602:2:23","nodeType":"YulIdentifier","src":"2602:2:23"}],"functionName":{"name":"add","nativeSrc":"2587:3:23","nodeType":"YulIdentifier","src":"2587:3:23"},"nativeSrc":"2587:18:23","nodeType":"YulFunctionCall","src":"2587:18:23"}],"functionName":{"name":"calldataload","nativeSrc":"2574:12:23","nodeType":"YulIdentifier","src":"2574:12:23"},"nativeSrc":"2574:32:23","nodeType":"YulFunctionCall","src":"2574:32:23"},"variables":[{"name":"offset","nativeSrc":"2564:6:23","nodeType":"YulTypedName","src":"2564:6:23","type":""}]},{"nativeSrc":"2615:28:23","nodeType":"YulVariableDeclaration","src":"2615:28:23","value":{"kind":"number","nativeSrc":"2625:18:23","nodeType":"YulLiteral","src":"2625:18:23","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nativeSrc":"2619:2:23","nodeType":"YulTypedName","src":"2619:2:23","type":""}]},{"body":{"nativeSrc":"2670:16:23","nodeType":"YulBlock","src":"2670:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2679:1:23","nodeType":"YulLiteral","src":"2679:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"2682:1:23","nodeType":"YulLiteral","src":"2682:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2672:6:23","nodeType":"YulIdentifier","src":"2672:6:23"},"nativeSrc":"2672:12:23","nodeType":"YulFunctionCall","src":"2672:12:23"},"nativeSrc":"2672:12:23","nodeType":"YulExpressionStatement","src":"2672:12:23"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2658:6:23","nodeType":"YulIdentifier","src":"2658:6:23"},{"name":"_2","nativeSrc":"2666:2:23","nodeType":"YulIdentifier","src":"2666:2:23"}],"functionName":{"name":"gt","nativeSrc":"2655:2:23","nodeType":"YulIdentifier","src":"2655:2:23"},"nativeSrc":"2655:14:23","nodeType":"YulFunctionCall","src":"2655:14:23"},"nativeSrc":"2652:34:23","nodeType":"YulIf","src":"2652:34:23"},{"nativeSrc":"2695:32:23","nodeType":"YulVariableDeclaration","src":"2695:32:23","value":{"arguments":[{"name":"headStart","nativeSrc":"2709:9:23","nodeType":"YulIdentifier","src":"2709:9:23"},{"name":"offset","nativeSrc":"2720:6:23","nodeType":"YulIdentifier","src":"2720:6:23"}],"functionName":{"name":"add","nativeSrc":"2705:3:23","nodeType":"YulIdentifier","src":"2705:3:23"},"nativeSrc":"2705:22:23","nodeType":"YulFunctionCall","src":"2705:22:23"},"variables":[{"name":"_3","nativeSrc":"2699:2:23","nodeType":"YulTypedName","src":"2699:2:23","type":""}]},{"body":{"nativeSrc":"2775:16:23","nodeType":"YulBlock","src":"2775:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2784:1:23","nodeType":"YulLiteral","src":"2784:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"2787:1:23","nodeType":"YulLiteral","src":"2787:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2777:6:23","nodeType":"YulIdentifier","src":"2777:6:23"},"nativeSrc":"2777:12:23","nodeType":"YulFunctionCall","src":"2777:12:23"},"nativeSrc":"2777:12:23","nodeType":"YulExpressionStatement","src":"2777:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"2754:2:23","nodeType":"YulIdentifier","src":"2754:2:23"},{"kind":"number","nativeSrc":"2758:4:23","nodeType":"YulLiteral","src":"2758:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2750:3:23","nodeType":"YulIdentifier","src":"2750:3:23"},"nativeSrc":"2750:13:23","nodeType":"YulFunctionCall","src":"2750:13:23"},{"name":"dataEnd","nativeSrc":"2765:7:23","nodeType":"YulIdentifier","src":"2765:7:23"}],"functionName":{"name":"slt","nativeSrc":"2746:3:23","nodeType":"YulIdentifier","src":"2746:3:23"},"nativeSrc":"2746:27:23","nodeType":"YulFunctionCall","src":"2746:27:23"}],"functionName":{"name":"iszero","nativeSrc":"2739:6:23","nodeType":"YulIdentifier","src":"2739:6:23"},"nativeSrc":"2739:35:23","nodeType":"YulFunctionCall","src":"2739:35:23"},"nativeSrc":"2736:55:23","nodeType":"YulIf","src":"2736:55:23"},{"nativeSrc":"2800:26:23","nodeType":"YulVariableDeclaration","src":"2800:26:23","value":{"arguments":[{"name":"_3","nativeSrc":"2823:2:23","nodeType":"YulIdentifier","src":"2823:2:23"}],"functionName":{"name":"calldataload","nativeSrc":"2810:12:23","nodeType":"YulIdentifier","src":"2810:12:23"},"nativeSrc":"2810:16:23","nodeType":"YulFunctionCall","src":"2810:16:23"},"variables":[{"name":"_4","nativeSrc":"2804:2:23","nodeType":"YulTypedName","src":"2804:2:23","type":""}]},{"body":{"nativeSrc":"2849:22:23","nodeType":"YulBlock","src":"2849:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2851:16:23","nodeType":"YulIdentifier","src":"2851:16:23"},"nativeSrc":"2851:18:23","nodeType":"YulFunctionCall","src":"2851:18:23"},"nativeSrc":"2851:18:23","nodeType":"YulExpressionStatement","src":"2851:18:23"}]},"condition":{"arguments":[{"name":"_4","nativeSrc":"2841:2:23","nodeType":"YulIdentifier","src":"2841:2:23"},{"name":"_2","nativeSrc":"2845:2:23","nodeType":"YulIdentifier","src":"2845:2:23"}],"functionName":{"name":"gt","nativeSrc":"2838:2:23","nodeType":"YulIdentifier","src":"2838:2:23"},"nativeSrc":"2838:10:23","nodeType":"YulFunctionCall","src":"2838:10:23"},"nativeSrc":"2835:36:23","nodeType":"YulIf","src":"2835:36:23"},{"nativeSrc":"2880:66:23","nodeType":"YulVariableDeclaration","src":"2880:66:23","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nativeSrc":"2921:2:23","nodeType":"YulIdentifier","src":"2921:2:23"},{"kind":"number","nativeSrc":"2925:4:23","nodeType":"YulLiteral","src":"2925:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2917:3:23","nodeType":"YulIdentifier","src":"2917:3:23"},"nativeSrc":"2917:13:23","nodeType":"YulFunctionCall","src":"2917:13:23"},{"arguments":[{"kind":"number","nativeSrc":"2936:2:23","nodeType":"YulLiteral","src":"2936:2:23","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2932:3:23","nodeType":"YulIdentifier","src":"2932:3:23"},"nativeSrc":"2932:7:23","nodeType":"YulFunctionCall","src":"2932:7:23"}],"functionName":{"name":"and","nativeSrc":"2913:3:23","nodeType":"YulIdentifier","src":"2913:3:23"},"nativeSrc":"2913:27:23","nodeType":"YulFunctionCall","src":"2913:27:23"},{"name":"_1","nativeSrc":"2942:2:23","nodeType":"YulIdentifier","src":"2942:2:23"}],"functionName":{"name":"add","nativeSrc":"2909:3:23","nodeType":"YulIdentifier","src":"2909:3:23"},"nativeSrc":"2909:36:23","nodeType":"YulFunctionCall","src":"2909:36:23"}],"functionName":{"name":"allocate_memory","nativeSrc":"2893:15:23","nodeType":"YulIdentifier","src":"2893:15:23"},"nativeSrc":"2893:53:23","nodeType":"YulFunctionCall","src":"2893:53:23"},"variables":[{"name":"array","nativeSrc":"2884:5:23","nodeType":"YulTypedName","src":"2884:5:23","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2962:5:23","nodeType":"YulIdentifier","src":"2962:5:23"},{"name":"_4","nativeSrc":"2969:2:23","nodeType":"YulIdentifier","src":"2969:2:23"}],"functionName":{"name":"mstore","nativeSrc":"2955:6:23","nodeType":"YulIdentifier","src":"2955:6:23"},"nativeSrc":"2955:17:23","nodeType":"YulFunctionCall","src":"2955:17:23"},"nativeSrc":"2955:17:23","nodeType":"YulExpressionStatement","src":"2955:17:23"},{"body":{"nativeSrc":"3018:16:23","nodeType":"YulBlock","src":"3018:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3027:1:23","nodeType":"YulLiteral","src":"3027:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"3030:1:23","nodeType":"YulLiteral","src":"3030:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3020:6:23","nodeType":"YulIdentifier","src":"3020:6:23"},"nativeSrc":"3020:12:23","nodeType":"YulFunctionCall","src":"3020:12:23"},"nativeSrc":"3020:12:23","nodeType":"YulExpressionStatement","src":"3020:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"2995:2:23","nodeType":"YulIdentifier","src":"2995:2:23"},{"name":"_4","nativeSrc":"2999:2:23","nodeType":"YulIdentifier","src":"2999:2:23"}],"functionName":{"name":"add","nativeSrc":"2991:3:23","nodeType":"YulIdentifier","src":"2991:3:23"},"nativeSrc":"2991:11:23","nodeType":"YulFunctionCall","src":"2991:11:23"},{"name":"_1","nativeSrc":"3004:2:23","nodeType":"YulIdentifier","src":"3004:2:23"}],"functionName":{"name":"add","nativeSrc":"2987:3:23","nodeType":"YulIdentifier","src":"2987:3:23"},"nativeSrc":"2987:20:23","nodeType":"YulFunctionCall","src":"2987:20:23"},{"name":"dataEnd","nativeSrc":"3009:7:23","nodeType":"YulIdentifier","src":"3009:7:23"}],"functionName":{"name":"gt","nativeSrc":"2984:2:23","nodeType":"YulIdentifier","src":"2984:2:23"},"nativeSrc":"2984:33:23","nodeType":"YulFunctionCall","src":"2984:33:23"},"nativeSrc":"2981:53:23","nodeType":"YulIf","src":"2981:53:23"},{"expression":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"3060:5:23","nodeType":"YulIdentifier","src":"3060:5:23"},{"name":"_1","nativeSrc":"3067:2:23","nodeType":"YulIdentifier","src":"3067:2:23"}],"functionName":{"name":"add","nativeSrc":"3056:3:23","nodeType":"YulIdentifier","src":"3056:3:23"},"nativeSrc":"3056:14:23","nodeType":"YulFunctionCall","src":"3056:14:23"},{"arguments":[{"name":"_3","nativeSrc":"3076:2:23","nodeType":"YulIdentifier","src":"3076:2:23"},{"name":"_1","nativeSrc":"3080:2:23","nodeType":"YulIdentifier","src":"3080:2:23"}],"functionName":{"name":"add","nativeSrc":"3072:3:23","nodeType":"YulIdentifier","src":"3072:3:23"},"nativeSrc":"3072:11:23","nodeType":"YulFunctionCall","src":"3072:11:23"},{"name":"_4","nativeSrc":"3085:2:23","nodeType":"YulIdentifier","src":"3085:2:23"}],"functionName":{"name":"calldatacopy","nativeSrc":"3043:12:23","nodeType":"YulIdentifier","src":"3043:12:23"},"nativeSrc":"3043:45:23","nodeType":"YulFunctionCall","src":"3043:45:23"},"nativeSrc":"3043:45:23","nodeType":"YulExpressionStatement","src":"3043:45:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nativeSrc":"3112:5:23","nodeType":"YulIdentifier","src":"3112:5:23"},{"name":"_4","nativeSrc":"3119:2:23","nodeType":"YulIdentifier","src":"3119:2:23"}],"functionName":{"name":"add","nativeSrc":"3108:3:23","nodeType":"YulIdentifier","src":"3108:3:23"},"nativeSrc":"3108:14:23","nodeType":"YulFunctionCall","src":"3108:14:23"},{"name":"_1","nativeSrc":"3124:2:23","nodeType":"YulIdentifier","src":"3124:2:23"}],"functionName":{"name":"add","nativeSrc":"3104:3:23","nodeType":"YulIdentifier","src":"3104:3:23"},"nativeSrc":"3104:23:23","nodeType":"YulFunctionCall","src":"3104:23:23"},{"kind":"number","nativeSrc":"3129:1:23","nodeType":"YulLiteral","src":"3129:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3097:6:23","nodeType":"YulIdentifier","src":"3097:6:23"},"nativeSrc":"3097:34:23","nodeType":"YulFunctionCall","src":"3097:34:23"},"nativeSrc":"3097:34:23","nodeType":"YulExpressionStatement","src":"3097:34:23"},{"nativeSrc":"3140:15:23","nodeType":"YulAssignment","src":"3140:15:23","value":{"name":"array","nativeSrc":"3150:5:23","nodeType":"YulIdentifier","src":"3150:5:23"},"variableNames":[{"name":"value1","nativeSrc":"3140:6:23","nodeType":"YulIdentifier","src":"3140:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"2263:898:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2317:9:23","nodeType":"YulTypedName","src":"2317:9:23","type":""},{"name":"dataEnd","nativeSrc":"2328:7:23","nodeType":"YulTypedName","src":"2328:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2340:6:23","nodeType":"YulTypedName","src":"2340:6:23","type":""},{"name":"value1","nativeSrc":"2348:6:23","nodeType":"YulTypedName","src":"2348:6:23","type":""}],"src":"2263:898:23"},{"body":{"nativeSrc":"3267:76:23","nodeType":"YulBlock","src":"3267:76:23","statements":[{"nativeSrc":"3277:26:23","nodeType":"YulAssignment","src":"3277:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"3289:9:23","nodeType":"YulIdentifier","src":"3289:9:23"},{"kind":"number","nativeSrc":"3300:2:23","nodeType":"YulLiteral","src":"3300:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3285:3:23","nodeType":"YulIdentifier","src":"3285:3:23"},"nativeSrc":"3285:18:23","nodeType":"YulFunctionCall","src":"3285:18:23"},"variableNames":[{"name":"tail","nativeSrc":"3277:4:23","nodeType":"YulIdentifier","src":"3277:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3319:9:23","nodeType":"YulIdentifier","src":"3319:9:23"},{"name":"value0","nativeSrc":"3330:6:23","nodeType":"YulIdentifier","src":"3330:6:23"}],"functionName":{"name":"mstore","nativeSrc":"3312:6:23","nodeType":"YulIdentifier","src":"3312:6:23"},"nativeSrc":"3312:25:23","nodeType":"YulFunctionCall","src":"3312:25:23"},"nativeSrc":"3312:25:23","nodeType":"YulExpressionStatement","src":"3312:25:23"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"3166:177:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3236:9:23","nodeType":"YulTypedName","src":"3236:9:23","type":""},{"name":"value0","nativeSrc":"3247:6:23","nodeType":"YulTypedName","src":"3247:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3258:4:23","nodeType":"YulTypedName","src":"3258:4:23","type":""}],"src":"3166:177:23"},{"body":{"nativeSrc":"3475:102:23","nodeType":"YulBlock","src":"3475:102:23","statements":[{"nativeSrc":"3485:26:23","nodeType":"YulAssignment","src":"3485:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"3497:9:23","nodeType":"YulIdentifier","src":"3497:9:23"},{"kind":"number","nativeSrc":"3508:2:23","nodeType":"YulLiteral","src":"3508:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3493:3:23","nodeType":"YulIdentifier","src":"3493:3:23"},"nativeSrc":"3493:18:23","nodeType":"YulFunctionCall","src":"3493:18:23"},"variableNames":[{"name":"tail","nativeSrc":"3485:4:23","nodeType":"YulIdentifier","src":"3485:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3527:9:23","nodeType":"YulIdentifier","src":"3527:9:23"},{"arguments":[{"name":"value0","nativeSrc":"3542:6:23","nodeType":"YulIdentifier","src":"3542:6:23"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3558:3:23","nodeType":"YulLiteral","src":"3558:3:23","type":"","value":"160"},{"kind":"number","nativeSrc":"3563:1:23","nodeType":"YulLiteral","src":"3563:1:23","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3554:3:23","nodeType":"YulIdentifier","src":"3554:3:23"},"nativeSrc":"3554:11:23","nodeType":"YulFunctionCall","src":"3554:11:23"},{"kind":"number","nativeSrc":"3567:1:23","nodeType":"YulLiteral","src":"3567:1:23","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3550:3:23","nodeType":"YulIdentifier","src":"3550:3:23"},"nativeSrc":"3550:19:23","nodeType":"YulFunctionCall","src":"3550:19:23"}],"functionName":{"name":"and","nativeSrc":"3538:3:23","nodeType":"YulIdentifier","src":"3538:3:23"},"nativeSrc":"3538:32:23","nodeType":"YulFunctionCall","src":"3538:32:23"}],"functionName":{"name":"mstore","nativeSrc":"3520:6:23","nodeType":"YulIdentifier","src":"3520:6:23"},"nativeSrc":"3520:51:23","nodeType":"YulFunctionCall","src":"3520:51:23"},"nativeSrc":"3520:51:23","nodeType":"YulExpressionStatement","src":"3520:51:23"}]},"name":"abi_encode_tuple_t_contract$_IBaluniV1Registry_$6110__to_t_address__fromStack_reversed","nativeSrc":"3348:229:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3444:9:23","nodeType":"YulTypedName","src":"3444:9:23","type":""},{"name":"value0","nativeSrc":"3455:6:23","nodeType":"YulTypedName","src":"3455:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3466:4:23","nodeType":"YulTypedName","src":"3466:4:23","type":""}],"src":"3348:229:23"},{"body":{"nativeSrc":"3677:92:23","nodeType":"YulBlock","src":"3677:92:23","statements":[{"nativeSrc":"3687:26:23","nodeType":"YulAssignment","src":"3687:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"3699:9:23","nodeType":"YulIdentifier","src":"3699:9:23"},{"kind":"number","nativeSrc":"3710:2:23","nodeType":"YulLiteral","src":"3710:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3695:3:23","nodeType":"YulIdentifier","src":"3695:3:23"},"nativeSrc":"3695:18:23","nodeType":"YulFunctionCall","src":"3695:18:23"},"variableNames":[{"name":"tail","nativeSrc":"3687:4:23","nodeType":"YulIdentifier","src":"3687:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3729:9:23","nodeType":"YulIdentifier","src":"3729:9:23"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"3754:6:23","nodeType":"YulIdentifier","src":"3754:6:23"}],"functionName":{"name":"iszero","nativeSrc":"3747:6:23","nodeType":"YulIdentifier","src":"3747:6:23"},"nativeSrc":"3747:14:23","nodeType":"YulFunctionCall","src":"3747:14:23"}],"functionName":{"name":"iszero","nativeSrc":"3740:6:23","nodeType":"YulIdentifier","src":"3740:6:23"},"nativeSrc":"3740:22:23","nodeType":"YulFunctionCall","src":"3740:22:23"}],"functionName":{"name":"mstore","nativeSrc":"3722:6:23","nodeType":"YulIdentifier","src":"3722:6:23"},"nativeSrc":"3722:41:23","nodeType":"YulFunctionCall","src":"3722:41:23"},"nativeSrc":"3722:41:23","nodeType":"YulExpressionStatement","src":"3722:41:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3582:187:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3646:9:23","nodeType":"YulTypedName","src":"3646:9:23","type":""},{"name":"value0","nativeSrc":"3657:6:23","nodeType":"YulTypedName","src":"3657:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3668:4:23","nodeType":"YulTypedName","src":"3668:4:23","type":""}],"src":"3582:187:23"},{"body":{"nativeSrc":"3860:341:23","nodeType":"YulBlock","src":"3860:341:23","statements":[{"body":{"nativeSrc":"3906:16:23","nodeType":"YulBlock","src":"3906:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3915:1:23","nodeType":"YulLiteral","src":"3915:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"3918:1:23","nodeType":"YulLiteral","src":"3918:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3908:6:23","nodeType":"YulIdentifier","src":"3908:6:23"},"nativeSrc":"3908:12:23","nodeType":"YulFunctionCall","src":"3908:12:23"},"nativeSrc":"3908:12:23","nodeType":"YulExpressionStatement","src":"3908:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3881:7:23","nodeType":"YulIdentifier","src":"3881:7:23"},{"name":"headStart","nativeSrc":"3890:9:23","nodeType":"YulIdentifier","src":"3890:9:23"}],"functionName":{"name":"sub","nativeSrc":"3877:3:23","nodeType":"YulIdentifier","src":"3877:3:23"},"nativeSrc":"3877:23:23","nodeType":"YulFunctionCall","src":"3877:23:23"},{"kind":"number","nativeSrc":"3902:2:23","nodeType":"YulLiteral","src":"3902:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3873:3:23","nodeType":"YulIdentifier","src":"3873:3:23"},"nativeSrc":"3873:32:23","nodeType":"YulFunctionCall","src":"3873:32:23"},"nativeSrc":"3870:52:23","nodeType":"YulIf","src":"3870:52:23"},{"nativeSrc":"3931:36:23","nodeType":"YulVariableDeclaration","src":"3931:36:23","value":{"arguments":[{"name":"headStart","nativeSrc":"3957:9:23","nodeType":"YulIdentifier","src":"3957:9:23"}],"functionName":{"name":"calldataload","nativeSrc":"3944:12:23","nodeType":"YulIdentifier","src":"3944:12:23"},"nativeSrc":"3944:23:23","nodeType":"YulFunctionCall","src":"3944:23:23"},"variables":[{"name":"value","nativeSrc":"3935:5:23","nodeType":"YulTypedName","src":"3935:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4001:5:23","nodeType":"YulIdentifier","src":"4001:5:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3976:24:23","nodeType":"YulIdentifier","src":"3976:24:23"},"nativeSrc":"3976:31:23","nodeType":"YulFunctionCall","src":"3976:31:23"},"nativeSrc":"3976:31:23","nodeType":"YulExpressionStatement","src":"3976:31:23"},{"nativeSrc":"4016:15:23","nodeType":"YulAssignment","src":"4016:15:23","value":{"name":"value","nativeSrc":"4026:5:23","nodeType":"YulIdentifier","src":"4026:5:23"},"variableNames":[{"name":"value0","nativeSrc":"4016:6:23","nodeType":"YulIdentifier","src":"4016:6:23"}]},{"nativeSrc":"4040:47:23","nodeType":"YulVariableDeclaration","src":"4040:47:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4072:9:23","nodeType":"YulIdentifier","src":"4072:9:23"},{"kind":"number","nativeSrc":"4083:2:23","nodeType":"YulLiteral","src":"4083:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4068:3:23","nodeType":"YulIdentifier","src":"4068:3:23"},"nativeSrc":"4068:18:23","nodeType":"YulFunctionCall","src":"4068:18:23"}],"functionName":{"name":"calldataload","nativeSrc":"4055:12:23","nodeType":"YulIdentifier","src":"4055:12:23"},"nativeSrc":"4055:32:23","nodeType":"YulFunctionCall","src":"4055:32:23"},"variables":[{"name":"value_1","nativeSrc":"4044:7:23","nodeType":"YulTypedName","src":"4044:7:23","type":""}]},{"body":{"nativeSrc":"4153:16:23","nodeType":"YulBlock","src":"4153:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4162:1:23","nodeType":"YulLiteral","src":"4162:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"4165:1:23","nodeType":"YulLiteral","src":"4165:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4155:6:23","nodeType":"YulIdentifier","src":"4155:6:23"},"nativeSrc":"4155:12:23","nodeType":"YulFunctionCall","src":"4155:12:23"},"nativeSrc":"4155:12:23","nodeType":"YulExpressionStatement","src":"4155:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nativeSrc":"4109:7:23","nodeType":"YulIdentifier","src":"4109:7:23"},{"arguments":[{"name":"value_1","nativeSrc":"4122:7:23","nodeType":"YulIdentifier","src":"4122:7:23"},{"kind":"number","nativeSrc":"4131:18:23","nodeType":"YulLiteral","src":"4131:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"4118:3:23","nodeType":"YulIdentifier","src":"4118:3:23"},"nativeSrc":"4118:32:23","nodeType":"YulFunctionCall","src":"4118:32:23"}],"functionName":{"name":"eq","nativeSrc":"4106:2:23","nodeType":"YulIdentifier","src":"4106:2:23"},"nativeSrc":"4106:45:23","nodeType":"YulFunctionCall","src":"4106:45:23"}],"functionName":{"name":"iszero","nativeSrc":"4099:6:23","nodeType":"YulIdentifier","src":"4099:6:23"},"nativeSrc":"4099:53:23","nodeType":"YulFunctionCall","src":"4099:53:23"},"nativeSrc":"4096:73:23","nodeType":"YulIf","src":"4096:73:23"},{"nativeSrc":"4178:17:23","nodeType":"YulAssignment","src":"4178:17:23","value":{"name":"value_1","nativeSrc":"4188:7:23","nodeType":"YulIdentifier","src":"4188:7:23"},"variableNames":[{"name":"value1","nativeSrc":"4178:6:23","nodeType":"YulIdentifier","src":"4178:6:23"}]}]},"name":"abi_decode_tuple_t_addresst_uint64","nativeSrc":"3774:427:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3818:9:23","nodeType":"YulTypedName","src":"3818:9:23","type":""},{"name":"dataEnd","nativeSrc":"3829:7:23","nodeType":"YulTypedName","src":"3829:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3841:6:23","nodeType":"YulTypedName","src":"3841:6:23","type":""},{"name":"value1","nativeSrc":"3849:6:23","nodeType":"YulTypedName","src":"3849:6:23","type":""}],"src":"3774:427:23"},{"body":{"nativeSrc":"4327:297:23","nodeType":"YulBlock","src":"4327:297:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4344:9:23","nodeType":"YulIdentifier","src":"4344:9:23"},{"kind":"number","nativeSrc":"4355:2:23","nodeType":"YulLiteral","src":"4355:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4337:6:23","nodeType":"YulIdentifier","src":"4337:6:23"},"nativeSrc":"4337:21:23","nodeType":"YulFunctionCall","src":"4337:21:23"},"nativeSrc":"4337:21:23","nodeType":"YulExpressionStatement","src":"4337:21:23"},{"nativeSrc":"4367:27:23","nodeType":"YulVariableDeclaration","src":"4367:27:23","value":{"arguments":[{"name":"value0","nativeSrc":"4387:6:23","nodeType":"YulIdentifier","src":"4387:6:23"}],"functionName":{"name":"mload","nativeSrc":"4381:5:23","nodeType":"YulIdentifier","src":"4381:5:23"},"nativeSrc":"4381:13:23","nodeType":"YulFunctionCall","src":"4381:13:23"},"variables":[{"name":"length","nativeSrc":"4371:6:23","nodeType":"YulTypedName","src":"4371:6:23","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4414:9:23","nodeType":"YulIdentifier","src":"4414:9:23"},{"kind":"number","nativeSrc":"4425:2:23","nodeType":"YulLiteral","src":"4425:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4410:3:23","nodeType":"YulIdentifier","src":"4410:3:23"},"nativeSrc":"4410:18:23","nodeType":"YulFunctionCall","src":"4410:18:23"},{"name":"length","nativeSrc":"4430:6:23","nodeType":"YulIdentifier","src":"4430:6:23"}],"functionName":{"name":"mstore","nativeSrc":"4403:6:23","nodeType":"YulIdentifier","src":"4403:6:23"},"nativeSrc":"4403:34:23","nodeType":"YulFunctionCall","src":"4403:34:23"},"nativeSrc":"4403:34:23","nodeType":"YulExpressionStatement","src":"4403:34:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4456:9:23","nodeType":"YulIdentifier","src":"4456:9:23"},{"kind":"number","nativeSrc":"4467:2:23","nodeType":"YulLiteral","src":"4467:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4452:3:23","nodeType":"YulIdentifier","src":"4452:3:23"},"nativeSrc":"4452:18:23","nodeType":"YulFunctionCall","src":"4452:18:23"},{"arguments":[{"name":"value0","nativeSrc":"4476:6:23","nodeType":"YulIdentifier","src":"4476:6:23"},{"kind":"number","nativeSrc":"4484:2:23","nodeType":"YulLiteral","src":"4484:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4472:3:23","nodeType":"YulIdentifier","src":"4472:3:23"},"nativeSrc":"4472:15:23","nodeType":"YulFunctionCall","src":"4472:15:23"},{"name":"length","nativeSrc":"4489:6:23","nodeType":"YulIdentifier","src":"4489:6:23"}],"functionName":{"name":"mcopy","nativeSrc":"4446:5:23","nodeType":"YulIdentifier","src":"4446:5:23"},"nativeSrc":"4446:50:23","nodeType":"YulFunctionCall","src":"4446:50:23"},"nativeSrc":"4446:50:23","nodeType":"YulExpressionStatement","src":"4446:50:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4520:9:23","nodeType":"YulIdentifier","src":"4520:9:23"},{"name":"length","nativeSrc":"4531:6:23","nodeType":"YulIdentifier","src":"4531:6:23"}],"functionName":{"name":"add","nativeSrc":"4516:3:23","nodeType":"YulIdentifier","src":"4516:3:23"},"nativeSrc":"4516:22:23","nodeType":"YulFunctionCall","src":"4516:22:23"},{"kind":"number","nativeSrc":"4540:2:23","nodeType":"YulLiteral","src":"4540:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4512:3:23","nodeType":"YulIdentifier","src":"4512:3:23"},"nativeSrc":"4512:31:23","nodeType":"YulFunctionCall","src":"4512:31:23"},{"kind":"number","nativeSrc":"4545:1:23","nodeType":"YulLiteral","src":"4545:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4505:6:23","nodeType":"YulIdentifier","src":"4505:6:23"},"nativeSrc":"4505:42:23","nodeType":"YulFunctionCall","src":"4505:42:23"},"nativeSrc":"4505:42:23","nodeType":"YulExpressionStatement","src":"4505:42:23"},{"nativeSrc":"4556:62:23","nodeType":"YulAssignment","src":"4556:62:23","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4572:9:23","nodeType":"YulIdentifier","src":"4572:9:23"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4591:6:23","nodeType":"YulIdentifier","src":"4591:6:23"},{"kind":"number","nativeSrc":"4599:2:23","nodeType":"YulLiteral","src":"4599:2:23","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4587:3:23","nodeType":"YulIdentifier","src":"4587:3:23"},"nativeSrc":"4587:15:23","nodeType":"YulFunctionCall","src":"4587:15:23"},{"arguments":[{"kind":"number","nativeSrc":"4608:2:23","nodeType":"YulLiteral","src":"4608:2:23","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4604:3:23","nodeType":"YulIdentifier","src":"4604:3:23"},"nativeSrc":"4604:7:23","nodeType":"YulFunctionCall","src":"4604:7:23"}],"functionName":{"name":"and","nativeSrc":"4583:3:23","nodeType":"YulIdentifier","src":"4583:3:23"},"nativeSrc":"4583:29:23","nodeType":"YulFunctionCall","src":"4583:29:23"}],"functionName":{"name":"add","nativeSrc":"4568:3:23","nodeType":"YulIdentifier","src":"4568:3:23"},"nativeSrc":"4568:45:23","nodeType":"YulFunctionCall","src":"4568:45:23"},{"kind":"number","nativeSrc":"4615:2:23","nodeType":"YulLiteral","src":"4615:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4564:3:23","nodeType":"YulIdentifier","src":"4564:3:23"},"nativeSrc":"4564:54:23","nodeType":"YulFunctionCall","src":"4564:54:23"},"variableNames":[{"name":"tail","nativeSrc":"4556:4:23","nodeType":"YulIdentifier","src":"4556:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4206:418:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4296:9:23","nodeType":"YulTypedName","src":"4296:9:23","type":""},{"name":"value0","nativeSrc":"4307:6:23","nodeType":"YulTypedName","src":"4307:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4318:4:23","nodeType":"YulTypedName","src":"4318:4:23","type":""}],"src":"4206:418:23"},{"body":{"nativeSrc":"4730:76:23","nodeType":"YulBlock","src":"4730:76:23","statements":[{"nativeSrc":"4740:26:23","nodeType":"YulAssignment","src":"4740:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"4752:9:23","nodeType":"YulIdentifier","src":"4752:9:23"},{"kind":"number","nativeSrc":"4763:2:23","nodeType":"YulLiteral","src":"4763:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4748:3:23","nodeType":"YulIdentifier","src":"4748:3:23"},"nativeSrc":"4748:18:23","nodeType":"YulFunctionCall","src":"4748:18:23"},"variableNames":[{"name":"tail","nativeSrc":"4740:4:23","nodeType":"YulIdentifier","src":"4740:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4782:9:23","nodeType":"YulIdentifier","src":"4782:9:23"},{"name":"value0","nativeSrc":"4793:6:23","nodeType":"YulIdentifier","src":"4793:6:23"}],"functionName":{"name":"mstore","nativeSrc":"4775:6:23","nodeType":"YulIdentifier","src":"4775:6:23"},"nativeSrc":"4775:25:23","nodeType":"YulFunctionCall","src":"4775:25:23"},"nativeSrc":"4775:25:23","nodeType":"YulExpressionStatement","src":"4775:25:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4629:177:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:23","nodeType":"YulTypedName","src":"4699:9:23","type":""},{"name":"value0","nativeSrc":"4710:6:23","nodeType":"YulTypedName","src":"4710:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4721:4:23","nodeType":"YulTypedName","src":"4721:4:23","type":""}],"src":"4629:177:23"},{"body":{"nativeSrc":"4917:905:23","nodeType":"YulBlock","src":"4917:905:23","statements":[{"nativeSrc":"4927:12:23","nodeType":"YulVariableDeclaration","src":"4927:12:23","value":{"kind":"number","nativeSrc":"4937:2:23","nodeType":"YulLiteral","src":"4937:2:23","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"4931:2:23","nodeType":"YulTypedName","src":"4931:2:23","type":""}]},{"body":{"nativeSrc":"4984:16:23","nodeType":"YulBlock","src":"4984:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4993:1:23","nodeType":"YulLiteral","src":"4993:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"4996:1:23","nodeType":"YulLiteral","src":"4996:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4986:6:23","nodeType":"YulIdentifier","src":"4986:6:23"},"nativeSrc":"4986:12:23","nodeType":"YulFunctionCall","src":"4986:12:23"},"nativeSrc":"4986:12:23","nodeType":"YulExpressionStatement","src":"4986:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4959:7:23","nodeType":"YulIdentifier","src":"4959:7:23"},{"name":"headStart","nativeSrc":"4968:9:23","nodeType":"YulIdentifier","src":"4968:9:23"}],"functionName":{"name":"sub","nativeSrc":"4955:3:23","nodeType":"YulIdentifier","src":"4955:3:23"},"nativeSrc":"4955:23:23","nodeType":"YulFunctionCall","src":"4955:23:23"},{"name":"_1","nativeSrc":"4980:2:23","nodeType":"YulIdentifier","src":"4980:2:23"}],"functionName":{"name":"slt","nativeSrc":"4951:3:23","nodeType":"YulIdentifier","src":"4951:3:23"},"nativeSrc":"4951:32:23","nodeType":"YulFunctionCall","src":"4951:32:23"},"nativeSrc":"4948:52:23","nodeType":"YulIf","src":"4948:52:23"},{"nativeSrc":"5009:30:23","nodeType":"YulVariableDeclaration","src":"5009:30:23","value":{"arguments":[{"name":"headStart","nativeSrc":"5029:9:23","nodeType":"YulIdentifier","src":"5029:9:23"}],"functionName":{"name":"mload","nativeSrc":"5023:5:23","nodeType":"YulIdentifier","src":"5023:5:23"},"nativeSrc":"5023:16:23","nodeType":"YulFunctionCall","src":"5023:16:23"},"variables":[{"name":"offset","nativeSrc":"5013:6:23","nodeType":"YulTypedName","src":"5013:6:23","type":""}]},{"nativeSrc":"5048:28:23","nodeType":"YulVariableDeclaration","src":"5048:28:23","value":{"kind":"number","nativeSrc":"5058:18:23","nodeType":"YulLiteral","src":"5058:18:23","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nativeSrc":"5052:2:23","nodeType":"YulTypedName","src":"5052:2:23","type":""}]},{"body":{"nativeSrc":"5103:16:23","nodeType":"YulBlock","src":"5103:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5112:1:23","nodeType":"YulLiteral","src":"5112:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"5115:1:23","nodeType":"YulLiteral","src":"5115:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5105:6:23","nodeType":"YulIdentifier","src":"5105:6:23"},"nativeSrc":"5105:12:23","nodeType":"YulFunctionCall","src":"5105:12:23"},"nativeSrc":"5105:12:23","nodeType":"YulExpressionStatement","src":"5105:12:23"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5091:6:23","nodeType":"YulIdentifier","src":"5091:6:23"},{"name":"_2","nativeSrc":"5099:2:23","nodeType":"YulIdentifier","src":"5099:2:23"}],"functionName":{"name":"gt","nativeSrc":"5088:2:23","nodeType":"YulIdentifier","src":"5088:2:23"},"nativeSrc":"5088:14:23","nodeType":"YulFunctionCall","src":"5088:14:23"},"nativeSrc":"5085:34:23","nodeType":"YulIf","src":"5085:34:23"},{"nativeSrc":"5128:32:23","nodeType":"YulVariableDeclaration","src":"5128:32:23","value":{"arguments":[{"name":"headStart","nativeSrc":"5142:9:23","nodeType":"YulIdentifier","src":"5142:9:23"},{"name":"offset","nativeSrc":"5153:6:23","nodeType":"YulIdentifier","src":"5153:6:23"}],"functionName":{"name":"add","nativeSrc":"5138:3:23","nodeType":"YulIdentifier","src":"5138:3:23"},"nativeSrc":"5138:22:23","nodeType":"YulFunctionCall","src":"5138:22:23"},"variables":[{"name":"_3","nativeSrc":"5132:2:23","nodeType":"YulTypedName","src":"5132:2:23","type":""}]},{"body":{"nativeSrc":"5208:16:23","nodeType":"YulBlock","src":"5208:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5217:1:23","nodeType":"YulLiteral","src":"5217:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"5220:1:23","nodeType":"YulLiteral","src":"5220:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5210:6:23","nodeType":"YulIdentifier","src":"5210:6:23"},"nativeSrc":"5210:12:23","nodeType":"YulFunctionCall","src":"5210:12:23"},"nativeSrc":"5210:12:23","nodeType":"YulExpressionStatement","src":"5210:12:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"5187:2:23","nodeType":"YulIdentifier","src":"5187:2:23"},{"kind":"number","nativeSrc":"5191:4:23","nodeType":"YulLiteral","src":"5191:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5183:3:23","nodeType":"YulIdentifier","src":"5183:3:23"},"nativeSrc":"5183:13:23","nodeType":"YulFunctionCall","src":"5183:13:23"},{"name":"dataEnd","nativeSrc":"5198:7:23","nodeType":"YulIdentifier","src":"5198:7:23"}],"functionName":{"name":"slt","nativeSrc":"5179:3:23","nodeType":"YulIdentifier","src":"5179:3:23"},"nativeSrc":"5179:27:23","nodeType":"YulFunctionCall","src":"5179:27:23"}],"functionName":{"name":"iszero","nativeSrc":"5172:6:23","nodeType":"YulIdentifier","src":"5172:6:23"},"nativeSrc":"5172:35:23","nodeType":"YulFunctionCall","src":"5172:35:23"},"nativeSrc":"5169:55:23","nodeType":"YulIf","src":"5169:55:23"},{"nativeSrc":"5233:19:23","nodeType":"YulVariableDeclaration","src":"5233:19:23","value":{"arguments":[{"name":"_3","nativeSrc":"5249:2:23","nodeType":"YulIdentifier","src":"5249:2:23"}],"functionName":{"name":"mload","nativeSrc":"5243:5:23","nodeType":"YulIdentifier","src":"5243:5:23"},"nativeSrc":"5243:9:23","nodeType":"YulFunctionCall","src":"5243:9:23"},"variables":[{"name":"_4","nativeSrc":"5237:2:23","nodeType":"YulTypedName","src":"5237:2:23","type":""}]},{"body":{"nativeSrc":"5275:22:23","nodeType":"YulBlock","src":"5275:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5277:16:23","nodeType":"YulIdentifier","src":"5277:16:23"},"nativeSrc":"5277:18:23","nodeType":"YulFunctionCall","src":"5277:18:23"},"nativeSrc":"5277:18:23","nodeType":"YulExpressionStatement","src":"5277:18:23"}]},"condition":{"arguments":[{"name":"_4","nativeSrc":"5267:2:23","nodeType":"YulIdentifier","src":"5267:2:23"},{"name":"_2","nativeSrc":"5271:2:23","nodeType":"YulIdentifier","src":"5271:2:23"}],"functionName":{"name":"gt","nativeSrc":"5264:2:23","nodeType":"YulIdentifier","src":"5264:2:23"},"nativeSrc":"5264:10:23","nodeType":"YulFunctionCall","src":"5264:10:23"},"nativeSrc":"5261:36:23","nodeType":"YulIf","src":"5261:36:23"},{"nativeSrc":"5306:20:23","nodeType":"YulVariableDeclaration","src":"5306:20:23","value":{"arguments":[{"kind":"number","nativeSrc":"5320:1:23","nodeType":"YulLiteral","src":"5320:1:23","type":"","value":"5"},{"name":"_4","nativeSrc":"5323:2:23","nodeType":"YulIdentifier","src":"5323:2:23"}],"functionName":{"name":"shl","nativeSrc":"5316:3:23","nodeType":"YulIdentifier","src":"5316:3:23"},"nativeSrc":"5316:10:23","nodeType":"YulFunctionCall","src":"5316:10:23"},"variables":[{"name":"_5","nativeSrc":"5310:2:23","nodeType":"YulTypedName","src":"5310:2:23","type":""}]},{"nativeSrc":"5335:39:23","nodeType":"YulVariableDeclaration","src":"5335:39:23","value":{"arguments":[{"arguments":[{"name":"_5","nativeSrc":"5366:2:23","nodeType":"YulIdentifier","src":"5366:2:23"},{"name":"_1","nativeSrc":"5370:2:23","nodeType":"YulIdentifier","src":"5370:2:23"}],"functionName":{"name":"add","nativeSrc":"5362:3:23","nodeType":"YulIdentifier","src":"5362:3:23"},"nativeSrc":"5362:11:23","nodeType":"YulFunctionCall","src":"5362:11:23"}],"functionName":{"name":"allocate_memory","nativeSrc":"5346:15:23","nodeType":"YulIdentifier","src":"5346:15:23"},"nativeSrc":"5346:28:23","nodeType":"YulFunctionCall","src":"5346:28:23"},"variables":[{"name":"dst","nativeSrc":"5339:3:23","nodeType":"YulTypedName","src":"5339:3:23","type":""}]},{"nativeSrc":"5383:16:23","nodeType":"YulVariableDeclaration","src":"5383:16:23","value":{"name":"dst","nativeSrc":"5396:3:23","nodeType":"YulIdentifier","src":"5396:3:23"},"variables":[{"name":"dst_1","nativeSrc":"5387:5:23","nodeType":"YulTypedName","src":"5387:5:23","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"5415:3:23","nodeType":"YulIdentifier","src":"5415:3:23"},{"name":"_4","nativeSrc":"5420:2:23","nodeType":"YulIdentifier","src":"5420:2:23"}],"functionName":{"name":"mstore","nativeSrc":"5408:6:23","nodeType":"YulIdentifier","src":"5408:6:23"},"nativeSrc":"5408:15:23","nodeType":"YulFunctionCall","src":"5408:15:23"},"nativeSrc":"5408:15:23","nodeType":"YulExpressionStatement","src":"5408:15:23"},{"nativeSrc":"5432:19:23","nodeType":"YulAssignment","src":"5432:19:23","value":{"arguments":[{"name":"dst","nativeSrc":"5443:3:23","nodeType":"YulIdentifier","src":"5443:3:23"},{"name":"_1","nativeSrc":"5448:2:23","nodeType":"YulIdentifier","src":"5448:2:23"}],"functionName":{"name":"add","nativeSrc":"5439:3:23","nodeType":"YulIdentifier","src":"5439:3:23"},"nativeSrc":"5439:12:23","nodeType":"YulFunctionCall","src":"5439:12:23"},"variableNames":[{"name":"dst","nativeSrc":"5432:3:23","nodeType":"YulIdentifier","src":"5432:3:23"}]},{"nativeSrc":"5460:34:23","nodeType":"YulVariableDeclaration","src":"5460:34:23","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"5482:2:23","nodeType":"YulIdentifier","src":"5482:2:23"},{"name":"_5","nativeSrc":"5486:2:23","nodeType":"YulIdentifier","src":"5486:2:23"}],"functionName":{"name":"add","nativeSrc":"5478:3:23","nodeType":"YulIdentifier","src":"5478:3:23"},"nativeSrc":"5478:11:23","nodeType":"YulFunctionCall","src":"5478:11:23"},{"name":"_1","nativeSrc":"5491:2:23","nodeType":"YulIdentifier","src":"5491:2:23"}],"functionName":{"name":"add","nativeSrc":"5474:3:23","nodeType":"YulIdentifier","src":"5474:3:23"},"nativeSrc":"5474:20:23","nodeType":"YulFunctionCall","src":"5474:20:23"},"variables":[{"name":"srcEnd","nativeSrc":"5464:6:23","nodeType":"YulTypedName","src":"5464:6:23","type":""}]},{"body":{"nativeSrc":"5526:16:23","nodeType":"YulBlock","src":"5526:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5535:1:23","nodeType":"YulLiteral","src":"5535:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"5538:1:23","nodeType":"YulLiteral","src":"5538:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5528:6:23","nodeType":"YulIdentifier","src":"5528:6:23"},"nativeSrc":"5528:12:23","nodeType":"YulFunctionCall","src":"5528:12:23"},"nativeSrc":"5528:12:23","nodeType":"YulExpressionStatement","src":"5528:12:23"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"5509:6:23","nodeType":"YulIdentifier","src":"5509:6:23"},{"name":"dataEnd","nativeSrc":"5517:7:23","nodeType":"YulIdentifier","src":"5517:7:23"}],"functionName":{"name":"gt","nativeSrc":"5506:2:23","nodeType":"YulIdentifier","src":"5506:2:23"},"nativeSrc":"5506:19:23","nodeType":"YulFunctionCall","src":"5506:19:23"},"nativeSrc":"5503:39:23","nodeType":"YulIf","src":"5503:39:23"},{"nativeSrc":"5551:22:23","nodeType":"YulVariableDeclaration","src":"5551:22:23","value":{"arguments":[{"name":"_3","nativeSrc":"5566:2:23","nodeType":"YulIdentifier","src":"5566:2:23"},{"name":"_1","nativeSrc":"5570:2:23","nodeType":"YulIdentifier","src":"5570:2:23"}],"functionName":{"name":"add","nativeSrc":"5562:3:23","nodeType":"YulIdentifier","src":"5562:3:23"},"nativeSrc":"5562:11:23","nodeType":"YulFunctionCall","src":"5562:11:23"},"variables":[{"name":"src","nativeSrc":"5555:3:23","nodeType":"YulTypedName","src":"5555:3:23","type":""}]},{"body":{"nativeSrc":"5638:154:23","nodeType":"YulBlock","src":"5638:154:23","statements":[{"nativeSrc":"5652:23:23","nodeType":"YulVariableDeclaration","src":"5652:23:23","value":{"arguments":[{"name":"src","nativeSrc":"5671:3:23","nodeType":"YulIdentifier","src":"5671:3:23"}],"functionName":{"name":"mload","nativeSrc":"5665:5:23","nodeType":"YulIdentifier","src":"5665:5:23"},"nativeSrc":"5665:10:23","nodeType":"YulFunctionCall","src":"5665:10:23"},"variables":[{"name":"value","nativeSrc":"5656:5:23","nodeType":"YulTypedName","src":"5656:5:23","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5713:5:23","nodeType":"YulIdentifier","src":"5713:5:23"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5688:24:23","nodeType":"YulIdentifier","src":"5688:24:23"},"nativeSrc":"5688:31:23","nodeType":"YulFunctionCall","src":"5688:31:23"},"nativeSrc":"5688:31:23","nodeType":"YulExpressionStatement","src":"5688:31:23"},{"expression":{"arguments":[{"name":"dst","nativeSrc":"5739:3:23","nodeType":"YulIdentifier","src":"5739:3:23"},{"name":"value","nativeSrc":"5744:5:23","nodeType":"YulIdentifier","src":"5744:5:23"}],"functionName":{"name":"mstore","nativeSrc":"5732:6:23","nodeType":"YulIdentifier","src":"5732:6:23"},"nativeSrc":"5732:18:23","nodeType":"YulFunctionCall","src":"5732:18:23"},"nativeSrc":"5732:18:23","nodeType":"YulExpressionStatement","src":"5732:18:23"},{"nativeSrc":"5763:19:23","nodeType":"YulAssignment","src":"5763:19:23","value":{"arguments":[{"name":"dst","nativeSrc":"5774:3:23","nodeType":"YulIdentifier","src":"5774:3:23"},{"name":"_1","nativeSrc":"5779:2:23","nodeType":"YulIdentifier","src":"5779:2:23"}],"functionName":{"name":"add","nativeSrc":"5770:3:23","nodeType":"YulIdentifier","src":"5770:3:23"},"nativeSrc":"5770:12:23","nodeType":"YulFunctionCall","src":"5770:12:23"},"variableNames":[{"name":"dst","nativeSrc":"5763:3:23","nodeType":"YulIdentifier","src":"5763:3:23"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"5593:3:23","nodeType":"YulIdentifier","src":"5593:3:23"},{"name":"srcEnd","nativeSrc":"5598:6:23","nodeType":"YulIdentifier","src":"5598:6:23"}],"functionName":{"name":"lt","nativeSrc":"5590:2:23","nodeType":"YulIdentifier","src":"5590:2:23"},"nativeSrc":"5590:15:23","nodeType":"YulFunctionCall","src":"5590:15:23"},"nativeSrc":"5582:210:23","nodeType":"YulForLoop","post":{"nativeSrc":"5606:23:23","nodeType":"YulBlock","src":"5606:23:23","statements":[{"nativeSrc":"5608:19:23","nodeType":"YulAssignment","src":"5608:19:23","value":{"arguments":[{"name":"src","nativeSrc":"5619:3:23","nodeType":"YulIdentifier","src":"5619:3:23"},{"name":"_1","nativeSrc":"5624:2:23","nodeType":"YulIdentifier","src":"5624:2:23"}],"functionName":{"name":"add","nativeSrc":"5615:3:23","nodeType":"YulIdentifier","src":"5615:3:23"},"nativeSrc":"5615:12:23","nodeType":"YulFunctionCall","src":"5615:12:23"},"variableNames":[{"name":"src","nativeSrc":"5608:3:23","nodeType":"YulIdentifier","src":"5608:3:23"}]}]},"pre":{"nativeSrc":"5586:3:23","nodeType":"YulBlock","src":"5586:3:23","statements":[]},"src":"5582:210:23"},{"nativeSrc":"5801:15:23","nodeType":"YulAssignment","src":"5801:15:23","value":{"name":"dst_1","nativeSrc":"5811:5:23","nodeType":"YulIdentifier","src":"5811:5:23"},"variableNames":[{"name":"value0","nativeSrc":"5801:6:23","nodeType":"YulIdentifier","src":"5801:6:23"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory","nativeSrc":"4811:1011:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4883:9:23","nodeType":"YulTypedName","src":"4883:9:23","type":""},{"name":"dataEnd","nativeSrc":"4894:7:23","nodeType":"YulTypedName","src":"4894:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4906:6:23","nodeType":"YulTypedName","src":"4906:6:23","type":""}],"src":"4811:1011:23"},{"body":{"nativeSrc":"5859:95:23","nodeType":"YulBlock","src":"5859:95:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5876:1:23","nodeType":"YulLiteral","src":"5876:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"5883:3:23","nodeType":"YulLiteral","src":"5883:3:23","type":"","value":"224"},{"kind":"number","nativeSrc":"5888:10:23","nodeType":"YulLiteral","src":"5888:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"5879:3:23","nodeType":"YulIdentifier","src":"5879:3:23"},"nativeSrc":"5879:20:23","nodeType":"YulFunctionCall","src":"5879:20:23"}],"functionName":{"name":"mstore","nativeSrc":"5869:6:23","nodeType":"YulIdentifier","src":"5869:6:23"},"nativeSrc":"5869:31:23","nodeType":"YulFunctionCall","src":"5869:31:23"},"nativeSrc":"5869:31:23","nodeType":"YulExpressionStatement","src":"5869:31:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5916:1:23","nodeType":"YulLiteral","src":"5916:1:23","type":"","value":"4"},{"kind":"number","nativeSrc":"5919:4:23","nodeType":"YulLiteral","src":"5919:4:23","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"5909:6:23","nodeType":"YulIdentifier","src":"5909:6:23"},"nativeSrc":"5909:15:23","nodeType":"YulFunctionCall","src":"5909:15:23"},"nativeSrc":"5909:15:23","nodeType":"YulExpressionStatement","src":"5909:15:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5940:1:23","nodeType":"YulLiteral","src":"5940:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"5943:4:23","nodeType":"YulLiteral","src":"5943:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5933:6:23","nodeType":"YulIdentifier","src":"5933:6:23"},"nativeSrc":"5933:15:23","nodeType":"YulFunctionCall","src":"5933:15:23"},"nativeSrc":"5933:15:23","nodeType":"YulExpressionStatement","src":"5933:15:23"}]},"name":"panic_error_0x32","nativeSrc":"5827:127:23","nodeType":"YulFunctionDefinition","src":"5827:127:23"},{"body":{"nativeSrc":"6058:101:23","nodeType":"YulBlock","src":"6058:101:23","statements":[{"nativeSrc":"6068:26:23","nodeType":"YulAssignment","src":"6068:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"6080:9:23","nodeType":"YulIdentifier","src":"6080:9:23"},{"kind":"number","nativeSrc":"6091:2:23","nodeType":"YulLiteral","src":"6091:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6076:3:23","nodeType":"YulIdentifier","src":"6076:3:23"},"nativeSrc":"6076:18:23","nodeType":"YulFunctionCall","src":"6076:18:23"},"variableNames":[{"name":"tail","nativeSrc":"6068:4:23","nodeType":"YulIdentifier","src":"6068:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6110:9:23","nodeType":"YulIdentifier","src":"6110:9:23"},{"arguments":[{"name":"value0","nativeSrc":"6125:6:23","nodeType":"YulIdentifier","src":"6125:6:23"},{"kind":"number","nativeSrc":"6133:18:23","nodeType":"YulLiteral","src":"6133:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6121:3:23","nodeType":"YulIdentifier","src":"6121:3:23"},"nativeSrc":"6121:31:23","nodeType":"YulFunctionCall","src":"6121:31:23"}],"functionName":{"name":"mstore","nativeSrc":"6103:6:23","nodeType":"YulIdentifier","src":"6103:6:23"},"nativeSrc":"6103:50:23","nodeType":"YulFunctionCall","src":"6103:50:23"},"nativeSrc":"6103:50:23","nodeType":"YulExpressionStatement","src":"6103:50:23"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"5959:200:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6027:9:23","nodeType":"YulTypedName","src":"6027:9:23","type":""},{"name":"value0","nativeSrc":"6038:6:23","nodeType":"YulTypedName","src":"6038:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6049:4:23","nodeType":"YulTypedName","src":"6049:4:23","type":""}],"src":"5959:200:23"},{"body":{"nativeSrc":"6211:185:23","nodeType":"YulBlock","src":"6211:185:23","statements":[{"body":{"nativeSrc":"6250:111:23","nodeType":"YulBlock","src":"6250:111:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6271:1:23","nodeType":"YulLiteral","src":"6271:1:23","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6278:3:23","nodeType":"YulLiteral","src":"6278:3:23","type":"","value":"224"},{"kind":"number","nativeSrc":"6283:10:23","nodeType":"YulLiteral","src":"6283:10:23","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6274:3:23","nodeType":"YulIdentifier","src":"6274:3:23"},"nativeSrc":"6274:20:23","nodeType":"YulFunctionCall","src":"6274:20:23"}],"functionName":{"name":"mstore","nativeSrc":"6264:6:23","nodeType":"YulIdentifier","src":"6264:6:23"},"nativeSrc":"6264:31:23","nodeType":"YulFunctionCall","src":"6264:31:23"},"nativeSrc":"6264:31:23","nodeType":"YulExpressionStatement","src":"6264:31:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6315:1:23","nodeType":"YulLiteral","src":"6315:1:23","type":"","value":"4"},{"kind":"number","nativeSrc":"6318:4:23","nodeType":"YulLiteral","src":"6318:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6308:6:23","nodeType":"YulIdentifier","src":"6308:6:23"},"nativeSrc":"6308:15:23","nodeType":"YulFunctionCall","src":"6308:15:23"},"nativeSrc":"6308:15:23","nodeType":"YulExpressionStatement","src":"6308:15:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6343:1:23","nodeType":"YulLiteral","src":"6343:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"6346:4:23","nodeType":"YulLiteral","src":"6346:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6336:6:23","nodeType":"YulIdentifier","src":"6336:6:23"},"nativeSrc":"6336:15:23","nodeType":"YulFunctionCall","src":"6336:15:23"},"nativeSrc":"6336:15:23","nodeType":"YulExpressionStatement","src":"6336:15:23"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"6227:5:23","nodeType":"YulIdentifier","src":"6227:5:23"},{"arguments":[{"kind":"number","nativeSrc":"6238:1:23","nodeType":"YulLiteral","src":"6238:1:23","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"6234:3:23","nodeType":"YulIdentifier","src":"6234:3:23"},"nativeSrc":"6234:6:23","nodeType":"YulFunctionCall","src":"6234:6:23"}],"functionName":{"name":"eq","nativeSrc":"6224:2:23","nodeType":"YulIdentifier","src":"6224:2:23"},"nativeSrc":"6224:17:23","nodeType":"YulFunctionCall","src":"6224:17:23"},"nativeSrc":"6221:140:23","nodeType":"YulIf","src":"6221:140:23"},{"nativeSrc":"6370:20:23","nodeType":"YulAssignment","src":"6370:20:23","value":{"arguments":[{"name":"value","nativeSrc":"6381:5:23","nodeType":"YulIdentifier","src":"6381:5:23"},{"kind":"number","nativeSrc":"6388:1:23","nodeType":"YulLiteral","src":"6388:1:23","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6377:3:23","nodeType":"YulIdentifier","src":"6377:3:23"},"nativeSrc":"6377:13:23","nodeType":"YulFunctionCall","src":"6377:13:23"},"variableNames":[{"name":"ret","nativeSrc":"6370:3:23","nodeType":"YulIdentifier","src":"6370:3:23"}]}]},"name":"increment_t_uint256","nativeSrc":"6164:232:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6193:5:23","nodeType":"YulTypedName","src":"6193:5:23","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"6203:3:23","nodeType":"YulTypedName","src":"6203:3:23","type":""}],"src":"6164:232:23"},{"body":{"nativeSrc":"6509:101:23","nodeType":"YulBlock","src":"6509:101:23","statements":[{"nativeSrc":"6519:26:23","nodeType":"YulAssignment","src":"6519:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"6531:9:23","nodeType":"YulIdentifier","src":"6531:9:23"},{"kind":"number","nativeSrc":"6542:2:23","nodeType":"YulLiteral","src":"6542:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6527:3:23","nodeType":"YulIdentifier","src":"6527:3:23"},"nativeSrc":"6527:18:23","nodeType":"YulFunctionCall","src":"6527:18:23"},"variableNames":[{"name":"tail","nativeSrc":"6519:4:23","nodeType":"YulIdentifier","src":"6519:4:23"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6561:9:23","nodeType":"YulIdentifier","src":"6561:9:23"},{"arguments":[{"name":"value0","nativeSrc":"6576:6:23","nodeType":"YulIdentifier","src":"6576:6:23"},{"kind":"number","nativeSrc":"6584:18:23","nodeType":"YulLiteral","src":"6584:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6572:3:23","nodeType":"YulIdentifier","src":"6572:3:23"},"nativeSrc":"6572:31:23","nodeType":"YulFunctionCall","src":"6572:31:23"}],"functionName":{"name":"mstore","nativeSrc":"6554:6:23","nodeType":"YulIdentifier","src":"6554:6:23"},"nativeSrc":"6554:50:23","nodeType":"YulFunctionCall","src":"6554:50:23"},"nativeSrc":"6554:50:23","nodeType":"YulExpressionStatement","src":"6554:50:23"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"6401:209:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6478:9:23","nodeType":"YulTypedName","src":"6478:9:23","type":""},{"name":"value0","nativeSrc":"6489:6:23","nodeType":"YulTypedName","src":"6489:6:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6500:4:23","nodeType":"YulTypedName","src":"6500:4:23","type":""}],"src":"6401:209:23"},{"body":{"nativeSrc":"6789:231:23","nodeType":"YulBlock","src":"6789:231:23","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6806:9:23","nodeType":"YulIdentifier","src":"6806:9:23"},{"kind":"number","nativeSrc":"6817:2:23","nodeType":"YulLiteral","src":"6817:2:23","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6799:6:23","nodeType":"YulIdentifier","src":"6799:6:23"},"nativeSrc":"6799:21:23","nodeType":"YulFunctionCall","src":"6799:21:23"},"nativeSrc":"6799:21:23","nodeType":"YulExpressionStatement","src":"6799:21:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6840:9:23","nodeType":"YulIdentifier","src":"6840:9:23"},{"kind":"number","nativeSrc":"6851:2:23","nodeType":"YulLiteral","src":"6851:2:23","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6836:3:23","nodeType":"YulIdentifier","src":"6836:3:23"},"nativeSrc":"6836:18:23","nodeType":"YulFunctionCall","src":"6836:18:23"},{"kind":"number","nativeSrc":"6856:2:23","nodeType":"YulLiteral","src":"6856:2:23","type":"","value":"41"}],"functionName":{"name":"mstore","nativeSrc":"6829:6:23","nodeType":"YulIdentifier","src":"6829:6:23"},"nativeSrc":"6829:30:23","nodeType":"YulFunctionCall","src":"6829:30:23"},"nativeSrc":"6829:30:23","nodeType":"YulExpressionStatement","src":"6829:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6879:9:23","nodeType":"YulIdentifier","src":"6879:9:23"},{"kind":"number","nativeSrc":"6890:2:23","nodeType":"YulLiteral","src":"6890:2:23","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6875:3:23","nodeType":"YulIdentifier","src":"6875:3:23"},"nativeSrc":"6875:18:23","nodeType":"YulFunctionCall","src":"6875:18:23"},{"hexValue":"42616c756e695631506f6f6c466163746f72793a20494e56414c49445f504f4f","kind":"string","nativeSrc":"6895:34:23","nodeType":"YulLiteral","src":"6895:34:23","type":"","value":"BaluniV1PoolFactory: INVALID_POO"}],"functionName":{"name":"mstore","nativeSrc":"6868:6:23","nodeType":"YulIdentifier","src":"6868:6:23"},"nativeSrc":"6868:62:23","nodeType":"YulFunctionCall","src":"6868:62:23"},"nativeSrc":"6868:62:23","nodeType":"YulExpressionStatement","src":"6868:62:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6950:9:23","nodeType":"YulIdentifier","src":"6950:9:23"},{"kind":"number","nativeSrc":"6961:2:23","nodeType":"YulLiteral","src":"6961:2:23","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6946:3:23","nodeType":"YulIdentifier","src":"6946:3:23"},"nativeSrc":"6946:18:23","nodeType":"YulFunctionCall","src":"6946:18:23"},{"hexValue":"4c5f41444452455353","kind":"string","nativeSrc":"6966:11:23","nodeType":"YulLiteral","src":"6966:11:23","type":"","value":"L_ADDRESS"}],"functionName":{"name":"mstore","nativeSrc":"6939:6:23","nodeType":"YulIdentifier","src":"6939:6:23"},"nativeSrc":"6939:39:23","nodeType":"YulFunctionCall","src":"6939:39:23"},"nativeSrc":"6939:39:23","nodeType":"YulExpressionStatement","src":"6939:39:23"},{"nativeSrc":"6987:27:23","nodeType":"YulAssignment","src":"6987:27:23","value":{"arguments":[{"name":"headStart","nativeSrc":"6999:9:23","nodeType":"YulIdentifier","src":"6999:9:23"},{"kind":"number","nativeSrc":"7010:3:23","nodeType":"YulLiteral","src":"7010:3:23","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6995:3:23","nodeType":"YulIdentifier","src":"6995:3:23"},"nativeSrc":"6995:19:23","nodeType":"YulFunctionCall","src":"6995:19:23"},"variableNames":[{"name":"tail","nativeSrc":"6987:4:23","nodeType":"YulIdentifier","src":"6987:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_05f07676dc67392f7f7f6aab9a91a65df1780d5e1861fa32a8a8f53252c2841b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6615:405:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6766:9:23","nodeType":"YulTypedName","src":"6766:9:23","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6780:4:23","nodeType":"YulTypedName","src":"6780:4:23","type":""}],"src":"6615:405:23"},{"body":{"nativeSrc":"7106:103:23","nodeType":"YulBlock","src":"7106:103:23","statements":[{"body":{"nativeSrc":"7152:16:23","nodeType":"YulBlock","src":"7152:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7161:1:23","nodeType":"YulLiteral","src":"7161:1:23","type":"","value":"0"},{"kind":"number","nativeSrc":"7164:1:23","nodeType":"YulLiteral","src":"7164:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7154:6:23","nodeType":"YulIdentifier","src":"7154:6:23"},"nativeSrc":"7154:12:23","nodeType":"YulFunctionCall","src":"7154:12:23"},"nativeSrc":"7154:12:23","nodeType":"YulExpressionStatement","src":"7154:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7127:7:23","nodeType":"YulIdentifier","src":"7127:7:23"},{"name":"headStart","nativeSrc":"7136:9:23","nodeType":"YulIdentifier","src":"7136:9:23"}],"functionName":{"name":"sub","nativeSrc":"7123:3:23","nodeType":"YulIdentifier","src":"7123:3:23"},"nativeSrc":"7123:23:23","nodeType":"YulFunctionCall","src":"7123:23:23"},{"kind":"number","nativeSrc":"7148:2:23","nodeType":"YulLiteral","src":"7148:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7119:3:23","nodeType":"YulIdentifier","src":"7119:3:23"},"nativeSrc":"7119:32:23","nodeType":"YulFunctionCall","src":"7119:32:23"},"nativeSrc":"7116:52:23","nodeType":"YulIf","src":"7116:52:23"},{"nativeSrc":"7177:26:23","nodeType":"YulAssignment","src":"7177:26:23","value":{"arguments":[{"name":"headStart","nativeSrc":"7193:9:23","nodeType":"YulIdentifier","src":"7193:9:23"}],"functionName":{"name":"mload","nativeSrc":"7187:5:23","nodeType":"YulIdentifier","src":"7187:5:23"},"nativeSrc":"7187:16:23","nodeType":"YulFunctionCall","src":"7187:16:23"},"variableNames":[{"name":"value0","nativeSrc":"7177:6:23","nodeType":"YulIdentifier","src":"7177:6:23"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"7025:184:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7072:9:23","nodeType":"YulTypedName","src":"7072:9:23","type":""},{"name":"dataEnd","nativeSrc":"7083:7:23","nodeType":"YulTypedName","src":"7083:7:23","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7095:6:23","nodeType":"YulTypedName","src":"7095:6:23","type":""}],"src":"7025:184:23"},{"body":{"nativeSrc":"7351:164:23","nodeType":"YulBlock","src":"7351:164:23","statements":[{"nativeSrc":"7361:27:23","nodeType":"YulVariableDeclaration","src":"7361:27:23","value":{"arguments":[{"name":"value0","nativeSrc":"7381:6:23","nodeType":"YulIdentifier","src":"7381:6:23"}],"functionName":{"name":"mload","nativeSrc":"7375:5:23","nodeType":"YulIdentifier","src":"7375:5:23"},"nativeSrc":"7375:13:23","nodeType":"YulFunctionCall","src":"7375:13:23"},"variables":[{"name":"length","nativeSrc":"7365:6:23","nodeType":"YulTypedName","src":"7365:6:23","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"7403:3:23","nodeType":"YulIdentifier","src":"7403:3:23"},{"arguments":[{"name":"value0","nativeSrc":"7412:6:23","nodeType":"YulIdentifier","src":"7412:6:23"},{"kind":"number","nativeSrc":"7420:4:23","nodeType":"YulLiteral","src":"7420:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7408:3:23","nodeType":"YulIdentifier","src":"7408:3:23"},"nativeSrc":"7408:17:23","nodeType":"YulFunctionCall","src":"7408:17:23"},{"name":"length","nativeSrc":"7427:6:23","nodeType":"YulIdentifier","src":"7427:6:23"}],"functionName":{"name":"mcopy","nativeSrc":"7397:5:23","nodeType":"YulIdentifier","src":"7397:5:23"},"nativeSrc":"7397:37:23","nodeType":"YulFunctionCall","src":"7397:37:23"},"nativeSrc":"7397:37:23","nodeType":"YulExpressionStatement","src":"7397:37:23"},{"nativeSrc":"7443:26:23","nodeType":"YulVariableDeclaration","src":"7443:26:23","value":{"arguments":[{"name":"pos","nativeSrc":"7457:3:23","nodeType":"YulIdentifier","src":"7457:3:23"},{"name":"length","nativeSrc":"7462:6:23","nodeType":"YulIdentifier","src":"7462:6:23"}],"functionName":{"name":"add","nativeSrc":"7453:3:23","nodeType":"YulIdentifier","src":"7453:3:23"},"nativeSrc":"7453:16:23","nodeType":"YulFunctionCall","src":"7453:16:23"},"variables":[{"name":"_1","nativeSrc":"7447:2:23","nodeType":"YulTypedName","src":"7447:2:23","type":""}]},{"expression":{"arguments":[{"name":"_1","nativeSrc":"7485:2:23","nodeType":"YulIdentifier","src":"7485:2:23"},{"kind":"number","nativeSrc":"7489:1:23","nodeType":"YulLiteral","src":"7489:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7478:6:23","nodeType":"YulIdentifier","src":"7478:6:23"},"nativeSrc":"7478:13:23","nodeType":"YulFunctionCall","src":"7478:13:23"},"nativeSrc":"7478:13:23","nodeType":"YulExpressionStatement","src":"7478:13:23"},{"nativeSrc":"7500:9:23","nodeType":"YulAssignment","src":"7500:9:23","value":{"name":"_1","nativeSrc":"7507:2:23","nodeType":"YulIdentifier","src":"7507:2:23"},"variableNames":[{"name":"end","nativeSrc":"7500:3:23","nodeType":"YulIdentifier","src":"7500:3:23"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"7214:301:23","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7327:3:23","nodeType":"YulTypedName","src":"7327:3:23","type":""},{"name":"value0","nativeSrc":"7332:6:23","nodeType":"YulTypedName","src":"7332:6:23","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7343:3:23","nodeType":"YulTypedName","src":"7343:3:23","type":""}],"src":"7214:301:23"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), not(31)), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), 0)\n        value1 := array\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IBaluniV1Registry_$6110__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffffffffffffffff))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_05f07676dc67392f7f7f6aab9a91a65df1780d5e1861fa32a8a8f53252c2841b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"BaluniV1PoolFactory: INVALID_POO\")\n        mstore(add(headStart, 96), \"L_ADDRESS\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"468":[{"length":32,"start":2744},{"length":32,"start":2785},{"length":32,"start":3109}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x105 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xB4AC6860 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xB4AC6860 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xD88FF1F4 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xD914CD4B EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xB4340E6A EQ PUSH2 0x324 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x531AA03E EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x89345EFB EQ PUSH2 0x25D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D5E94A7 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x41D1DE97 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x4276B97B EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1B4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DD PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x497 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x14C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x114E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0x5EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x1DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0x81D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x94E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0x9AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP3 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x67E4AC2C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x456 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1183 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x465 PUSH2 0xAAD JUMP JUMPDEST PUSH2 0x46E DUP3 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x478 DUP3 DUP3 PUSH2 0xB59 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x485 PUSH2 0xC1A JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1296 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x49F PUSH2 0xC63 JUMP JUMPDEST PUSH2 0x4A8 PUSH0 PUSH2 0xCBE JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x4FC JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4D2 JUMPI PUSH2 0x4D2 PUSH2 0x1230 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4F4 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x4AD JUMP JUMPDEST POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x54D JUMPI POP DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0x56B JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND PUSH9 0xFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP3 AND DUP3 OR OR DUP3 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE DUP2 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60E JUMPI PUSH2 0x60E PUSH2 0x102F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x637 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x777 JUMPI PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x659 JUMPI PUSH2 0x659 PUSH2 0x1230 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x67E4AC2C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x6D9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1183 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x75D JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x702 JUMPI PUSH2 0x702 PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x755 JUMPI DUP3 DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x72B JUMPI PUSH2 0x72B PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP5 PUSH2 0x74D DUP2 PUSH2 0x1244 JUMP JUMPDEST SWAP6 POP POP PUSH2 0x75D JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6DD JUMP JUMPDEST POP DUP5 MLOAD DUP5 SUB PUSH2 0x76D JUMPI POP POP PUSH2 0x777 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x63D JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x792 JUMPI PUSH2 0x792 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7BB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x814 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7DA JUMPI PUSH2 0x7DA PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7F4 JUMPI PUSH2 0x7F4 PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x7C0 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x862 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x87E JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x88C JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x8D4 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x8DC PUSH2 0xD2E JUMP JUMPDEST PUSH2 0x8E5 CALLER PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x946 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x985 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9B5 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C756E695631506F6F6C466163746F72793A20494E56414C49445F504F4F PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x4C5F41444452455353 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA78 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH2 0xAAA DUP2 PUSH2 0xCBE JUMP JUMPDEST POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0xB33 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB27 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1296 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAAA PUSH2 0xC63 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBB3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBB0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBDB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1296 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xC0B JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH2 0xC15 DUP4 DUP4 PUSH2 0xD47 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0xC95 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x4A8 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xD3E PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xAAA DUP2 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0xD50 DUP3 PUSH2 0xDED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0xD94 JUMPI PUSH2 0xC15 DUP3 DUP3 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x478 PUSH2 0xEC2 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA78 PUSH2 0xD9C JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0xE22 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA19 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1296 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xE6C SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xEB9 DUP6 DUP4 DUP4 PUSH2 0xEE1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xEF6 JUMPI PUSH2 0xEF1 DUP3 PUSH2 0xF3D JUMP JUMPDEST PUSH2 0x456 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0xF0D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA19 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xF4D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAAA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF8B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF96 DUP2 PUSH2 0xF66 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xFA6 DUP2 PUSH2 0xF66 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x456 DUP2 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1023 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xFFE JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x106C JUMPI PUSH2 0x106C PUSH2 0x102F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1085 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1090 DUP2 PUSH2 0xF66 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10AD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x10D2 JUMPI PUSH2 0x10D2 PUSH2 0x102F JUMP JUMPDEST PUSH2 0x10E4 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x1043 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x10F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1127 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1132 DUP2 PUSH2 0xF66 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xFA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1194 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11AB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11BE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x11D0 JUMPI PUSH2 0x11D0 PUSH2 0x102F JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x11E1 DUP5 DUP4 ADD PUSH2 0x1043 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP9 DUP5 GT ISZERO PUSH2 0x11FA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1224 JUMPI DUP5 MLOAD SWAP3 POP PUSH2 0x1214 DUP4 PUSH2 0xF66 JUMP JUMPDEST DUP3 DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x11FF JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1261 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1278 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122078 0xE1 0x25 PUSH13 0xDC08B6ED411CFF706531FE4543 0xD3 0xBF 0xC3 SWAP11 SAR PUSH10 0xF46F44AFE1563F6A8964 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"1789:3499:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3789:147;;;;;;;;;;-1:-1:-1;3789:147:17;;;;;:::i;:::-;-1:-1:-1;;;;;3904:15:17;;;3869:7;3904:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;3789:147;;;;-1:-1:-1;;;;;707:32:23;;;689:51;;677:2;662:18;3789:147:17;;;;;;;;1880:25;;;;;;;;;;-1:-1:-1;1880:25:17;;;;;:::i;:::-;;:::i;3361:185::-;;;;;;;;;;-1:-1:-1;3361:185:17;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4158:214:2:-;;;;;;:::i;:::-;;:::i;:::-;;3705:134;;;;;;;;;;;;;:::i;:::-;;;3312:25:23;;;3300:2;3285:18;3705:134:2;3166:177:23;1956:62:17;;;;;;;;;;-1:-1:-1;1956:62:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1956:62:17;;;3155:101:0;;;;;;;;;;;;;:::i;1914:33:17:-;;;;;;;;;;-1:-1:-1;1914:33:17;;;;-1:-1:-1;;;;;1914:33:17;;;5037:248;;;;;;;;;;-1:-1:-1;5037:248:17;;;;;:::i;:::-;;:::i;:::-;;;3747:14:23;;3740:22;3722:41;;3710:2;3695:18;5037:248:17;3582:187:23;2441:144:0;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;2289:147:17;;;;;;;;;;-1:-1:-1;2289:147:17;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;;;;;;;;:::i;4149:880:17:-;;;;;;;;;;-1:-1:-1;4149:880:17;;;;;:::i;:::-;;:::i;3086:98::-;;;;;;;;;;-1:-1:-1;3134:7:17;3161:15;3086:98;;2093:188;;;;;;;;;;-1:-1:-1;2093:188:17;;;;;:::i;:::-;;:::i;2859:98::-;;;;;;;;;;;;;:::i;2536:192::-;;;;;;;;;;-1:-1:-1;2536:192:17;;;;;:::i;:::-;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;1880:25:17:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1880:25:17;;-1:-1:-1;1880:25:17;:::o;3361:185::-;3428:16;3457:18;3492:11;3457:47;;3522:4;-1:-1:-1;;;;;3522:14:17;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3522:16:17;;;;;;;;;;;;:::i;:::-;3515:23;3361:185;-1:-1:-1;;;3361:185:17:o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:2;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;5037:248:17:-;5094:4;;5111:144;5135:8;:15;5131:19;;5111:144;;;5191:5;-1:-1:-1;;;;;5176:20:17;:8;5185:1;5176:11;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5176:11:17;:20;5172:72;;-1:-1:-1;5224:4:17;;5037:248;-1:-1:-1;;5037:248:17:o;5172:72::-;5152:3;;5111:144;;;-1:-1:-1;5272:5:17;;5037:248;-1:-1:-1;;5037:248:17:o;2289:147::-;8870:21:1;6431:15;;2368:8:17;;8870:21:1;-1:-1:-1;;;6431:15:1;;;;;:44;;-1:-1:-1;6450:14:1;;:25;;;;:14;;:25;;6431:44;6427:105;;;6498:23;;-1:-1:-1;;;6498:23:1;;;;;;;;;;;6427:105;6541:24;;-1:-1:-1;;;6541:24:1;;;-1:-1:-1;;6575:22:1;;;;;;;;-1:-1:-1;2389:39:17;;-1:-1:-1;;;;;;2389:39:17::1;-1:-1:-1::0;;;;;2389:39:17;::::1;;::::0;;6618:23:1;;-1:-1:-1;;;;6618:23:1;;;6656:20;;6103:50:23;;;6656:20:1;;6091:2:23;6076:18;6656:20:1;;;;;;;6291:392;2289:147:17;;;:::o;4149:880::-;4241:22;4280:15;;4212:16;;4241:22;4266:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4266:30:17;;4241:55;;4307:13;4342:9;4337:507;4361:8;:15;4357:19;;4337:507;;;4398:18;4433:8;4442:1;4433:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4433:11:17;4398:47;;4460:23;4486:4;-1:-1:-1;;;;;4486:14:17;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4486:16:17;;;;;;;;;;;;:::i;:::-;4460:42;;4524:9;4519:231;4543:6;:13;4539:1;:17;4519:231;;;4599:5;-1:-1:-1;;;;;4586:18:17;:6;4593:1;4586:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4586:18:17;;4582:153;;4652:4;4629:5;4635;4629:12;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4629:28:17;;;:12;;;;;;;;;;;:28;4680:7;;;;:::i;:::-;;;;4710:5;;4582:153;4558:3;;4519:231;;;;4779:5;:12;4770:5;:21;4766:67;;4812:5;;;;4766:67;-1:-1:-1;;4378:3:17;;4337:507;;;;4856:23;4896:5;4882:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4882:20:17;;4856:46;;4918:9;4913:83;4937:5;4933:1;:9;4913:83;;;4976:5;4982:1;4976:8;;;;;;;;:::i;:::-;;;;;;;4964:6;4971:1;4964:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4964:20:17;;;:9;;;;;;;;;;;:20;4944:3;;4913:83;;;-1:-1:-1;5015:6:17;4149:880;-1:-1:-1;;;;4149:880:17:o;2093:188::-;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;2162:24:17::1;:22;:24::i;:::-;2197:26;2212:10;2197:14;:26::i;:::-;2234:8;:39:::0;;-1:-1:-1;;;;;;2234:39:17::1;-1:-1:-1::0;;;;;2234:39:17;::::1;;::::0;;5066:101:1;;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;6103:50:23;;5142:14:1;;6091:2:23;6076:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;2093:188:17;:::o;2859:98::-;2905:16;2941:8;2934:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2934:15:17;;;;;;;;;;;;;;;;;;;;;;;2859:98;:::o;2536:192::-;2334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2612:25:17;::::1;2604:79;;;::::0;-1:-1:-1;;;2604:79:17;;6817:2:23;2604:79:17::1;::::0;::::1;6799:21:23::0;6856:2;6836:18;;;6829:30;6895:34;6875:18;;;6868:62;-1:-1:-1;;;6946:18:23;;;6939:39;6995:19;;2604:79:17::1;;;;;;;;;2694:8;:26:::0;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;2694:26:17::1;-1:-1:-1::0;;;;;2694:26:17;;;::::1;::::0;;;::::1;::::0;;2536:192::o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;689:51:23::0;662:18;;3534:31:0::1;543:203:23::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;4599:312:2:-;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;-1:-1:-1;;;;;;;;;;;2035:53:8;-1:-1:-1;;;;;2035:53:8;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:2;;;;;;;;;;;2444:84:17;2334:13:0;:11;:13::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:2;;-1:-1:-1;;;;;707:32:23;;6513:60:2;;;689:51:23;662:18;;6513:60:2;543:203:23;6147:437:2;-1:-1:-1;;;;;;;;;;;6245:40:2;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:2;;;;;3312:25:23;;;3285:18;;6312:34:2;3166:177:23;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:2;;;;;;;;;;;2658:162:0;966:10:4;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:4;2763:40:0;;;689:51:23;662:18;;2763:40:0;543:203:23;3774:248:0;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;2968:67:2:-;6931:20:1;:18;:20::i;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;2779:335:8:-:0;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:8;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:1:-;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1980:235:0;6931:20:1;:18;:20::i;2186:281:8:-;2263:17;-1:-1:-1;;;;;2263:29:8;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:8;;-1:-1:-1;;;;;707:32:23;;2320:47:8;;;689:51:23;662:18;;2320:47:8;543:203:23;2259:119:8;-1:-1:-1;;;;;;;;;;;2387:73:8;;-1:-1:-1;;;;;;2387:73:8;-1:-1:-1;;;;;2387:73:8;;;;;;;;;;2186:281::o;4106:253:13:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:13;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:13:o;6598:122:8:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:8;;;;;;;;;;;4625:582:13;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:13;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:13;;-1:-1:-1;;;;;707:32:23;;5121:24:13;;;689:51:23;662:18;;5121:24:13;543:203:23;5041:119:13;-1:-1:-1;5180:10:13;4625:582;-1:-1:-1;;4625:582:13:o;5743:516::-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:13;;;;;;;;;;;14:131:23;-1:-1:-1;;;;;89:31:23;;79:42;;69:70;;135:1;132;125:12;150:388;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;-1:-1:-1;460:2:23;445:18;;432:32;473:33;432:32;473:33;:::i;:::-;525:7;515:17;;;150:388;;;;;:::o;751:180::-;810:6;863:2;851:9;842:7;838:23;834:32;831:52;;;879:1;876;869:12;831:52;-1:-1:-1;902:23:23;;751:180;-1:-1:-1;751:180:23:o;936:247::-;995:6;1048:2;1036:9;1027:7;1023:23;1019:32;1016:52;;;1064:1;1061;1054:12;1016:52;1103:9;1090:23;1122:31;1147:5;1122:31;:::i;1188:658::-;1359:2;1411:21;;;1481:13;;1384:18;;;1503:22;;;1330:4;;1359:2;1582:15;;;;1556:2;1541:18;;;1330:4;1625:195;1639:6;1636:1;1633:13;1625:195;;;1704:13;;-1:-1:-1;;;;;1700:39:23;1688:52;;1795:15;;;;1760:12;;;;1736:1;1654:9;1625:195;;;-1:-1:-1;1837:3:23;;1188:658;-1:-1:-1;;;;;;1188:658:23:o;1851:127::-;1912:10;1907:3;1903:20;1900:1;1893:31;1943:4;1940:1;1933:15;1967:4;1964:1;1957:15;1983:275;2054:2;2048:9;2119:2;2100:13;;-1:-1:-1;;2096:27:23;2084:40;;2154:18;2139:34;;2175:22;;;2136:62;2133:88;;;2201:18;;:::i;:::-;2237:2;2230:22;1983:275;;-1:-1:-1;1983:275:23:o;2263:898::-;2340:6;2348;2401:2;2389:9;2380:7;2376:23;2372:32;2369:52;;;2417:1;2414;2407:12;2369:52;2456:9;2443:23;2475:31;2500:5;2475:31;:::i;:::-;2525:5;-1:-1:-1;2549:2:23;2587:18;;;2574:32;2625:18;2655:14;;;2652:34;;;2682:1;2679;2672:12;2652:34;2720:6;2709:9;2705:22;2695:32;;2765:7;2758:4;2754:2;2750:13;2746:27;2736:55;;2787:1;2784;2777:12;2736:55;2823:2;2810:16;2845:2;2841;2838:10;2835:36;;;2851:18;;:::i;:::-;2893:53;2936:2;2917:13;;-1:-1:-1;;2913:27:23;2909:36;;2893:53;:::i;:::-;2880:66;;2969:2;2962:5;2955:17;3009:7;3004:2;2999;2995;2991:11;2987:20;2984:33;2981:53;;;3030:1;3027;3020:12;2981:53;3085:2;3080;3076;3072:11;3067:2;3060:5;3056:14;3043:45;3129:1;3124:2;3119;3112:5;3108:14;3104:23;3097:34;;3150:5;3140:15;;;;;2263:898;;;;;:::o;3774:427::-;3841:6;3849;3902:2;3890:9;3881:7;3877:23;3873:32;3870:52;;;3918:1;3915;3908:12;3870:52;3957:9;3944:23;3976:31;4001:5;3976:31;:::i;:::-;4026:5;-1:-1:-1;4083:2:23;4068:18;;4055:32;4131:18;4118:32;;4106:45;;4096:73;;4165:1;4162;4155:12;4206:418;4355:2;4344:9;4337:21;4318:4;4387:6;4381:13;4430:6;4425:2;4414:9;4410:18;4403:34;4489:6;4484:2;4476:6;4472:15;4467:2;4456:9;4452:18;4446:50;4545:1;4540:2;4531:6;4520:9;4516:22;4512:31;4505:42;4615:2;4608;4604:7;4599:2;4591:6;4587:15;4583:29;4572:9;4568:45;4564:54;4556:62;;;4206:418;;;;:::o;4811:1011::-;4906:6;4937:2;4980;4968:9;4959:7;4955:23;4951:32;4948:52;;;4996:1;4993;4986:12;4948:52;5029:9;5023:16;5058:18;5099:2;5091:6;5088:14;5085:34;;;5115:1;5112;5105:12;5085:34;5153:6;5142:9;5138:22;5128:32;;5198:7;5191:4;5187:2;5183:13;5179:27;5169:55;;5220:1;5217;5210:12;5169:55;5249:2;5243:9;5271:2;5267;5264:10;5261:36;;;5277:18;;:::i;:::-;5323:2;5320:1;5316:10;5306:20;;5346:28;5370:2;5366;5362:11;5346:28;:::i;:::-;5408:15;;;5478:11;;;5474:20;;;5439:12;;;;5506:19;;;5503:39;;;5538:1;5535;5528:12;5503:39;5562:11;;;;5582:210;5598:6;5593:3;5590:15;5582:210;;;5671:3;5665:10;5652:23;;5688:31;5713:5;5688:31;:::i;:::-;5732:18;;;5615:12;;;;5770;;;;5582:210;;;5811:5;4811:1011;-1:-1:-1;;;;;;;;4811:1011:23:o;5827:127::-;5888:10;5883:3;5879:20;5876:1;5869:31;5919:4;5916:1;5909:15;5943:4;5940:1;5933:15;6164:232;6203:3;6224:17;;;6221:140;;6283:10;6278:3;6274:20;6271:1;6264:31;6318:4;6315:1;6308:15;6346:4;6343:1;6336:15;6221:140;-1:-1:-1;6388:1:23;6377:13;;6164:232::o;7025:184::-;7095:6;7148:2;7136:9;7127:7;7123:23;7119:32;7116:52;;;7164:1;7161;7154:12;7116:52;-1:-1:-1;7187:16:23;;7025:184;-1:-1:-1;7025:184:23:o;7214:301::-;7343:3;7381:6;7375:13;7427:6;7420:4;7412:6;7408:17;7403:3;7397:37;7489:1;7453:16;;7478:13;;;-1:-1:-1;7453:16:23;7214:301;-1:-1:-1;7214:301:23:o"},"gasEstimates":{"creation":{"codeDepositCost":"968600","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"infinite","addPool(address)":"51112","allPools(uint256)":"4645","getAllPools()":"infinite","getPool(address,address)":"infinite","getPoolAssets(address)":"infinite","getPoolByAssets(address,address)":"infinite","getPoolsByAsset(address)":"infinite","getPoolsCount()":"2312","initialize(address)":"infinite","owner()":"2342","poolExist(address)":"infinite","proxiableUUID()":"infinite","registry()":"2414","reinitialize(address,uint64)":"78488","renounceOwnership()":"infinite","transferOwnership(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","addPool(address)":"d914cd4b","allPools(uint256)":"41d1de97","getAllPools()":"d88ff1f4","getPool(address,address)":"531aa03e","getPoolAssets(address)":"4276b97b","getPoolByAssets(address,address)":"2d5e94a7","getPoolsByAsset(address)":"b4340e6a","getPoolsCount()":"b4ac6860","initialize(address)":"c4d66de8","owner()":"8da5cb5b","poolExist(address)":"89345efb","proxiableUUID()":"52d1902d","registry()":"7b103999","reinitialize(address,uint64)":"8f2248bc","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"getPoolAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"}],\"name\":\"getPoolByAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsByAsset\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_register\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"poolExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IBaluniV1Registry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_register\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"getAllPools()\":{\"details\":\"Retrieves all the pools created by the factory.\",\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getPoolAssets(address)\":{\"details\":\"Retrieves the assets of a specific pool.\",\"params\":{\"poolAddress\":\"The address of the pool.\"},\"returns\":{\"_0\":\"An array of asset addresses.\"}},\"getPoolByAssets(address,address)\":{\"details\":\"Retrieves the pool address based on the given assets.\",\"params\":{\"asset1\":\"The address of the first asset.\",\"asset2\":\"The address of the second asset.\"},\"returns\":{\"_0\":\"The address of the pool.\"}},\"getPoolsByAsset(address)\":{\"details\":\"Returns an array of pool addresses that contain the specified token.\",\"params\":{\"token\":\"The address of the token to search for.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getPoolsCount()\":{\"details\":\"Retrieves the number of pools created by the factory.\",\"returns\":{\"_0\":\"The count of pools.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1PoolRegistry.sol\":\"BaluniV1PoolRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/BaluniV1PoolRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\nimport './interfaces/IBaluniV1Registry.sol';\\r\\nimport './interfaces/IBaluniV1Pool.sol';\\r\\n\\r\\ncontract BaluniV1PoolRegistry is Initializable, UUPSUpgradeable, OwnableUpgradeable {\\r\\n    address[] public allPools;\\r\\n\\r\\n    IBaluniV1Registry public registry;\\r\\n\\r\\n    mapping(address => mapping(address => address)) public getPool;\\r\\n\\r\\n    event PoolCreated(address indexed pool, address[] assets);\\r\\n\\r\\n    function initialize(address _register) public initializer {\\r\\n        __UUPSUpgradeable_init();\\r\\n        __Ownable_init(msg.sender);\\r\\n        registry = IBaluniV1Registry(_register);\\r\\n    }\\r\\n\\r\\n    function reinitialize(address _register, uint64 _version) public reinitializer(_version) {\\r\\n        registry = IBaluniV1Registry(_register);\\r\\n    }\\r\\n\\r\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n    function addPool(address poolAddress) external onlyOwner {\\r\\n        require(poolAddress != address(0), 'BaluniV1PoolFactory: INVALID_POOL_ADDRESS');\\r\\n        allPools.push(poolAddress);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves all the pools created by the factory.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getAllPools() external view returns (address[] memory) {\\r\\n        return allPools;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the number of pools created by the factory.\\r\\n     * @return The count of pools.\\r\\n     */\\r\\n    function getPoolsCount() external view returns (uint256) {\\r\\n        return allPools.length;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the assets of a specific pool.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @return An array of asset addresses.\\r\\n     */\\r\\n    function getPoolAssets(address poolAddress) external view returns (address[] memory) {\\r\\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n        return pool.getAssets();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the pool address based on the given assets.\\r\\n     * @param asset1 The address of the first asset.\\r\\n     * @param asset2 The address of the second asset.\\r\\n     * @return The address of the pool.\\r\\n     */\\r\\n    function getPoolByAssets(address asset1, address asset2) external view returns (address) {\\r\\n        return address(getPool[asset1][asset2]);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the specified token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsByAsset(address token) external view returns (address[] memory) {\\r\\n        address[] memory pools = new address[](allPools.length);\\r\\n        uint256 count = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < allPools.length; i++) {\\r\\n            IBaluniV1Pool pool = IBaluniV1Pool(allPools[i]);\\r\\n            address[] memory assets = pool.getAssets();\\r\\n\\r\\n            for (uint256 j = 0; j < assets.length; j++) {\\r\\n                if (assets[j] == token) {\\r\\n                    pools[count] = address(pool);\\r\\n                    count++;\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            if (count == pools.length) {\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        address[] memory result = new address[](count);\\r\\n        for (uint256 i = 0; i < count; i++) {\\r\\n            result[i] = pools[i];\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    function poolExist(address _pool) external view returns (bool) {\\r\\n        for (uint256 i = 0; i < allPools.length; i++) {\\r\\n            if (allPools[i] == _pool) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x17bdc955272b1ac9e184b2d54a37f6d6b62510ada88eb4c3f378e760da6a31a9\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\n\\r\\ninterface IBaluniV1Pool {\\r\\n    // Views\\r\\n    function rebalancer() external view returns (address);\\r\\n\\r\\n    function assets(uint256 index) external view returns (address);\\r\\n\\r\\n    function weights(uint256 index) external view returns (uint256);\\r\\n\\r\\n    function trigger() external view returns (uint256);\\r\\n\\r\\n    function ONE() external view returns (uint256);\\r\\n\\r\\n    function router() external view returns (address);\\r\\n\\r\\n    function getReserves() external view returns (uint256[] memory);\\r\\n\\r\\n    function getAssets() external view returns (address[] memory);\\r\\n\\r\\n    function getAssetReserve(address asset) external view returns (uint256);\\r\\n\\r\\n    function getWeights() external view returns (uint256[] memory);\\r\\n\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    function performRebalanceIfNeeded()\\r\\n        external\\r\\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove);\\r\\n\\r\\n    function getDeviation() external view returns (bool[] memory directions, uint256[] memory deviations);\\r\\n\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256);\\r\\n\\r\\n    function liquidity() external view returns (uint256);\\r\\n\\r\\n    function unitPrice() external view returns (uint256);\\r\\n\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 toSend);\\r\\n\\r\\n    function mint(address to, uint256[] memory amounts) external returns (uint256);\\r\\n\\r\\n    function burn(address to) external returns (uint256[] memory);\\r\\n\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations);\\r\\n\\r\\n    function rebalanceWeights(address receiver) external returns (uint256[] memory);\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n    }\\r\\n\\r\\n    function assetInfos(uint _index) external view returns (AssetInfo memory);\\r\\n\\r\\n    // Events\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n}\\r\\n\",\"keccak256\":\"0xae1152e3c166800bdeebf21b3f779069a8aba8f666506f9acdad9cf784e44e99\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolFactory(address _baluniPoolFactory) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x846d9e23f2a9579307f6f9b453f9426e1083b2f550bb999315a4abc32a648570\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":5187,"contract":"contracts/BaluniV1PoolRegistry.sol:BaluniV1PoolRegistry","label":"allPools","offset":0,"slot":"0","type":"t_array(t_address)dyn_storage"},{"astId":5190,"contract":"contracts/BaluniV1PoolRegistry.sol:BaluniV1PoolRegistry","label":"registry","offset":0,"slot":"1","type":"t_contract(IBaluniV1Registry)6110"},{"astId":5196,"contract":"contracts/BaluniV1PoolRegistry.sol:BaluniV1PoolRegistry","label":"getPool","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_address))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_contract(IBaluniV1Registry)6110":{"encoding":"inplace","label":"contract IBaluniV1Registry","numberOfBytes":"20"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_mapping(t_address,t_address))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => address))","numberOfBytes":"32","value":"t_mapping(t_address,t_address)"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Oracle.sol":{"IBaluniV1Oracle":{"abi":[{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convertScaled","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"convert(address,address,uint256)":"248391ff","convertScaled(address,address,uint256)":"b27b5e75"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convertScaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Oracle.sol\":\"IBaluniV1Oracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Oracle {\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\\r\\n\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation);\\r\\n}\\r\\n\",\"keccak256\":\"0x2bc62f7640b15a1772de630216f6fe6aa7a719cb6cf0255befdde19ec8de785a\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Pool.sol":{"IBaluniV1Pool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesBurned","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesMinted","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"by","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"}],"name":"RebalancePerformed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"fromToken","type":"address"},{"indexed":true,"internalType":"address","name":"toToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"amountsAdded","type":"uint256[]"}],"name":"WeightsRebalanced","type":"event"},{"inputs":[],"name":"ONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"assetInfos","outputs":[{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"weight","type":"uint256"}],"internalType":"struct IBaluniV1Pool.AssetInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetIndex","type":"uint256"}],"name":"assetLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"assets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"computeTotalValuation","outputs":[{"internalType":"uint256","name":"totalVal","type":"uint256"},{"internalType":"uint256[]","name":"valuations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeviation","outputs":[{"internalType":"bool[]","name":"directions","type":"bool[]"},{"internalType":"uint256[]","name":"deviations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"performRebalanceIfNeeded","outputs":[{"internalType":"uint256[]","name":"amountsToAdd","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsToRemove","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"router","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"toSend","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trigger","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"weights","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"ONE()":"c2ee3a08","assetInfos(uint256)":"d14ef46d","assetLiquidity(uint256)":"cf8fa764","assets(uint256)":"cf35bdd0","burn(address)":"89afcb44","computeTotalValuation()":"36bf6e39","getAmountOut(address,address,uint256)":"4aa06652","getAssetReserve(address)":"b2b55d70","getAssets()":"67e4ac2c","getDeviation()":"89ab3532","getReserves()":"0902f1ac","getWeights()":"22acb867","liquidity()":"1a686502","mint(address,uint256[])":"de836ebd","performRebalanceIfNeeded()":"f47b45e8","rebalanceWeights(address)":"0723c999","rebalancer()":"01d22ccd","router()":"f887ea40","swap(address,address,uint256,address)":"6e81221c","trigger()":"7fec8d38","unitPrice()":"e73faa2d","weights(uint256)":"b5f163ff"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesBurned\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesMinted\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"RebalancePerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsAdded\",\"type\":\"uint256[]\"}],\"name\":\"WeightsRebalanced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"assetInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaluniV1Pool.AssetInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetIndex\",\"type\":\"uint256\"}],\"name\":\"assetLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computeTotalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVal\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"valuations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeviation\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"directions\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deviations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsToAdd\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsToRemove\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"toSend\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trigger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"weights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Pool.sol\":\"IBaluniV1Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/interfaces/IBaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\n\\r\\ninterface IBaluniV1Pool {\\r\\n    // Views\\r\\n    function rebalancer() external view returns (address);\\r\\n\\r\\n    function assets(uint256 index) external view returns (address);\\r\\n\\r\\n    function weights(uint256 index) external view returns (uint256);\\r\\n\\r\\n    function trigger() external view returns (uint256);\\r\\n\\r\\n    function ONE() external view returns (uint256);\\r\\n\\r\\n    function router() external view returns (address);\\r\\n\\r\\n    function getReserves() external view returns (uint256[] memory);\\r\\n\\r\\n    function getAssets() external view returns (address[] memory);\\r\\n\\r\\n    function getAssetReserve(address asset) external view returns (uint256);\\r\\n\\r\\n    function getWeights() external view returns (uint256[] memory);\\r\\n\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    function performRebalanceIfNeeded()\\r\\n        external\\r\\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove);\\r\\n\\r\\n    function getDeviation() external view returns (bool[] memory directions, uint256[] memory deviations);\\r\\n\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256);\\r\\n\\r\\n    function liquidity() external view returns (uint256);\\r\\n\\r\\n    function unitPrice() external view returns (uint256);\\r\\n\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 toSend);\\r\\n\\r\\n    function mint(address to, uint256[] memory amounts) external returns (uint256);\\r\\n\\r\\n    function burn(address to) external returns (uint256[] memory);\\r\\n\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations);\\r\\n\\r\\n    function rebalanceWeights(address receiver) external returns (uint256[] memory);\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n    }\\r\\n\\r\\n    function assetInfos(uint _index) external view returns (AssetInfo memory);\\r\\n\\r\\n    // Events\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n}\\r\\n\",\"keccak256\":\"0xae1152e3c166800bdeebf21b3f779069a8aba8f666506f9acdad9cf784e44e99\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"IBaluniV1PoolPeriphery":{"abi":[{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"fromTokens","type":"address[]"},{"internalType":"address[]","name":"toTokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address[]","name":"receivers","type":"address[]"}],"name":"batchSwap","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsContainingToken","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"performRebalanceIfNeeded","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"share","type":"uint256"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"removeLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the BaluniV1PoolPeriphery contract.","kind":"dev","methods":{"addLiquidity(uint256[],address,address)":{"details":"Adds liquidity to a BaluniV1Pool.","params":{"amounts":"An array of amounts for each asset to add as liquidity.","poolAddress":"The address of the pool.","receiver":"The address of the receiver."}},"batchSwap(address[],address[],uint256[],address[])":{"details":"Performs batch swaps between multiple token pairs.","params":{"amounts":"An array of amounts representing the amounts to swap.","fromTokens":"An array of addresses representing the tokens to swap from.","receivers":"An array of addresses representing the receivers of the swapped tokens.","toTokens":"An array of addresses representing the tokens to swap to."},"returns":{"_0":"An array of amounts representing the amounts of tokens received after the swaps."}},"getAmountOut(address,address,uint256)":{"details":"Gets the amount of tokens received after a swap in a BaluniV1Pool.","params":{"amount":"The amount of tokens to swap.","fromToken":"The address of the token to swap from.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of tokens received after the swap."}},"getAssetReserve(address,address)":{"details":"Returns the reserve of a specific asset in a pool.","params":{"asset":"The address of the asset.","pool":"The address of the pool."},"returns":{"_0":"The reserve of the asset."}},"getPoolsContainingToken(address)":{"details":"Returns an array of pool addresses that contain the given token.","params":{"token":"The address of the token to search for."},"returns":{"_0":"An array of pool addresses."}},"getReserves(address)":{"details":"Returns the reserves of the pool.","params":{"pool":"The address of the pool."},"returns":{"_0":"An array of reserves."}},"getVersion()":{"details":"Returns the version of the contract.","returns":{"_0":"The version string."}},"performRebalanceIfNeeded(address)":{"details":"Performs rebalance if needed for the given tokens.","params":{"poolAddress":"The address of the token pool to rebalance."}},"rebalanceWeights(address,address)":{"details":"Rebalances weights in a pool.","params":{"poolAddress":"The address of the pool.","receiver":"The address of the receiver."}},"removeLiquidity(uint256,address,address)":{"details":"Removes liquidity from a BaluniV1Pool.","params":{"poolAddress":"The address of the pool.","receiver":"The address of the receiver.","share":"The amount of liquidity tokens to remove."}},"swap(address,address,uint256,address)":{"details":"Swaps tokens in a BaluniV1Pool.","params":{"amount":"The amount of tokens to swap.","fromToken":"The address of the token to swap from.","receiver":"The address of the receiver.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of tokens received after the swap."}}},"title":"IBaluniV1PoolPeriphery","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addLiquidity(uint256[],address,address)":"ec0cd2eb","batchSwap(address[],address[],uint256[],address[])":"e74e9b06","getAmountOut(address,address,uint256)":"4aa06652","getAssetReserve(address,address)":"a3e113fb","getPoolsContainingToken(address)":"ae3cce1c","getReserves(address)":"3e99c1e4","getVersion()":"0d8e6e2c","performRebalanceIfNeeded(address)":"5568081a","rebalanceWeights(address,address)":"ad414263","removeLiquidity(uint256,address,address)":"f31abcc4","swap(address,address,uint256,address)":"6e81221c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"fromTokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"toTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsContainingToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the BaluniV1PoolPeriphery contract.\",\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256[],address,address)\":{\"details\":\"Adds liquidity to a BaluniV1Pool.\",\"params\":{\"amounts\":\"An array of amounts for each asset to add as liquidity.\",\"poolAddress\":\"The address of the pool.\",\"receiver\":\"The address of the receiver.\"}},\"batchSwap(address[],address[],uint256[],address[])\":{\"details\":\"Performs batch swaps between multiple token pairs.\",\"params\":{\"amounts\":\"An array of amounts representing the amounts to swap.\",\"fromTokens\":\"An array of addresses representing the tokens to swap from.\",\"receivers\":\"An array of addresses representing the receivers of the swapped tokens.\",\"toTokens\":\"An array of addresses representing the tokens to swap to.\"},\"returns\":{\"_0\":\"An array of amounts representing the amounts of tokens received after the swaps.\"}},\"getAmountOut(address,address,uint256)\":{\"details\":\"Gets the amount of tokens received after a swap in a BaluniV1Pool.\",\"params\":{\"amount\":\"The amount of tokens to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of tokens received after the swap.\"}},\"getAssetReserve(address,address)\":{\"details\":\"Returns the reserve of a specific asset in a pool.\",\"params\":{\"asset\":\"The address of the asset.\",\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"The reserve of the asset.\"}},\"getPoolsContainingToken(address)\":{\"details\":\"Returns an array of pool addresses that contain the given token.\",\"params\":{\"token\":\"The address of the token to search for.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getReserves(address)\":{\"details\":\"Returns the reserves of the pool.\",\"params\":{\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"An array of reserves.\"}},\"getVersion()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"The version string.\"}},\"performRebalanceIfNeeded(address)\":{\"details\":\"Performs rebalance if needed for the given tokens.\",\"params\":{\"poolAddress\":\"The address of the token pool to rebalance.\"}},\"rebalanceWeights(address,address)\":{\"details\":\"Rebalances weights in a pool.\",\"params\":{\"poolAddress\":\"The address of the pool.\",\"receiver\":\"The address of the receiver.\"}},\"removeLiquidity(uint256,address,address)\":{\"details\":\"Removes liquidity from a BaluniV1Pool.\",\"params\":{\"poolAddress\":\"The address of the pool.\",\"receiver\":\"The address of the receiver.\",\"share\":\"The amount of liquidity tokens to remove.\"}},\"swap(address,address,uint256,address)\":{\"details\":\"Swaps tokens in a BaluniV1Pool.\",\"params\":{\"amount\":\"The amount of tokens to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"receiver\":\"The address of the receiver.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of tokens received after the swap.\"}}},\"title\":\"IBaluniV1PoolPeriphery\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":\"IBaluniV1PoolPeriphery\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1PoolPeriphery\\r\\n * @dev Interface for the BaluniV1PoolPeriphery contract.\\r\\n */\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    /**\\r\\n     * @dev Swaps tokens in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @param receiver The address of the receiver.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs batch swaps between multiple token pairs.\\r\\n     * @param fromTokens An array of addresses representing the tokens to swap from.\\r\\n     * @param toTokens An array of addresses representing the tokens to swap to.\\r\\n     * @param amounts An array of amounts representing the amounts to swap.\\r\\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\\r\\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\\r\\n     */\\r\\n    function batchSwap(\\r\\n        address[] calldata fromTokens,\\r\\n        address[] calldata toTokens,\\r\\n        uint256[] calldata amounts,\\r\\n        address[] calldata receivers\\r\\n    ) external returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances weights in a pool.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function rebalanceWeights(address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Adds liquidity to a BaluniV1Pool.\\r\\n     * @param amounts An array of amounts for each asset to add as liquidity.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function addLiquidity(uint256[] memory amounts, address poolAddress, address receiver) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Removes liquidity from a BaluniV1Pool.\\r\\n     * @param share The amount of liquidity tokens to remove.\\r\\n     * @param poolAddress The address of the pool.\\r\\n     * @param receiver The address of the receiver.\\r\\n     */\\r\\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed for the given tokens.\\r\\n     * @param poolAddress The address of the token pool to rebalance.\\r\\n     */\\r\\n    function performRebalanceIfNeeded(address poolAddress) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the given token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsContainingToken(address token) external view returns (address[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the version of the contract.\\r\\n     * @return The version string.\\r\\n     */\\r\\n    function getVersion() external view returns (uint64);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserves of the pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve of a specific asset in a pool.\\r\\n     * @param pool The address of the pool.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x0d208337a9258876165804a1e3158e005dcdab6f38ced9147d2b05d951a0f54c\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"IBaluniV1Rebalancer":{"abi":[{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"checkRebalance","outputs":[{"components":[{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"uint256","name":"totalValue","type":"uint256"},{"internalType":"uint256","name":"finalUsdBalance","type":"uint256"},{"internalType":"uint256","name":"overweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"underweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"totalActiveWeight","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256[]","name":"overweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"overweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"}],"internalType":"struct IBaluniV1Rebalancer.RebalanceVars","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"rebalance","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkRebalance(uint256[],address[],uint256[],uint256,address,address)":"997146f5","convert(address,address,uint256)":"248391ff","rebalance(uint256[],address[],uint256[],uint256,address,address,address)":"f0bf7714"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"checkRebalance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalUsdBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalActiveWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IBaluniV1Rebalancer.RebalanceVars\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Rebalancer.sol\":\"IBaluniV1Rebalancer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n    struct RebalanceVars {\\r\\n        uint256 length;\\r\\n        uint256 totalValue;\\r\\n        uint256 finalUsdBalance;\\r\\n        uint256 overweightVaultsLength;\\r\\n        uint256 underweightVaultsLength;\\r\\n        uint256 totalActiveWeight;\\r\\n        uint256 amountOut;\\r\\n        uint256[] overweightVaults;\\r\\n        uint256[] overweightAmounts;\\r\\n        uint256[] underweightVaults;\\r\\n        uint256[] underweightAmounts;\\r\\n        uint256[] balances;\\r\\n    }\\r\\n\\r\\n    // Functions\\r\\n    function rebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address receiver,\\r\\n        address baseAsset\\r\\n    ) external;\\r\\n\\r\\n    function checkRebalance(\\r\\n        uint256[] memory balances,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata weights,\\r\\n        uint256 limit,\\r\\n        address sender,\\r\\n        address baseAsset\\r\\n    ) external view returns (RebalanceVars memory);\\r\\n\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x61c44c9208ab5c5638160706c4737e8032440e73054a90378d0b65559653d57a\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Registry.sol":{"IBaluniV1Registry":{"abi":[{"inputs":[],"name":"get1inchSpotAgg","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBPS_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniAgentFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniPoolFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniPoolPeriphery","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniSwapper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMAX_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStaticOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTreasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUSDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUniswapFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUniswapRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"__1inchSpotAgg","type":"address"}],"name":"set1inchSpotAgg","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"__BPS_FEE","type":"uint256"}],"name":"setBPS_FEE","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniAgentFactory","type":"address"}],"name":"setBaluniAgentFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniOracle","type":"address"}],"name":"setBaluniOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolFactory","type":"address"}],"name":"setBaluniPoolFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolPeriphery","type":"address"}],"name":"setBaluniPoolPeriphery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRebalancer","type":"address"}],"name":"setBaluniRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRegistry","type":"address"}],"name":"setBaluniRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRouter","type":"address"}],"name":"setBaluniRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniSwapper","type":"address"}],"name":"setBaluniSwapper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_staticOracle","type":"address"}],"name":"setStaticOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"name":"setTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_USDC","type":"address"}],"name":"setUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_uniswapFactory","type":"address"}],"name":"setUniswapFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_uniswapRouter","type":"address"}],"name":"setUniswapRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_WNATIVE","type":"address"}],"name":"setWNATIVE","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the BaluniV1Registry contract.","kind":"dev","methods":{},"title":"IBaluniV1Registry","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"get1inchSpotAgg()":"8e1c3a8a","getBPS_BASE()":"4f4608a2","getBPS_FEE()":"85462d6f","getBaluniAgentFactory()":"f5d2d998","getBaluniOracle()":"bb3ba04c","getBaluniPoolFactory()":"7c6fd308","getBaluniPoolPeriphery()":"1acb6141","getBaluniRebalancer()":"cff49d68","getBaluniRegistry()":"c9aba8ae","getBaluniRouter()":"04cc7325","getBaluniSwapper()":"82755ebb","getMAX_BPS_FEE()":"9380fb6f","getStaticOracle()":"a5d2236f","getTreasury()":"3b19e84a","getUSDC()":"1bf01e9b","getUniswapFactory()":"3e6dfa36","getUniswapRouter()":"524900b5","getWNATIVE()":"6c9c0078","set1inchSpotAgg(address)":"c08f786b","setBPS_FEE(uint256)":"9e6453f8","setBaluniAgentFactory(address)":"f1dccde7","setBaluniOracle(address)":"f5b84f64","setBaluniPoolFactory(address)":"8267c2c8","setBaluniPoolPeriphery(address)":"588c5b70","setBaluniRebalancer(address)":"0241bffa","setBaluniRegistry(address)":"6c43274c","setBaluniRouter(address)":"400fb668","setBaluniSwapper(address)":"c3f5df5c","setStaticOracle(address)":"cc01e9a6","setTreasury(address)":"f0f44260","setUSDC(address)":"b3e089a2","setUniswapFactory(address)":"e04b677f","setUniswapRouter(address)":"bea9849e","setWNATIVE(address)":"b6fe9cc7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"get1inchSpotAgg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBPS_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniAgentFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniPoolFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniPoolPeriphery\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniSwapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMAX_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStaticOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__1inchSpotAgg\",\"type\":\"address\"}],\"name\":\"set1inchSpotAgg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__BPS_FEE\",\"type\":\"uint256\"}],\"name\":\"setBPS_FEE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniAgentFactory\",\"type\":\"address\"}],\"name\":\"setBaluniAgentFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniOracle\",\"type\":\"address\"}],\"name\":\"setBaluniOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolFactory\",\"type\":\"address\"}],\"name\":\"setBaluniPoolFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolPeriphery\",\"type\":\"address\"}],\"name\":\"setBaluniPoolPeriphery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRebalancer\",\"type\":\"address\"}],\"name\":\"setBaluniRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRegistry\",\"type\":\"address\"}],\"name\":\"setBaluniRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRouter\",\"type\":\"address\"}],\"name\":\"setBaluniRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniSwapper\",\"type\":\"address\"}],\"name\":\"setBaluniSwapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staticOracle\",\"type\":\"address\"}],\"name\":\"setStaticOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDC\",\"type\":\"address\"}],\"name\":\"setUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapFactory\",\"type\":\"address\"}],\"name\":\"setUniswapFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"}],\"name\":\"setUniswapRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WNATIVE\",\"type\":\"address\"}],\"name\":\"setWNATIVE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the BaluniV1Registry contract.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IBaluniV1Registry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Registry.sol\":\"IBaluniV1Registry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolFactory(address _baluniPoolFactory) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x846d9e23f2a9579307f6f9b453f9426e1083b2f550bb999315a4abc32a648570\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}