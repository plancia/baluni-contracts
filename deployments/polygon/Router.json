{
  "address": "0x0cB0fC81C06526D3cA6d5a1A1AdBD96574963221",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "agent",
          "type": "address"
        }
      ],
      "name": "AgentCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "ChangeBpsFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRate",
          "type": "uint256"
        }
      ],
      "name": "ChangeMintRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRate",
          "type": "uint256"
        }
      ],
      "name": "ChangeRewardRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct Agent.Call[]",
          "name": "calls",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokensReturn",
          "type": "address[]"
        }
      ],
      "name": "Execute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferAfterMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_BPS_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_MINT_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_REWARD_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnBALUNIForUSDC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newFee",
          "type": "uint256"
        }
      ],
      "name": "changeBpsFee",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newMintRate",
          "type": "uint256"
        }
      ],
      "name": "changeMintRate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newRate",
          "type": "uint256"
        }
      ],
      "name": "changeRewardRate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Agent.Call[]",
          "name": "calls",
          "type": "tuple[]"
        },
        {
          "internalType": "address[]",
          "name": "tokensReturn",
          "type": "address[]"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAPY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getAgentAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBpsFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getBytecode",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMintRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "balAmount",
          "type": "uint256"
        }
      ],
      "name": "getShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userAgents",
      "outputs": [
        {
          "internalType": "contract Agent",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb2e5cf62d2eab2611c6bdcf464c29f6a4f405bf5d5d0c8b4fdb632a02e8740e3",
  "receipt": {
    "to": null,
    "from": "0x84F07be28ecd5b29Df340be8b065A6113a8e893e",
    "contractAddress": "0x0cB0fC81C06526D3cA6d5a1A1AdBD96574963221",
    "transactionIndex": 22,
    "gasUsed": "2518796",
    "logsBloom": "0x
    "blockHash": "0x01f74e81dc4ef6f939ab66f02b06bdda578b0520cb995dba3da1b4de66faef9c",
    "transactionHash": "0xb2e5cf62d2eab2611c6bdcf464c29f6a4f405bf5d5d0c8b4fdb632a02e8740e3",
    "logs": [
      {
        "transactionIndex": 22,
        "blockNumber": 56604410,
        "transactionHash": "0xb2e5cf62d2eab2611c6bdcf464c29f6a4f405bf5d5d0c8b4fdb632a02e8740e3",
        "address": "0x0cB0fC81C06526D3cA6d5a1A1AdBD96574963221",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000084f07be28ecd5b29df340be8b065a6113a8e893e"
        ],
        "data": "0x",
        "logIndex": 77,
        "blockHash": "0x01f74e81dc4ef6f939ab66f02b06bdda578b0520cb995dba3da1b4de66faef9c"
      },
      {
        "transactionIndex": 22,
        "blockNumber": 56604410,
        "transactionHash": "0xb2e5cf62d2eab2611c6bdcf464c29f6a4f405bf5d5d0c8b4fdb632a02e8740e3",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000084f07be28ecd5b29df340be8b065a6113a8e893e",
          "0x000000000000000000000000794e44d1334a56fea7f4df12633b88820d0c5888"
        ],
        "data": "0x000000000000000000000000000000000000000000000000012e76356bf5b5cc000000000000000000000000000000000000000000000000820c9c105fb748760000000000000000000000000000000000000000000000f8ea5d6a027f434a7900000000000000000000000000000000000000000000000080de25daf3c192aa0000000000000000000000000000000000000000000000f8eb8be037eb390045",
        "logIndex": 78,
        "blockHash": "0x01f74e81dc4ef6f939ab66f02b06bdda578b0520cb995dba3da1b4de66faef9c"
      }
    ],
    "blockNumber": 56604410,
    "cumulativeGasUsed": "5911601",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "af38fb18cd42b646623349e44ea3b374",
  "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"AgentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"ChangeBpsFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"ChangeMintRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"ChangeRewardRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"Execute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferAfterMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MINT_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_REWARD_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnBALUNIForUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"changeBpsFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMintRate\",\"type\":\"uint256\"}],\"name\":\"changeMintRate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newRate\",\"type\":\"uint256\"}],\"name\":\"changeRewardRate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAgentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBpsFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getBytecode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmount\",\"type\":\"uint256\"}],\"name\":\"getShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userAgents\",\"outputs\":[{\"internalType\":\"contract Agent\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/Router.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC20Permit} from \\\"../extensions/IERC20Permit.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev An operation with an ERC20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data);\\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"contracts/core/Agent.sol\":{\"content\":\"pragma solidity 0.8.25;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\\\";\\r\\nimport \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\\\";\\r\\n\\r\\ninterface IRouter {\\r\\n\\tfunction getBpsFee() external view returns (uint256);\\r\\n}\\r\\n\\r\\ncontract Agent {\\r\\n\\tusing SafeERC20 for IERC20Metadata;\\r\\n\\tusing Address for address payable;\\r\\n\\taddress public owner;\\r\\n\\taddress private router;\\r\\n\\taddress internal constant _NATIVE =\\r\\n\\t\\t0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\r\\n\\r\\n\\tIERC20Metadata internal constant USDC =\\r\\n\\t\\tIERC20Metadata(0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174);\\r\\n\\tIERC20Metadata internal constant WNATIVE =\\r\\n\\t\\tIERC20Metadata(0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270);\\r\\n\\r\\n\\tISwapRouter public immutable uniswapRouter =\\r\\n\\t\\tISwapRouter(0xE592427A0AEce92De3Edee1F18E0157C05861564);\\r\\n\\tIUniswapV3Factory public immutable uniswapFactory =\\r\\n\\t\\tIUniswapV3Factory(0x1F98431c8aD98523631AE4a59f267346ea31F984);\\r\\n\\r\\n\\tuint256 internal constant _DUST = 10;\\r\\n\\tuint256 internal constant _BPS_BASE = 10000;\\r\\n\\r\\n\\tstruct Call {\\r\\n\\t\\taddress to;\\r\\n\\t\\tuint256 value;\\r\\n\\t\\tbytes data;\\r\\n\\t}\\r\\n\\r\\n\\tconstructor(address _owner, address _router) {\\r\\n\\t\\trequire(msg.sender == _router, \\\"Only Router\\\");\\r\\n\\t\\towner = _owner;\\r\\n\\t\\trouter = _router;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyRouter() {\\r\\n\\t\\trequire(msg.sender == router, \\\"Callable only by the router\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction execute(\\r\\n\\t\\tCall[] calldata calls,\\r\\n\\t\\taddress[] calldata tokensReturn\\r\\n\\t) external onlyRouter {\\r\\n\\t\\tfor (uint i = 0; i < calls.length; i++) {\\r\\n\\t\\t\\t(bool success, ) = calls[i].to.call{ value: calls[i].value }(\\r\\n\\t\\t\\t\\tcalls[i].data\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\trequire(success, \\\"Batch call failed\\\");\\r\\n\\t\\t}\\r\\n\\t\\t_swapTokensForUSDC(tokensReturn);\\r\\n\\t\\t_returnTokens(tokensReturn);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getRouter() public view returns (address) {\\r\\n\\t\\treturn router;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _returnTokens(address[] calldata tokensReturn) internal {\\r\\n\\t\\tuint256 tokensReturnLength = tokensReturn.length;\\r\\n\\t\\tif (tokensReturnLength > 0) {\\r\\n\\t\\t\\tfor (uint256 i; i < tokensReturnLength; ) {\\r\\n\\t\\t\\t\\taddress token = tokensReturn[i];\\r\\n\\t\\t\\t\\tif (token == _NATIVE) {\\r\\n\\t\\t\\t\\t\\tif (address(this).balance > 0) {\\r\\n\\t\\t\\t\\t\\t\\tpayable(owner).sendValue(address(this).balance);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tuint256 balance = IERC20Metadata(token).balanceOf(\\r\\n\\t\\t\\t\\t\\t\\taddress(this)\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\tif (balance > _DUST) {\\r\\n\\t\\t\\t\\t\\t\\tIERC20Metadata(token).safeTransfer(owner, balance);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tunchecked {\\r\\n\\t\\t\\t\\t\\t++i;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction _swapTokensForUSDC(address[] calldata tokens) internal {\\r\\n\\t\\tuint256 routerBpsFee = IRouter(router).getBpsFee();\\r\\n\\t\\taddress intermediateToken = address(WNATIVE);\\r\\n\\r\\n\\t\\tfor (uint i = 0; i < tokens.length; i++) {\\r\\n\\t\\t\\tIERC20Metadata token = IERC20Metadata(tokens[i]);\\r\\n\\t\\t\\tuint tokenBalance = token.balanceOf(address(this));\\r\\n\\r\\n\\t\\t\\tif (tokenBalance == 0) {\\r\\n\\t\\t\\t\\tcontinue;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tuint amountAfterFee = (tokenBalance * routerBpsFee) / _BPS_BASE;\\r\\n\\r\\n\\t\\t\\trequire(amountAfterFee <= tokenBalance, \\\"Wrong AmountAfterFee\\\");\\r\\n\\r\\n\\t\\t\\tif (address(token) == address(USDC)) {\\r\\n\\t\\t\\t\\ttoken.transfer(router, amountAfterFee);\\r\\n\\t\\t\\t\\tcontinue;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif (amountAfterFee == 0) continue;\\r\\n\\r\\n\\t\\t\\ttoken.approve(address(uniswapRouter), amountAfterFee);\\r\\n\\r\\n\\t\\t\\taddress poolTokenUSDC = uniswapFactory.getPool(\\r\\n\\t\\t\\t\\taddress(token),\\r\\n\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t3000\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\taddress poolTokenWNATIVE = uniswapFactory.getPool(\\r\\n\\t\\t\\t\\taddress(token),\\r\\n\\t\\t\\t\\taddress(WNATIVE),\\r\\n\\t\\t\\t\\t3000\\r\\n\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\tif (poolTokenUSDC != address(0) || poolTokenWNATIVE != address(0))\\r\\n\\t\\t\\t\\tcontinue;\\r\\n\\r\\n\\t\\t\\t(bool directSwapSuccess, ) = address(this).call(\\r\\n\\t\\t\\t\\tabi.encodeWithSignature(\\r\\n\\t\\t\\t\\t\\t\\\"singleSwap(address,address,uint256)\\\",\\r\\n\\t\\t\\t\\t\\taddress(token),\\r\\n\\t\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t\\tamountAfterFee\\r\\n\\t\\t\\t\\t)\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\tif (directSwapSuccess) {\\r\\n\\t\\t\\t\\tcontinue;\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t(bool multiHopSwapSuccess, ) = address(this).call(\\r\\n\\t\\t\\t\\t\\tabi.encodeWithSignature(\\r\\n\\t\\t\\t\\t\\t\\t\\\"multiHopSwap(address,address,address,uint256)\\\",\\r\\n\\t\\t\\t\\t\\t\\taddress(token),\\r\\n\\t\\t\\t\\t\\t\\tintermediateToken,\\r\\n\\t\\t\\t\\t\\t\\taddress(USDC),\\r\\n\\t\\t\\t\\t\\t\\tamountAfterFee\\r\\n\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\tif (multiHopSwapSuccess) {\\r\\n\\t\\t\\t\\t\\tcontinue;\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\ttoken.transfer(owner, amountAfterFee); // Se entrambi gli swap falliscono\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\ttoken.approve(address(uniswapRouter), 0); // Revoca l'approvazione dopo lo swap\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction singleSwap(\\r\\n\\t\\tIERC20Metadata token,\\r\\n\\t\\taddress usdcAddress,\\r\\n\\t\\tuint tokenBalance\\r\\n\\t) private returns (uint usdcAmount) {\\r\\n\\t\\tISwapRouter.ExactInputSingleParams memory params = ISwapRouter\\r\\n\\t\\t\\t.ExactInputSingleParams({\\r\\n\\t\\t\\t\\ttokenIn: address(token),\\r\\n\\t\\t\\t\\ttokenOut: usdcAddress,\\r\\n\\t\\t\\t\\tfee: 3000,\\r\\n\\t\\t\\t\\trecipient: address(router),\\r\\n\\t\\t\\t\\tdeadline: block.timestamp,\\r\\n\\t\\t\\t\\tamountIn: tokenBalance,\\r\\n\\t\\t\\t\\tamountOutMinimum: 0,\\r\\n\\t\\t\\t\\tsqrtPriceLimitX96: 0\\r\\n\\t\\t\\t});\\r\\n\\t\\treturn uniswapRouter.exactInputSingle(params);\\r\\n\\t}\\r\\n\\r\\n\\tfunction multiHopSwap(\\r\\n\\t\\tIERC20Metadata token,\\r\\n\\t\\taddress intermediateToken,\\r\\n\\t\\taddress usdcAddress,\\r\\n\\t\\tuint tokenBalance\\r\\n\\t) private returns (uint usdcAmount) {\\r\\n\\t\\tISwapRouter.ExactInputParams memory params = ISwapRouter\\r\\n\\t\\t\\t.ExactInputParams({\\r\\n\\t\\t\\t\\tpath: abi.encodePacked(\\r\\n\\t\\t\\t\\t\\taddress(token),\\r\\n\\t\\t\\t\\t\\tuint24(3000),\\r\\n\\t\\t\\t\\t\\tintermediateToken,\\r\\n\\t\\t\\t\\t\\tuint24(3000),\\r\\n\\t\\t\\t\\t\\tusdcAddress\\r\\n\\t\\t\\t\\t),\\r\\n\\t\\t\\t\\trecipient: address(router),\\r\\n\\t\\t\\t\\tdeadline: block.timestamp,\\r\\n\\t\\t\\t\\tamountIn: tokenBalance,\\r\\n\\t\\t\\t\\tamountOutMinimum: 0\\r\\n\\t\\t\\t});\\r\\n\\t\\treturn uniswapRouter.exactInput(params);\\r\\n\\t}\\r\\n}\\r\\n\",\"keccak256\":\"0xf6b2a1a3a89e833e8dc27f62cc8f40566c78403677ec4112d1e34b8b9c55ad30\"},\"contracts/core/Router.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/interfaces/IERC20.sol\\\";\\r\\nimport \\\"./Agent.sol\\\";\\r\\n\\r\\ncontract Router is Ownable, ERC20 {\\r\\n\\tusing SafeERC20 for IERC20;\\r\\n\\r\\n\\tuint256 public _BPS_FEE = 10;\\r\\n\\tuint256 public _MINT_RATE = 2;\\r\\n\\tuint256 public _REWARD_RATE = 100;\\r\\n\\r\\n\\tuint256 internal constant _MAX_FEE = 100;\\r\\n\\tuint256 internal constant _MIN_MINT_RATE = 2;\\r\\n\\tuint256 internal constant _MAX_REWARD_RATE = 10000;\\r\\n\\tuint256 internal constant _MIN_REWARD_RATE = 10;\\r\\n\\t\\r\\n\\tIERC20 internal constant USDC =\\r\\n\\t\\tIERC20(0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174);\\r\\n\\r\\n\\tmapping(address => Agent) public userAgents;\\r\\n\\tmapping(address => uint256) public stakes;\\r\\n\\tmapping(address => uint256) public stakingTime;\\r\\n\\r\\n\\tuint256 public totalStaked;\\r\\n\\r\\n\\tevent Staked(address indexed user, uint256 amount, uint256 timestamp);\\r\\n\\tevent Unstaked(address indexed user, uint256 amount, uint256 reward);\\r\\n\\tevent AgentCreated(address user, address agent);\\r\\n\\tevent Execute(address user, Agent.Call[] calls,address[] tokensReturn);\\r\\n\\tevent Burn(address user, uint256 value);\\r\\n\\tevent Mint(address user, uint256 value);\\r\\n\\tevent TransferAfterMint(address user, uint256 value);\\r\\n\\tevent ChangeMintRate(uint256 newRate);\\r\\n\\tevent ChangeRewardRate(uint256 newRate);\\r\\n\\tevent ChangeBpsFee(uint256 newFee);\\r\\n\\r\\n\\tconstructor() Ownable(msg.sender) ERC20(\\\"Baluni\\\", \\\"BALUNI\\\") {}\\r\\n\\r\\n\\tfunction getBpsFee() external view returns (uint256) {\\r\\n\\t\\treturn _BPS_FEE;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getMintRate() external view returns (uint256) {\\r\\n\\t\\treturn _MINT_RATE;\\r\\n\\t}\\r\\n\\r\\n\\tfunction changeBpsFee(uint256 _newFee) external returns (bool) {\\r\\n\\t\\trequire(msg.sender == owner(), \\\"Only Owner\\\");\\r\\n\\t\\trequire(_newFee <= _MAX_FEE, \\\"Fee too high\\\");\\t\\r\\n\\t\\t_BPS_FEE = _newFee;\\r\\n\\t\\temit ChangeBpsFee(_BPS_FEE);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction changeRewardRate(uint256 _newRate) external returns (bool) {\\r\\n\\t\\trequire(msg.sender == owner(), \\\"Only Owner\\\");\\r\\n\\t\\trequire(_newRate <= _MAX_REWARD_RATE && _MIN_REWARD_RATE <= _newRate, \\\"Wront Rate\\\");\\r\\n\\t\\t_REWARD_RATE = _newRate;\\r\\n\\t\\temit ChangeRewardRate(_REWARD_RATE);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction changeMintRate(uint256 _newMintRate) external returns (bool) {\\r\\n\\t\\trequire(msg.sender == owner(), \\\"Only Owner\\\");\\r\\n\\t\\trequire(_MIN_MINT_RATE < _newMintRate, \\\"Fee too high\\\");\\r\\n\\t\\t_MINT_RATE = _newMintRate;\\r\\n\\t\\temit ChangeMintRate(_MINT_RATE);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getAgentAddress(address _user) public view returns (address) {\\r\\n\\t\\tbytes32 salt = keccak256(abi.encodePacked(_user));\\r\\n\\t\\tbytes memory bytecode = getBytecode(_user);\\r\\n\\t\\t\\r\\n\\t\\tbytes32 hash = keccak256(\\r\\n\\t\\t\\tabi.encodePacked(\\r\\n\\t\\t\\t\\tbytes1(0xff),\\r\\n\\t\\t\\t\\taddress(this),\\r\\n\\t\\t\\t\\tsalt,\\r\\n\\t\\t\\t\\tkeccak256(bytecode)\\r\\n\\t\\t\\t)\\r\\n\\t\\t);\\r\\n\\t\\t\\r\\n\\t\\treturn address(uint160(uint(hash)));\\r\\n\\t}\\r\\n\\r\\n\\tfunction getOrCreateAgent(address user) private returns (Agent) {\\r\\n\\t\\tbytes32 salt = keccak256(abi.encodePacked(user));\\r\\n\\t\\t\\r\\n\\t\\tif (address(userAgents[user]) == address(0)) {\\r\\n\\t\\t\\tAgent agent = new Agent{ salt: salt }(user, address(this));\\r\\n\\t\\t\\tuserAgents[user] = agent;\\r\\n\\t\\t\\temit AgentCreated(user, address(agent));\\r\\n\\t\\t}\\r\\n\\t\\treturn userAgents[user];\\r\\n\\t}\\r\\n\\r\\n\\tfunction getBytecode(address _owner) public view returns (bytes memory) {\\r\\n\\t\\tbytes memory bytecode = type(Agent).creationCode;\\r\\n\\t\\treturn abi.encodePacked(bytecode, abi.encode(_owner, address(this)));\\r\\n\\t}\\r\\n\\r\\n\\tfunction execute(\\r\\n\\t\\tAgent.Call[] calldata calls,\\r\\n\\t\\taddress[] calldata tokensReturn\\r\\n\\t) external {\\r\\n\\t\\tuint256 usdBalanceB4 = USDC.balanceOf(address(this));\\r\\n\\r\\n\\t\\tAgent agent = getOrCreateAgent(msg.sender);\\r\\n\\t\\tagent.execute(calls, tokensReturn);\\r\\n\\t\\t\\r\\n\\t\\tuint256 usdBalance = USDC.balanceOf(address(this));\\r\\n\\t\\tuint256 mintAmount = (usdBalance - usdBalanceB4) * 1e12;\\r\\n\\r\\n\\t\\t_mint(address(this), mintAmount);\\r\\n\\t\\temit Mint(address(this),mintAmount);\\r\\n\\t\\tuint256 mintAmountFinal = mintAmount / _MINT_RATE;\\r\\n\\r\\n\\t\\tif(mintAmountFinal != 0 && balanceOf(address(this)) > mintAmountFinal ){\\r\\n\\t\\t\\tuint256 allowance = allowance(address(this),msg.sender);\\r\\n\\r\\n\\t\\t\\tif( mintAmountFinal > allowance ) {\\r\\n\\t\\t\\t\\tapprove(msg.sender, mintAmountFinal);\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tIERC20(address(this)).safeTransfer(msg.sender, mintAmountFinal);\\r\\n\\t\\t\\temit TransferAfterMint(msg.sender,mintAmountFinal);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\temit Execute(msg.sender, calls, tokensReturn);\\r\\n\\t}\\r\\n\\r\\n\\tfunction burnBALUNIForUSDC(uint amount) external {\\r\\n\\t\\trequire(balanceOf(msg.sender) >= amount, \\\"Insufficient BAL\\\");\\r\\n\\t\\tuint usdcAmount = _calculateUSDCShare(amount);\\r\\n\\t\\t\\r\\n\\t\\tUSDC.transfer(msg.sender, usdcAmount / 1e12);\\r\\n\\t\\t_burn(msg.sender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _calculateUSDCShare(uint balAmount) internal view returns (uint) {\\r\\n\\t\\tuint totalSupply = totalSupply();\\r\\n\\t\\tuint totalUSDCBalance = USDC.balanceOf(address(this));\\r\\n\\t\\tuint scaledUSDCBalance = totalUSDCBalance * 1e12;\\r\\n\\r\\n\\t\\treturn (balAmount * scaledUSDCBalance) / totalSupply;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getShare(uint balAmount) external view returns (uint) {\\r\\n\\t\\treturn _calculateUSDCShare(balAmount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction stake(uint256 amount) external {\\r\\n\\t\\trequire(amount > 0, \\\"Amount must be greater than 0\\\");\\r\\n\\t\\tuint256 allowed = allowance(msg.sender, address(this));\\r\\n\\t\\trequire(allowed >= amount, \\\"Check the token allowance\\\");\\r\\n\\t\\tIERC20(address(this)).safeTransferFrom(msg.sender, address(this), amount);\\r\\n\\t\\tstakes[msg.sender] += amount;\\r\\n\\t\\tstakingTime[msg.sender] = block.timestamp;\\r\\n\\t\\ttotalStaked += amount;\\r\\n\\t\\temit Staked(msg.sender, amount, block.timestamp);\\r\\n\\t}\\r\\n\\r\\n\\tfunction unstake(uint256 amount) external {\\r\\n\\t\\trequire(stakes[msg.sender] >= amount, \\\"Insufficient staked amount\\\");\\r\\n\\t\\tuint256 reward = _calculateReward(msg.sender, amount);\\r\\n\\t\\tuint256 totalNeeded = amount + reward;\\r\\n\\t\\t\\r\\n\\t\\trequire(\\r\\n\\t\\t\\tbalanceOf(address(this)) >= totalNeeded,\\r\\n\\t\\t\\t\\\"Not enough tokens in the contract\\\"\\r\\n\\t\\t);\\r\\n\\t\\t\\r\\n\\t\\t_transfer(address(this), msg.sender, totalNeeded);\\r\\n\\t\\tstakes[msg.sender] -= amount;\\r\\n\\r\\n\\t\\tif (stakes[msg.sender] == 0) {\\r\\n\\t\\t\\tstakingTime[msg.sender] = 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\ttotalStaked -= amount;\\r\\n\\t\\t\\r\\n\\t\\temit Unstaked(msg.sender, amount, reward);\\r\\n\\t}\\r\\n\\r\\n\\tfunction getReward(address user,uint256 amount) external view returns (uint256) {\\r\\n\\t\\treturn _calculateReward(user,amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _calculateReward(\\r\\n\\t\\taddress user,\\r\\n\\t\\tuint256 amount\\r\\n\\t) internal view returns (uint256) {\\r\\n\\t\\tuint256 stakedDuration = block.timestamp - stakingTime[user];\\r\\n\\t\\tuint256 rewardRate = _REWARD_RATE;\\r\\n\\t\\tuint256 reward = (amount * stakedDuration * rewardRate) / 1e18;\\r\\n\\t\\tuint256 maxReward = balanceOf(address(this)) - totalStaked;\\r\\n\\r\\n\\t\\tif (reward > maxReward) {\\r\\n\\t\\t\\treward = maxReward;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn reward;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTotalStaked() external view returns (uint256) {\\r\\n\\t\\treturn totalStaked;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getAPY() external view returns (uint256) {\\r\\n    \\tuint256 secondsInYear = 31536000; \\r\\n    \\treturn (_REWARD_RATE * secondsInYear * 100) / 1e18;\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x425572e76740655ff003f244cc29ff0a76ba07dde26937712aa18774bfa80406\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523461033d57610011610342565b60206542616c756e6960d01b81830152610029610342565b6542414c554e4960d01b8282015233156103245760008054336001600160a01b0319821681178355919491906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a380516001600160401b0392838211610310576004958654926001948585811c95168015610306575b888610146102f3578190601f958681116102a5575b50889086831160011461024657849261023b575b5050600019600383901b1c191690851b1787555b8151948511610228576005968754908582811c9216801561021e575b8883101461020b57508381116101ca575b508592851160011461016857939450849291908361015d575b50501b916000199060031b1c19161790555b600a600655600260075560646008556040516129e9908161037c8239f35b01519250388061012d565b86815285812093958591601f198316915b888383106101b05750505010610197575b505050811b01905561013f565b015160001960f88460031b161c1916905538808061018a565b858701518855909601959485019487935090810190610179565b878252868220848088018a1c820192898910610202575b01891c019085905b8281106101f7575050610114565b8381550185906101e9565b925081926101e1565b634e487b7160e01b835260229052602482fd5b91607f1691610103565b634e487b7160e01b815260418752602490fd5b0151905038806100d3565b8a85528985208894509190601f198416865b8c82821061028f5750508411610276575b505050811b0187556100e7565b015160001960f88460031b161c19169055388080610269565b8385015186558b97909501949384019301610258565b9091508984528884208680850160051c8201928b86106102ea575b918991869594930160051c01915b8281106102dc5750506100bf565b8681558594508991016102ce565b925081926102c0565b634e487b7160e01b835260228952602483fd5b94607f16946100aa565b634e487b7160e01b86526041600452602486fd5b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b60408051919082016001600160401b038111838210176103655760405260068252565b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c90816306497cb91461144357816306fdde031461134c5781630917e77614610d74578163095ea7b3146113225781630c6008af146112e857816316934fc4146112b057816318160ddd14611291578163185fcffe146108ce57816323b872dd1461119d57816327d54a92146110e05781632aaca355146110c15781632e17de7814610f62578163313ce56714610f46578163583d42fd14610f0e57816370a0823114610ed6578163715018a614610e7c57816374f237c414610dce5781637811a78514610d93578163817b1cd214610d745781638da5cb5b14610d4c57816395d89b4114610c2f57816396f0bd6114610810578163a694fc3a14610ab4578163a9059cbb14610a83578163ac6d6c45146108ed578163b9f5e617146108ce578163cfb5a5f8146108ae578163d2cbf7ad1461082f578163daca66aa14610810578163dd62ed3e146107c7578163eb355fdf1461075b578163eedc3c501461025b578163f2fde38b146101cb575063f474c8ce1461019957600080fd5b346101c757806003193601126101c7576020906101c06101b76114f8565b6024359061193a565b9051908152f35b5080fd5b905034610257576020366003190112610257576101e66114f8565b906101ef6119a4565b6001600160a01b03918216928315610241575050600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b8383346101c7576003199080823601126102575767ffffffffffffffff84358181116107575761028e9036908701611538565b602496873584811161075357906102ac899594939236908301611538565b9590948751906370a0823160e01b90818352308584015260209a8b84732791bca1f2de4661ed88a30c99a7a9449aa841749681885afa938415610635578b8e8e928197610718575b508151838101903360601b82526014815261030e816115dd565b51902033825260098452828220546001600160a01b03949190851615610643575b506009903383525220541690813b1561063f57878f928f92838f918f8f918f9998918e936103889361037a88519d8e9b8c9a8b99630eedc3c560e41b8b528a0152604489019161173c565b938685030190860152611816565b03925af1801561063557610610575b505089908c8a5180958193825230888301525afa8015610606578a906105d2575b6103c292506116e4565b9064e8d4a51000918281029281840414901517156105c05730156105aa5750926104c886938896938a7f959525f9273812bc5ed0bd375df7492e36027567ab13116ec62673c8d46870c89a8d60609b6104a08b6104246104d59d6003546116c1565b600355306000526001855282600020818154019055825181815260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef873093a38251308152602081018290527f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688590604090a1600754906116f1565b9182151580610597575b6104db575b509250505051988998338a52890152606088019161173c565b9285840390860152611816565b0390a180f35b61055d61057a9461054f8585610563967f6525f6ff949fa202320915429d48c1702ed07232a6b781d0dbb1e71cb1f42bdd9a308152600286522033600052845280600020548211610587575b5163a9059cbb60e01b9381019390935233948301948552602085015290928391604090910190565b03601f19810183528261160f565b30611b10565b885133815260208101919091529081906040820190565b0390a18a888d88816104af565b610592823333611a7d565b610527565b50308552600184528282862054116104aa565b865163ec442f0560e01b81529081018990528990fd5b634e487b7160e01b8952601190528888fd5b508882813d83116105ff575b6105e8818361160f565b810103126105fa576103c291516103b8565b600080fd5b503d6105de565b88513d8c823e3d90fd5b819c929c1161062357895299898d610397565b634e487b7160e01b8252604185528c82fd5b8b513d8f823e3d90fd5b8d80fd5b92905051610d7a808201908282108883111761070057829161067391611c3a843933815230602082015260400190565b0391f580156106f4578e60098f8f936106eb7f8c6e353968e7ffd60dba22ff7d2a4354af301f9d41858a35668e7292ec1301b69133865284845287878720911690816001600160601b0360a01b8254161790558651918291338390602090939293604083019460018060a01b03809216845216910152565b0390a19061032f565b8e8d51903d90823e3d90fd5b50505090508f9150604188634e487b7160e01b835252fd5b9394959650505081813d831161074c575b610733818361160f565b8101031261074857519291908b8b8e386102f4565b8c80fd5b503d610729565b8780fd5b8480fd5b90503461025757602036600319011261025757602080936107aa7f9c578d6102a9371a55efed7ff85b52318d43740ea891894f239d5d5af1db0fc493359160018060a01b039054163314611569565b6107b6816002106115a2565b806007558351908152a15160018152f35b5050346101c757806003193601126101c757806020926107e56114f8565b6107ed61150e565b6001600160a01b0391821683526002865283832091168252845220549051908152f35b5050346101c757816003193601126101c7576020906007549051908152f35b905082346108ab57806003193601126108ab57600854916301e13380928381029381850414811517156108985763bbf81e0002928084046064149015171561088557602083670de0b6b3a7640000865191048152f35b634e487b7160e01b825260119052602490fd5b634e487b7160e01b835260118252602483fd5b80fd5b8284346108ab5760203660031901126108ab57506101c0602092356119d0565b5050346101c757816003193601126101c7576020906006549051908152f35b8383346101c7576020806003193601126102575783359133845260018252828185205410610a4d576109518264e8d4a51000610928866119d0565b845163a9059cbb60e01b8152338a82019081529290910460208301529283918291604090910190565b038188732791bca1f2de4661ed88a30c99a7a9449aa841745af18015610a4357610a16575b503315610a00573384526001825280842054948386106109d55750907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef918385963387526001845203818620558360035403600355519283523392a380f35b905163391434e360e21b81523391810191825260208201869052604082018490529081906060010390fd5b51634b637e8f60e11b8152808501849052602490fd5b610a3590833d8511610a3c575b610a2d818361160f565b810190611711565b5085610976565b503d610a23565b82513d87823e3d90fd5b5162461bcd60e51b815280850191909152601060248201526f125b9cdd59999a58da595b9d0810905360821b6044820152606490fd5b5050346101c757806003193601126101c757602090610aad610aa36114f8565b602435903361185a565b5160018152f35b8383346101c75760209081600319360112610257578335918215610bed57338452600281528184203085528152828285205410610bab5781516323b872dd60e01b828201523360248201523060448201526064808201859052815260a0810167ffffffffffffffff811182821017610b9857839291610b56917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90955230611b10565b338552600a8152818520610b6b8582546116c1565b9055338552600b81524282862055610b8584600c546116c1565b600c55815193845242908401523392a280f35b634e487b7160e01b865260418752602486fd5b8490606492519162461bcd60e51b8352820152601960248201527f436865636b2074686520746f6b656e20616c6c6f77616e6365000000000000006044820152fd5b8490606492519162461bcd60e51b8352820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152fd5b8284346108ab57806003193601126108ab57815191816005549260018460011c9160018616958615610d42575b6020968785108114610d2f578899509688969785829a529182600014610d08575050600114610cac575b505050610ca89291610c9991038561160f565b519282849384528301906114d3565b0390f35b9190869350600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410610cf05750505082010181610c99610ca8610c86565b8054848a018601528895508794909301928101610cd7565b60ff19168782015293151560051b86019093019350849250610c999150610ca89050610c86565b634e487b7160e01b835260228a52602483fd5b92607f1692610c5c565b5050346101c757816003193601126101c757905490516001600160a01b039091168152602090f35b5050346101c757816003193601126101c757602090600c549051908152f35b5050346101c75760203660031901126101c7576020916001600160a01b0390829082610dbd6114f8565b168152600985522054169051908152f35b839150346101c75760203660031901126101c757610df981359260018060a01b039054163314611569565b61271082111580610e71575b15610e41576020837f633787af8d1a5c9a1c328eb97f3a6761d4883d5f96f3bfcddbe23495ebf7a6a18285806008558351908152a15160018152f35b606490602084519162461bcd60e51b8352820152600a60248201526957726f6e74205261746560b01b6044820152fd5b5081600a1115610e05565b83346108ab57806003193601126108ab57610e956119a4565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101c75760203660031901126101c75760209181906001600160a01b03610efe6114f8565b1681526001845220549051908152f35b5050346101c75760203660031901126101c75760209181906001600160a01b03610f366114f8565b168152600b845220549051908152f35b5050346101c757816003193601126101c7576020905160128152f35b8383346101c7576020908160031936011261025757833591338452600a815282828520541061107f57610f95833361193a565b90610fa082856116c1565b95308652600182528684872054106110345750610fe17f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e949596333061185a565b338652600a8152828620610ff68682546116e4565b9055338652600a81528286205415611026575b61101585600c546116e4565b600c5582519485528401523392a280f35b600b81528583812055611009565b60849184519162461bcd60e51b8352820152602160248201527f4e6f7420656e6f75676820746f6b656e7320696e2074686520636f6e747261636044820152601d60fa1b6064820152fd5b8490606492519162461bcd60e51b8352820152601a60248201527f496e73756666696369656e74207374616b656420616d6f756e740000000000006044820152fd5b5050346101c757816003193601126101c7576020906008549051908152f35b8383346101c75760203660031901126101c7576110fb6114f8565b61112b825160208101906001600160601b03198460601b16825260148152611122816115dd565b51902091611631565b6020815191012091805192602084019260ff60f81b84523060601b60218601526035850152605584015260558352608083019383851067ffffffffffffffff86111761118a5750839052905190206001600160a01b0316815260209150f35b634e487b7160e01b815260418652602490fd5b905082346108ab5760603660031901126108ab576111b96114f8565b6111c161150e565b916044359360018060a01b0383168083526002602052868320338452602052868320549160001983036111fd575b602088610aad89898961185a565b86831061126557811561124e57331561123757508252600260209081528683203384528152918690209085900390558290610aad876111ef565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101c757816003193601126101c7576020906003549051908152f35b5050346101c75760203660031901126101c75760209181906001600160a01b036112d86114f8565b168152600a845220549051908152f35b5050346101c75760203660031901126101c757610ca89061130f61130a6114f8565b611631565b90519182916020835260208301906114d3565b5050346101c757806003193601126101c757602090610aad6113426114f8565b6024359033611a7d565b8284346108ab57806003193601126108ab578151918184549260018460011c9160018616958615611439575b6020968785108114610d2f579087899a92868b999a9b52918260001461140f5750506001146113b4575b8588610ca889610c99848a038561160f565b815286935091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106113f75750505082010181610c99610ca8886113a2565b8054848a0186015288955087949093019281016113dd565b60ff19168882015294151560051b87019094019450859350610c999250610ca891508990506113a2565b92607f1692611378565b90503461025757602036600319011261025757602080936114927fbea1b31142ae4b1f4efad240349036d718b7950d246c127768097ccf602fc7e093359160018060a01b039054163314611569565b61149f60648211156115a2565b806006558351908152a15160018152f35b60005b8381106114c35750506000910152565b81810151838201526020016114b3565b906020916114ec815180928185528580860191016114b0565b601f01601f1916010190565b600435906001600160a01b03821682036105fa57565b602435906001600160a01b03821682036105fa57565b35906001600160a01b03821682036105fa57565b9181601f840112156105fa5782359167ffffffffffffffff83116105fa576020808501948460051b0101116105fa57565b1561157057565b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9027bbb732b960b11b6044820152606490fd5b156115a957565b60405162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b6044820152606490fd5b6040810190811067ffffffffffffffff8211176115f957604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176115f957604052565b6116be6116a391610d7a6020916040519161164e8482018461160f565b80835283830190611c3a8239604080516001600160a01b0390931685840190815230602082015292916116b291611691908490860103601f19810185528461160f565b604051978895518092888801906114b0565b840191518093868401906114b0565b0103808452018261160f565b90565b919082018092116116ce57565b634e487b7160e01b600052601160045260246000fd5b919082039182116116ce57565b81156116fb570490565b634e487b7160e01b600052601260045260246000fd5b908160209103126105fa575180151581036105fa5790565b818102929181159184041417156116ce57565b8183526020600583901b84018101939192906000818401855b848310611766575050505050505090565b90919293949596601f1990818882030184528835605e19843603018112156105fa57606092908401906001600160a01b036117a083611524565b168352878201358884015260409182810135601e19823603018112156105fa57019288843594019167ffffffffffffffff85116105fa5784360383136105fa57601f858b968860019989988701528501528060809586860137600085828601015201160101990193019301919594939290611755565b91908082526020809201929160005b828110611833575050505090565b909192938280600192838060a01b0361184b89611524565b16815201950193929101611825565b916001600160a01b0380841692831561192157169283156119085760009083825260016020526040822054908382106118d6575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260018652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b670de0b6b3a7640000916119789160018060a01b0316600052600b60205261197361196a604060002054426116e4565b60085492611729565b611729565b04306000526001602052611994604060002054600c54906116e4565b80821161199f575090565b905090565b6000546001600160a01b031633036119b857565b60405163118cdaa760e01b8152336004820152602490fd5b6003546040516370a0823160e01b815230600482015291602083602481732791bca1f2de4661ed88a30c99a7a9449aa841745afa928315611a7157600093611a3d575b5064e8d4a51000928381029381850414901517156116ce576116be92611a3891611729565b6116f1565b90926020823d602011611a69575b81611a586020938361160f565b810103126108ab5750519138611a13565b3d9150611a4b565b6040513d6000823e3d90fd5b6001600160a01b03908116918215611af75716918215611ade5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260028252604060002085600052825280604060002055604051908152a3565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b60018060a01b031690600080826020829451910182865af13d15611bc9573d67ffffffffffffffff8111611bb557604051611b6c939291611b5b601f8201601f19166020018361160f565b8152809260203d92013e5b83611bd6565b8051908115159182611b9a575b5050611b825750565b60249060405190635274afe760e01b82526004820152fd5b611bad9250602080918301019101611711565b153880611b79565b634e487b7160e01b83526041600452602483fd5b611b6c9150606090611b66565b90611bfd5750805115611beb57805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580611c30575b611c0e575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15611c0656fe60c03461012257601f610d7a38819003918201601f19168301916001600160401b0383118484101761012757808492604094855283398101031261012257610052602061004b8361013d565b920161013d565b73e592427a0aece92de3edee1f18e0157c05861564608052731f98431c8ad98523631ae4a59f267346ea31f98460a0526001600160a01b039081169190338390036100ef5760018060a01b031991168160005416176000556001541617600155604051610c2890816101528239608051818181610383015281816106510152610a4c015260a051818181610407015281816104800152610a0a0152f35b60405162461bcd60e51b815260206004820152600b60248201526a27b7363c902937baba32b960a91b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101225756fe608080604052600436101561001357600080fd5b60003560e01c908163735de9f714610a39575080638bdb2afa146109f45780638da5cb5b146109cb578063b0f479a1146109a25763eedc3c501461005657600080fd5b346102cc5760403660031901126102cc5760043567ffffffffffffffff81116102cc57610087903690600401610a7b565b60243567ffffffffffffffff81116102cc576100a7903690600401610a7b565b60015490939192906001600160a01b0316330361095d5760005b818110610898575050600154604051630c2fe7ff60e11b81529150602090829060049082906001600160a01b03165afa9081156102d957600091610866575b5060005b8381106102e55750508161011457005b60005b82811061012057005b6001600160a01b0361013b610136838686610b5a565b610ae4565b1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036101be575047610168575b6001905b01610117565b60005447906001600160a01b03164782116101a657600080809381935af161018e610b1a565b5061015e575b604051630a12f52160e11b8152600490fd5b60405163cd78605960e01b8152306004820152602490fd5b6040516370a0823160e01b8152306004820152602081602481855afa9081156102d9576000916102a2575b50600a81116101fd575b5050600190610162565b6000805460405163a9059cbb60e01b602082019081526001600160a01b03909216602482015260448082019490945292835261025692829190610241606482610af8565b519082865af161024f610b1a565b9083610ba1565b8051908115159182610287575b505061026f57806101f3565b60249060405190635274afe760e01b82526004820152fd5b61029a9250602080918301019101610b6a565b153880610263565b90506020813d6020116102d1575b816102bd60209383610af8565b810103126102cc5751386101e9565b600080fd5b3d91506102b0565b6040513d6000823e3d90fd5b6001600160a01b036102fb610136838787610b5a565b6040516370a0823160e01b8152306004820152929116602083602481845afa9283156102d957600093610832575b5082156107065783830292808404850361081c576127108404116107e057732791bca1f2de4661ed88a30c99a7a9449aa841748114610792576127108304156107065760405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152612710840460248201526020816044816000865af180156102d957610773575b50604051630b4c774160e11b815260048101829052732791bca1f2de4661ed88a30c99a7a9449aa841746024820152610bb860448201526020816064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156102d957600091610754575b50604051630b4c774160e11b815260048101839052730d500b1d8e8ef31e21c99d1db9a6444d3adf12706024820152610bb86044820152906020826064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9182156102d957600092610723575b506001600160a01b03161580159190610710575b50610706576040516313c768d960e31b6020820152816024820152732791bca1f2de4661ed88a30c99a7a9449aa84174604482015261271084046064820152606481528060a081011067ffffffffffffffff60a0830111176106f05760008160a082930160405260208151910182305af1610546610b1a565b50156105585750600191505b01610104565b6040516395f54ef560e01b6020820152816024820152730d500b1d8e8ef31e21c99d1db9a6444d3adf12706044820152732791bca1f2de4661ed88a30c99a7a9449aa841746064820152608461271085048183015281528060c081011067ffffffffffffffff60c0830111176106f05760008160c082930160405260208151910182305af16105e5610b1a565b50156105f5575060019150610552565b60005460405163a9059cbb60e01b81526001600160a01b0390911660048201526127109093046024840152602083806044810103816000855af19081156102d9576000936020926106d3575b5060405163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660048201526024810185905293849160449183915af19182156102d9576001926106a4575b50610552565b6106c59060203d6020116106cc575b6106bd8183610af8565b810190610b6a565b503861069e565b503d6106b3565b6106e990833d85116106cc576106bd8183610af8565b5038610641565b634e487b7160e01b600052604160045260246000fd5b5060019150610552565b6001600160a01b031615159050386104cd565b61074691925060203d60201161074d575b61073e8183610af8565b810190610b82565b90386104b9565b503d610734565b61076d915060203d60201161074d5761073e8183610af8565b38610440565b61078b9060203d6020116106cc576106bd8183610af8565b50386103c8565b60015460405163a9059cbb60e01b81526001600160a01b0390911660048201526127109093046024840152602090839060449082906000905af19182156102d9576001926106a45750610552565b60405162461bcd60e51b815260206004820152601460248201527357726f6e6720416d6f756e74416674657246656560601b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b9092506020813d60201161085e575b8161084e60209383610af8565b810103126102cc57519138610329565b3d9150610841565b90506020813d602011610890575b8161088160209383610af8565b810103126102cc575138610100565b3d9150610874565b6108a6610136828486610aac565b602090816108b5848688610aac565b0135906108c3848688610aac565b604081013590601e19813603018212156102cc57019081359167ffffffffffffffff83116102cc5784019180360383136102cc576000938493826040519384928337810185815203925af1610916610b1a565b501561092557506001016100c1565b6064906040519062461bcd60e51b82526004820152601160248201527010985d18da0818d85b1b0819985a5b1959607a1b6044820152fd5b60405162461bcd60e51b815260206004820152601b60248201527f43616c6c61626c65206f6e6c792062792074686520726f7574657200000000006044820152606490fd5b346102cc5760003660031901126102cc576001546040516001600160a01b039091168152602090f35b346102cc5760003660031901126102cc576000546040516001600160a01b039091168152602090f35b346102cc5760003660031901126102cc576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346102cc5760003660031901126102cc577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9181601f840112156102cc5782359167ffffffffffffffff83116102cc576020808501948460051b0101116102cc57565b9190811015610ace5760051b81013590605e19813603018212156102cc570190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036102cc5790565b90601f8019910116810190811067ffffffffffffffff8211176106f057604052565b3d15610b55573d9067ffffffffffffffff82116106f05760405191610b49601f8201601f191660200184610af8565b82523d6000602084013e565b606090565b9190811015610ace5760051b0190565b908160209103126102cc575180151581036102cc5790565b908160209103126102cc57516001600160a01b03811681036102cc5790565b90610bb6575080511561019457805190602001fd5b81511580610be9575b610bc7575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15610bbf56fea2646970667358221220e0f61ffa0f286a3e811681d920074cf18f3a6ebe9b1e52c769850d5857a1827c64736f6c63430008190033a2646970667358221220776b73d3addc02d37862515deb513414b7b954b8938fa321a0f5cd314c0fb98164736f6c63430008190033",
  "deployedBytecode": "0x6040608081526004908136101561001557600080fd5b600091823560e01c90816306497cb91461144357816306fdde031461134c5781630917e77614610d74578163095ea7b3146113225781630c6008af146112e857816316934fc4146112b057816318160ddd14611291578163185fcffe146108ce57816323b872dd1461119d57816327d54a92146110e05781632aaca355146110c15781632e17de7814610f62578163313ce56714610f46578163583d42fd14610f0e57816370a0823114610ed6578163715018a614610e7c57816374f237c414610dce5781637811a78514610d93578163817b1cd214610d745781638da5cb5b14610d4c57816395d89b4114610c2f57816396f0bd6114610810578163a694fc3a14610ab4578163a9059cbb14610a83578163ac6d6c45146108ed578163b9f5e617146108ce578163cfb5a5f8146108ae578163d2cbf7ad1461082f578163daca66aa14610810578163dd62ed3e146107c7578163eb355fdf1461075b578163eedc3c501461025b578163f2fde38b146101cb575063f474c8ce1461019957600080fd5b346101c757806003193601126101c7576020906101c06101b76114f8565b6024359061193a565b9051908152f35b5080fd5b905034610257576020366003190112610257576101e66114f8565b906101ef6119a4565b6001600160a01b03918216928315610241575050600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b8383346101c7576003199080823601126102575767ffffffffffffffff84358181116107575761028e9036908701611538565b602496873584811161075357906102ac899594939236908301611538565b9590948751906370a0823160e01b90818352308584015260209a8b84732791bca1f2de4661ed88a30c99a7a9449aa841749681885afa938415610635578b8e8e928197610718575b508151838101903360601b82526014815261030e816115dd565b51902033825260098452828220546001600160a01b03949190851615610643575b506009903383525220541690813b1561063f57878f928f92838f918f8f918f9998918e936103889361037a88519d8e9b8c9a8b99630eedc3c560e41b8b528a0152604489019161173c565b938685030190860152611816565b03925af1801561063557610610575b505089908c8a5180958193825230888301525afa8015610606578a906105d2575b6103c292506116e4565b9064e8d4a51000918281029281840414901517156105c05730156105aa5750926104c886938896938a7f959525f9273812bc5ed0bd375df7492e36027567ab13116ec62673c8d46870c89a8d60609b6104a08b6104246104d59d6003546116c1565b600355306000526001855282600020818154019055825181815260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef873093a38251308152602081018290527f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688590604090a1600754906116f1565b9182151580610597575b6104db575b509250505051988998338a52890152606088019161173c565b9285840390860152611816565b0390a180f35b61055d61057a9461054f8585610563967f6525f6ff949fa202320915429d48c1702ed07232a6b781d0dbb1e71cb1f42bdd9a308152600286522033600052845280600020548211610587575b5163a9059cbb60e01b9381019390935233948301948552602085015290928391604090910190565b03601f19810183528261160f565b30611b10565b885133815260208101919091529081906040820190565b0390a18a888d88816104af565b610592823333611a7d565b610527565b50308552600184528282862054116104aa565b865163ec442f0560e01b81529081018990528990fd5b634e487b7160e01b8952601190528888fd5b508882813d83116105ff575b6105e8818361160f565b810103126105fa576103c291516103b8565b600080fd5b503d6105de565b88513d8c823e3d90fd5b819c929c1161062357895299898d610397565b634e487b7160e01b8252604185528c82fd5b8b513d8f823e3d90fd5b8d80fd5b92905051610d7a808201908282108883111761070057829161067391611c3a843933815230602082015260400190565b0391f580156106f4578e60098f8f936106eb7f8c6e353968e7ffd60dba22ff7d2a4354af301f9d41858a35668e7292ec1301b69133865284845287878720911690816001600160601b0360a01b8254161790558651918291338390602090939293604083019460018060a01b03809216845216910152565b0390a19061032f565b8e8d51903d90823e3d90fd5b50505090508f9150604188634e487b7160e01b835252fd5b9394959650505081813d831161074c575b610733818361160f565b8101031261074857519291908b8b8e386102f4565b8c80fd5b503d610729565b8780fd5b8480fd5b90503461025757602036600319011261025757602080936107aa7f9c578d6102a9371a55efed7ff85b52318d43740ea891894f239d5d5af1db0fc493359160018060a01b039054163314611569565b6107b6816002106115a2565b806007558351908152a15160018152f35b5050346101c757806003193601126101c757806020926107e56114f8565b6107ed61150e565b6001600160a01b0391821683526002865283832091168252845220549051908152f35b5050346101c757816003193601126101c7576020906007549051908152f35b905082346108ab57806003193601126108ab57600854916301e13380928381029381850414811517156108985763bbf81e0002928084046064149015171561088557602083670de0b6b3a7640000865191048152f35b634e487b7160e01b825260119052602490fd5b634e487b7160e01b835260118252602483fd5b80fd5b8284346108ab5760203660031901126108ab57506101c0602092356119d0565b5050346101c757816003193601126101c7576020906006549051908152f35b8383346101c7576020806003193601126102575783359133845260018252828185205410610a4d576109518264e8d4a51000610928866119d0565b845163a9059cbb60e01b8152338a82019081529290910460208301529283918291604090910190565b038188732791bca1f2de4661ed88a30c99a7a9449aa841745af18015610a4357610a16575b503315610a00573384526001825280842054948386106109d55750907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef918385963387526001845203818620558360035403600355519283523392a380f35b905163391434e360e21b81523391810191825260208201869052604082018490529081906060010390fd5b51634b637e8f60e11b8152808501849052602490fd5b610a3590833d8511610a3c575b610a2d818361160f565b810190611711565b5085610976565b503d610a23565b82513d87823e3d90fd5b5162461bcd60e51b815280850191909152601060248201526f125b9cdd59999a58da595b9d0810905360821b6044820152606490fd5b5050346101c757806003193601126101c757602090610aad610aa36114f8565b602435903361185a565b5160018152f35b8383346101c75760209081600319360112610257578335918215610bed57338452600281528184203085528152828285205410610bab5781516323b872dd60e01b828201523360248201523060448201526064808201859052815260a0810167ffffffffffffffff811182821017610b9857839291610b56917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90955230611b10565b338552600a8152818520610b6b8582546116c1565b9055338552600b81524282862055610b8584600c546116c1565b600c55815193845242908401523392a280f35b634e487b7160e01b865260418752602486fd5b8490606492519162461bcd60e51b8352820152601960248201527f436865636b2074686520746f6b656e20616c6c6f77616e6365000000000000006044820152fd5b8490606492519162461bcd60e51b8352820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152fd5b8284346108ab57806003193601126108ab57815191816005549260018460011c9160018616958615610d42575b6020968785108114610d2f578899509688969785829a529182600014610d08575050600114610cac575b505050610ca89291610c9991038561160f565b519282849384528301906114d3565b0390f35b9190869350600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410610cf05750505082010181610c99610ca8610c86565b8054848a018601528895508794909301928101610cd7565b60ff19168782015293151560051b86019093019350849250610c999150610ca89050610c86565b634e487b7160e01b835260228a52602483fd5b92607f1692610c5c565b5050346101c757816003193601126101c757905490516001600160a01b039091168152602090f35b5050346101c757816003193601126101c757602090600c549051908152f35b5050346101c75760203660031901126101c7576020916001600160a01b0390829082610dbd6114f8565b168152600985522054169051908152f35b839150346101c75760203660031901126101c757610df981359260018060a01b039054163314611569565b61271082111580610e71575b15610e41576020837f633787af8d1a5c9a1c328eb97f3a6761d4883d5f96f3bfcddbe23495ebf7a6a18285806008558351908152a15160018152f35b606490602084519162461bcd60e51b8352820152600a60248201526957726f6e74205261746560b01b6044820152fd5b5081600a1115610e05565b83346108ab57806003193601126108ab57610e956119a4565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101c75760203660031901126101c75760209181906001600160a01b03610efe6114f8565b1681526001845220549051908152f35b5050346101c75760203660031901126101c75760209181906001600160a01b03610f366114f8565b168152600b845220549051908152f35b5050346101c757816003193601126101c7576020905160128152f35b8383346101c7576020908160031936011261025757833591338452600a815282828520541061107f57610f95833361193a565b90610fa082856116c1565b95308652600182528684872054106110345750610fe17f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e949596333061185a565b338652600a8152828620610ff68682546116e4565b9055338652600a81528286205415611026575b61101585600c546116e4565b600c5582519485528401523392a280f35b600b81528583812055611009565b60849184519162461bcd60e51b8352820152602160248201527f4e6f7420656e6f75676820746f6b656e7320696e2074686520636f6e747261636044820152601d60fa1b6064820152fd5b8490606492519162461bcd60e51b8352820152601a60248201527f496e73756666696369656e74207374616b656420616d6f756e740000000000006044820152fd5b5050346101c757816003193601126101c7576020906008549051908152f35b8383346101c75760203660031901126101c7576110fb6114f8565b61112b825160208101906001600160601b03198460601b16825260148152611122816115dd565b51902091611631565b6020815191012091805192602084019260ff60f81b84523060601b60218601526035850152605584015260558352608083019383851067ffffffffffffffff86111761118a5750839052905190206001600160a01b0316815260209150f35b634e487b7160e01b815260418652602490fd5b905082346108ab5760603660031901126108ab576111b96114f8565b6111c161150e565b916044359360018060a01b0383168083526002602052868320338452602052868320549160001983036111fd575b602088610aad89898961185a565b86831061126557811561124e57331561123757508252600260209081528683203384528152918690209085900390558290610aad876111ef565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101c757816003193601126101c7576020906003549051908152f35b5050346101c75760203660031901126101c75760209181906001600160a01b036112d86114f8565b168152600a845220549051908152f35b5050346101c75760203660031901126101c757610ca89061130f61130a6114f8565b611631565b90519182916020835260208301906114d3565b5050346101c757806003193601126101c757602090610aad6113426114f8565b6024359033611a7d565b8284346108ab57806003193601126108ab578151918184549260018460011c9160018616958615611439575b6020968785108114610d2f579087899a92868b999a9b52918260001461140f5750506001146113b4575b8588610ca889610c99848a038561160f565b815286935091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106113f75750505082010181610c99610ca8886113a2565b8054848a0186015288955087949093019281016113dd565b60ff19168882015294151560051b87019094019450859350610c999250610ca891508990506113a2565b92607f1692611378565b90503461025757602036600319011261025757602080936114927fbea1b31142ae4b1f4efad240349036d718b7950d246c127768097ccf602fc7e093359160018060a01b039054163314611569565b61149f60648211156115a2565b806006558351908152a15160018152f35b60005b8381106114c35750506000910152565b81810151838201526020016114b3565b906020916114ec815180928185528580860191016114b0565b601f01601f1916010190565b600435906001600160a01b03821682036105fa57565b602435906001600160a01b03821682036105fa57565b35906001600160a01b03821682036105fa57565b9181601f840112156105fa5782359167ffffffffffffffff83116105fa576020808501948460051b0101116105fa57565b1561157057565b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9027bbb732b960b11b6044820152606490fd5b156115a957565b60405162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b6044820152606490fd5b6040810190811067ffffffffffffffff8211176115f957604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176115f957604052565b6116be6116a391610d7a6020916040519161164e8482018461160f565b80835283830190611c3a8239604080516001600160a01b0390931685840190815230602082015292916116b291611691908490860103601f19810185528461160f565b604051978895518092888801906114b0565b840191518093868401906114b0565b0103808452018261160f565b90565b919082018092116116ce57565b634e487b7160e01b600052601160045260246000fd5b919082039182116116ce57565b81156116fb570490565b634e487b7160e01b600052601260045260246000fd5b908160209103126105fa575180151581036105fa5790565b818102929181159184041417156116ce57565b8183526020600583901b84018101939192906000818401855b848310611766575050505050505090565b90919293949596601f1990818882030184528835605e19843603018112156105fa57606092908401906001600160a01b036117a083611524565b168352878201358884015260409182810135601e19823603018112156105fa57019288843594019167ffffffffffffffff85116105fa5784360383136105fa57601f858b968860019989988701528501528060809586860137600085828601015201160101990193019301919594939290611755565b91908082526020809201929160005b828110611833575050505090565b909192938280600192838060a01b0361184b89611524565b16815201950193929101611825565b916001600160a01b0380841692831561192157169283156119085760009083825260016020526040822054908382106118d6575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260018652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b670de0b6b3a7640000916119789160018060a01b0316600052600b60205261197361196a604060002054426116e4565b60085492611729565b611729565b04306000526001602052611994604060002054600c54906116e4565b80821161199f575090565b905090565b6000546001600160a01b031633036119b857565b60405163118cdaa760e01b8152336004820152602490fd5b6003546040516370a0823160e01b815230600482015291602083602481732791bca1f2de4661ed88a30c99a7a9449aa841745afa928315611a7157600093611a3d575b5064e8d4a51000928381029381850414901517156116ce576116be92611a3891611729565b6116f1565b90926020823d602011611a69575b81611a586020938361160f565b810103126108ab5750519138611a13565b3d9150611a4b565b6040513d6000823e3d90fd5b6001600160a01b03908116918215611af75716918215611ade5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260028252604060002085600052825280604060002055604051908152a3565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b60018060a01b031690600080826020829451910182865af13d15611bc9573d67ffffffffffffffff8111611bb557604051611b6c939291611b5b601f8201601f19166020018361160f565b8152809260203d92013e5b83611bd6565b8051908115159182611b9a575b5050611b825750565b60249060405190635274afe760e01b82526004820152fd5b611bad9250602080918301019101611711565b153880611b79565b634e487b7160e01b83526041600452602483fd5b611b6c9150606090611b66565b90611bfd5750805115611beb57805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580611c30575b611c0e575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15611c0656fe60c03461012257601f610d7a38819003918201601f19168301916001600160401b0383118484101761012757808492604094855283398101031261012257610052602061004b8361013d565b920161013d565b73e592427a0aece92de3edee1f18e0157c05861564608052731f98431c8ad98523631ae4a59f267346ea31f98460a0526001600160a01b039081169190338390036100ef5760018060a01b031991168160005416176000556001541617600155604051610c2890816101528239608051818181610383015281816106510152610a4c015260a051818181610407015281816104800152610a0a0152f35b60405162461bcd60e51b815260206004820152600b60248201526a27b7363c902937baba32b960a91b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101225756fe608080604052600436101561001357600080fd5b60003560e01c908163735de9f714610a39575080638bdb2afa146109f45780638da5cb5b146109cb578063b0f479a1146109a25763eedc3c501461005657600080fd5b346102cc5760403660031901126102cc5760043567ffffffffffffffff81116102cc57610087903690600401610a7b565b60243567ffffffffffffffff81116102cc576100a7903690600401610a7b565b60015490939192906001600160a01b0316330361095d5760005b818110610898575050600154604051630c2fe7ff60e11b81529150602090829060049082906001600160a01b03165afa9081156102d957600091610866575b5060005b8381106102e55750508161011457005b60005b82811061012057005b6001600160a01b0361013b610136838686610b5a565b610ae4565b1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036101be575047610168575b6001905b01610117565b60005447906001600160a01b03164782116101a657600080809381935af161018e610b1a565b5061015e575b604051630a12f52160e11b8152600490fd5b60405163cd78605960e01b8152306004820152602490fd5b6040516370a0823160e01b8152306004820152602081602481855afa9081156102d9576000916102a2575b50600a81116101fd575b5050600190610162565b6000805460405163a9059cbb60e01b602082019081526001600160a01b03909216602482015260448082019490945292835261025692829190610241606482610af8565b519082865af161024f610b1a565b9083610ba1565b8051908115159182610287575b505061026f57806101f3565b60249060405190635274afe760e01b82526004820152fd5b61029a9250602080918301019101610b6a565b153880610263565b90506020813d6020116102d1575b816102bd60209383610af8565b810103126102cc5751386101e9565b600080fd5b3d91506102b0565b6040513d6000823e3d90fd5b6001600160a01b036102fb610136838787610b5a565b6040516370a0823160e01b8152306004820152929116602083602481845afa9283156102d957600093610832575b5082156107065783830292808404850361081c576127108404116107e057732791bca1f2de4661ed88a30c99a7a9449aa841748114610792576127108304156107065760405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152612710840460248201526020816044816000865af180156102d957610773575b50604051630b4c774160e11b815260048101829052732791bca1f2de4661ed88a30c99a7a9449aa841746024820152610bb860448201526020816064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156102d957600091610754575b50604051630b4c774160e11b815260048101839052730d500b1d8e8ef31e21c99d1db9a6444d3adf12706024820152610bb86044820152906020826064817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9182156102d957600092610723575b506001600160a01b03161580159190610710575b50610706576040516313c768d960e31b6020820152816024820152732791bca1f2de4661ed88a30c99a7a9449aa84174604482015261271084046064820152606481528060a081011067ffffffffffffffff60a0830111176106f05760008160a082930160405260208151910182305af1610546610b1a565b50156105585750600191505b01610104565b6040516395f54ef560e01b6020820152816024820152730d500b1d8e8ef31e21c99d1db9a6444d3adf12706044820152732791bca1f2de4661ed88a30c99a7a9449aa841746064820152608461271085048183015281528060c081011067ffffffffffffffff60c0830111176106f05760008160c082930160405260208151910182305af16105e5610b1a565b50156105f5575060019150610552565b60005460405163a9059cbb60e01b81526001600160a01b0390911660048201526127109093046024840152602083806044810103816000855af19081156102d9576000936020926106d3575b5060405163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660048201526024810185905293849160449183915af19182156102d9576001926106a4575b50610552565b6106c59060203d6020116106cc575b6106bd8183610af8565b810190610b6a565b503861069e565b503d6106b3565b6106e990833d85116106cc576106bd8183610af8565b5038610641565b634e487b7160e01b600052604160045260246000fd5b5060019150610552565b6001600160a01b031615159050386104cd565b61074691925060203d60201161074d575b61073e8183610af8565b810190610b82565b90386104b9565b503d610734565b61076d915060203d60201161074d5761073e8183610af8565b38610440565b61078b9060203d6020116106cc576106bd8183610af8565b50386103c8565b60015460405163a9059cbb60e01b81526001600160a01b0390911660048201526127109093046024840152602090839060449082906000905af19182156102d9576001926106a45750610552565b60405162461bcd60e51b815260206004820152601460248201527357726f6e6720416d6f756e74416674657246656560601b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b9092506020813d60201161085e575b8161084e60209383610af8565b810103126102cc57519138610329565b3d9150610841565b90506020813d602011610890575b8161088160209383610af8565b810103126102cc575138610100565b3d9150610874565b6108a6610136828486610aac565b602090816108b5848688610aac565b0135906108c3848688610aac565b604081013590601e19813603018212156102cc57019081359167ffffffffffffffff83116102cc5784019180360383136102cc576000938493826040519384928337810185815203925af1610916610b1a565b501561092557506001016100c1565b6064906040519062461bcd60e51b82526004820152601160248201527010985d18da0818d85b1b0819985a5b1959607a1b6044820152fd5b60405162461bcd60e51b815260206004820152601b60248201527f43616c6c61626c65206f6e6c792062792074686520726f7574657200000000006044820152606490fd5b346102cc5760003660031901126102cc576001546040516001600160a01b039091168152602090f35b346102cc5760003660031901126102cc576000546040516001600160a01b039091168152602090f35b346102cc5760003660031901126102cc576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346102cc5760003660031901126102cc577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9181601f840112156102cc5782359167ffffffffffffffff83116102cc576020808501948460051b0101116102cc57565b9190811015610ace5760051b81013590605e19813603018212156102cc570190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036102cc5790565b90601f8019910116810190811067ffffffffffffffff8211176106f057604052565b3d15610b55573d9067ffffffffffffffff82116106f05760405191610b49601f8201601f191660200184610af8565b82523d6000602084013e565b606090565b9190811015610ace5760051b0190565b908160209103126102cc575180151581036102cc5790565b908160209103126102cc57516001600160a01b03811681036102cc5790565b90610bb6575080511561019457805190602001fd5b81511580610be9575b610bc7575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15610bbf56fea2646970667358221220e0f61ffa0f286a3e811681d920074cf18f3a6ebe9b1e52c769850d5857a1827c64736f6c63430008190033a2646970667358221220776b73d3addc02d37862515deb513414b7b954b8938fa321a0f5cd314c0fb98164736f6c63430008190033",
  "devdoc": {
    "errors": {
      "AddressEmptyCode(address)": [
        {
          "details": "There's no code at `target` (it is not a contract)."
        }
      ],
      "AddressInsufficientBalance(address)": [
        {
          "details": "The ETH balance of the account is not enough to perform the operation."
        }
      ],
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "FailedInnerCall()": [
        {
          "details": "A call to an address target failed. The target may have reverted."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "SafeERC20FailedOperation(address)": [
        {
          "details": "An operation with an ERC20 token failed."
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 54,
        "contract": "contracts/core/Router.sol:Router",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 357,
        "contract": "contracts/core/Router.sol:Router",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 363,
        "contract": "contracts/core/Router.sol:Router",
        "label": "_allowances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 365,
        "contract": "contracts/core/Router.sol:Router",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 367,
        "contract": "contracts/core/Router.sol:Router",
        "label": "_name",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 369,
        "contract": "contracts/core/Router.sol:Router",
        "label": "_symbol",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 4210,
        "contract": "contracts/core/Router.sol:Router",
        "label": "_BPS_FEE",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 4213,
        "contract": "contracts/core/Router.sol:Router",
        "label": "_MINT_RATE",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 4216,
        "contract": "contracts/core/Router.sol:Router",
        "label": "_REWARD_RATE",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 4239,
        "contract": "contracts/core/Router.sol:Router",
        "label": "userAgents",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_contract(Agent)4192)"
      },
      {
        "astId": 4243,
        "contract": "contracts/core/Router.sol:Router",
        "label": "stakes",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4247,
        "contract": "contracts/core/Router.sol:Router",
        "label": "stakingTime",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4249,
        "contract": "contracts/core/Router.sol:Router",
        "label": "totalStaked",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(Agent)4192": {
        "encoding": "inplace",
        "label": "contract Agent",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(Agent)4192)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract Agent)",
        "numberOfBytes": "32",
        "value": "t_contract(Agent)4192"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}